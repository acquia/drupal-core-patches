diff --git a/CHANGELOG.txt b/CHANGELOG.txt
index d14d20b..a858e06 100644
--- a/CHANGELOG.txt
+++ b/CHANGELOG.txt
@@ -1,4 +1,65 @@
-// $Id$
+
+Drupal 6.31, 2014-04-16
+----------------------
+- Fixed security issues (information disclosure). See SA-CORE-2014-002.
+
+Drupal 6.30, 2014-01-15
+----------------------
+- Fixed security issues (multiple vulnerabilities), see SA-CORE-2014-001.
+
+Drupal 6.29, 2013-11-20
+----------------------
+- Fixed security issues (multiple vulnerabilities), see SA-CORE-2013-003.
+
+Drupal 6.28, 2013-01-16
+----------------------
+- Fixed security issues (multiple vulnerabilities), see SA-CORE-2013-001.
+
+Drupal 6.27, 2012-12-19
+----------------------
+- Fixed security issues (multiple vulnerabilities), see SA-CORE-2012-004.
+
+Drupal 6.26, 2012-05-02
+----------------------
+- Fixed a small number of bugs.
+- Made code documentation improvements.
+
+Drupal 6.25, 2012-02-29
+----------------------
+- Fixed regressions introduced in Drupal 6.24 only.
+
+Drupal 6.24, 2012-02-01
+----------------------
+- Improved performance of search indexing and user operations by adding indexes.
+- Fixed issues with themes getting disabled due to missing locking in
+  system_theme_data().
+- Fix issue with blocks being disabled on updates in _block_rehash().
+- Further improvements to PHP 5.3, PHP 4 and PostgreSQL compatibility.
+- Improved code documentation at various places.
+- Fixed a variety of other bugs.
+
+Drupal 6.23, 2012-02-01
+----------------------
+- Fixed security issues (Cross site scripting), see SA-CORE-2012-001.
+
+Drupal 6.22, 2011-05-25
+----------------------
+- Made Drupal 6 work better with IIS and Internet Explorer.
+- Fixed .po file imports to work better with custom textgroups.
+- Improved code documentation at various places.
+- Fixed a variety of other bugs.
+
+Drupal 6.21, 2011-05-25
+----------------------
+- Fixed security issues (Cross site scripting), see SA-CORE-2011-001.
+
+Drupal 6.20, 2010-12-15
+----------------------
+- Fixed a variety of small bugs, improved code documentation.
+
+Drupal 6.19, 2010-08-11
+----------------------
+- Fixed a variety of small bugs, improved code documentation.
 
 Drupal 6.18, 2010-08-11
 ----------------------
@@ -233,6 +294,11 @@ Drupal 6.0, 2008-02-13
 - Removed old system updates. Updates from Drupal versions prior to 5.x will
   require upgrading to 5.x before upgrading to 6.x.
 
+Drupal 5.23, 2010-08-11
+-----------------------
+- Fixed security issues (File download access bypass, Comment unpublishing
+  bypass), see SA-CORE-2010-002.
+
 Drupal 5.22, 2010-03-03
 -----------------------
 - Fixed security issues (Open redirection, Locale module cross site scripting,
diff --git a/COPYRIGHT.txt b/COPYRIGHT.txt
index 1ae54ce..89cc880 100644
--- a/COPYRIGHT.txt
+++ b/COPYRIGHT.txt
@@ -1,6 +1,4 @@
-// $Id$
-
-All Drupal code is Copyright 2001 - 2009 by the original authors.
+All Drupal code is Copyright 2001 - 2012 by the original authors.
 
 This program is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
@@ -21,5 +19,11 @@ Drupal includes works under other copyright notices and distributed
 according to the terms of the GNU General Public License or a compatible
 license, including:
 
-  jQuery - Copyright (c) 2008 - 2009 John Resig
+Javascript
+
+  Farbtastic - Copyright (c) 2007 Matt Farina
+
+  jQuery - Copyright (c) 2008 John Resig
+
+  jQuery Form - Copyright (c) 2007 Mike Alsup
 
diff --git a/INSTALL.mysql.txt b/INSTALL.mysql.txt
index ae50ebb..e9013e5 100644
--- a/INSTALL.mysql.txt
+++ b/INSTALL.mysql.txt
@@ -1,4 +1,3 @@
-// $Id$
 
 CREATE THE MySQL DATABASE
 --------------------------
@@ -21,8 +20,8 @@ initial database files. Next you must login and set the access database rights:
 Again, you will be asked for the 'username' database password. At the MySQL
 prompt, enter following command:
 
-  GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, INDEX, ALTER
-  ON databasename.*
+  GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, INDEX, ALTER,
+  CREATE TEMPORARY TABLES ON databasename.*
   TO 'username'@'localhost' IDENTIFIED BY 'password';
 
 where
diff --git a/INSTALL.pgsql.txt b/INSTALL.pgsql.txt
index 2070547..7054c16 100644
--- a/INSTALL.pgsql.txt
+++ b/INSTALL.pgsql.txt
@@ -1,4 +1,3 @@
-// $Id$
 
 CREATE THE PostgreSQL DATABASE
 ------------------------------
diff --git a/INSTALL.txt b/INSTALL.txt
index 7163d3b..44e12c6 100644
--- a/INSTALL.txt
+++ b/INSTALL.txt
@@ -1,4 +1,3 @@
-// $Id$
 
 CONTENTS OF THIS FILE
 ---------------------
@@ -71,7 +70,7 @@ INSTALLATION
    different language, we have good news. You can install and use Drupal in
    other languages from the start. Check whether a released package of the
    language desired is available for this Drupal version at
-   http://drupal.org/project/translations and download the package. Extract
+   http://localize.drupal.org and download the package. Extract
    the contents to the same directory where you extracted Drupal into.
 
 2. CREATE THE CONFIGURATION FILE AND GRANT WRITE PERMISSIONS
diff --git a/LICENSE.txt b/LICENSE.txt
index 8d7df75..d511905 100644
--- a/LICENSE.txt
+++ b/LICENSE.txt
@@ -1,4 +1,3 @@
-// $Id$
 		    GNU GENERAL PUBLIC LICENSE
 		       Version 2, June 1991
 
diff --git a/MAINTAINERS.txt b/MAINTAINERS.txt
index 9e68124..da831f9 100644
--- a/MAINTAINERS.txt
+++ b/MAINTAINERS.txt
@@ -1,4 +1,3 @@
-// $Id$
 
 List of maintainers
 --------------------------------------------------------------------------------
@@ -58,7 +57,7 @@ M: Sammy Spets <sammys-drupal@synerger.com>
 S: maintained
 
 SECURITY COORDINATOR
-M: Heine Deelstra <hdeelstra@gmail.com>
+M: Greg Knaddison <http://drupal.org/user/36762>
 S: maintained
 
 STATISTICS MODULE
diff --git a/UPGRADE.txt b/UPGRADE.txt
index f4bd010..4a1ac70 100644
--- a/UPGRADE.txt
+++ b/UPGRADE.txt
@@ -1,4 +1,3 @@
-// $Id$
 
 UPGRADING
 ---------
diff --git a/cron.php b/cron.php
index f242ee7..79fd238 100644
--- a/cron.php
+++ b/cron.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/includes/actions.inc b/includes/actions.inc
index a06a196..34c450f 100644
--- a/includes/actions.inc
+++ b/includes/actions.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -26,25 +25,6 @@
  */
 
 /**
- * @defgroup actions Actions
- * @{
- * Functions that perform an action on a certain system object.
- *
- * All modules should declare their action functions to be in this group and
- * each action function should reference its configuration form, validate, and
- * submit functions using \@see. Conversely, form, validate, and submit
- * functions should reference the action function using \@see. For examples of
- * this see comment_unpublish_by_keyword_action(), which has the following in
- * its doxygen documentation:
- *
- * \@ingroup actions
- * \@see comment_unpublish_by_keyword_action_form().
- * \@see comment_unpublish_by_keyword_action_submit().
- *
- * @} End of "defgroup actions".
- */
-
-/**
  * Perform a given list of actions by executing their callback functions.
  *
  * Given the IDs of actions to perform, find out what the callbacks
@@ -356,7 +336,7 @@ function actions_synchronize($actions_in_code = array(), $delete_orphans = FALSE
     else {
       $link = l(t('Remove orphaned actions'), 'admin/settings/actions/orphan');
       $count = count($actions_in_db);
-      watchdog('actions', format_plural($count, 'One orphaned action (%orphans) exists in the actions table. !link', '@count orphaned actions (%orphans) exist in the actions table. !link'), array('@count' => $count, '%orphans' => $orphans, '!link' => $link), WATCHDOG_WARNING);
+      watchdog('actions', format_plural($count, 'One orphaned action (%orphans) exists in the actions table. !link', '@count orphaned actions (%orphans) exist in the actions table. !link'), array('@count' => $count, '%orphans' => $orphans, '!link' => $link), WATCHDOG_INFO);
     }
   }
 }
diff --git a/includes/batch.inc b/includes/batch.inc
index cd2127f..6362987 100644
--- a/includes/batch.inc
+++ b/includes/batch.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file Batch processing API for processes to run in multiple HTTP requests.
@@ -133,6 +132,7 @@ function _batch_progress_page_nojs() {
     // followed by the error message.
     ob_start();
     $fallback = $current_set['error_message'] .'<br/>'. $batch['error_message'];
+    drupal_maintenance_theme();
     $fallback = theme('maintenance_page', $fallback, FALSE, FALSE);
 
     // We strip the end of the page using a marker in the template, so any
@@ -189,7 +189,7 @@ function _batch_process() {
       call_user_func_array($function, array_merge($args, array(&$batch_context)));
     }
 
-    if ($finished == 1) {
+    if ($finished >= 1) {
       // Make sure this step isn't counted double when computing $current.
       $finished = 0;
       // Remove the operation and clear the sandbox.
@@ -244,7 +244,7 @@ function _batch_process() {
       '@percentage' => $percentage,
       );
     $message = strtr($progress_message, $values) .'<br/>';
-    $message .= $task_message ? $task_message : '&nbsp';
+    $message .= $task_message ? $task_message : '&nbsp;';
 
     return array($percentage, $message);
   }
diff --git a/includes/bootstrap.inc b/includes/bootstrap.inc
index de05c49..d6b407c 100644
--- a/includes/bootstrap.inc
+++ b/includes/bootstrap.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -214,6 +213,11 @@ define('LANGUAGE_LTR', 0);
  */
 define('LANGUAGE_RTL', 1);
 
+// Hide E_DEPRECATED messages.
+if (defined('E_DEPRECATED')) {
+  error_reporting(error_reporting() & ~E_DEPRECATED);
+}
+
 /**
  * Start the timer with the specified name. If you start and stop
  * the same timer multiple times, the measured intervals will be
@@ -371,9 +375,13 @@ function conf_init() {
   global $base_url, $base_path, $base_root;
 
   // Export the following settings.php variables to the global namespace
-  global $db_url, $db_prefix, $cookie_domain, $conf, $installed_profile, $update_free_access;
+  global $db_url, $db_prefix, $db_collation, $cookie_domain, $conf, $installed_profile, $update_free_access;
   $conf = array();
 
+  if (!isset($_SERVER['SERVER_PROTOCOL']) || ($_SERVER['SERVER_PROTOCOL'] != 'HTTP/1.0' && $_SERVER['SERVER_PROTOCOL'] != 'HTTP/1.1')) {
+    $_SERVER['SERVER_PROTOCOL'] = 'HTTP/1.0';
+  }
+
   if (isset($_SERVER['HTTP_HOST'])) {
     // As HTTP_HOST is user input, ensure it only contains characters allowed
     // in hostnames. See RFC 952 (and RFC 2181).
@@ -381,7 +389,7 @@ function conf_init() {
     $_SERVER['HTTP_HOST'] = strtolower($_SERVER['HTTP_HOST']);
     if (!drupal_valid_http_host($_SERVER['HTTP_HOST'])) {
       // HTTP_HOST is invalid, e.g. if containing slashes it may be an attack.
-      header('HTTP/1.1 400 Bad Request');
+      header($_SERVER['SERVER_PROTOCOL'] .' 400 Bad Request');
       exit;
     }
   }
@@ -395,7 +403,7 @@ function conf_init() {
     include_once './'. conf_path() .'/settings.php';
   }
 
-  // Ignore the placeholder url from default.settings.php.
+  // Ignore the placeholder URL from default.settings.php.
   if (isset($db_url) && $db_url == 'mysql://username:password@localhost/databasename') {
     $db_url = '';
   }
@@ -434,7 +442,7 @@ function conf_init() {
   }
   else {
     // Otherwise use $base_url as session name, without the protocol
-    // to use the same session identifiers across http and https.
+    // to use the same session identifiers across HTTP and HTTPS.
     list( , $session_name) = explode('://', $base_url, 2);
     // We escape the hostname because it can be modified by a visitor.
     if (!empty($_SERVER['HTTP_HOST'])) {
@@ -483,7 +491,7 @@ function conf_init() {
  * the above, depending on where the module is located.
  *
  * @param $type
- *   The type of the item (i.e. theme, theme_engine, module).
+ *   The type of the item (i.e. theme, theme_engine, module, profile).
  * @param $name
  *   The name of the item for which the filename is requested.
  * @param $filename
@@ -561,7 +569,11 @@ function variable_init($conf = array()) {
 }
 
 /**
- * Return a persistent variable.
+ * Returns a persistent variable.
+ *
+ * Case-sensitivity of the variable_* functions depends on the database
+ * collation used. To avoid problems, always use lower case for persistent
+ * variable names.
  *
  * @param $name
  *   The name of the variable to return.
@@ -579,7 +591,11 @@ function variable_get($name, $default) {
 }
 
 /**
- * Set a persistent variable.
+ * Sets a persistent variable.
+ *
+ * Case-sensitivity of the variable_* functions depends on the database
+ * collation used. To avoid problems, always use lower case for persistent
+ * variable names.
  *
  * @param $name
  *   The name of the variable to set.
@@ -604,7 +620,11 @@ function variable_set($name, $value) {
 }
 
 /**
- * Unset a persistent variable.
+ * Unsets a persistent variable.
+ *
+ * Case-sensitivity of the variable_* functions depends on the database
+ * collation used. To avoid problems, always use lower case for persistent
+ * variable names.
  *
  * @param $name
  *   The name of the variable to undefine.
@@ -670,7 +690,7 @@ function bootstrap_invoke_all($hook) {
  * including a theme, engine, module, etc., more than once.
  *
  * @param $type
- *   The type of item to load (i.e. theme, theme_engine, module).
+ *   The type of item to load (i.e. theme, theme_engine, module, profile).
  * @param $name
  *   The name of the item to load.
  *
@@ -733,7 +753,7 @@ function drupal_page_cache_header($cache) {
   if ($if_modified_since && $if_none_match
       && $if_none_match == $etag // etag must match
       && $if_modified_since == $last_modified) {  // if-modified-since must match
-    header('HTTP/1.1 304 Not Modified');
+    header($_SERVER['SERVER_PROTOCOL'] .' 304 Not Modified');
     // All 304 responses must send an etag if the 200 response for the same object contained an etag
     header("Etag: $etag");
     return;
@@ -791,7 +811,7 @@ function bootstrap_hooks() {
 function drupal_unpack($obj, $field = 'data') {
   if ($obj->$field && $data = unserialize($obj->$field)) {
     foreach ($data as $key => $value) {
-      if (!isset($obj->$key)) {
+      if (!empty($key) && !isset($obj->$key)) {
         $obj->$key = $value;
       }
     }
@@ -909,7 +929,8 @@ function request_uri() {
  * Log a system message.
  *
  * @param $type
- *   The category to which this message belongs.
+ *   The category to which this message belongs. Can be any string, but the
+ *   general practice is to use the name of the module calling watchdog().
  * @param $message
  *   The message to store in the log. See t() for documentation
  *   on how $message and $variables interact. Keep $message
@@ -919,7 +940,8 @@ function request_uri() {
  *   NULL if message is already translated or not possible to
  *   translate.
  * @param $severity
- *   The severity of the message, as per RFC 3164
+ *   The severity of the message, as per RFC 3164. Possible values are
+ *   WATCHDOG_ERROR, WATCHDOG_WARNING, etc.
  * @param $link
  *   A link to associate with the message.
  *
@@ -943,7 +965,7 @@ function watchdog($type, $message, $variables = array(), $severity = WATCHDOG_NO
     );
 
   // Call the logging hooks to log/process the message
-  foreach (module_implements('watchdog', TRUE) as $module) {
+  foreach (module_implements('watchdog') as $module) {
     module_invoke($module, 'watchdog', $log_message);
   }
 }
@@ -1131,7 +1153,7 @@ function _drupal_bootstrap($phase) {
     case DRUPAL_BOOTSTRAP_ACCESS:
       // Deny access to hosts which were banned - t() is not yet available.
       if (drupal_is_denied('host', ip_address())) {
-        header('HTTP/1.1 403 Forbidden');
+        header($_SERVER['SERVER_PROTOCOL'] .' 403 Forbidden');
         print 'Sorry, '. check_plain(ip_address()) .' has been banned.';
         exit();
       }
@@ -1312,3 +1334,111 @@ function ip_address() {
 
   return $ip_address;
 }
+
+/**
+ * Returns a URL-safe, base64 encoded string of highly randomized bytes (over the full 8-bit range).
+ *
+ * @param $byte_count
+ *   The number of random bytes to fetch and base64 encode.
+ *
+ * @return string
+ *   The base64 encoded result will have a length of up to 4 * $byte_count.
+ */
+function drupal_random_key($byte_count = 32) {
+  return drupal_base64_encode(drupal_random_bytes($byte_count));
+}
+
+/**
+ * Returns a URL-safe, base64 encoded version of the supplied string.
+ *
+ * @param $string
+ *   The string to convert to base64.
+ *
+ * @return string
+ */
+function drupal_base64_encode($string) {
+  $data = base64_encode($string);
+  // Modify the output so it's safe to use in URLs.
+  return strtr($data, array('+' => '-', '/' => '_', '=' => ''));
+}
+
+/**
+ * Returns a string of highly randomized bytes (over the full 8-bit range).
+ *
+ * This function is better than simply calling mt_rand() or any other built-in
+ * PHP function because it can return a long string of bytes (compared to < 4
+ * bytes normally from mt_rand()) and uses the best available pseudo-random
+ * source.
+ *
+ * @param $count
+ *   The number of characters (bytes) to return in the string.
+ */
+function drupal_random_bytes($count) {
+  // $random_state does not use drupal_static as it stores random bytes.
+  static $random_state, $bytes, $has_openssl, $has_hash;
+
+  $missing_bytes = $count - strlen($bytes);
+
+  if ($missing_bytes > 0) {
+    // PHP versions prior 5.3.4 experienced openssl_random_pseudo_bytes()
+    // locking on Windows and rendered it unusable.
+    if (!isset($has_openssl)) {
+      $has_openssl = version_compare(PHP_VERSION, '5.3.4', '>=') && function_exists('openssl_random_pseudo_bytes');
+    }
+
+    // openssl_random_pseudo_bytes() will find entropy in a system-dependent
+    // way.
+    if ($has_openssl) {
+      $bytes .= openssl_random_pseudo_bytes($missing_bytes);
+    }
+
+    // Else, read directly from /dev/urandom, which is available on many *nix
+    // systems and is considered cryptographically secure.
+    elseif ($fh = @fopen('/dev/urandom', 'rb')) {
+      // PHP only performs buffered reads, so in reality it will always read
+      // at least 4096 bytes. Thus, it costs nothing extra to read and store
+      // that much so as to speed any additional invocations.
+      $bytes .= fread($fh, max(4096, $missing_bytes));
+      fclose($fh);
+    }
+
+    // If we couldn't get enough entropy, this simple hash-based PRNG will
+    // generate a good set of pseudo-random bytes on any system.
+    // Note that it may be important that our $random_state is passed
+    // through hash() prior to being rolled into $output, that the two hash()
+    // invocations are different, and that the extra input into the first one -
+    // the microtime() - is prepended rather than appended. This is to avoid
+    // directly leaking $random_state via the $output stream, which could
+    // allow for trivial prediction of further "random" numbers.
+    if (strlen($bytes) < $count) {
+      // Initialize on the first call. The contents of $_SERVER includes a mix of
+      // user-specific and system information that varies a little with each page.
+      if (!isset($random_state)) {
+        $random_state = print_r($_SERVER, TRUE);
+        if (function_exists('getmypid')) {
+          // Further initialize with the somewhat random PHP process ID.
+          $random_state .= getmypid();
+        }
+        // hash() is only available in PHP 5.1.2+ or via PECL.
+        $has_hash = function_exists('hash') && in_array('sha256', hash_algos());
+        $bytes = '';
+      }
+
+      if ($has_hash) {
+        do {
+          $random_state = hash('sha256', microtime() . mt_rand() . $random_state);
+          $bytes .= hash('sha256', mt_rand() . $random_state, TRUE);
+        } while (strlen($bytes) < $count);
+      }
+      else {
+        do {
+          $random_state = md5(microtime() . mt_rand() . $random_state);
+          $bytes .= pack("H*", md5(mt_rand() . $random_state));
+        } while (strlen($bytes) < $count);
+      }
+    }
+  }
+  $output = substr($bytes, 0, $count);
+  $bytes = substr($bytes, $count);
+  return $output;
+}
diff --git a/includes/cache-install.inc b/includes/cache-install.inc
index cd7c481..b7809fe 100644
--- a/includes/cache-install.inc
+++ b/includes/cache-install.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * A stub cache implementation to be used during the installation
diff --git a/includes/cache.inc b/includes/cache.inc
index 3d04982..1e70960 100644
--- a/includes/cache.inc
+++ b/includes/cache.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Return data from the persistent cache. Data may be stored as either plain text or as serialized data.
@@ -10,6 +9,8 @@
  * @param $table
  *   The table $table to store the data in. Valid core values are 'cache_filter',
  *   'cache_menu', 'cache_page', or 'cache' for the default cache.
+ *
+ *   @see cache_set()
  */
 function cache_get($cid, $table = 'cache') {
   global $user;
@@ -39,7 +40,7 @@ function cache_get($cid, $table = 'cache') {
     // cache timer. The cache variable is loaded into the $user object by
     // sess_read() in session.inc.
     else {
-      if ($user->cache > $cache->created) {
+      if (isset($user->cache) && $user->cache > $cache->created) {
         // This cache data is too old and thus not valid for us, ignore it.
         return 0;
       }
@@ -98,6 +99,8 @@ function cache_get($cid, $table = 'cache') {
  *     the given time, after which it behaves like CACHE_TEMPORARY.
  * @param $headers
  *   A string containing HTTP header information for cached pages.
+ *
+ *   @see cache_get()
  */
 function cache_set($cid, $data, $table = 'cache', $expire = CACHE_PERMANENT, $headers = NULL) {
   $serialized = 0;
diff --git a/includes/common.inc b/includes/common.inc
index 0ca24f9..80fc911 100644
--- a/includes/common.inc
+++ b/includes/common.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -32,6 +31,12 @@ if (!defined('E_DEPRECATED')) {
 }
 
 /**
+ * Error code indicating that the request made by drupal_http_request() exceeded
+ * the specified timeout.
+ */
+define('HTTP_REQUEST_TIMEOUT', -1);
+
+/**
  * Set content for a specified region.
  *
  * @param $region
@@ -171,7 +176,7 @@ function drupal_final_markup($content) {
  * Add a feed URL for the current page.
  *
  * @param $url
- *   A url for the feed.
+ *   A URL for the feed.
  * @param $title
  *   The title of the feed.
  */
@@ -201,7 +206,7 @@ function drupal_get_feeds($delimiter = "\n") {
 }
 
 /**
- * @name HTTP handling
+ * @defgroup http_handling HTTP handling
  * @{
  * Functions to properly handle HTTP responses.
  */
@@ -291,13 +296,16 @@ function drupal_get_destination() {
  * statement in your menu callback.
  *
  * @param $path
- *   A Drupal path or a full URL.
+ *   (optional) A Drupal path or a full URL, which will be passed to url() to
+ *   compute the redirect for the URL.
  * @param $query
- *   A query string component, if any.
+ *   (optional) A URL-encoded query string to append to the link, or an array of
+ *   query key/value-pairs without any URL-encoding. Passed to url().
  * @param $fragment
- *   A destination fragment identifier (named anchor).
+ *   (optional) A destination fragment identifier (named anchor).
  * @param $http_response_code
- *   Valid values for an actual "goto" as per RFC 2616 section 10.3 are:
+ *   (optional) The HTTP status code to use for the redirection, defaults to
+ *   302. Valid values for an actual "goto" as per RFC 2616 section 10.3 are:
  *   - 301 Moved Permanently (the recommended value for most redirects)
  *   - 302 Found (default in Drupal and PHP, sometimes used for spamming search
  *         engines)
@@ -355,7 +363,7 @@ function drupal_goto($path = '', $query = NULL, $fragment = NULL, $http_response
  */
 function drupal_site_offline() {
   drupal_maintenance_theme();
-  drupal_set_header('HTTP/1.1 503 Service unavailable');
+  drupal_set_header($_SERVER['SERVER_PROTOCOL'] .' 503 Service unavailable');
   drupal_set_title(t('Site off-line'));
   print theme('maintenance_page', filter_xss_admin(variable_get('site_offline_message',
     t('@site is currently under maintenance. We should be back shortly. Thank you for your patience.', array('@site' => variable_get('site_name', 'Drupal'))))));
@@ -365,7 +373,7 @@ function drupal_site_offline() {
  * Generates a 404 error if the request can not be handled.
  */
 function drupal_not_found() {
-  drupal_set_header('HTTP/1.1 404 Not Found');
+  drupal_set_header($_SERVER['SERVER_PROTOCOL'] .' 404 Not Found');
 
   watchdog('page not found', check_plain($_GET['q']), NULL, WATCHDOG_WARNING);
 
@@ -395,7 +403,7 @@ function drupal_not_found() {
  * Generates a 403 error if the request is not allowed.
  */
 function drupal_access_denied() {
-  drupal_set_header('HTTP/1.1 403 Forbidden');
+  drupal_set_header($_SERVER['SERVER_PROTOCOL'] .' 403 Forbidden');
 
   watchdog('access denied', check_plain($_GET['q']), NULL, WATCHDOG_WARNING);
 
@@ -436,11 +444,15 @@ function drupal_access_denied() {
  * @param $retry
  *   An integer representing how many times to retry the request in case of a
  *   redirect.
+ * @param $timeout
+ *   A float representing the maximum number of seconds the function call may
+ *   take. The default is 30 seconds. If a timeout occurs, the error code is set
+ *   to the HTTP_REQUEST_TIMEOUT constant.
  * @return
  *   An object containing the HTTP request headers, response code, protocol,
  *   status message, headers, data and redirect status.
  */
-function drupal_http_request($url, $headers = array(), $method = 'GET', $data = NULL, $retry = 3) {
+function drupal_http_request($url, $headers = array(), $method = 'GET', $data = NULL, $retry = 3, $timeout = 30.0) {
   global $db_prefix;
 
   $result = new stdClass();
@@ -460,18 +472,20 @@ function drupal_http_request($url, $headers = array(), $method = 'GET', $data =
     return $result;
   }
 
+  timer_start(__FUNCTION__);
+
   switch ($uri['scheme']) {
     case 'http':
     case 'feed':
       $port = isset($uri['port']) ? $uri['port'] : 80;
       $host = $uri['host'] . ($port != 80 ? ':'. $port : '');
-      $fp = @fsockopen($uri['host'], $port, $errno, $errstr, 15);
+      $fp = @fsockopen($uri['host'], $port, $errno, $errstr, $timeout);
       break;
     case 'https':
       // Note: Only works for PHP 4.3 compiled with OpenSSL.
       $port = isset($uri['port']) ? $uri['port'] : 443;
       $host = $uri['host'] . ($port != 443 ? ':'. $port : '');
-      $fp = @fsockopen('ssl://'. $uri['host'], $port, $errno, $errstr, 20);
+      $fp = @fsockopen('ssl://'. $uri['host'], $port, $errno, $errstr, $timeout);
       break;
     default:
       $result->error = 'invalid schema '. $uri['scheme'];
@@ -519,7 +533,7 @@ function drupal_http_request($url, $headers = array(), $method = 'GET', $data =
     $defaults['Content-Length'] = 'Content-Length: '. $content_length;
   }
 
-  // If the server url has a user then attempt to use basic authentication
+  // If the server URL has a user then attempt to use basic authentication
   if (isset($uri['user'])) {
     $defaults['Authorization'] = 'Authorization: Basic '. base64_encode($uri['user'] . (!empty($uri['pass']) ? ":". $uri['pass'] : ''));
   }
@@ -545,17 +559,33 @@ function drupal_http_request($url, $headers = array(), $method = 'GET', $data =
 
   $result->request = $request;
 
-  fwrite($fp, $request);
+  // Calculate how much time is left of the original timeout value.
+  $time_left = $timeout - timer_read(__FUNCTION__) / 1000;
+  if ($time_left > 0) {
+    stream_set_timeout($fp, floor($time_left), floor(1000000 * fmod($time_left, 1)));
+    fwrite($fp, $request);
+  }
 
   // Fetch response.
   $response = '';
-  while (!feof($fp) && $chunk = fread($fp, 1024)) {
+  while (!feof($fp)) {
+    // Calculate how much time is left of the original timeout value.
+    $time_left = $timeout - timer_read(__FUNCTION__) / 1000;
+    if ($time_left <= 0) {
+      $result->code = HTTP_REQUEST_TIMEOUT;
+      $result->error = 'request timed out';
+      return $result;
+    }
+    stream_set_timeout($fp, floor($time_left), floor(1000000 * fmod($time_left, 1)));
+    $chunk = fread($fp, 1024);
     $response .= $chunk;
   }
   fclose($fp);
 
-  // Parse response.
-  list($split, $result->data) = explode("\r\n\r\n", $response, 2);
+  // Parse response headers from the response body.
+  // Be tolerant of malformed HTTP responses that separate header and body with
+  // \n\n or \r\r instead of \r\n\r\n.  See http://drupal.org/node/183435
+  list($split, $result->data) = preg_split("/\r\n\r\n|\n\n|\r\r/", $response, 2);
   $split = preg_split("/\r\n|\n|\r/", $split);
 
   list($protocol, $code, $status_message) = explode(' ', trim(array_shift($split)), 3);
@@ -598,9 +628,13 @@ function drupal_http_request($url, $headers = array(), $method = 'GET', $data =
     case 302: // Moved temporarily
     case 307: // Moved temporarily
       $location = $result->headers['Location'];
-
-      if ($retry) {
-        $result = drupal_http_request($result->headers['Location'], $headers, $method, $data, --$retry);
+      $timeout -= timer_read(__FUNCTION__) / 1000;
+      if ($timeout <= 0) {
+        $result->code = HTTP_REQUEST_TIMEOUT;
+        $result->error = 'request timed out';
+      }
+      elseif ($retry) {
+        $result = drupal_http_request($result->headers['Location'], $headers, $method, $data, --$retry, $timeout);
         $result->redirect_code = $result->code;
       }
       $result->redirect_url = $location;
@@ -653,7 +687,9 @@ function drupal_error_handler($errno, $message, $filename, $line, $context) {
       }
     }
 
-    $entry = $types[$errno] .': '. $message .' in '. $filename .' on line '. $line .'.';
+    // Try to use filter_xss(). If it's too early in the bootstrap process for
+    // filter_xss() to be loaded, use check_plain() instead.
+    $entry = check_plain($types[$errno]) .': '. (function_exists('filter_xss') ? filter_xss($message) : check_plain($message)) .' in '. check_plain($filename) .' on line '. check_plain($line) .'.';
 
     // Force display of error messages in update.php.
     if (variable_get('error_level', 1) == 1 || strstr($_SERVER['SCRIPT_NAME'], 'update.php')) {
@@ -953,14 +989,15 @@ function t($string, $args = array(), $langcode = NULL) {
  */
 
 /**
- * Verify the syntax of the given e-mail address.
+ * Verifies the syntax of the given e-mail address.
  *
- * Empty e-mail addresses are allowed. See RFC 2822 for details.
+ * See @link http://tools.ietf.org/html/rfc5322 RFC 5322 @endlink for details.
  *
  * @param $mail
  *   A string containing an e-mail address.
  * @return
- *   TRUE if the address is in a valid format.
+ *   1 if the email address is valid, 0 if it is invalid or empty, and FALSE if
+ *   there is an input error (such as passing in an array instead of a string).
  */
 function valid_email_address($mail) {
   $user = '[a-zA-Z0-9_\-\.\+\^!#\$%&*+\/\=\?\`\|\{\}~\']+';
@@ -1382,42 +1419,50 @@ function format_date($timestamp, $type = 'medium', $format = '', $timezone = NUL
  */
 
 /**
- * Generate a URL from a Drupal menu path. Will also pass-through existing URLs.
+ * Generates an internal or external URL.
+ *
+ * When creating links in modules, consider whether l() could be a better
+ * alternative than url().
  *
  * @param $path
- *   The Drupal path being linked to, such as "admin/content/node", or an
- *   existing URL like "http://drupal.org/".  The special path
- *   '<front>' may also be given and will generate the site's base URL.
+ *   (optional) The internal path or external URL being linked to, such as
+ *   "node/34" or "http://example.com/foo". The default value is equivalent to
+ *   passing in '<front>'. A few notes:
+ *   - If you provide a full URL, it will be considered an external URL.
+ *   - If you provide only the path (e.g. "node/34"), it will be
+ *     considered an internal link. In this case, it should be a system URL,
+ *     and it will be replaced with the alias, if one exists. Additional query
+ *     arguments for internal paths must be supplied in $options['query'], not
+ *     included in $path.
+ *   - If you provide an internal path and $options['alias'] is set to TRUE, the
+ *     path is assumed already to be the correct path alias, and the alias is
+ *     not looked up.
+ *   - The special string '<front>' generates a link to the site's base URL.
+ *   - If your external URL contains a query (e.g. http://example.com/foo?a=b),
+ *     then you can either URL encode the query keys and values yourself and
+ *     include them in $path, or use $options['query'] to let this function
+ *     URL encode them.
  * @param $options
- *   An associative array of additional options, with the following keys:
- *   - 'query'
- *       A URL-encoded query string to append to the link, or an array of query
- *       key/value-pairs without any URL-encoding.
- *   - 'fragment'
- *       A fragment identifier (or named anchor) to append to the link.
- *       Do not include the '#' character.
- *   - 'absolute' (default FALSE)
- *       Whether to force the output to be an absolute link (beginning with
- *       http:). Useful for links that will be displayed outside the site, such
- *       as in an RSS feed.
- *   - 'alias' (default FALSE)
- *       Whether the given path is an alias already.
- *   - 'external'
- *       Whether the given path is an external URL.
- *   - 'language'
- *       An optional language object. Used to build the URL to link to and
- *       look up the proper alias for the link.
- *   - 'base_url'
- *       Only used internally, to modify the base URL when a language dependent
- *       URL requires so.
- *   - 'prefix'
- *       Only used internally, to modify the path when a language dependent URL
- *       requires so.
+ *   (optional) An associative array of additional options, with the following
+ *   elements:
+ *   - 'query': A URL-encoded query string to append to the link, or an array of
+ *     query key/value-pairs without any URL-encoding.
+ *   - 'fragment': A fragment identifier (named anchor) to append to the URL.
+ *     Do not include the leading '#' character.
+ *   - 'absolute' (default FALSE): Whether to force the output to be an absolute
+ *     link (beginning with http:). Useful for links that will be displayed
+ *     outside the site, such as in an RSS feed.
+ *   - 'alias' (default FALSE): Whether the given path is a URL alias already.
+ *   - 'external': Whether the given path is an external URL.
+ *   - 'language': An optional language object. Used to build the URL to link
+ *     to and look up the proper alias for the link.
+ *   - 'base_url': Only used internally, to modify the base URL when a language
+ *     dependent URL requires so.
+ *   - 'prefix': Only used internally, to modify the path when a language
+ *     dependent URL requires so.
+ *
  * @return
  *   A string containing a URL to the given path.
- *
- * When creating links in modules, consider whether l() could be a better
- * alternative than url().
  */
 function url($path = NULL, $options = array()) {
   // Merge in defaults.
@@ -1544,47 +1589,45 @@ function drupal_attributes($attributes = array()) {
 }
 
 /**
- * Format an internal Drupal link.
+ * Formats an internal or external URL link as an HTML anchor tag.
  *
- * This function correctly handles aliased paths, and allows themes to highlight
- * links to the current page correctly, so all internal links output by modules
- * should be generated by this function if possible.
+ * This function correctly handles aliased paths, and adds an 'active' class
+ * attribute to links that point to the current page (for theming), so all
+ * internal links output by modules should be generated by this function if
+ * possible.
+ *
+ * However, for links enclosed in translatable text you should use t() and
+ * embed the HTML anchor tag directly in the translated string. For example:
+ * @code
+ * t('Visit the <a href="@url">settings</a> page', array('@url' => url('admin')));
+ * @endcode
+ * This keeps the context of the link title ('settings' in the example) for
+ * translators.
  *
  * @param $text
- *   The text to be enclosed with the anchor tag.
+ *   The link text for the anchor tag.
  * @param $path
- *   The Drupal path being linked to, such as "admin/content/node". Can be an
- *   external or internal URL.
- *     - If you provide the full URL, it will be considered an external URL.
- *     - If you provide only the path (e.g. "admin/content/node"), it is
- *       considered an internal link. In this case, it must be a system URL
- *       as the url() function will generate the alias.
- *     - If you provide '<front>', it generates a link to the site's
- *       base URL (again via the url() function).
- *     - If you provide a path, and 'alias' is set to TRUE (see below), it is
- *       used as is.
+ *   The internal path or external URL being linked to, such as "node/34" or
+ *   "http://example.com/foo". After the url() function is called to construct
+ *   the URL from $path and $options, the resulting URL is passed through
+ *   check_url() before it is inserted into the HTML anchor tag, to ensure
+ *   well-formed HTML. See url() for more information and notes.
  * @param $options
- *   An associative array of additional options, with the following keys:
- *     - 'attributes'
- *       An associative array of HTML attributes to apply to the anchor tag.
- *     - 'query'
- *       A query string to append to the link, or an array of query key/value
- *       properties.
- *     - 'fragment'
- *       A fragment identifier (named anchor) to append to the link.
- *       Do not include the '#' character.
- *     - 'absolute' (default FALSE)
- *       Whether to force the output to be an absolute link (beginning with
- *       http:). Useful for links that will be displayed outside the site, such
- *       as in an RSS feed.
- *     - 'html' (default FALSE)
- *       Whether the title is HTML, or just plain-text. For example for making
- *       an image a link, this must be set to TRUE, or else you will see the
- *       escaped HTML.
- *     - 'alias' (default FALSE)
- *       Whether the given path is an alias already.
+ *   An associative array of additional options, with the following elements:
+ *   - 'attributes': An associative array of HTML attributes to apply to the
+ *     anchor tag.
+ *   - 'html' (default FALSE): Whether $text is HTML or just plain-text. For
+ *     example, to make an image tag into a link, this must be set to TRUE, or
+ *     you will see the escaped HTML image tag.
+ *   - 'language': An optional language object. If the path being linked to is
+ *     internal to the site, $options['language'] is used to look up the alias
+ *     for the URL, and to determine whether the link is "active", or pointing
+ *     to the current page (the language as well as the path must match).This
+ *     element is also used by url().
+ *   - Additional $options elements used by the url() function.
+ *
  * @return
- *   an HTML string containing a link to the given path.
+ *   An HTML string containing a link to the given path.
  */
 function l($text, $path, $options = array()) {
   global $language;
@@ -1642,7 +1685,8 @@ function drupal_page_footer() {
  *   A linear array.
  * @param $function
  *   A name of a function to apply to all values before output.
- * @result
+ *
+ * @return
  *   An associative array.
  */
 function drupal_map_assoc($array, $function = NULL) {
@@ -1710,7 +1754,7 @@ function drupal_eval($code) {
  * Returns the path to a system item (module, theme, etc.).
  *
  * @param $type
- *   The type of the item (i.e. theme, theme_engine, module).
+ *   The type of the item (i.e. theme, theme_engine, module, profile).
  * @param $name
  *   The name of the item for which the path is requested.
  *
@@ -1748,7 +1792,7 @@ function drupal_add_link($attributes) {
  *
  * @param $path
  *   (optional) The path to the CSS file relative to the base_path(), e.g.,
- *   /modules/devel/devel.css.
+ *   modules/devel/devel.css.
  *
  *   Modules should always prefix the names of their CSS files with the module
  *   name, for example: system-menus.css rather than simply menus.css. Themes
@@ -1791,8 +1835,11 @@ function drupal_add_link($attributes) {
  *
  *   Typical candidates for caching are for example styles for nodes across
  *   the site, or used in the theme.
+ *
  * @return
  *   An array of CSS files.
+ *
+ * @see drupal_get_css()
  */
 function drupal_add_css($path = NULL, $type = 'module', $media = 'all', $preprocess = TRUE) {
   static $css = array();
@@ -1838,8 +1885,11 @@ function drupal_add_css($path = NULL, $type = 'module', $media = 'all', $preproc
  * @param $css
  *   (optional) An array of CSS files. If no array is provided, the default
  *   stylesheets array is used instead.
+ *
  * @return
  *   A string of XHTML CSS tags.
+ *
+ * @see drupal_add_css()
  */
 function drupal_get_css($css = NULL) {
   $output = '';
@@ -2021,10 +2071,21 @@ function drupal_load_stylesheet($file, $optimize = NULL) {
 
     if ($_optimize) {
       // Perform some safe CSS optimizations.
-      $contents = preg_replace('<
-        \s*([@{}:;,]|\)\s|\s\()\s* |  # Remove whitespace around separators, but keep space around parentheses.
-        /\*([^*\\\\]|\*(?!/))+\*/     # Remove comments that are not CSS hacks.
-        >x', '\1', $contents);
+      // Regexp to match comment blocks.
+      $comment     = '/\*[^*]*\*+(?:[^/*][^*]*\*+)*/';
+      // Regexp to match double quoted strings.
+      $double_quot = '"[^"\\\\]*(?:\\\\.[^"\\\\]*)*"';
+      // Regexp to match single quoted strings.
+      $single_quot = "'[^'\\\\]*(?:\\\\.[^'\\\\]*)*'";
+      $contents = preg_replace_callback(
+        "<$double_quot|$single_quot|$comment>Ss",  // Match all comment blocks along
+        "_process_comment",                        // with double/single quoted strings
+        $contents);                                // and feed them to _process_comment().
+      $contents = preg_replace(
+        '<\s*([@{}:;,]|\)\s|\s\()\s*>S',           // Remove whitespace around separators,
+        '\1', $contents);                          // but keep space around parentheses.
+      // End the file with a new line.
+      $contents .= "\n";
     }
 
     // Change back directory.
@@ -2035,6 +2096,41 @@ function drupal_load_stylesheet($file, $optimize = NULL) {
 }
 
 /**
+ * Process comment blocks.
+ *
+ * This is the callback function for the preg_replace_callback()
+ * used in drupal_load_stylesheet_content(). Support for comment
+ * hacks is implemented here.
+ */
+function _process_comment($matches) {
+  static $keep_nextone = FALSE;
+
+  // Quoted string, keep it.
+  if ($matches[0][0] == "'" || $matches[0][0] == '"') {
+    return $matches[0];
+  }
+  // End of IE-Mac hack, keep it.
+  if ($keep_nextone) {
+    $keep_nextone = FALSE;
+    return $matches[0];
+  }
+  switch (strrpos($matches[0], '\\')) {
+    case FALSE :
+      // No backslash, strip it.
+      return '';
+
+    case drupal_strlen($matches[0])-3 :
+      // Ends with \*/ so is a multi line IE-Mac hack, keep the next one also.
+      $keep_nextone = TRUE;
+      return '/*_\*/';
+
+    default :
+      // Single line IE-Mac hack.
+      return '/*\_*/';
+  }
+}
+
+/**
  * Loads stylesheets recursively and returns contents with corrected paths.
  *
  * This function is used for recursive loading of stylesheets and
@@ -2490,8 +2586,8 @@ function drupal_to_js($var) {
  *   (optional) If set, the variable will be converted to JSON and output.
  */
 function drupal_json($var = NULL) {
-  // We are returning JavaScript, so tell the browser.
-  drupal_set_header('Content-Type: text/javascript; charset=utf-8');
+  // We are returning JSON, so tell the browser.
+  drupal_set_header('Content-Type: application/json');
 
   if (isset($var)) {
     echo drupal_to_js($var);
@@ -2538,7 +2634,7 @@ function drupal_urlencode($text) {
  */
 function drupal_get_private_key() {
   if (!($key = variable_get('drupal_private_key', 0))) {
-    $key = md5(uniqid(mt_rand(), true)) . md5(uniqid(mt_rand(), true));
+    $key = drupal_random_key();
     variable_set('drupal_private_key', $key);
   }
   return $key;
@@ -2570,7 +2666,7 @@ function drupal_get_token($value = '') {
  */
 function drupal_valid_token($token, $value = '', $skip_anonymous = FALSE) {
   global $user;
-  return (($skip_anonymous && $user->uid == 0) || ($token == md5(session_id() . $value . variable_get('drupal_private_key', ''))));
+  return (($skip_anonymous && $user->uid == 0) || ($token === md5(session_id() . $value . variable_get('drupal_private_key', ''))));
 }
 
 /**
@@ -2628,6 +2724,10 @@ function _drupal_bootstrap_full() {
   fix_gpc_magic();
   // Load all enabled modules
   module_load_all();
+  // Ensure mt_rand is reseeded, to prevent random values from one page load
+  // being exploited to predict random values in subsequent page loads.
+  $seed = unpack("L", drupal_random_bytes(4));
+  mt_srand($seed[1]);
   // Let all modules take action before menu system handles the request
   // We do not want this while running update.php.
   if (!defined('MAINTENANCE_MODE') || MAINTENANCE_MODE != 'update') {
@@ -2793,18 +2893,28 @@ function drupal_system_listing($mask, $directory, $key = 'name', $min_depth = 1)
 
 
 /**
- * This dispatch function hands off structured Drupal arrays to type-specific
- * *_alter implementations. It ensures a consistent interface for all altering
- * operations.
+ * Hands off alterable variables to type-specific *_alter implementations.
+ *
+ * This dispatch function hands off the passed in variables to type-specific
+ * hook_TYPE_alter() implementations in modules. It ensures a consistent
+ * interface for all altering operations.
  *
  * @param $type
- *   The data type of the structured array. 'form', 'links',
- *   'node_content', and so on are several examples.
+ *   A string describing the type of the alterable $data (e.g. 'form',
+ *   'profile').
  * @param $data
- *   The structured array to be altered.
+ *   The variable that will be passed to hook_TYPE_alter() implementations to
+ *   be altered. The type of this variable depends on $type. For example, when
+ *   altering a 'form', $data will be a structured array. When altering a
+ *   'profile', $data will be an object. If you need to pass additional
+ *   parameters by reference to the hook_TYPE_alter() functions, include them
+ *   as an array in $data['__drupal_alter_by_ref']. They will be unpacked and
+ *   passed to the hook_TYPE_alter() functions, before the additional
+ *   ... parameters (see below).
  * @param ...
- *   Any additional params will be passed on to the called
- *   hook_$type_alter functions.
+ *   Any additional parameters will be passed on to the hook_TYPE_alter()
+ *   functions (not by reference), after any by-reference parameters included
+ *   in $data (see above)
  */
 function drupal_alter($type, &$data) {
   // PHP's func_get_args() always returns copies of params, not references, so
@@ -2845,9 +2955,16 @@ function drupal_alter($type, &$data) {
  * Renders HTML given a structured array tree.
  *
  * Recursively iterates over each of the array elements, generating HTML code.
- * This function is usually called from within a another function, like
+ * This function is usually called from within another function, like
  * drupal_get_form() or node_view().
  *
+ * drupal_render() flags each element with a '#printed' status to indicate that
+ * the element has been rendered, which allows individual elements of a given
+ * array to be rendered independently. This prevents elements from being
+ * rendered more than once on subsequent calls to drupal_render() if, for example,
+ * they are part of a larger array. If the same array or array element is passed
+ * more than once to drupal_render(), it simply returns a NULL value.
+ *
  * @param $elements
  *   The structured array describing the data to be rendered.
  * @return
@@ -3097,10 +3214,6 @@ function drupal_common_theme() {
     'pager_link' => array(
       'arguments' => array('text' => NULL, 'page_new' => NULL, 'element' => NULL, 'parameters' => array(), 'attributes' => array()),
     ),
-    // from locale.inc
-    'locale_admin_manage_screen' => array(
-      'arguments' => array('form' => NULL),
-    ),
     // from menu.inc
     'menu_item_link' => array(
       'arguments' => array('item' => NULL),
@@ -3216,7 +3329,10 @@ function drupal_get_schema($table = NULL, $rebuild = FALSE) {
 
       // Invoke hook_schema for all modules.
       foreach (module_implements('schema') as $module) {
-        $current = module_invoke($module, 'schema');
+        // Cast the result of hook_schema() to an array, as a NULL return value
+        // would cause array_merge() to set the $schema variable to NULL as well.
+        // That would break modules which use $schema further down the line.
+        $current = (array) module_invoke($module, 'schema');
         _drupal_initialize_schema($module, $current);
         $schema = array_merge($schema, $current);
       }
@@ -3313,15 +3429,17 @@ function drupal_uninstall_schema($module) {
  */
 function drupal_get_schema_unprocessed($module, $table = NULL) {
   // Load the .install file to get hook_schema.
-  module_load_include('install', $module);
+  module_load_install($module);
   $schema = module_invoke($module, 'schema');
 
   if (!is_null($table) && isset($schema[$table])) {
     return $schema[$table];
   }
-  else {
+  elseif (!empty($schema)) {
     return $schema;
   }
+
+  return array();
 }
 
 /**
@@ -3641,6 +3759,8 @@ function watchdog_severity_levels() {
 
 /**
  * Explode a string of given tags into an array.
+ *
+ * @see drupal_implode_tags()
  */
 function drupal_explode_tags($tags) {
   // This regexp allows the following types of user input:
@@ -3665,6 +3785,8 @@ function drupal_explode_tags($tags) {
 
 /**
  * Implode an array of tags into a string.
+ *
+ * @see drupal_explode_tags()
  */
 function drupal_implode_tags($tags) {
   $encoded_tags = array();
@@ -3719,7 +3841,7 @@ function drupal_flush_all_caches() {
  * Changes the character added to all css/js files as dummy query-string,
  * so that all browsers are forced to reload fresh files. We keep
  * 20 characters history (FIFO) to avoid repeats, but only the first
- * (newest) character is actually used on urls, to keep them short.
+ * (newest) character is actually used on URLs, to keep them short.
  * This is also called from update.php.
  */
 function _drupal_flush_css_js() {
diff --git a/includes/database.inc b/includes/database.inc
index 0fe516a..40d40c9 100644
--- a/includes/database.inc
+++ b/includes/database.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -116,10 +115,11 @@ function db_prefix_tables($sql) {
  * code.
  *
  * @param $name
- *   The name assigned to the newly active database connection. If omitted, the
+ *   The key in the $db_url global variable from settings.php. If omitted, the
  *   default connection will be made active.
  *
- * @return the name of the previously active database or FALSE if non was found.
+ * @return
+ *   The name of the previously active database, or FALSE if none was found.
  */
 function db_set_active($name = 'default') {
   global $db_url, $db_type, $active_db;
@@ -174,7 +174,7 @@ function _db_error_page($error = '') {
   global $db_type;
   drupal_init_language();
   drupal_maintenance_theme();
-  drupal_set_header('HTTP/1.1 503 Service Unavailable');
+  drupal_set_header($_SERVER['SERVER_PROTOCOL'] .' 503 Service Unavailable');
   drupal_set_title('Site off-line');
 
   $message = '<p>The site is currently not available due to technical problems. Please try again later. Thank you for your understanding.</p>';
@@ -389,16 +389,20 @@ function db_rewrite_sql($query, $primary_table = 'n', $primary_field = 'nid',  $
 }
 
 /**
- * Adds the DISTINCT flag to the supplied query if a DISTINCT doesn't already
- * exist in the query. Returns the altered query.
+ * Adds the DISTINCT flag to the supplied query and returns the altered query.
  *
- * This will not, and never did guarantee that you will obtain distinct 
- * values of $table.$field.
+ * The supplied query should not contain a DISTINCT flag. This will not, and
+ * never did guarantee that you will obtain distinct values of $table.$field.
  *
- * @param $table Unused. Kept to remain API compatibility.
- * @param $field Unused. Kept to remain API compatibility.
- * @param $query Query to which the DISTINCT flag should be applied.
- * @return SQL query with the DISTINCT flag set.
+ * @param $table
+ *   Unused. Kept to retain API compatibility.
+ * @param $field
+ *   Unused. Kept to retain API compatibility.
+ * @param $query
+ *   Query to which the DISTINCT flag should be applied.
+ *
+ * @return
+ *   SQL query with the DISTINCT flag set.
  */
 function db_distinct_field($table, $field, $query) {
   $matches = array();
@@ -406,6 +410,7 @@ function db_distinct_field($table, $field, $query) {
     // Only add distinct to the outer SELECT to avoid messing up subqueries.
     $query = preg_replace('/^SELECT/i', 'SELECT DISTINCT', $query);
   }
+
   return $query;
 }
 
@@ -449,7 +454,6 @@ function db_escape_table($string) {
  *   - 'fields': An associative array ('fieldname' => specification)
  *     that describes the table's database columns.  The specification
  *     is also an array.  The following specification parameters are defined:
- *
  *     - 'description': A string describing this field and its purpose.
  *       References to other tables should be enclosed in
  *       curly-brackets.  For example, the node table vid field
@@ -468,7 +472,6 @@ function db_escape_table($string) {
  *       datatypes will be used (e.g. on MySQL, TINYINT vs. INT vs. BIGINT).
  *       'normal', the default, selects the base type (e.g. on MySQL,
  *       INT, VARCHAR, BLOB, etc.).
- *
  *       Not all sizes are available for all data types. See
  *       db_type_map() for possible combinations.
  *     - 'not null': If true, no NULL values will be allowed in this
@@ -487,10 +490,8 @@ function db_escape_table($string) {
  *       the precision (total number of significant digits) and scale
  *       (decimal digits right of the decimal point).  Both values are
  *       mandatory.  Ignored for other field types.
- *
  *     All parameters apart from 'type' are optional except that type
  *     'numeric' columns must specify 'precision' and 'scale'.
- *
  *  - 'primary key': An array of one or more key column specifiers (see below)
  *    that form the primary key.
  *  - 'unique keys': An associative array of unique keys ('keyname' =>
diff --git a/includes/database.mysql-common.inc b/includes/database.mysql-common.inc
index 957e31e..ead7f36 100644
--- a/includes/database.mysql-common.inc
+++ b/includes/database.mysql-common.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -27,8 +26,9 @@
  *   and TRUE values to decimal 1.
  *
  * @return
- *   A database query result resource, or FALSE if the query was not
- *   executed correctly.
+ *   Successful SELECT, SHOW, DESCRIBE, EXPLAIN, or other queries which return a
+ *   set of results will return a database query result resource. Other
+ *   successful queries will return TRUE and failing queries will return FALSE.
  */
 function db_query($query) {
   $args = func_get_args();
@@ -60,7 +60,16 @@ function db_query($query) {
 function db_create_table_sql($name, $table) {
 
   if (empty($table['mysql_suffix'])) {
-    $table['mysql_suffix'] = "/*!40100 DEFAULT CHARACTER SET UTF8 */";
+    $table['mysql_suffix'] = '/*!40100 DEFAULT CHARACTER SET utf8';
+    // By default, MySQL uses the default collation for new tables, which is
+    // 'utf8_general_ci' for utf8. If an alternate collation has been set, it
+    // needs to be explicitly specified.
+    // @see db_connect()
+    $collation = (!empty($table['collation']) ? $table['collation'] : (!empty($GLOBALS['db_collation']) ? $GLOBALS['db_collation'] : ''));
+    if ($collation) {
+      $table['mysql_suffix'] .= ' COLLATE ' . $collation;
+    }
+    $table['mysql_suffix'] .= ' */';
   }
 
   $sql = "CREATE TABLE {". $name ."} (\n";
@@ -281,7 +290,7 @@ function db_drop_table(&$ret, $table) {
  *   table along with adding the field. The format is the same as a
  *   table specification but without the 'fields' element.  If you are
  *   adding a type 'serial' field, you MUST specify at least one key
- *   or index including it in this array. @see db_change_field for more
+ *   or index including it in this array. See db_change_field() for more
  *   explanation why.
  */
 function db_add_field(&$ret, $table, $field, $spec, $keys_new = array()) {
diff --git a/includes/database.mysql.inc b/includes/database.mysql.inc
index 7d177c8..5ad5f3e 100644
--- a/includes/database.mysql.inc
+++ b/includes/database.mysql.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -56,9 +55,9 @@ function db_connect($url) {
     _db_error_page('Unable to use the MySQL database because the MySQL extension for PHP is not installed. Check your <code>php.ini</code> to see how you can enable it.');
   }
 
-  // Decode url-encoded information in the db connection string
+  // Decode urlencoded information in the db connection string
   $url['user'] = urldecode($url['user']);
-  // Test if database url has a password.
+  // Test if database URL has a password.
   $url['pass'] = isset($url['pass']) ? urldecode($url['pass']) : '';
   $url['host'] = urldecode($url['host']);
   $url['path'] = urldecode($url['path']);
@@ -80,8 +79,16 @@ function db_connect($url) {
     _db_error_page(mysql_error());
   }
 
-  // Force UTF-8.
-  mysql_query('SET NAMES "utf8"', $connection);
+  // Force MySQL to use the UTF-8 character set. Also set the collation, if a
+  // certain one has been set; otherwise, MySQL defaults to 'utf8_general_ci'
+  // for UTF-8.
+  if (!empty($GLOBALS['db_collation'])) {
+    mysql_query('SET NAMES utf8 COLLATE '. $GLOBALS['db_collation'], $connection);
+  }
+  else {
+    mysql_query('SET NAMES utf8', $connection);
+  }
+
   return $connection;
 }
 
@@ -169,6 +176,7 @@ function db_fetch_array($result) {
  *
  * @param $result
  *   A database query result resource, as returned from db_query().
+ *
  * @return
  *   The resulting field or FALSE.
  */
@@ -245,9 +253,9 @@ function db_query_range($query) {
 /**
  * Runs a SELECT query and stores its results in a temporary table.
  *
- * Use this as a substitute for db_query() when the results need to stored
- * in a temporary table. Temporary tables exist for the duration of the page
- * request.
+ * Use this as a substitute for db_query() when the results need to be stored
+ * in a temporary table.
+ *
  * User-supplied arguments to the query should be passed in as separate parameters
  * so that they can be properly escaped to avoid SQL injection attacks.
  *
@@ -266,10 +274,10 @@ function db_query_range($query) {
  *
  *   NOTE: using this syntax will cast NULL and FALSE values to decimal 0,
  *   and TRUE values to decimal 1.
- *
  * @param $table
  *   The name of the temporary table to select into. This name will not be
  *   prefixed as there is no risk of collision.
+ *
  * @return
  *   A database query result resource, or FALSE if the query was not executed
  *   correctly.
@@ -337,6 +345,12 @@ function db_unlock_tables() {
 
 /**
  * Check if a table exists.
+ *
+ * @param $table
+ *   The name of the table.
+ *
+ * @return
+ *   TRUE if the table exists, and FALSE if the table does not exist.
  */
 function db_table_exists($table) {
   return (bool) db_fetch_object(db_query("SHOW TABLES LIKE '{". db_escape_table($table) ."}'"));
@@ -344,6 +358,14 @@ function db_table_exists($table) {
 
 /**
  * Check if a column exists in the given table.
+ *
+ * @param $table
+ *   The name of the table.
+ * @param $column
+ *   The name of the column.
+ *
+ * @return
+ *   TRUE if the column exists, and FALSE if the column does not exist.
  */
 function db_column_exists($table, $column) {
   return (bool) db_fetch_object(db_query("SHOW COLUMNS FROM {". db_escape_table($table) ."} LIKE '". db_escape_table($column) ."'"));
diff --git a/includes/database.mysqli.inc b/includes/database.mysqli.inc
index 70a9943..c6297b7 100644
--- a/includes/database.mysqli.inc
+++ b/includes/database.mysqli.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -62,9 +61,9 @@ function db_connect($url) {
 
   $url = parse_url($url);
 
-  // Decode url-encoded information in the db connection string
+  // Decode urlencoded information in the db connection string
   $url['user'] = urldecode($url['user']);
-  // Test if database url has a password.
+  // Test if database URL has a password.
   $url['pass'] = isset($url['pass']) ? urldecode($url['pass']) : '';
   $url['host'] = urldecode($url['host']);
   $url['path'] = urldecode($url['path']);
@@ -79,8 +78,15 @@ function db_connect($url) {
     _db_error_page(mysqli_connect_error());
   }
 
-  // Force UTF-8.
-  mysqli_query($connection, 'SET NAMES "utf8"');
+  // Force MySQL to use the UTF-8 character set. Also set the collation, if a
+  // certain one has been set; otherwise, MySQL defaults to 'utf8_general_ci'
+  // for UTF-8.
+  if (!empty($GLOBALS['db_collation'])) {
+    mysqli_query($connection, 'SET NAMES utf8 COLLATE ' . $GLOBALS['db_collation']);
+  }
+  else {
+    mysqli_query($connection, 'SET NAMES utf8');
+  }
 
   return $connection;
 }
@@ -247,9 +253,9 @@ function db_query_range($query) {
 /**
  * Runs a SELECT query and stores its results in a temporary table.
  *
- * Use this as a substitute for db_query() when the results need to stored
- * in a temporary table. Temporary tables exist for the duration of the page
- * request.
+ * Use this as a substitute for db_query() when the results need to be stored
+ * in a temporary table.
+ * 
  * User-supplied arguments to the query should be passed in as separate parameters
  * so that they can be properly escaped to avoid SQL injection attacks.
  *
@@ -268,10 +274,10 @@ function db_query_range($query) {
  *
  *   NOTE: using this syntax will cast NULL and FALSE values to decimal 0,
  *   and TRUE values to decimal 1.
- *
  * @param $table
  *   The name of the temporary table to select into. This name will not be
  *   prefixed as there is no risk of collision.
+ *
  * @return
  *   A database query result resource, or FALSE if the query was not executed
  *   correctly.
@@ -339,6 +345,12 @@ function db_unlock_tables() {
 
 /**
  * Check if a table exists.
+ *
+ * @param $table
+ *   The name of the table.
+ *
+ * @return
+ *   TRUE if the table exists, and FALSE if the table does not exist.
  */
 function db_table_exists($table) {
   return (bool) db_fetch_object(db_query("SHOW TABLES LIKE '{". db_escape_table($table) ."}'"));
@@ -346,6 +358,14 @@ function db_table_exists($table) {
 
 /**
  * Check if a column exists in the given table.
+ *
+ * @param $table
+ *   The name of the table.
+ * @param $column
+ *   The name of the column.
+ *
+ * @return
+ *   TRUE if the column exists, and FALSE if the column does not exist.
  */
 function db_column_exists($table, $column) {
   return (bool) db_fetch_object(db_query("SHOW COLUMNS FROM {". db_escape_table($table) ."} LIKE '". db_escape_table($column) ."'"));
diff --git a/includes/database.pgsql.inc b/includes/database.pgsql.inc
index 4a07486..01f2c6b 100644
--- a/includes/database.pgsql.inc
+++ b/includes/database.pgsql.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -53,7 +52,7 @@ function db_connect($url) {
   $url = parse_url($url);
   $conn_string = '';
 
-  // Decode url-encoded information in the db connection string
+  // Decode urlencoded information in the db connection string
   if (isset($url['user'])) {
     $conn_string .= ' user='. urldecode($url['user']);
   }
@@ -288,9 +287,9 @@ function db_query_range($query) {
 /**
  * Runs a SELECT query and stores its results in a temporary table.
  *
- * Use this as a substitute for db_query() when the results need to stored
- * in a temporary table. Temporary tables exist for the duration of the page
- * request.
+ * Use this as a substitute for db_query() when the results need to be stored
+ * in a temporary table.
+ *
  * User-supplied arguments to the query should be passed in as separate parameters
  * so that they can be properly escaped to avoid SQL injection attacks.
  *
@@ -309,10 +308,10 @@ function db_query_range($query) {
  *
  *   NOTE: using this syntax will cast NULL and FALSE values to decimal 0,
  *   and TRUE values to decimal 1.
- *
  * @param $table
  *   The name of the temporary table to select into. This name will not be
  *   prefixed as there is no risk of collision.
+ *
  * @return
  *   A database query result resource, or FALSE if the query was not executed
  *   correctly.
@@ -383,6 +382,12 @@ function db_unlock_tables() {
 
 /**
  * Check if a table exists.
+ *
+ * @param $table
+ *   The name of the table.
+ *
+ * @return
+ *   TRUE if the table exists, and FALSE if the table does not exist.
  */
 function db_table_exists($table) {
   return (bool) db_result(db_query("SELECT COUNT(*) FROM pg_class WHERE relname = '{". db_escape_table($table) ."}'"));
@@ -390,6 +395,14 @@ function db_table_exists($table) {
 
 /**
  * Check if a column exists in the given table.
+ *
+ * @param $table
+ *   The name of the table.
+ * @param $column
+ *   The name of the column.
+ *
+ * @return
+ *   TRUE if the column exists, and FALSE if the column does not exist.
  */
 function db_column_exists($table, $column) {
   return (bool) db_result(db_query("SELECT COUNT(pg_attribute.attname) FROM pg_class, pg_attribute WHERE pg_attribute.attrelid = pg_class.oid AND pg_class.relname = '{". db_escape_table($table) ."}' AND attname = '". db_escape_table($column) ."'"));
@@ -643,12 +656,12 @@ function db_drop_table(&$ret, $table) {
  *   created field will be set to the value of the key in all rows.
  *   This is most useful for creating NOT NULL columns with no default
  *   value in existing tables.
- * @param $keys_new
+ * @param $new_keys
  *   Optional keys and indexes specification to be created on the
  *   table along with adding the field. The format is the same as a
  *   table specification but without the 'fields' element.  If you are
  *   adding a type 'serial' field, you MUST specify at least one key
- *   or index including it in this array. @see db_change_field for more
+ *   or index including it in this array. See db_change_field() for more
  *   explanation why.
  */
 function db_add_field(&$ret, $table, $field, $spec, $new_keys = array()) {
diff --git a/includes/file.inc b/includes/file.inc
index e918508..d0e24b2 100644
--- a/includes/file.inc
+++ b/includes/file.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -39,7 +38,7 @@ define('FILE_STATUS_PERMANENT', 1);
  * @return A string containing a URL that can be used to download the file.
  */
 function file_create_url($path) {
-  // Strip file_directory_path from $path. We only include relative paths in urls.
+  // Strip file_directory_path from $path. We only include relative paths in URLs.
   if (strpos($path, file_directory_path() .'/') === 0) {
     $path = trim(substr($path, strlen(file_directory_path())), '\\/');
   }
@@ -83,17 +82,28 @@ function file_create_path($dest = 0) {
 }
 
 /**
- * Check that the directory exists and is writable. Directories need to
- * have execute permissions to be considered a directory by FTP servers, etc.
+ * Checks whether a directory exists and is writable.
  *
- * @param $directory A string containing the name of a directory path.
- * @param $mode A Boolean value to indicate if the directory should be created
- *   if it does not exist or made writable if it is read-only.
- * @param $form_item An optional string containing the name of a form item that
- *   any errors will be attached to. This is useful for settings forms that
- *   require the user to specify a writable directory. If it can't be made to
- *   work, a form error will be set preventing them from saving the settings.
- * @return FALSE when directory not found, or TRUE when directory exists.
+ * Furthermore, the directory can optionally be created if it does not exist,
+ * and/or be set to writable if it is currently not. Directories need to have
+ * execute permission to be considered a directory by FTP servers.
+ *
+ * @param $directory
+ *   A string representing the directory path.
+ * @param $mode
+ *   An optional bitmask containing the actions, if any, to be carried out on
+ *   the directory. Any combination of the actions FILE_CREATE_DIRECTORY and
+ *   FILE_MODIFY_PERMISSIONS is allowed.
+ * @param $form_item
+ *   An optional string containing the name of a form item that any errors
+ *   will be attached to. Useful when the function validates a directory path
+ *   entered as a form value. An error will consequently prevent form submit
+ *   handlers from running, and instead display the form along with the
+ *   error messages.
+ *
+ * @return
+ *   FALSE if the directory does not exist or is not writable, even after
+ *   any optional actions have been carried out. Otherwise, TRUE is returned.
  */
 function file_check_directory(&$directory, $mode = 0, $form_item = NULL) {
   $directory = rtrim($directory, '/\\');
@@ -124,20 +134,81 @@ function file_check_directory(&$directory, $mode = 0, $form_item = NULL) {
     }
   }
 
-  if ((file_directory_path() == $directory || file_directory_temp() == $directory) && !is_file("$directory/.htaccess")) {
-    $htaccess_lines = "SetHandler Drupal_Security_Do_Not_Remove_See_SA_2006_006\nOptions None\nOptions +FollowSymLinks";
+  if (file_directory_path() == $directory || file_directory_temp() == $directory) {
+    file_create_htaccess($directory, $form_item);
+  }
+
+  return TRUE;
+}
+
+/**
+ * Creates a .htaccess file in the given directory.
+ *
+ * @param $directory
+ *   The directory.
+ * @param $form_item
+ *   An optional string containing the name of a form item that any errors
+ *   will be attached to. Useful when called from file_check_directory() to
+ *   validate a directory path entered as a form value. An error will
+ *   consequently prevent form submit handlers from running, and instead
+ *   display the form along with the error messages.
+ * @param $force_overwrite
+ *   Set to TRUE to attempt to overwrite the existing .htaccess file if one is
+ *   already present. Defaults to FALSE.
+ */
+function file_create_htaccess($directory, $form_item = NULL, $force_overwrite = FALSE) {
+  if (!is_file("$directory/.htaccess") || $force_overwrite) {
+    $htaccess_lines = file_htaccess_lines();
     if (($fp = fopen("$directory/.htaccess", 'w')) && fputs($fp, $htaccess_lines)) {
       fclose($fp);
       chmod($directory .'/.htaccess', 0664);
     }
     else {
       $variables = array('%directory' => $directory, '!htaccess' => '<br />'. nl2br(check_plain($htaccess_lines)));
-      form_set_error($form_item, t("Security warning: Couldn't write .htaccess file. Please create a .htaccess file in your %directory directory which contains the following lines: <code>!htaccess</code>", $variables));
+      if ($form_item) {
+        form_set_error($form_item, t("Security warning: Couldn't write .htaccess file. Please create a .htaccess file in your %directory directory which contains the following lines: <code>!htaccess</code>", $variables));
+      }
       watchdog('security', "Security warning: Couldn't write .htaccess file. Please create a .htaccess file in your %directory directory which contains the following lines: <code>!htaccess</code>", $variables, WATCHDOG_ERROR);
     }
   }
+}
 
-  return TRUE;
+/**
+ * Returns the standard .htaccess lines that Drupal writes to file directories.
+ *
+ * @return
+ *   A string representing the desired contents of the .htaccess file.
+ *
+ * @see file_create_htaccess()
+ */
+function file_htaccess_lines() {
+  $lines = <<<EOF
+# Turn off all options we don't need.
+Options None
+Options +FollowSymLinks
+
+# Set the catch-all handler to prevent scripts from being executed.
+SetHandler Drupal_Security_Do_Not_Remove_See_SA_2006_006
+<Files *>
+  # Override the handler again if we're run later in the evaluation list.
+  SetHandler Drupal_Security_Do_Not_Remove_See_SA_2013_003
+</Files>
+
+# If we know how to do it safely, disable the PHP engine entirely.
+<IfModule mod_php5.c>
+  php_flag engine off
+</IfModule>
+# PHP 4, Apache 1.
+<IfModule mod_php4.c>
+  php_flag engine off
+</IfModule>
+# PHP 4, Apache 2.
+<IfModule sapi_apache2.c>
+  php_flag engine off
+</IfModule>
+EOF;
+
+  return $lines;
 }
 
 /**
@@ -359,11 +430,23 @@ function file_move(&$source, $dest = 0, $replace = FILE_EXISTS_RENAME) {
 /**
  * Modify a filename as needed for security purposes.
  *
- * Dangerous file names will be altered; for instance, the file name
- * "exploit.php.pps" will become "exploit.php_.pps". All extensions that are
+ * Munging a file name prevents unknown file extensions from masking exploit
+ * files. When web servers such as Apache decide how to process a URL request,
+ * they use the file extension. If the extension is not recognized, Apache
+ * skips that extension and uses the previous file extension. For example, if
+ * the file being requested is exploit.php.pps, and Apache does not recognize
+ * the '.pps' extension, it treats the file as PHP and executes it. To make
+ * this file name safe for Apache and prevent it from executing as PHP, the
+ * .php extension is "munged" into .php_, making the safe file name
+ * exploit.php_.pps.
+ *
+ * Specifically, this function adds an underscore to all extensions that are
  * between 2 and 5 characters in length, internal to the file name, and not
- * included in $extensions will be altered by adding an underscore. If variable
- * 'allow_insecure_uploads' evaluates to TRUE, no alterations will be made.
+ * included in $extensions.
+ *
+ * Function behavior is also controlled by the Drupal variable
+ * 'allow_insecure_uploads'. If 'allow_insecure_uploads' evaluates to TRUE, no
+ * alterations will be made, if it evaluates to FALSE, the filename is 'munged'.
  *
  * @param $filename
  *   File name to modify.
@@ -381,6 +464,9 @@ function file_munge_filename($filename, $extensions, $alerts = TRUE) {
 
   // Allow potentially insecure uploads for very savvy users and admin
   if (!variable_get('allow_insecure_uploads', 0)) {
+    // Remove any null bytes. See http://php.net/manual/en/security.filesystem.nullbytes.php
+    $filename = str_replace(chr(0), '', $filename);
+
     $whitelist = array_unique(explode(' ', trim($extensions)));
 
     // Split the filename up by periods. The first part becomes the basename
@@ -437,6 +523,7 @@ function file_create_filename($basename, $directory) {
     }
     else {
       $name = $basename;
+      $ext = '';
     }
 
     $counter = 0;
@@ -475,17 +562,17 @@ function file_space_used($uid = NULL) {
 }
 
 /**
- * Saves a file upload to a new location. The source file is validated as a
- * proper upload and handled as such.
+ * Saves a file upload to a new location.
  *
- * The file will be added to the files table as a temporary file. Temporary files
- * are periodically cleaned. To make the file permanent file call
+ * The source file is validated as a proper upload and handled as such.
+ * The file will be added to the files table as a temporary file. Temporary
+ * files are periodically cleaned. To make the file permanent file call
  * file_set_status() to change its status.
  *
  * @param $source
  *   A string specifying the name of the upload field to save.
  * @param $validators
- *   An optional, associative array of callback functions used to validate the
+ *   (optional) An associative array of callback functions used to validate the
  *   file. The keys are function names and the values arrays of callback
  *   parameters which will be passed in after the file object. The
  *   functions should return an array of error messages; an empty array
@@ -495,9 +582,12 @@ function file_space_used($uid = NULL) {
  *   A string containing the directory $source should be copied to. If this is
  *   not provided or is not writable, the temporary directory will be used.
  * @param $replace
- *   A boolean indicating whether an existing file of the same name in the
- *   destination directory should overwritten. A false value will generate a
- *   new, unique filename in the destination directory.
+ *   Replace behavior when the destination file already exists:
+ *   - FILE_EXISTS_REPLACE: Replace the existing file.
+ *   - FILE_EXISTS_RENAME: Append _{incrementing number} until the filename
+ *     is unique.
+ *   - FILE_EXISTS_ERROR: Do nothing and return FALSE.
+ *
  * @return
  *   An object containing the file information, or 0 in the event of an error.
  */
@@ -643,9 +733,12 @@ function file_validate_name_length($file) {
  * @param $file
  *   A Drupal file object.
  * @param $extensions
- *   A string with a space separated
+ *   A string with a space separated list of allowed file extensions, not
+ *   including the period. For example, 'bmp jpg gif png'.
+ *
  * @return
- *   An array. If the file extension is not allowed, it will contain an error message.
+ *   An array. If the file extension is not allowed, it will contain an error
+ *   message.
  */
 function file_validate_extensions($file, $extensions) {
   global $user;
@@ -654,7 +747,7 @@ function file_validate_extensions($file, $extensions) {
 
   // Bypass validation for uid  = 1.
   if ($user->uid != 1) {
-    $regex = '/\.('. ereg_replace(' +', '|', preg_quote($extensions)) .')$/i';
+    $regex = '/\.('. @ereg_replace(' +', '|', preg_quote($extensions)) .')$/i';
     if (!preg_match($regex, $file->filename)) {
       $errors[] = t('Only files with the following extensions are allowed: %files-allowed.', array('%files-allowed' => $extensions));
     }
@@ -802,8 +895,13 @@ function file_save_data($data, $dest, $replace = FILE_EXISTS_RENAME) {
 /**
  * Set the status of a file.
  *
- * @param file A Drupal file object
- * @param status A status value to set the file to.
+ * @param $file 
+ *   A Drupal file object.
+ * @param $status
+ *   A status value to set the file to. One of:
+ *   - FILE_STATUS_PERMANENT
+ *   - FILE_STATUS_TEMPORARY
+ *
  * @return FALSE on failure, TRUE on success and $file->status will contain the
  *     status.
  */
@@ -826,6 +924,14 @@ function file_transfer($source, $headers) {
   if (ob_get_level()) {
     ob_end_clean();
   }
+  
+  // IE cannot download private files because it cannot store files downloaded
+  // over HTTPS in the browser cache. The problem can be solved by sending
+  // custom headers to IE. See http://support.microsoft.com/kb/323308/en-us
+  if (isset($_SERVER['HTTPS']) && ($_SERVER['HTTPS'] == 'on')) {
+    drupal_set_header('Cache-Control: private');
+    drupal_set_header('Pragma: private');
+  }
 
   foreach ($headers as $header) {
     // To prevent HTTP header injection, we delete new lines that are
@@ -882,6 +988,7 @@ function file_download() {
 
 /**
  * Finds all files that match a given mask in a given directory.
+ *
  * Directories and files beginning with a period are excluded; this
  * prevents hidden files and directories (such as SVN working directories)
  * from being scanned.
@@ -898,18 +1005,19 @@ function file_download() {
  *   When TRUE, the directory scan will recurse the entire tree
  *   starting at the provided directory.
  * @param $key
- *   The key to be used for the returned array of files. Possible
- *   values are "filename", for the path starting with $dir,
- *   "basename", for the basename of the file, and "name" for the name
- *   of the file without an extension.
+ *   The key to be used for the returned associative array of files. Possible
+ *   values are "filename", for the path starting with $dir; "basename", for
+ *   the basename of the file; and "name" for the name of the file without the
+ *   extension.
  * @param $min_depth
  *   Minimum depth of directories to return files from.
  * @param $depth
- *   Current depth of recursion. This parameter is only used internally and should not be passed.
+ *   Current depth of recursion. This parameter is only used internally and
+ *   should not be passed in.
  *
  * @return
  *   An associative array (keyed on the provided key) of objects with
- *   "path", "basename", and "name" members corresponding to the
+ *   "filename", "basename", and "name" members corresponding to the
  *   matching files.
  */
 function file_scan_directory($dir, $mask, $nomask = array('.', '..', 'CVS'), $callback = 0, $recurse = TRUE, $key = 'filename', $min_depth = 0, $depth = 0) {
@@ -923,7 +1031,7 @@ function file_scan_directory($dir, $mask, $nomask = array('.', '..', 'CVS'), $ca
           // Give priority to files in this folder by merging them in after any subdirectory files.
           $files = array_merge(file_scan_directory("$dir/$file", $mask, $nomask, $callback, $recurse, $key, $min_depth, $depth + 1), $files);
         }
-        elseif ($depth >= $min_depth && ereg($mask, $file)) {
+        elseif ($depth >= $min_depth && @ereg($mask, $file)) {
           // Always use this match over anything already set in $files with the same $$key.
           $filename = "$dir/$file";
           $basename = basename($file);
diff --git a/includes/form.inc b/includes/form.inc
index e684bd2..8ac40c9 100644
--- a/includes/form.inc
+++ b/includes/form.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @defgroup forms Form builder functions
@@ -42,8 +41,8 @@
  *
  * For information on the format of the structured arrays used to define forms,
  * and more detailed explanations of the Form API workflow, see the
- * @link http://api.drupal.org/api/file/developer/topics/forms_api_reference.html reference @endlink
- * and the @link http://api.drupal.org/api/file/developer/topics/forms_api.html quickstart guide. @endlink
+ * @link forms_api_reference.html reference @endlink and the
+ * @link http://drupal.org/node/204270 Form API guide. @endlink
  */
 
 /**
@@ -62,7 +61,9 @@
  *   Any additional arguments are passed on to the functions called by
  *   drupal_get_form(), including the unique form constructor function.
  *   For example, the node_edit form requires that a node object be passed
- *   in here when it is called.
+ *   in here when it is called. These are available to implementations of
+ *   hook_form_alter() and hook_form_FORM_ID_alter() as the array
+ *   $form['#parameters'].
  * @return
  *   The rendered form.
  */
@@ -100,7 +101,7 @@ function drupal_get_form($form_id) {
       array_unshift($args_temp, $form_id);
 
       $form = call_user_func_array('drupal_retrieve_form', $args_temp);
-      $form_build_id = 'form-'. md5(uniqid(mt_rand(), TRUE));
+      $form_build_id = 'form-'. drupal_random_key();
       $form['#build_id'] = $form_build_id;
       drupal_prepare_form($form_id, $form, $form_state);
       // Store a copy of the unprocessed form for caching and indicate that it
@@ -195,7 +196,7 @@ function drupal_rebuild_form($form_id, &$form_state, $args, $form_build_id = NUL
 
   if (!isset($form_build_id)) {
     // We need a new build_id for the new version of the form.
-    $form_build_id = 'form-'. md5(uniqid(mt_rand(), TRUE));
+    $form_build_id = 'form-'. drupal_random_key();
   }
   $form['#build_id'] = $form_build_id;
   drupal_prepare_form($form_id, $form, $form_state);
@@ -225,10 +226,25 @@ function form_set_cache($form_build_id, $form, $form_state) {
   if ($user->uid) {
     $form['#cache_token'] = drupal_get_token();
   }
+  elseif (variable_get('cache', CACHE_DISABLED) != CACHE_DISABLED && $_SERVER['REQUEST_METHOD'] == 'GET' && page_get_cache(TRUE)) {
+    $form['#immutable'] = TRUE;
+  }
+  $form_build_id_old = $form_build_id;
+  $form_build_id = form_build_id_map($form_build_id_old);
   cache_set('form_'. $form_build_id, $form, 'cache_form', time() + $expire);
   if (!empty($form_state['storage'])) {
     cache_set('storage_'. $form_build_id, $form_state['storage'], 'cache_form', time() + $expire);
   }
+
+  // If form_set_cache is called in the context of an ahah handler inform the
+  // client about the changed form build_id via the X-Drupal-Build-Id HTTP
+  // header.
+  if (!empty($_SERVER['HTTP_X_DRUPAL_ACCEPT_BUILD_ID']) &&
+    !empty($_POST['form_build_id']) &&
+    $_POST['form_build_id'] == $form_build_id_old &&
+    $form_build_id_old != $form_build_id) {
+    drupal_set_header('X-Drupal-Build-Id: ' . $form_build_id);
+  }
 }
 
 /**
@@ -242,15 +258,44 @@ function form_get_cache($form_build_id, &$form_state) {
       if ($cached = cache_get('storage_'. $form_build_id, 'cache_form')) {
         $form_state['storage'] = $cached->data;
       }
+
+      // Generate a new #build_id if the cached form was rendered on a cacheable
+      // page.
+      if (!empty($form['#immutable'])) {
+        $form['#build_id'] = 'form-' . drupal_random_key();
+        $form['form_build_id']['#value'] = $form['#build_id'];
+        $form['form_build_id']['#id'] = $form['#build_id'];
+        unset($form['#immutable']);
+
+        form_build_id_map($form_build_id, $form['#build_id']);
+      }
       return $form;
     }
   }
 }
 
 /**
- * Retrieves a form using a form_id, populates it with $form_state['values'],
- * processes it, and returns any validation errors encountered. This
- * function is the programmatic counterpart to drupal_get_form().
+ * Maintain a map of immutable form_build_ids to cloned form.
+ */
+function form_build_id_map($form_build_id, $new_build_id = NULL) {
+  static $build_id_map = array();
+
+  if (isset($new_build_id) && isset($form_build_id)) {
+    $build_id_map[$form_build_id] = $new_build_id;
+  }
+
+  return isset($build_id_map[$form_build_id]) ? $build_id_map[$form_build_id] : $form_build_id;
+}
+
+/**
+ * Retrieves, populates, and processes a form.
+ *
+ * This function allows you to supply values for form elements and submit a
+ * form for processing. Compare to drupal_get_form(), which also builds and
+ * processes a form, but does not allow you to supply values.
+ *
+ * There is no return value, but you can check to see if there are errors by
+ * calling form_get_errors().
  *
  * @param $form_id
  *   The unique string identifying the desired form. If a function
@@ -270,7 +315,6 @@ function form_get_cache($form_build_id, &$form_state) {
  *   For example, the node_edit form requires that a node object be passed
  *   in here when it is called.
  * For example:
- *
  * @code
  * // register a new user
  * $form_state = array();
@@ -297,9 +341,14 @@ function drupal_execute($form_id, &$form_state) {
 
   // Make sure $form_state is passed around by reference.
   $args[1] = &$form_state;
-  
+
   $form = call_user_func_array('drupal_retrieve_form', $args);
   $form['#post'] = $form_state['values'];
+
+  // Reset form validation.
+  $form_state['must_validate'] = TRUE;
+  form_set_error(NULL, '', TRUE);
+
   drupal_prepare_form($form_id, $form, $form_state);
   drupal_process_form($form_id, $form, $form_state);
 }
@@ -570,7 +619,7 @@ function drupal_prepare_form($form_id, &$form, &$form_state) {
 function drupal_validate_form($form_id, $form, &$form_state) {
   static $validated_forms = array();
 
-  if (isset($validated_forms[$form_id])) {
+  if (isset($validated_forms[$form_id]) && empty($form_state['must_validate'])) {
     return;
   }
 
@@ -580,6 +629,12 @@ function drupal_validate_form($form_id, $form, &$form_state) {
     if (!drupal_valid_token($form_state['values']['form_token'], $form['#token'])) {
       // Setting this error will cause the form to fail validation.
       form_set_error('form_token', t('Validation error, please try again. If this error persists, please contact the site administrator.'));
+
+      // Stop here and don't run any further validation handlers, because they
+      // could invoke non-safe operations which opens the door for CSRF
+      // vulnerabilities.
+      $validated_forms[$form_id] = TRUE;
+      return;
     }
   }
 
@@ -763,8 +818,8 @@ function form_execute_handlers($type, &$form, &$form_state) {
 
   foreach ($handlers as $function) {
     if (function_exists($function))  {
-      // Check to see if a previous _submit handler has set a batch, but 
-      // make sure we do not react to a batch that is already being processed 
+      // Check to see if a previous _submit handler has set a batch, but
+      // make sure we do not react to a batch that is already being processed
       // (for instance if a batch operation performs a drupal_execute()).
       if ($type == 'submit' && ($batch =& batch_get()) && !isset($batch['current_set'])) {
         // Some previous _submit handler has set a batch. We store the call
@@ -1715,9 +1770,9 @@ function expand_date($element) {
 /**
  * Validates the date type to stop dates like February 30, 2006.
  */
-function date_validate($form) {
-  if (!checkdate($form['#value']['month'], $form['#value']['day'], $form['#value']['year'])) {
-    form_error($form, t('The specified date is invalid.'));
+function date_validate($element) {
+  if (!checkdate($element['#value']['month'], $element['#value']['day'], $element['#value']['year'])) {
+    form_error($element, t('The specified date is invalid.'));
   }
 }
 
@@ -1782,6 +1837,8 @@ function expand_radios($element) {
  *   drupal_add_js.
  */
 function form_expand_ahah($element) {
+  global $user;
+
   static $js_added = array();
   // Add a reasonable default event handler if none specified.
   if (isset($element['#ahah']['path']) && !isset($element['#ahah']['event'])) {
@@ -1828,11 +1885,16 @@ function form_expand_ahah($element) {
       'button'   => isset($element['#executes_submit_callback']) ? array($element['#name'] => $element['#value']) : FALSE,
     );
 
+    // If page caching is active, indicate that this form is immutable.
+    if (variable_get('cache', CACHE_DISABLED) != CACHE_DISABLED && !$user->uid && $_SERVER['REQUEST_METHOD'] == 'GET' && page_get_cache(TRUE)) {
+      $ahah_binding['immutable'] = TRUE;
+    }
+
     // Convert a simple #ahah[progress] type string into an array.
     if (is_string($ahah_binding['progress'])) {
       $ahah_binding['progress'] = array('type' => $ahah_binding['progress']);
     }
-    // Change progress path to a full url.
+    // Change progress path to a full URL.
     if (isset($ahah_binding['progress']['path'])) {
       $ahah_binding['progress']['url'] = url($ahah_binding['progress']['path']);
     }
@@ -2319,8 +2381,9 @@ function form_clean_id($id = NULL, $flush = FALSE) {
  *   'file' => 'path_to_file_containing_myfunctions',
  * );
  * batch_set($batch);
- * // only needed if not inside a form _submit handler :
- * batch_process();
+ * // Only needed if not inside a form _submit handler.
+ * // Setting redirect in batch_process.
+ * batch_process('node/1');
  * @endcode
  *
  * Note: if the batch 'title', 'init_message', 'progress_message', or
@@ -2414,8 +2477,8 @@ function form_clean_id($id = NULL, $flush = FALSE) {
  *   - 'init_message': Message displayed while the processing is initialized.
  *     Defaults to t('Initializing.').
  *   - 'progress_message': Message displayed while processing the batch.
- *     Available placeholders are @current, @remaining, @total, @percentage,
- *     @estimate and @elapsed. Defaults to t('Completed @current of @total.').
+ *     Available placeholders are @current, @remaining, @total, and
+ *     @percentage. Defaults to t('Completed @current of @total.').
  *   - 'error_message': Message displayed if an error occurred while processing
  *     the batch. Defaults to t('An error has occurred.').
  *   - 'finished': Name of a function to be executed after the batch has
@@ -2431,7 +2494,7 @@ function form_clean_id($id = NULL, $flush = FALSE) {
  * clean code independence, ensuring that several batches submitted by
  * different parts of the code (core / contrib modules) can be processed
  * correctly while not interfering or having to cope with each other. Each
- * batch set gets to specify his own UI messages, operates on its own set
+ * batch set gets to specify its own UI messages, operates on its own set
  * of operations and results, and triggers its own 'finished' callback.
  * Batch sets are processed sequentially, with the progress bar starting
  * fresh for every new set.
diff --git a/includes/image.gd.inc b/includes/image.gd.inc
index de887e3..a62dbda 100644
--- a/includes/image.gd.inc
+++ b/includes/image.gd.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/includes/image.inc b/includes/image.inc
index 03f5278..1580d31 100644
--- a/includes/image.inc
+++ b/includes/image.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -114,7 +113,9 @@ function image_toolkit_invoke($method, $params = array()) {
  *    'file_size' - File size in bytes.
  */
 function image_get_info($file) {
-  if (!is_file($file)) {
+  // Proceed no further if this file doesn't exist. Some web servers (IIS) may
+  // not pass is_file() for newly uploaded files, so we need two checks here.
+  if (!is_file($file) && !is_uploaded_file($file)) {
     return FALSE;
   }
 
diff --git a/includes/install.inc b/includes/install.inc
index 53d225d..2ee29ba 100644
--- a/includes/install.inc
+++ b/includes/install.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 define('SCHEMA_UNINSTALLED', -1);
 define('SCHEMA_INSTALLED', 0);
diff --git a/includes/install.mysql.inc b/includes/install.mysql.inc
index dc26852..73aa365 100644
--- a/includes/install.mysql.inc
+++ b/includes/install.mysql.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 // MySQL specific install functions
 
@@ -27,7 +26,7 @@ function drupal_test_mysql($url, &$success) {
 
   $url = parse_url($url);
 
-  // Decode url-encoded information in the db connection string.
+  // Decode urlencoded information in the db connection string.
   $url['user'] = urldecode($url['user']);
   $url['pass'] = isset($url['pass']) ? urldecode($url['pass']) : '';
   $url['host'] = urldecode($url['host']);
diff --git a/includes/install.mysqli.inc b/includes/install.mysqli.inc
index 6de5fd26..0080804 100644
--- a/includes/install.mysqli.inc
+++ b/includes/install.mysqli.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 // MySQLi specific install functions
 
@@ -27,7 +26,7 @@ function drupal_test_mysqli($url, &$success) {
 
   $url = parse_url($url);
 
-  // Decode url-encoded information in the db connection string.
+  // Decode urlencoded information in the db connection string.
   $url['user'] = urldecode($url['user']);
   $url['pass'] = isset($url['pass']) ? urldecode($url['pass']) : '';
   $url['host'] = urldecode($url['host']);
diff --git a/includes/install.pgsql.inc b/includes/install.pgsql.inc
index f03159e..5c2c21d 100644
--- a/includes/install.pgsql.inc
+++ b/includes/install.pgsql.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 // PostgreSQL specific install functions
 
@@ -28,7 +27,7 @@ function drupal_test_pgsql($url, &$success) {
   $url = parse_url($url);
   $conn_string = '';
 
-  // Decode url-encoded information in the db connection string
+  // Decode urlencoded information in the db connection string
   if (isset($url['user'])) {
     $conn_string .= ' user='. urldecode($url['user']);
   }
diff --git a/includes/language.inc b/includes/language.inc
index 0091902..0409766 100644
--- a/includes/language.inc
+++ b/includes/language.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/includes/locale.inc b/includes/locale.inc
index fdf60b2..44166a1 100644
--- a/includes/locale.inc
+++ b/includes/locale.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -1145,7 +1144,7 @@ function _locale_import_read_po($op, $file, $mode = NULL, $lang = NULL, $group =
       $context = "MSGID_PLURAL";
     }
     elseif (!strncmp("msgid", $line, 5)) {
-      if ($context == "MSGSTR") {   // End current entry, start a new one
+      if (($context == "MSGSTR") || ($context == "MSGSTR_ARR")) { // End current entry, start a new one
         _locale_import_one_string($op, $current, $mode, $lang, $file, $group);
         $current = array();
       }
@@ -1290,18 +1289,15 @@ function _locale_import_one_string($op, $value = NULL, $mode = NULL, $lang = NUL
         $languages = language_list();
         if (($mode != LOCALE_IMPORT_KEEP) || empty($languages[$lang]->plurals)) {
           // Since we only need to parse the header if we ought to update the
-          // plural formula, only run this if we don't need to keep existing 
+          // plural formula, only run this if we don't need to keep existing
           // data untouched or if we don't have an existing plural formula.
           $header = _locale_import_parse_header($value['msgstr']);
 
-          // Get the plural formula and update in database.
+          // Get and store the plural formula if available.
           if (isset($header["Plural-Forms"]) && $p = _locale_import_parse_plural_forms($header["Plural-Forms"], $file->filename)) {
             list($nplurals, $plural) = $p;
             db_query("UPDATE {languages} SET plurals = %d, formula = '%s' WHERE language = '%s'", $nplurals, $plural, $lang);
           }
-          else {
-            db_query("UPDATE {languages} SET plurals = %d, formula = '%s' WHERE language = '%s'", 0, '', $lang);
-          }
         }
         $headerdone = TRUE;
       }
@@ -1672,7 +1668,7 @@ function _locale_import_shorten_comments($comment) {
       break;
     }
   }
-  return substr($comm, 0, -2);
+  return trim(substr($comm, 0, -2));
 }
 
 /**
@@ -2159,35 +2155,12 @@ function _locale_rebuild_js($langcode = NULL) {
   }
 
   // Construct the array for JavaScript translations.
-  // We sort on plural so that we have all plural forms before singular forms.
-  $result = db_query("SELECT s.lid, s.source, t.plid, t.plural, t.translation FROM {locales_source} s LEFT JOIN {locales_target} t ON s.lid = t.lid AND t.language = '%s' WHERE s.location LIKE '%%.js%%' AND s.textgroup = 'default' ORDER BY t.plural DESC", $language->language);
+  // Only add strings with a translation to the translations array.
+  $result = db_query("SELECT s.lid, s.source, t.translation FROM {locales_source} s INNER JOIN {locales_target} t ON s.lid = t.lid AND t.language = '%s' WHERE s.location LIKE '%%.js%%' AND s.textgroup = 'default'", $language->language);
 
-  $translations = $plurals = array();
+  $translations = array();
   while ($data = db_fetch_object($result)) {
-    // Only add this to the translations array when there is actually a translation.
-    if (!empty($data->translation)) {
-      if ($data->plural) {
-        // When the translation is a plural form, first add it to another array and
-        // wait for the singular (parent) translation.
-        if (!isset($plurals[$data->plid])) {
-          $plurals[$data->plid] = array($data->plural => $data->translation);
-        }
-        else {
-          $plurals[$data->plid] += array($data->plural => $data->translation);
-        }
-      }
-      elseif (isset($plurals[$data->lid])) {
-        // There are plural translations for this translation, so get them from
-        // the plurals array and add them to the final translations array.
-        $translations[$data->source] = array($data->plural => $data->translation) + $plurals[$data->lid];
-        unset($plurals[$data->lid]);
-      }
-      else {
-        // There are no plural forms for this translation, so just add it to
-        // the translations array.
-        $translations[$data->source] = $data->translation;
-      }
-    }
+    $translations[$data->source] = $data->translation;
   }
 
   // Construct the JavaScript file, if there are translations.
@@ -2622,20 +2595,21 @@ function _locale_batch_build($files, $finished = NULL, $components = array()) {
     $operations = array();
     foreach ($files as $file) {
       // We call _locale_batch_import for every batch operation.
-      $operations[] = array('_locale_batch_import', array($file->filename));    }
-      $batch = array(
-        'operations'    => $operations,
-        'title'         => $t('Importing interface translations'),
-        'init_message'  => $t('Starting import'),
-        'error_message' => $t('Error importing interface translations'),
-        'file'          => './includes/locale.inc',
-        // This is not a batch API construct, but data passed along to the
-        // installer, so we know what did we import already.
-        '#components'   => $components,
-      );
-      if (isset($finished)) {
-        $batch['finished'] = $finished;
-      }
+      $operations[] = array('_locale_batch_import', array($file->filename));
+    }
+    $batch = array(
+      'operations'    => $operations,
+      'title'         => $t('Importing interface translations'),
+      'init_message'  => $t('Starting import'),
+      'error_message' => $t('Error importing interface translations'),
+      'file'          => './includes/locale.inc',
+      // This is not a batch API construct, but data passed along to the
+      // installer, so we know what did we import already.
+      '#components'   => $components,
+    );
+    if (isset($finished)) {
+      $batch['finished'] = $finished;
+    }
     return $batch;
   }
   return FALSE;
diff --git a/includes/lock-install.inc b/includes/lock-install.inc
new file mode 100644
index 0000000..34bfb28
--- /dev/null
+++ b/includes/lock-install.inc
@@ -0,0 +1,62 @@
+<?php
+
+/**
+ * @file
+ * A stub lock implementation to be used during the installation
+ * process when database access is not yet available. Because Drupal's
+ * install system should never be running in more than on concurrant
+ * request, we can bypass any need for locking.
+ */
+
+/**
+ * Initialize the locking system.
+ */
+function lock_init() {
+}
+
+/**
+ * Acquire (or renew) a lock, but do not block if it fails.
+ *
+ * @return
+ *   TRUE if the lock was acquired, FALSE if it failed.
+ */
+function lock_acquire($name, $timeout = 30.0) {
+  return TRUE;
+}
+
+/**
+ * Check if lock acquired by a different process may be available.
+ *
+ * @return
+ *   TRUE if there is no lock or it was removed, FALSE otherwise.
+ */
+function lock_may_be_available($name) {
+  return TRUE;
+}
+
+/**
+ * Wait for a lock to be available.
+ *
+ * @return
+ *   TRUE if the lock holds, FALSE if it is available.
+ */
+function lock_wait($name, $delay = 30) {
+  return FALSE;
+}
+
+/**
+ * Release a lock previously acquired by lock_acquire().
+ *
+ * This will release the named lock if it is still held by the current request.
+ *
+ * @param $name
+ *   The name of the lock.
+ */
+function lock_release($name) {
+}
+
+/**
+ * Release all previously acquired locks.
+ */
+function lock_release_all($lock_id = NULL) {
+}
diff --git a/includes/lock.inc b/includes/lock.inc
index 7d486e3..7259ad9 100644
--- a/includes/lock.inc
+++ b/includes/lock.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -103,7 +102,8 @@ function lock_acquire($name, $timeout = 30.0) {
   $expire = (float)$usec + (float)$sec + $timeout;
   if (isset($locks[$name])) {
     // Try to extend the expiration of a lock we already acquired.
-    if (!db_result(db_query("UPDATE {semaphore} SET expire = %f WHERE name = '%s' AND value = '%s'", $expire, $name, _lock_id()))) {
+    db_query("UPDATE {semaphore} SET expire = %f WHERE name = '%s' AND value = '%s'", $expire, $name, _lock_id());
+    if (!db_affected_rows()) {
       // The lock was broken.
       unset($locks[$name]);
     }
diff --git a/includes/mail.inc b/includes/mail.inc
index 8f0e244..d0515ac 100644
--- a/includes/mail.inc
+++ b/includes/mail.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Compose and optionally send an e-mail message.
@@ -60,11 +59,13 @@
  *   will be {$module}_{$key}.
  * @param $to
  *   The e-mail address or addresses where the message will be sent to. The
- *   formatting of this string must comply with RFC 2822. Some examples are:
- *    user@example.com
- *    user@example.com, anotheruser@example.com
- *    User <user@example.com>
- *    User <user@example.com>, Another User <anotheruser@example.com>
+ *   formatting of this string must comply with
+ *   @link http://tools.ietf.org/html/rfc5322 RFC 5322 @endlink.
+ *   Some examples are:
+ *   - user@example.com
+ *   - user@example.com, anotheruser@example.com
+ *   - User <user@example.com>
+ *   - User <user@example.com>, Another User <anotheruser@example.com>
  * @param $language
  *   Language object to use to compose the e-mail.
  * @param $params
@@ -73,6 +74,7 @@
  *   Sets From to this value, if given.
  * @param $send
  *   Send the message directly, without calling drupal_mail_send() manually.
+ *
  * @return
  *   The $message array structure containing all details of the
  *   message. If already sent ($send = TRUE), then the 'result' element
@@ -146,26 +148,24 @@ function drupal_mail($module, $key, $to, $language, $params = array(), $from = N
  * how $message is composed.
  *
  * @param $message
- *  Message array with at least the following elements:
- *   - id
- *      A unique identifier of the e-mail type. Examples: 'contact_user_copy',
- *      'user_password_reset'.
- *   - to
- *      The mail address or addresses where the message will be sent to. The
- *      formatting of this string must comply with RFC 2822. Some examples are:
- *       user@example.com
- *       user@example.com, anotheruser@example.com
- *       User <user@example.com>
- *       User <user@example.com>, Another User <anotheruser@example.com>
- *   - subject
- *      Subject of the e-mail to be sent. This must not contain any newline
- *      characters, or the mail may not be sent properly.
- *   - body
- *      Message to be sent. Accepts both CRLF and LF line-endings.
- *      E-mail bodies must be wrapped. You can use drupal_wrap_mail() for
- *      smart plain text wrapping.
- *   - headers
- *      Associative array containing all mail headers.
+ *   Message array with at least the following elements:
+ *   - id: A unique identifier of the e-mail type. Examples:
+ *     'contact_user_copy', 'user_password_reset'.
+ *   - to: The mail address or addresses where the message will be sent to. The
+ *     formatting of this string must comply with
+ *     @link http://tools.ietf.org/html/rfc5322 RFC 5322 @endlink.
+ *     Some examples are:
+ *     - user@example.com
+ *     - user@example.com, anotheruser@example.com
+ *     - User <user@example.com>
+ *     - User <user@example.com>, Another User <anotheruser@example.com>
+ *   - subject: Subject of the e-mail to be sent. This must not contain any
+ *     newline characters, or the mail may not be sent properly.
+ *   - body: Message to be sent. Accepts both CRLF and LF line-endings.
+ *     E-mail bodies must be wrapped. You can use drupal_wrap_mail() for
+ *     smart plain text wrapping.
+ *   - headers: Associative array containing all mail headers.
+ *
  * @return
  *   Returns TRUE if the mail was successfully accepted for delivery,
  *   FALSE otherwise.
@@ -255,6 +255,7 @@ function drupal_wrap_mail($text, $indent = '') {
  * @param $allowed_tags (optional)
  *   If supplied, a list of tags that will be transformed. If omitted, all
  *   all supported tags are transformed.
+ *
  * @return
  *   The transformed string.
  */
diff --git a/includes/menu.inc b/includes/menu.inc
index 62efede..9a686e3 100644
--- a/includes/menu.inc
+++ b/includes/menu.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -49,8 +48,9 @@
  * Access to the callback functions is also protected by the menu system.
  * The "access callback" with an optional "access arguments" of each menu
  * item is called before the page callback proceeds. If this returns TRUE,
- * then access is granted; if FALSE, then access is denied. Menu items may
- * omit this attribute to use the value provided by an ancestor item.
+ * then access is granted; if FALSE, then access is denied. Default local task
+ * menu items (see next paragraph) may omit this attribute to use the value
+ * provided by the parent item.
  *
  * In the default Drupal interface, you will notice many links rendered as
  * tabs. These are known in the menu system as "local tasks", and they are
@@ -72,7 +72,7 @@
  */
 
 /**
- * @name Menu flags
+ * @defgroup menu_flags Menu flags
  * @{
  * Flags for use in the "type" attribute of menu items.
  */
@@ -90,8 +90,10 @@ define('MENU_IS_LOCAL_TASK', 0x0080);
  */
 
 /**
- * @name Menu item types
+ * @defgroup menu_item_types Menu item types
  * @{
+ * Definitions for various menu item types.
+ *
  * Menu item definitions provide one of these constants, which are shortcuts for
  * combinations of the above flags.
  */
@@ -135,7 +137,7 @@ define('MENU_DEFAULT_LOCAL_TASK', MENU_IS_LOCAL_TASK | MENU_LINKS_TO_PARENT);
  */
 
 /**
- * @name Menu status codes
+ * @defgroup menu_status_codes Menu status codes
  * @{
  * Status codes for menu callbacks.
  */
@@ -150,9 +152,9 @@ define('MENU_SITE_OFFLINE', 4);
  */
 
 /**
- * @Name Menu tree parameters
+ * @defgroup menu_tree_parameters Menu tree parameters
  * @{
- * Menu tree
+ * Parameters for a menu tree.
  */
 
  /**
@@ -550,7 +552,7 @@ function _menu_item_localize(&$item, $map, $link_translate = FALSE) {
  *   path from the menu table, for example tabs.
  * @return
  *   Returns the map with objects loaded as defined in the
- *   $item['load_functions. $item['access'] becomes TRUE if the item is
+ *   $item['load_functions']. $item['access'] becomes TRUE if the item is
  *   accessible, FALSE otherwise. $item['href'] is set according to the map.
  *   If an error occurs during calling the load_functions (like trying to load
  *   a non existing node) then this function return FALSE.
@@ -1509,14 +1511,15 @@ function menu_set_active_item($path) {
  * @param $new_trail
  *   Menu trail to set, or NULL to use previously-set or calculated trail. If
  *   supplying a trail, use the same format as the return value (see below).
+ *
  * @return
  *   Path to menu root of the current page, as an array of menu link items,
  *   starting with the site's home page. Each link item is an associative array
  *   with the following components:
- *   - 'title': Title of the item.
- *   - 'href': Drupal path of the item.
- *   - 'localized_options': Options for passing into the l() function.
- *   - 'type': A menu type constant, such as MENU_DEFAULT_LOCAL_TASK, or 0 to
+ *   - title: Title of the item.
+ *   - href: Drupal path of the item.
+ *   - localized_options: Options for passing into the l() function.
+ *   - type: A menu type constant, such as MENU_DEFAULT_LOCAL_TASK, or 0 to
  *     indicate it's not really in the menu (used for the home page item).
  *   If $new_trail is supplied, the value is saved in a static variable and
  *   returned. If $new_trail is not supplied, and there is a saved value from
@@ -1886,13 +1889,14 @@ function _menu_delete_item($item, $force = FALSE) {
  * @param $item
  *   An array representing a menu link item. The only mandatory keys are
  *   link_path and link_title. Possible keys are:
- *   - menu_name   default is navigation
- *   - weight      default is 0
- *   - expanded    whether the item is expanded.
- *   - options     An array of options, @see l for more.
- *   - mlid        Set to an existing value, or 0 or NULL to insert a new link.
- *   - plid        The mlid of the parent.
- *   - router_path The path of the relevant router item.
+ *   - menu_name: Default is navigation.
+ *   - weight: Default is 0.
+ *   - expanded: Whether the item is expanded.
+ *   - options: An array of options, see l() for more.
+ *   - mlid: Set to an existing value, or 0 or NULL to insert a new link.
+ *   - plid: The mlid of the parent.
+ *   - router_path: The path of the relevant router item.
+ *
  * @return
  *   The mlid of the saved menu link, or FALSE if the menu link could not be 
  *   saved.
@@ -2430,6 +2434,7 @@ function _menu_router_build($callbacks) {
       'file' => '',
       'file path' => '',
       'include file' => '',
+      'module' => '',
     );
 
     // Calculate out the file to be included for each callback, if any.
diff --git a/includes/module.inc b/includes/module.inc
index df914d0..7958367 100644
--- a/includes/module.inc
+++ b/includes/module.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -94,6 +93,14 @@ function module_list($refresh = FALSE, $bootstrap = TRUE, $sort = FALSE, $fixed_
  *   The array of filesystem objects used to rebuild the cache.
  */
 function module_rebuild_cache() {
+  $write_database = TRUE;
+  // If lock not acquired, return $files data without writing to database.
+  if (!lock_acquire('module_rebuild_cache')) {
+    $write_database = FALSE;
+    // Wait for the parallel thread to be done so we are more likely
+    // to get updated and consistent data.
+    lock_wait('module_rebuild_cache');
+  }
   // Get current list of modules
   $files = drupal_system_listing('\.module$', 'modules', 'name', 0);
 
@@ -120,32 +127,39 @@ function module_rebuild_cache() {
       unset($files[$filename]);
       continue;
     }
-    // Merge in defaults and save.
-    $files[$filename]->info = $file->info + $defaults;
 
     // Invoke hook_system_info_alter() to give installed modules a chance to
     // modify the data in the .info files if necessary.
     drupal_alter('system_info', $files[$filename]->info, $files[$filename]);
 
-    // Log the critical hooks implemented by this module.
-    $bootstrap = 0;
-    foreach (bootstrap_hooks() as $hook) {
-      if (module_hook($file->name, $hook)) {
-        $bootstrap = 1;
-        break;
+    // Merge in defaults and save.
+    $files[$filename]->info = $file->info + $defaults;
+  }
+
+  // If lock not acquired, return $files data without writing to database.
+  if ($write_database) {
+    foreach ($files as $filename => $file) {
+      // Log the critical hooks implemented by this module.
+      $bootstrap = 0;
+      foreach (bootstrap_hooks() as $hook) {
+        if (module_hook($file->name, $hook)) {
+          $bootstrap = 1;
+          break;
+        }
       }
-    }
 
-    // Update the contents of the system table:
-    if (isset($file->status) || (isset($file->old_filename) && $file->old_filename != $file->filename)) {
-      db_query("UPDATE {system} SET info = '%s', name = '%s', filename = '%s', bootstrap = %d WHERE filename = '%s'", serialize($files[$filename]->info), $file->name, $file->filename, $bootstrap, $file->old_filename);
-    }
-    else {
-      // This is a new module.
-      $files[$filename]->status = 0;
-      $files[$filename]->throttle = 0;
-      db_query("INSERT INTO {system} (name, info, type, filename, status, throttle, bootstrap) VALUES ('%s', '%s', '%s', '%s', %d, %d, %d)", $file->name, serialize($files[$filename]->info), 'module', $file->filename, 0, 0, $bootstrap);
+      // Update the contents of the system table:
+      if (isset($file->status)) {
+        db_query("UPDATE {system} SET info = '%s', name = '%s', filename = '%s', bootstrap = %d WHERE filename = '%s'", serialize($files[$filename]->info), $file->name, $file->filename, $bootstrap, $file->old_filename);
+      }
+      else {
+        // This is a new module.
+        $files[$filename]->status = 0;
+        $files[$filename]->throttle = 0;
+        db_query("INSERT INTO {system} (name, info, type, filename, status, throttle, bootstrap) VALUES ('%s', '%s', '%s', '%s', %d, %d, %d)", $file->name, serialize($files[$filename]->info), 'module', $file->filename, 0, 0, $bootstrap);
+      }
     }
+    lock_release('module_rebuild_cache');
   }
   $files = _module_build_dependencies($files);
   return $files;
diff --git a/includes/pager.inc b/includes/pager.inc
index 340fd8f..c0b6896 100644
--- a/includes/pager.inc
+++ b/includes/pager.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -91,7 +90,7 @@ function pager_get_querystring() {
 }
 
 /**
- * Format a query pager.
+ * Returns HTML for a query pager.
  *
  * Menu callbacks that display paged query results should call theme('pager') to
  * retrieve a pager control so that users can view other results.
@@ -216,14 +215,15 @@ function theme_pager($tags = array(), $limit = 10, $element = 0, $parameters = a
 
 
 /**
- * @name Pager pieces
+ * @defgroup pagerpieces Pager pieces
  * @{
- * Use these pieces to construct your own custom pagers in your theme. Note that
- * you should NOT modify this file to customize your pager.
+ * Theme functions for customizing pager elements.
+ *
+ * Note that you should NOT modify this file to customize your pager.
  */
 
 /**
- * Format a "first page" link.
+ * Returns HTML for a "first page" link.
  *
  * @param $text
  *   The name (or image) of the link.
@@ -251,7 +251,7 @@ function theme_pager_first($text, $limit, $element = 0, $parameters = array()) {
 }
 
 /**
- * Format a "previous page" link.
+ * Returns HTML for a "previous page" link.
  *
  * @param $text
  *   The name (or image) of the link.
@@ -290,7 +290,7 @@ function theme_pager_previous($text, $limit, $element = 0, $interval = 1, $param
 }
 
 /**
- * Format a "next page" link.
+ * Returns HTML for a "next page" link.
  *
  * @param $text
  *   The name (or image) of the link.
@@ -328,7 +328,7 @@ function theme_pager_next($text, $limit, $element = 0, $interval = 1, $parameter
 }
 
 /**
- * Format a "last page" link.
+ * Returns HTML for a "last page" link.
  *
  * @param $text
  *   The name (or image) of the link.
@@ -357,8 +357,13 @@ function theme_pager_last($text, $limit, $element = 0, $parameters = array()) {
 
 
 /**
- * Format a link to a specific query result page.
+ * Returns HTML for a link to a specific query result page.
  *
+ * @param $text
+ *   The link text. Also used to figure out the title attribute of the link,
+ *   if it is not provided in $attributes['title']; in this case, $text must
+ *   be one of the standard pager link text strings that would be generated by
+ *   the pager theme functions, such as a number or t('« first').
  * @param $page_new
  *   The first result to display on the linked page.
  * @param $element
@@ -366,7 +371,7 @@ function theme_pager_last($text, $limit, $element = 0, $parameters = array()) {
  * @param $parameters
  *   An associative array of query string parameters to append to the pager link.
  * @param $attributes
- *   An associative array of HTML attributes to apply to a pager anchor tag.
+ *   An associative array of HTML attributes to apply to the pager link.
  * @return
  *   An HTML string that generates the link.
  *
diff --git a/includes/path.inc b/includes/path.inc
index d31e58f..8ed5754 100644
--- a/includes/path.inc
+++ b/includes/path.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -74,7 +73,7 @@ function drupal_lookup_path($action, $path = '', $path_language = '') {
     // isn't a path that has this alias
     elseif ($action == 'source' && !isset($no_src[$path_language][$path])) {
       // Look for the value $path within the cached $map
-      $src = '';
+      $src = FALSE;
       if (!isset($map[$path_language]) || !($src = array_search($path, $map[$path_language]))) {
         // Get the most fitting result falling back with alias without language
         if ($src = db_result(db_query("SELECT src FROM {url_alias} WHERE dst = '%s' AND language IN('%s', '') ORDER BY language DESC, pid DESC", $path, $path_language))) {
@@ -152,10 +151,13 @@ function drupal_get_normal_path($path, $path_language = '') {
  * @param $index
  *   The index of the component, where each component is separated by a '/'
  *   (forward-slash), and where the first component has an index of 0 (zero).
+ * @param $path
+ *   A path to break into components. Defaults to the path of the current page.
  *
  * @return
  *   The component specified by $index, or NULL if the specified component was
- *   not found.
+ *   not found. If called without arguments, it returns an array containing all
+ *   the components of the current path.
  */
 function arg($index = NULL, $path = NULL) {
   static $arguments;
diff --git a/includes/session.inc b/includes/session.inc
index ebba273..9f671b3 100644
--- a/includes/session.inc
+++ b/includes/session.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -14,6 +13,25 @@ function sess_close() {
   return TRUE;
 }
 
+/**
+ * Reads an entire session from the database (internal use only).
+ *
+ * Also initializes the $user object for the user associated with the session.
+ * This function is registered with session_set_save_handler() to support
+ * database-backed sessions. It is called on every page load when PHP sets
+ * up the $_SESSION superglobal.
+ *
+ * This function is an internal function and must not be called directly.
+ * Doing so may result in logging out the current user, corrupting session data
+ * or other unexpected behavior. Session data must always be accessed via the
+ * $_SESSION superglobal.
+ *
+ * @param $key
+ *   The session ID of the session to retrieve.
+ *
+ * @return
+ *   The user's session, or an empty string if no session exists.
+ */
 function sess_read($key) {
   global $user;
 
@@ -55,6 +73,24 @@ function sess_read($key) {
   return $user->session;
 }
 
+/**
+ * Writes an entire session to the database (internal use only).
+ *
+ * This function is registered with session_set_save_handler() to support
+ * database-backed sessions.
+ *
+ * This function is an internal function and must not be called directly.
+ * Doing so may result in corrupted session data or other unexpected behavior.
+ * Session data must always be accessed via the $_SESSION superglobal.
+ *
+ * @param $key
+ *   The session ID of the session to write to.
+ * @param $value
+ *   Session data to write as a serialized string.
+ *
+ * @return
+ *   Always returns TRUE.
+ */
 function sess_write($key, $value) {
   global $user;
 
diff --git a/includes/tablesort.inc b/includes/tablesort.inc
index 9249be7..3d9fb43 100644
--- a/includes/tablesort.inc
+++ b/includes/tablesort.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/includes/theme.inc b/includes/theme.inc
index 665a0f7..fbb4634 100644
--- a/includes/theme.inc
+++ b/includes/theme.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -12,14 +11,27 @@
  */
 
 /**
- * @name Content markers
+ * @defgroup content_flags Content markers
  * @{
  * Markers used by theme_mark() and node_mark() to designate content.
  * @see theme_mark(), node_mark()
  */
-define('MARK_READ',    0);
-define('MARK_NEW',     1);
+
+/**
+ * Mark content as read.
+ */
+define('MARK_READ', 0);
+
+/**
+ * Mark content as being new.
+ */
+define('MARK_NEW', 1);
+
+/**
+ * Mark content as being updated.
+ */
 define('MARK_UPDATED', 2);
+
 /**
  * @} End of "Content markers".
  */
@@ -511,7 +523,7 @@ function list_themes($refresh = FALSE) {
 }
 
 /**
- * Generate the themed output.
+ * Generates the themed output.
  *
  * All requests for theme hooks must go through this function. It examines
  * the request and routes it to the appropriate theme function. The theme
@@ -527,14 +539,14 @@ function list_themes($refresh = FALSE) {
  * functions may be used to modify the $variables array. They are processed in
  * this order when available:
  *
- * - template_preprocess(&$variables)
+ * - template_preprocess(&$variables, $hook)
  *   This sets a default set of variables for all template implementations.
  *
  * - template_preprocess_HOOK(&$variables)
  *   This is the first preprocessor called specific to the hook; it should be
  *   implemented by the module that registers it.
  *
- * - MODULE_preprocess(&$variables)
+ * - MODULE_preprocess(&$variables, $hook)
  *   This will be called for all templates; it should only be used if there
  *   is a real need. It's purpose is similar to template_preprocess().
  *
@@ -545,7 +557,7 @@ function list_themes($refresh = FALSE) {
  *   preprocess function of foo_preprocess_node() can be created to intercept
  *   and alter the variable.
  *
- * - ENGINE_engine_preprocess(&$variables)
+ * - ENGINE_engine_preprocess(&$variables, $hook)
  *   This function should only be implemented by theme engines and exists
  *   so that it can set necessary variables for all hooks.
  *
@@ -553,7 +565,7 @@ function list_themes($refresh = FALSE) {
  *   This is the same as the previous function, but it is called for a single
  *   theming hook.
  *
- * - ENGINE_preprocess(&$variables)
+ * - ENGINE_preprocess(&$variables, $hook)
  *   This is meant to be used by themes that utilize a theme engine. It is
  *   provided so that the preprocessor is not locked into a specific theme.
  *   This makes it easy to share and transport code but theme authors must be
@@ -569,7 +581,7 @@ function list_themes($refresh = FALSE) {
  *   The same applies from the previous function, but it is called for a
  *   specific hook.
  *
- * - THEME_preprocess(&$variables)
+ * - THEME_preprocess(&$variables, $hook)
  *   These functions are based upon the raw theme; they should primarily be
  *   used by themes that do not use an engine or by sub-themes. It serves the
  *   same purpose as ENGINE_preprocess().
@@ -594,6 +606,7 @@ function list_themes($refresh = FALSE) {
  *   implementations for named objects.
  * @param ...
  *   Additional arguments to pass along to the theme function.
+ * 
  * @return
  *   An HTML string that generates the themed output.
  */
@@ -1178,12 +1191,24 @@ function theme_status_messages($display = NULL) {
 }
 
 /**
- * Return a themed set of links.
+ * Returns HTML for a set of links.
  *
  * @param $links
- *   A keyed array of links to be themed.
+ *   An associative array of links to be themed. The key for each link
+ *   is used as its CSS class. Each link should be itself an array, with the
+ *   following elements:
+ *   - title: The link text.
+ *   - href: The link URL. If omitted, the 'title' is shown as a plain text
+ *     item in the links list.
+ *   - html: (optional) Whether or not 'title' is HTML. If set, the title
+ *     will not be passed through check_plain().
+ *   - attributes: (optional) Attributes for the anchor, or for the <span> tag
+ *     used in its place if no 'href' is supplied.
+ *   If the 'href' element is supplied, the entire link array is passed to l()
+ *   as its $options parameter.
  * @param $attributes
- *   A keyed array of attributes
+ *   An associative array of attributes for the UL containing the list of links.
+ *
  * @return
  *   A string containing an unordered list of links.
  */
@@ -1244,6 +1269,7 @@ function theme_links($links, $attributes = array('class' => 'links')) {
  *
  * @param $path
  *   Either the path of the image file (relative to base_path()) or a full URL.
+ *   If this is a full URL, $getsize must be set to FALSE or nothing will be returned.
  * @param $alt
  *   The alternative text for text-based browsers.
  * @param $title
@@ -1252,6 +1278,8 @@ function theme_links($links, $attributes = array('class' => 'links')) {
  *   Associative array of attributes to be placed in the img tag.
  * @param $getsize
  *   If set to TRUE, the image's dimension are fetched and added as width/height attributes.
+ *   Defaults to TRUE. Must be set to FALSE if $path is a full URL.
+ * 
  * @return
  *   A string containing the image tag.
  */
@@ -1564,7 +1592,7 @@ function theme_more_help_link($url) {
  *
  * @see theme_feed_icon()
  * @param $url
- *   The url of the feed.
+ *   The URL of the feed.
  */
 function theme_xml_icon($url) {
   if ($image = theme('image', 'misc/xml.png', t('XML feed'), t('XML feed'))) {
@@ -1576,7 +1604,7 @@ function theme_xml_icon($url) {
  * Return code that emits an feed icon.
  *
  * @param $url
- *   The url of the feed.
+ *   The URL of the feed.
  * @param $title
  *   A descriptive title of the feed.
   */
@@ -1590,7 +1618,7 @@ function theme_feed_icon($url, $title) {
  * Returns code that emits the 'more' link used on blocks.
  *
  * @param $url
- *   The url of the main page
+ *   The URL of the main page
  * @param $title
  *   A descriptive verb for the link, like 'Read more'
  */
diff --git a/includes/theme.maintenance.inc b/includes/theme.maintenance.inc
index 9bd20cc..9496f38 100644
--- a/includes/theme.maintenance.inc
+++ b/includes/theme.maintenance.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/includes/unicode.entities.inc b/includes/unicode.entities.inc
new file mode 100644
index 0000000..3b1fbb6
--- /dev/null
+++ b/includes/unicode.entities.inc
@@ -0,0 +1,265 @@
+<?php
+
+/**
+ * @file
+ * (X)HTML entities, as defined in HTML 4.01.
+ *
+ * @see http://www.w3.org/TR/html401/sgml/entities.html
+ */
+
+$html_entities = array(
+  '&Aacute;' => 'Á',
+  '&aacute;' => 'á',
+  '&Acirc;' => 'Â',
+  '&acirc;' => 'â',
+  '&acute;' => '´',
+  '&AElig;' => 'Æ',
+  '&aelig;' => 'æ',
+  '&Agrave;' => 'À',
+  '&agrave;' => 'à',
+  '&alefsym;' => 'ℵ',
+  '&Alpha;' => 'Α',
+  '&alpha;' => 'α',
+  '&amp;' => '&',
+  '&and;' => '∧',
+  '&ang;' => '∠',
+  '&Aring;' => 'Å',
+  '&aring;' => 'å',
+  '&asymp;' => '≈',
+  '&Atilde;' => 'Ã',
+  '&atilde;' => 'ã',
+  '&Auml;' => 'Ä',
+  '&auml;' => 'ä',
+  '&bdquo;' => '„',
+  '&Beta;' => 'Β',
+  '&beta;' => 'β',
+  '&brvbar;' => '¦',
+  '&bull;' => '•',
+  '&cap;' => '∩',
+  '&Ccedil;' => 'Ç',
+  '&ccedil;' => 'ç',
+  '&cedil;' => '¸',
+  '&cent;' => '¢',
+  '&Chi;' => 'Χ',
+  '&chi;' => 'χ',
+  '&circ;' => 'ˆ',
+  '&clubs;' => '♣',
+  '&cong;' => '≅',
+  '&copy;' => '©',
+  '&crarr;' => '↵',
+  '&cup;' => '∪',
+  '&curren;' => '¤',
+  '&dagger;' => '†',
+  '&Dagger;' => '‡',
+  '&darr;' => '↓',
+  '&dArr;' => '⇓',
+  '&deg;' => '°',
+  '&Delta;' => 'Δ',
+  '&delta;' => 'δ',
+  '&diams;' => '♦',
+  '&divide;' => '÷',
+  '&Eacute;' => 'É',
+  '&eacute;' => 'é',
+  '&Ecirc;' => 'Ê',
+  '&ecirc;' => 'ê',
+  '&Egrave;' => 'È',
+  '&egrave;' => 'è',
+  '&empty;' => '∅',
+  '&emsp;' => ' ',
+  '&ensp;' => ' ',
+  '&Epsilon;' => 'Ε',
+  '&epsilon;' => 'ε',
+  '&equiv;' => '≡',
+  '&Eta;' => 'Η',
+  '&eta;' => 'η',
+  '&ETH;' => 'Ð',
+  '&eth;' => 'ð',
+  '&Euml;' => 'Ë',
+  '&euml;' => 'ë',
+  '&euro;' => '€',
+  '&exist;' => '∃',
+  '&fnof;' => 'ƒ',
+  '&forall;' => '∀',
+  '&frac12;' => '½',
+  '&frac14;' => '¼',
+  '&frac34;' => '¾',
+  '&frasl;' => '⁄',
+  '&Gamma;' => 'Γ',
+  '&gamma;' => 'γ',
+  '&ge;' => '≥',
+  '&harr;' => '↔',
+  '&hArr;' => '⇔',
+  '&hearts;' => '♥',
+  '&hellip;' => '…',
+  '&Iacute;' => 'Í',
+  '&iacute;' => 'í',
+  '&Icirc;' => 'Î',
+  '&icirc;' => 'î',
+  '&iexcl;' => '¡',
+  '&Igrave;' => 'Ì',
+  '&igrave;' => 'ì',
+  '&image;' => 'ℑ',
+  '&infin;' => '∞',
+  '&int;' => '∫',
+  '&Iota;' => 'Ι',
+  '&iota;' => 'ι',
+  '&iquest;' => '¿',
+  '&isin;' => '∈',
+  '&Iuml;' => 'Ï',
+  '&iuml;' => 'ï',
+  '&Kappa;' => 'Κ',
+  '&kappa;' => 'κ',
+  '&Lambda;' => 'Λ',
+  '&lambda;' => 'λ',
+  '&lang;' => '〈',
+  '&laquo;' => '«',
+  '&larr;' => '←',
+  '&lArr;' => '⇐',
+  '&lceil;' => '⌈',
+  '&ldquo;' => '“',
+  '&le;' => '≤',
+  '&lfloor;' => '⌊',
+  '&lowast;' => '∗',
+  '&loz;' => '◊',
+  '&lrm;' => '‎',
+  '&lsaquo;' => '‹',
+  '&lsquo;' => '‘',
+  '&macr;' => '¯',
+  '&mdash;' => '—',
+  '&micro;' => 'µ',
+  '&middot;' => '·',
+  '&minus;' => '−',
+  '&Mu;' => 'Μ',
+  '&mu;' => 'μ',
+  '&nabla;' => '∇',
+  '&nbsp;' => ' ',
+  '&ndash;' => '–',
+  '&ne;' => '≠',
+  '&ni;' => '∋',
+  '&not;' => '¬',
+  '&notin;' => '∉',
+  '&nsub;' => '⊄',
+  '&Ntilde;' => 'Ñ',
+  '&ntilde;' => 'ñ',
+  '&Nu;' => 'Ν',
+  '&nu;' => 'ν',
+  '&Oacute;' => 'Ó',
+  '&oacute;' => 'ó',
+  '&Ocirc;' => 'Ô',
+  '&ocirc;' => 'ô',
+  '&OElig;' => 'Œ',
+  '&oelig;' => 'œ',
+  '&Ograve;' => 'Ò',
+  '&ograve;' => 'ò',
+  '&oline;' => '‾',
+  '&Omega;' => 'Ω',
+  '&omega;' => 'ω',
+  '&Omicron;' => 'Ο',
+  '&omicron;' => 'ο',
+  '&oplus;' => '⊕',
+  '&or;' => '∨',
+  '&ordf;' => 'ª',
+  '&ordm;' => 'º',
+  '&Oslash;' => 'Ø',
+  '&oslash;' => 'ø',
+  '&Otilde;' => 'Õ',
+  '&otilde;' => 'õ',
+  '&otimes;' => '⊗',
+  '&Ouml;' => 'Ö',
+  '&ouml;' => 'ö',
+  '&para;' => '¶',
+  '&part;' => '∂',
+  '&permil;' => '‰',
+  '&perp;' => '⊥',
+  '&Phi;' => 'Φ',
+  '&phi;' => 'φ',
+  '&Pi;' => 'Π',
+  '&pi;' => 'π',
+  '&piv;' => 'ϖ',
+  '&plusmn;' => '±',
+  '&pound;' => '£',
+  '&prime;' => '′',
+  '&Prime;' => '″',
+  '&prod;' => '∏',
+  '&prop;' => '∝',
+  '&Psi;' => 'Ψ',
+  '&psi;' => 'ψ',
+  '&radic;' => '√',
+  '&rang;' => '〉',
+  '&raquo;' => '»',
+  '&rarr;' => '→',
+  '&rArr;' => '⇒',
+  '&rceil;' => '⌉',
+  '&rdquo;' => '”',
+  '&real;' => 'ℜ',
+  '&reg;' => '®',
+  '&rfloor;' => '⌋',
+  '&Rho;' => 'Ρ',
+  '&rho;' => 'ρ',
+  '&rlm;' => '‏',
+  '&rsaquo;' => '›',
+  '&rsquo;' => '’',
+  '&sbquo;' => '‚',
+  '&Scaron;' => 'Š',
+  '&scaron;' => 'š',
+  '&sdot;' => '⋅',
+  '&sect;' => '§',
+  '&shy;' => '­',
+  '&Sigma;' => 'Σ',
+  '&sigma;' => 'σ',
+  '&sigmaf;' => 'ς',
+  '&sim;' => '∼',
+  '&spades;' => '♠',
+  '&sub;' => '⊂',
+  '&sube;' => '⊆',
+  '&sum;' => '∑',
+  '&sup1;' => '¹',
+  '&sup2;' => '²',
+  '&sup3;' => '³',
+  '&sup;' => '⊃',
+  '&supe;' => '⊇',
+  '&szlig;' => 'ß',
+  '&Tau;' => 'Τ',
+  '&tau;' => 'τ',
+  '&there4;' => '∴',
+  '&Theta;' => 'Θ',
+  '&theta;' => 'θ',
+  '&thetasym;' => 'ϑ',
+  '&thinsp;' => ' ',
+  '&THORN;' => 'Þ',
+  '&thorn;' => 'þ',
+  '&tilde;' => '˜',
+  '&times;' => '×',
+  '&trade;' => '™',
+  '&Uacute;' => 'Ú',
+  '&uacute;' => 'ú',
+  '&uarr;' => '↑',
+  '&uArr;' => '⇑',
+  '&Ucirc;' => 'Û',
+  '&ucirc;' => 'û',
+  '&Ugrave;' => 'Ù',
+  '&ugrave;' => 'ù',
+  '&uml;' => '¨',
+  '&upsih;' => 'ϒ',
+  '&Upsilon;' => 'Υ',
+  '&upsilon;' => 'υ',
+  '&Uuml;' => 'Ü',
+  '&uuml;' => 'ü',
+  '&weierp;' => '℘',
+  '&Xi;' => 'Ξ',
+  '&xi;' => 'ξ',
+  '&Yacute;' => 'Ý',
+  '&yacute;' => 'ý',
+  '&yen;' => '¥',
+  '&yuml;' => 'ÿ',
+  '&Yuml;' => 'Ÿ',
+  '&Zeta;' => 'Ζ',
+  '&zeta;' => 'ζ',
+  '&zwj;' => '‍',
+  '&zwnj;' => '‌',
+  '&gt;' => '>',
+  '&lt;' => '<',
+  '&quot;' => '"',
+  // Add apostrophe (XML).
+  '&apos;' => "'",
+);
diff --git a/includes/unicode.inc b/includes/unicode.inc
index 19c7442..b1ce757 100644
--- a/includes/unicode.inc
+++ b/includes/unicode.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Indicates an error during check for PHP unicode support.
@@ -135,7 +134,7 @@ function drupal_xml_parser_create(&$data) {
   }
 
   // Check for an encoding declaration in the XML prolog if no BOM was found.
-  if (!$bom && ereg('^<\?xml[^>]+encoding="([^"]+)"', $data, $match)) {
+  if (!$bom && @ereg('^<\?xml[^>]+encoding="([^"]+)"', $data, $match)) {
     $encoding = $match[1];
   }
 
@@ -145,7 +144,7 @@ function drupal_xml_parser_create(&$data) {
     $out = drupal_convert_to_utf8($data, $encoding);
     if ($out !== FALSE) {
       $encoding = 'utf-8';
-      $data = ereg_replace('^(<\?xml[^>]+encoding)="([^"]+)"', '\\1="utf-8"', $out);
+      $data = @ereg_replace('^(<\?xml[^>]+encoding)="([^"]+)"', '\\1="utf-8"', $out);
     }
     else {
       watchdog('php', 'Could not convert XML encoding %s to UTF-8.', array('%s' => $encoding), WATCHDOG_WARNING);
@@ -319,40 +318,46 @@ function _mime_header_decode($matches) {
 }
 
 /**
- * Decode all HTML entities (including numerical ones) to regular UTF-8 bytes.
- * Double-escaped entities will only be decoded once ("&amp;lt;" becomes "&lt;", not "<").
+ * Decodes all HTML entities (including numerical ones) to regular UTF-8 bytes.
+ *
+ * Double-escaped entities will only be decoded once ("&amp;lt;" becomes "&lt;",
+ * not "<"). Be careful when using this function, as decode_entities can revert
+ * previous sanitization efforts (&lt;script&gt; will become <script>).
  *
  * @param $text
  *   The text to decode entities in.
  * @param $exclude
  *   An array of characters which should not be decoded. For example,
  *   array('<', '&', '"'). This affects both named and numerical entities.
+ *
+ * @return
+ *   The input $text, with all HTML entities decoded once.
  */
 function decode_entities($text, $exclude = array()) {
-  static $table;
-  // We store named entities in a table for quick processing.
-  if (!isset($table)) {
-    // Get all named HTML entities.
-    $table = array_flip(get_html_translation_table(HTML_ENTITIES));
-    // PHP gives us ISO-8859-1 data, we need UTF-8.
-    $table = array_map('utf8_encode', $table);
-    // Add apostrophe (XML)
-    $table['&apos;'] = "'";
-  }
-  $newtable = array_diff($table, $exclude);
-
-  // Use a regexp to select all entities in one pass, to avoid decoding double-escaped entities twice.
-  return preg_replace('/&(#x?)?([A-Za-z0-9]+);/e', '_decode_entities("$1", "$2", "$0", $newtable, $exclude)', $text);
+  static $html_entities;
+  if (!isset($html_entities)) {
+    include_once './includes/unicode.entities.inc';
+  }
+
+  // Flip the exclude list so that we can do quick lookups later.
+  $exclude = array_flip($exclude);
+
+  // Use a regexp to select all entities in one pass, to avoid decoding 
+  // double-escaped entities twice. The PREG_REPLACE_EVAL modifier 'e' is
+  // being used to allow for a callback (see 
+  // http://php.net/manual/en/reference.pcre.pattern.modifiers).
+  return preg_replace('/&(#x?)?([A-Za-z0-9]+);/e', '_decode_entities("$1", "$2", "$0", $html_entities, $exclude)', $text);
 }
 
 /**
  * Helper function for decode_entities
  */
-function _decode_entities($prefix, $codepoint, $original, &$table, &$exclude) {
+function _decode_entities($prefix, $codepoint, $original, &$html_entities, &$exclude) {
   // Named entity
   if (!$prefix) {
-    if (isset($table[$original])) {
-      return $table[$original];
+    // A named entity not in the exclude list.
+    if (isset($html_entities[$original]) && !isset($exclude[$html_entities[$original]])) {
+      return $html_entities[$original];
     }
     else {
       return $original;
@@ -386,7 +391,7 @@ function _decode_entities($prefix, $codepoint, $original, &$table, &$exclude) {
          . chr(0x80 | ( $codepoint        & 0x3F));
   }
   // Check for excluded characters
-  if (in_array($str, $exclude)) {
+  if (isset($exclude[$str])) {
     return $original;
   }
   else {
diff --git a/includes/xmlrpc.inc b/includes/xmlrpc.inc
index 445fa26..13ebf09 100644
--- a/includes/xmlrpc.inc
+++ b/includes/xmlrpc.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/includes/xmlrpcs.inc b/includes/xmlrpcs.inc
index a0fb7ea..049a92b 100644
--- a/includes/xmlrpcs.inc
+++ b/includes/xmlrpcs.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * The main entry point for XML-RPC requests.
diff --git a/index.php b/index.php
index 4fef70c..cc50460 100644
--- a/index.php
+++ b/index.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/install.php b/install.php
index 0804017..0839d38 100644
--- a/install.php
+++ b/install.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 require_once './includes/install.inc';
 
@@ -131,9 +130,25 @@ function install_main() {
     if (!$verify) {
       install_change_settings($profile, $install_locale);
     }
+    // The default lock implementation uses a database table,
+    // so we cannot use it for install, but we still need
+    // the API functions available.
+    require_once './includes/lock-install.inc';
+    $conf['lock_inc'] = './includes/lock-install.inc';
+    lock_init();
 
     // Install system.module.
     drupal_install_system();
+
+    // Ensure that all of Drupal's standard directories have appropriate
+    // .htaccess files. These directories will have already been created by
+    // this point in the installer, since Drupal creates them during the
+    // install_check_requirements() task. Note that we cannot create them any
+    // earlier than this, since the code below relies on system.module in order
+    // to work.
+    file_create_htaccess(file_directory_path());
+    file_create_htaccess(file_directory_temp());
+
     // Save the list of other modules to install for the 'profile-install'
     // task. variable_set() can be used now that system.module is installed
     // and drupal is bootstrapped.
@@ -529,7 +544,7 @@ function install_select_locale($profilename) {
       drupal_set_title(st('Choose language'));
       if (!empty($_GET['localize'])) {
         $output = '<p>'. st('With the addition of an appropriate translation package, this installer is capable of proceeding in another language of your choice. To install and use Drupal in a language other than English:') .'</p>';
-        $output .= '<ul><li>'. st('Determine if <a href="@translations" target="_blank">a translation of this Drupal version</a> is available in your language of choice. A translation is provided via a translation package; each translation package enables the display of a specific version of Drupal in a specific language. Not all languages are available for every version of Drupal.', array('@translations' => 'http://drupal.org/project/translations')) .'</li>';
+        $output .= '<ul><li>'. st('Determine if <a href="@translations" target="_blank">a translation of this Drupal version</a> is available in your language of choice. A translation is provided via a translation package; each translation package enables the display of a specific version of Drupal in a specific language. Not all languages are available for every version of Drupal.', array('@translations' => 'http://localize.drupal.org')) .'</li>';
         $output .= '<li>'. st('If an alternative translation package of your choice is available, download and extract its contents to your Drupal root directory.') .'</li>';
         $output .= '<li>'. st('Return to choose language using the second link below and select your desired language from the displayed list. Reloading the page allows the list to automatically adjust to the presence of new translation packages.') .'</li>';
         $output .= '</ul><p>'. st('Alternatively, to install and use Drupal in English, or to defer the selection of an alternative language until after installation, select the first link below.') .'</p>';
diff --git a/misc/ahah.js b/misc/ahah.js
index a098add..e2a8659 100644
--- a/misc/ahah.js
+++ b/misc/ahah.js
@@ -1,4 +1,3 @@
-// $Id$
 
 /**
  * Provides AJAX-like page updating via AHAH (Asynchronous HTML and HTTP).
@@ -45,6 +44,8 @@ Drupal.ahah = function(base, element_settings) {
   this.method = element_settings.method;
   this.progress = element_settings.progress;
   this.button = element_settings.button || { };
+  this.immutable = element_settings.immutable;
+  this.buildId = null;
 
   if (this.effect == 'none') {
     this.showEffect = 'show';
@@ -77,6 +78,9 @@ Drupal.ahah = function(base, element_settings) {
     beforeSubmit: function(form_values, element_settings, options) {
       return ahah.beforeSubmit(form_values, element_settings, options);
     },
+    beforeSend: function(request, options) {
+      return ahah.beforeSend(request, options);
+    },
     success: function(response, status) {
       // Sanity check for browser support (object expected).
       // When using iFrame uploads, responses must be returned as a string.
@@ -86,6 +90,7 @@ Drupal.ahah = function(base, element_settings) {
       return ahah.success(response, status);
     },
     complete: function(response, status) {
+      ahah.complete(response, status);
       if (status == 'error' || status == 'parsererror') {
         return ahah.error(response, ahah.url);
       }
@@ -140,9 +145,29 @@ Drupal.ahah.prototype.beforeSubmit = function (form_values, element, options) {
     }
     $(this.element).after(this.progress.element);
   }
+
+  // Record the build-id.
+  if (this.immutable) {
+    var ahah = this;
+    $.each(form_values, function () {
+      if (this.name == 'form_build_id') {
+        ahah.buildId = this.value;
+        return false;
+      }
+    });
+  }
 };
 
 /**
+ * Modify the request object before it is sent.
+ */
+Drupal.ahah.prototype.beforeSend = function (request, options) {
+  if (this.immutable) {
+    request.setRequestHeader('X-Drupal-Accept-Build-Id', '1');
+  }
+}
+
+/**
  * Handler for the form redirection completion.
  */
 Drupal.ahah.prototype.success = function (response, status) {
@@ -223,3 +248,19 @@ Drupal.ahah.prototype.error = function (response, uri) {
   // Re-enable the element.
   $(this.element).removeClass('progess-disabled').attr('disabled', false);
 };
+
+/**
+ * Handler called when the request finishes, whether in failure or success.
+ */
+Drupal.ahah.prototype.complete = function (response, status) {
+  // Update form build id if necessary.
+  if (this.immutable) {
+    var newBuildId = response.getResponseHeader('X-Drupal-Build-Id');
+    if (this.buildId && newBuildId && this.buildId != newBuildId) {
+      var $element = $('input[name="form_build_id"][value="' + this.buildId + '"]');
+      $element.val(newBuildId);
+      $element.attr('id', newBuildId);
+    }
+    this.buildId = null;
+  }
+}
diff --git a/misc/autocomplete.js b/misc/autocomplete.js
index 4741de7..8d0dcbe 100644
--- a/misc/autocomplete.js
+++ b/misc/autocomplete.js
@@ -1,4 +1,3 @@
-// $Id$
 
 /**
  * Attaches the autocomplete behavior to all required fields
diff --git a/misc/batch.js b/misc/batch.js
index 5a5587a..fe01554 100644
--- a/misc/batch.js
+++ b/misc/batch.js
@@ -1,4 +1,3 @@
-// $Id$
 
 /**
  * Attaches the batch behavior to progress bars.
diff --git a/misc/collapse.js b/misc/collapse.js
index 5628c4b..9581db9 100644
--- a/misc/collapse.js
+++ b/misc/collapse.js
@@ -1,4 +1,3 @@
-// $Id$
 
 /**
  * Toggle the visibility of a fieldset using smooth animations
diff --git a/misc/drupal.js b/misc/drupal.js
index a62038a..a85b8f8 100644
--- a/misc/drupal.js
+++ b/misc/drupal.js
@@ -1,4 +1,26 @@
-// $Id$
+
+/**
+ * Override jQuery.fn.init to guard against XSS attacks.
+ *
+ * See http://bugs.jquery.com/ticket/9521
+ */
+(function () {
+  var jquery_init = jQuery.fn.init;
+  jQuery.fn.init = function (selector, context, rootjQuery) {
+    // If the string contains a "#" before a "<", treat it as invalid HTML.
+    if (selector && typeof selector === 'string') {
+      var hash_position = selector.indexOf('#');
+      if (hash_position >= 0) {
+        var bracket_position = selector.indexOf('<');
+        if (bracket_position > hash_position) {
+          throw 'Syntax error, unrecognized expression: ' + selector;
+        }
+      }
+    }
+    return jquery_init.call(this, selector, context, rootjQuery);
+  };
+  jQuery.fn.init.prototype = jquery_init.prototype;
+})();
 
 var Drupal = Drupal || { 'settings': {}, 'behaviors': {}, 'themes': {}, 'locale': {} };
 
@@ -150,7 +172,7 @@ Drupal.formatPlural = function(count, singular, plural, args) {
   else {
     args['@count['+ index +']'] = args['@count'];
     delete args['@count'];
-    return Drupal.t(plural.replace('@count', '@count['+ index +']'));
+    return Drupal.t(plural.replace('@count', '@count['+ index +']'), args);
   }
 };
 
diff --git a/misc/farbtastic/farbtastic.css b/misc/farbtastic/farbtastic.css
index 9fe6f8f..6942070 100644
--- a/misc/farbtastic/farbtastic.css
+++ b/misc/farbtastic/farbtastic.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 .farbtastic {
   position: relative;
diff --git a/misc/farbtastic/farbtastic.js b/misc/farbtastic/farbtastic.js
index 1030873..0094a72 100644
--- a/misc/farbtastic/farbtastic.js
+++ b/misc/farbtastic/farbtastic.js
@@ -1,4 +1,3 @@
-// $Id$
 // Farbtastic 1.2
 
 jQuery.fn.farbtastic = function (callback) {
diff --git a/misc/form.js b/misc/form.js
index f5e3e68..3b0bb9c 100644
--- a/misc/form.js
+++ b/misc/form.js
@@ -1,4 +1,3 @@
-// $Id$
 
 Drupal.behaviors.multiselectSelector = function() {
   // Automatically selects the right radio button in a multiselect control.
diff --git a/misc/jquery.form.js b/misc/jquery.form.js
index a952bb7..9e956e3 100644
--- a/misc/jquery.form.js
+++ b/misc/jquery.form.js
@@ -1,4 +1,3 @@
-// $Id$
 
 /*
  * jQuery Form Plugin
diff --git a/misc/jquery.js b/misc/jquery.js
index 308165e..01aa089 100644
--- a/misc/jquery.js
+++ b/misc/jquery.js
@@ -1,4 +1,3 @@
-// $Id$ 
 
 /*
  * jQuery 1.2.6 - New Wave Javascript
diff --git a/misc/print-rtl.css b/misc/print-rtl.css
index ee496e4..f99287a 100644
--- a/misc/print-rtl.css
+++ b/misc/print-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 body {
   direction: rtl;
diff --git a/misc/print.css b/misc/print.css
index 894f6e4..0a56ef1 100644
--- a/misc/print.css
+++ b/misc/print.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 body {
   margin: 1em;
diff --git a/misc/progress.js b/misc/progress.js
index 4a7ee3c..b588948 100644
--- a/misc/progress.js
+++ b/misc/progress.js
@@ -1,4 +1,3 @@
-// $Id$
 
 /**
  * A progressbar object. Initialized with the given id. Must be inserted into
diff --git a/misc/tabledrag.js b/misc/tabledrag.js
index a69de6c..4ac3714 100644
--- a/misc/tabledrag.js
+++ b/misc/tabledrag.js
@@ -1,4 +1,3 @@
-// $Id$
 
 /**
  * Drag and drop table rows with field manipulation.
@@ -1015,7 +1014,7 @@ Drupal.tableDrag.prototype.row.prototype.findSiblings = function(rowSettings) {
   var siblings = new Array();
   var directions = new Array('prev', 'next');
   var rowIndentation = this.indents;
-  for (var d in directions) {
+  for (var d = 0; d < directions.length; d++) {
     var checkRow = $(this.element)[directions[d]]();
     while (checkRow.length) {
       // Check that the sibling contains a similar target field.
diff --git a/misc/tableheader.js b/misc/tableheader.js
index 9931c17..9deb18d 100644
--- a/misc/tableheader.js
+++ b/misc/tableheader.js
@@ -1,4 +1,3 @@
-// $Id$
 
 Drupal.tableHeaderDoScroll = function() {
   if (typeof(Drupal.tableHeaderOnScroll)=='function') {
@@ -70,7 +69,7 @@ Drupal.behaviors.tableHeader = function (context) {
     // Get the height of the header table and scroll up that amount.
     if (prevAnchor != location.hash) {
       if (location.hash != '') {
-        var offset = $('td' + location.hash).offset();
+        var offset = $(document).find('td' + location.hash).offset();
         if (offset) {
           var top = offset.top;
           var scrollLocation = top - $(e).height();
diff --git a/misc/tableselect.js b/misc/tableselect.js
index 65eb7ef..d085a9b 100644
--- a/misc/tableselect.js
+++ b/misc/tableselect.js
@@ -1,4 +1,3 @@
-// $Id$
 
 Drupal.behaviors.tableSelect = function (context) {
   $('form table:has(th.select-all):not(.tableSelect-processed)', context).each(Drupal.tableSelect);
diff --git a/misc/teaser.js b/misc/teaser.js
index 46404ef..da1acfb 100644
--- a/misc/teaser.js
+++ b/misc/teaser.js
@@ -1,4 +1,3 @@
-// $Id$
 
 /**
  * Auto-attach for teaser behavior.
diff --git a/misc/textarea.js b/misc/textarea.js
index 2e64582..067586b 100644
--- a/misc/textarea.js
+++ b/misc/textarea.js
@@ -1,4 +1,3 @@
-// $Id$
 
 Drupal.behaviors.textarea = function(context) {
   $('textarea.resizable:not(.textarea-processed)', context).each(function() {
diff --git a/modules/aggregator/aggregator-feed-source.tpl.php b/modules/aggregator/aggregator-feed-source.tpl.php
index 77bb51e..5863fd2 100644
--- a/modules/aggregator/aggregator-feed-source.tpl.php
+++ b/modules/aggregator/aggregator-feed-source.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file aggregator-feed-source.tpl.php
diff --git a/modules/aggregator/aggregator-item.tpl.php b/modules/aggregator/aggregator-item.tpl.php
index 924b8e3..032e034 100644
--- a/modules/aggregator/aggregator-item.tpl.php
+++ b/modules/aggregator/aggregator-item.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file aggregator-item.tpl.php
diff --git a/modules/aggregator/aggregator-rtl.css b/modules/aggregator/aggregator-rtl.css
index 508ca31..ea59ca3 100644
--- a/modules/aggregator/aggregator-rtl.css
+++ b/modules/aggregator/aggregator-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 #aggregator .feed-source .feed-icon {
   float: left;
diff --git a/modules/aggregator/aggregator-summary-item.tpl.php b/modules/aggregator/aggregator-summary-item.tpl.php
index 6e68dfc..08ba2ab 100644
--- a/modules/aggregator/aggregator-summary-item.tpl.php
+++ b/modules/aggregator/aggregator-summary-item.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file aggregator-summary-item.tpl.php
diff --git a/modules/aggregator/aggregator-summary-items.tpl.php b/modules/aggregator/aggregator-summary-items.tpl.php
index 135e01b..43a10d3 100644
--- a/modules/aggregator/aggregator-summary-items.tpl.php
+++ b/modules/aggregator/aggregator-summary-items.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file aggregator-summary-items.tpl.php
diff --git a/modules/aggregator/aggregator-wrapper.tpl.php b/modules/aggregator/aggregator-wrapper.tpl.php
index 652dee2..bb8c8b8 100644
--- a/modules/aggregator/aggregator-wrapper.tpl.php
+++ b/modules/aggregator/aggregator-wrapper.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file comment-wrapper.tpl.php
diff --git a/modules/aggregator/aggregator.admin.inc b/modules/aggregator/aggregator.admin.inc
index a30099b..ca879f9 100644
--- a/modules/aggregator/aggregator.admin.inc
+++ b/modules/aggregator/aggregator.admin.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -27,7 +26,15 @@ function aggregator_view() {
   $header = array(t('Title'), t('Items'), t('Last update'), t('Next update'), array('data' => t('Operations'), 'colspan' => '3'));
   $rows = array();
   while ($feed = db_fetch_object($result)) {
-    $rows[] = array(l($feed->title, "aggregator/sources/$feed->fid"), format_plural($feed->items, '1 item', '@count items'), ($feed->checked ? t('@time ago', array('@time' => format_interval(time() - $feed->checked))) : t('never')), ($feed->checked ? t('%time left', array('%time' => format_interval($feed->checked + $feed->refresh - time()))) : t('never')), l(t('edit'), "admin/content/aggregator/edit/feed/$feed->fid"), l(t('remove items'), "admin/content/aggregator/remove/$feed->fid"), l(t('update items'), "admin/content/aggregator/update/$feed->fid"));
+    $rows[] = array(
+      l($feed->title, "aggregator/sources/$feed->fid"),
+      format_plural($feed->items, '1 item', '@count items'),
+      ($feed->checked ? t('@time ago', array('@time' => format_interval(time() - $feed->checked))) : t('never')),
+      ($feed->checked ? t('%time left', array('%time' => format_interval($feed->checked + $feed->refresh - time()))) : t('never')),
+      l(t('edit'), "admin/content/aggregator/edit/feed/$feed->fid"),
+      l(t('remove items'), "admin/content/aggregator/remove/$feed->fid"),
+      l(t('update items'), "admin/content/aggregator/update/$feed->fid", array('query' => array('token' => drupal_get_token("aggregator/update/$feed->fid")))),
+    );
   }
   $output .= theme('table', $header, $rows);
 
@@ -210,6 +217,9 @@ function aggregator_admin_remove_feed_submit($form, &$form_state) {
  *   An associative array describing the feed to be refreshed.
  */
 function aggregator_admin_refresh_feed($feed) {
+  if (!isset($_GET['token']) || !drupal_valid_token($_GET['token'], 'aggregator/update/' . $feed['fid'])) {
+    return drupal_access_denied();
+  }
   aggregator_refresh($feed);
   drupal_goto('admin/content/aggregator');
 }
diff --git a/modules/aggregator/aggregator.css b/modules/aggregator/aggregator.css
index 554de08..9d2f4bd 100644
--- a/modules/aggregator/aggregator.css
+++ b/modules/aggregator/aggregator.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 #aggregator .feed-source .feed-title {
   margin-top: 0;
diff --git a/modules/aggregator/aggregator.info b/modules/aggregator/aggregator.info
index 5697ae3..cd72471 100644
--- a/modules/aggregator/aggregator.info
+++ b/modules/aggregator/aggregator.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Aggregator
 description = "Aggregates syndicated content (RSS, RDF, and Atom feeds)."
 package = Core - optional
diff --git a/modules/aggregator/aggregator.install b/modules/aggregator/aggregator.install
index 8a6889a..2e918ed 100644
--- a/modules/aggregator/aggregator.install
+++ b/modules/aggregator/aggregator.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Implementation of hook_install().
diff --git a/modules/aggregator/aggregator.module b/modules/aggregator/aggregator.module
index 2c0661e..0afb9f5 100644
--- a/modules/aggregator/aggregator.module
+++ b/modules/aggregator/aggregator.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -299,38 +298,38 @@ function aggregator_cron() {
  * Generates blocks for the latest news items in each category and feed.
  */
 function aggregator_block($op = 'list', $delta = 0, $edit = array()) {
-  if (user_access('access news feeds')) {
-    if ($op == 'list') {
-      $result = db_query('SELECT cid, title FROM {aggregator_category} ORDER BY title');
-      while ($category = db_fetch_object($result)) {
-        $block['category-'. $category->cid]['info'] = t('!title category latest items', array('!title' => $category->title));
-      }
-      $result = db_query('SELECT fid, title FROM {aggregator_feed} ORDER BY fid');
-      while ($feed = db_fetch_object($result)) {
-        $block['feed-'. $feed->fid]['info'] = t('!title feed latest items', array('!title' => $feed->title));
-      }
+  if ($op == 'list') {
+    $result = db_query('SELECT cid, title FROM {aggregator_category} ORDER BY title');
+    while ($category = db_fetch_object($result)) {
+      $block['category-'. $category->cid]['info'] = t('!title category latest items', array('!title' => $category->title));
     }
-    else if ($op == 'configure') {
-      list($type, $id) = explode('-', $delta);
-      if ($type == 'category') {
-        $value = db_result(db_query('SELECT block FROM {aggregator_category} WHERE cid = %d', $id));
-      }
-      else {
-        $value = db_result(db_query('SELECT block FROM {aggregator_feed} WHERE fid = %d', $id));
-      }
-      $form['block'] = array('#type' => 'select', '#title' => t('Number of news items in block'), '#default_value' => $value, '#options' => drupal_map_assoc(array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20)));
-      return $form;
+    $result = db_query('SELECT fid, title FROM {aggregator_feed} ORDER BY fid');
+    while ($feed = db_fetch_object($result)) {
+      $block['feed-'. $feed->fid]['info'] = t('!title feed latest items', array('!title' => $feed->title));
     }
-    else if ($op == 'save') {
-      list($type, $id) = explode('-', $delta);
-      if ($type == 'category') {
-        $value = db_query('UPDATE {aggregator_category} SET block = %d WHERE cid = %d', $edit['block'], $id);
-      }
-      else {
-        $value = db_query('UPDATE {aggregator_feed} SET block = %d WHERE fid = %d', $edit['block'], $id);
-      }
+  }
+  else if ($op == 'configure') {
+    list($type, $id) = explode('-', $delta);
+    if ($type == 'category') {
+      $value = db_result(db_query('SELECT block FROM {aggregator_category} WHERE cid = %d', $id));
+    }
+    else {
+      $value = db_result(db_query('SELECT block FROM {aggregator_feed} WHERE fid = %d', $id));
+    }
+    $form['block'] = array('#type' => 'select', '#title' => t('Number of news items in block'), '#default_value' => $value, '#options' => drupal_map_assoc(array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20)));
+    return $form;
+  }
+  else if ($op == 'save') {
+    list($type, $id) = explode('-', $delta);
+    if ($type == 'category') {
+      $value = db_query('UPDATE {aggregator_category} SET block = %d WHERE cid = %d', $edit['block'], $id);
     }
-    else if ($op == 'view') {
+    else {
+      $value = db_query('UPDATE {aggregator_feed} SET block = %d WHERE fid = %d', $edit['block'], $id);
+    }
+  }
+  else if ($op == 'view') {
+    if (user_access('access news feeds')) {
       list($type, $id) = explode('-', $delta);
       switch ($type) {
         case 'feed':
@@ -359,9 +358,9 @@ function aggregator_block($op = 'list', $delta = 0, $edit = array()) {
         $block['content'] = theme('item_list', $items) . $read_more;
       }
     }
-    if (isset($block)) {
-      return $block;
-    }
+  }
+  if (isset($block)) {
+    return $block;
   }
 }
 
@@ -752,7 +751,17 @@ function aggregator_parse_feed(&$data, $feed) {
     else {
       $link = $feed['link'];
     }
-    $guid = isset($item['GUID']) ? $item['GUID'] : '';
+
+    // Atom feeds use ID rather than GUID.
+    if (isset($item['GUID'])) {
+      $guid = $item['GUID'];
+    }
+    elseif (isset($item['ID'])) {
+      $guid = $item['ID'];
+    }
+    else {
+      $guid = '';
+    }
 
     // Atom feeds have a CONTENT and/or SUMMARY tag instead of a DESCRIPTION tag.
     if (!empty($item['CONTENT:ENCODED'])) {
@@ -783,6 +792,11 @@ function aggregator_parse_feed(&$data, $feed) {
       }
     }
 
+    // Resolve dc:creator tag as the item author if author tag is not set.
+    if (empty($item['AUTHOR']) && !empty($item['DC:CREATOR'])) {
+      $item['AUTHOR'] = $item['DC:CREATOR'];
+    }
+
     // Save this item. Try to avoid duplicate entries as much as possible. If
     // we find a duplicate entry, we resolve it and pass along its ID is such
     // that we can update it if needed.
diff --git a/modules/aggregator/aggregator.pages.inc b/modules/aggregator/aggregator.pages.inc
index f03af52..fb43a86 100644
--- a/modules/aggregator/aggregator.pages.inc
+++ b/modules/aggregator/aggregator.pages.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/block/block-admin-display-form.tpl.php b/modules/block/block-admin-display-form.tpl.php
index 91d8051..3862f4d 100644
--- a/modules/block/block-admin-display-form.tpl.php
+++ b/modules/block/block-admin-display-form.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file block-admin-display-form.tpl.php
diff --git a/modules/block/block.admin.inc b/modules/block/block.admin.inc
index 32fa807..3fd8280 100644
--- a/modules/block/block.admin.inc
+++ b/modules/block/block.admin.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -386,6 +385,7 @@ function template_preprocess_block_admin_display_form(&$variables) {
       $variables['form'][$i]['region']['#attributes']['class'] = 'block-region-select block-region-'. $region;
       $variables['form'][$i]['weight']['#attributes']['class'] = 'block-weight block-weight-'. $region;
 
+      $variables['block_listing'][$region][$i] = new stdClass();
       $variables['block_listing'][$region][$i]->row_class = isset($block['#attributes']['class']) ? $block['#attributes']['class'] : '';
       $variables['block_listing'][$region][$i]->block_modified = isset($block['#attributes']['class']) && strpos($block['#attributes']['class'], 'block-modified') !== FALSE ? TRUE : FALSE;
       $variables['block_listing'][$region][$i]->block_title =  drupal_render($block['info']);
diff --git a/modules/block/block.css b/modules/block/block.css
index 3d579ee..5ffcc2d 100644
--- a/modules/block/block.css
+++ b/modules/block/block.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 #blocks td.region {
   font-weight: bold;
diff --git a/modules/block/block.info b/modules/block/block.info
index 858e44f..7e92e25 100644
--- a/modules/block/block.info
+++ b/modules/block/block.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Block
 description = Controls the boxes that are displayed around the main content.
 package = Core - required
diff --git a/modules/block/block.install b/modules/block/block.install
index 6956136..45d6710 100644
--- a/modules/block/block.install
+++ b/modules/block/block.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Implementation of hook_schema().
diff --git a/modules/block/block.js b/modules/block/block.js
index abfe48d..c1b7eb6 100644
--- a/modules/block/block.js
+++ b/modules/block/block.js
@@ -1,4 +1,3 @@
-// $Id$
 
 /**
  * Move a block in the blocks table from one region to another via select list.
diff --git a/modules/block/block.module b/modules/block/block.module
index cf7ec44..f0c499e 100644
--- a/modules/block/block.module
+++ b/modules/block/block.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -224,15 +223,22 @@ function block_block($op = 'list', $delta = 0, $edit = array()) {
 /**
  * Update the 'blocks' DB table with the blocks currently exported by modules.
  *
+ * @param $theme
+ *   The theme to rehash blocks for. If not provided, defaults to the currently
+ *   used theme.
+ *
  * @return
  *   Blocks currently exported by modules.
  */
-function _block_rehash() {
+function _block_rehash($theme = NULL) {
   global $theme_key;
 
   init_theme();
+  if (!isset($theme)) {
+    $theme = $theme_key;
+  }
 
-  $result = db_query("SELECT * FROM {blocks} WHERE theme = '%s'", $theme_key);
+  $result = db_query("SELECT * FROM {blocks} WHERE theme = '%s'", $theme);
   $old_blocks = array();
   while ($old_block = db_fetch_array($result)) {
     $old_blocks[$old_block['module']][$old_block['delta']] = $old_block;
@@ -240,7 +246,7 @@ function _block_rehash() {
 
   $blocks = array();
   // Valid region names for the theme.
-  $regions = system_region_list($theme_key);
+  $regions = system_region_list($theme);
 
   foreach (module_list() as $module) {
     $module_blocks = module_invoke($module, 'block', 'list');
@@ -250,7 +256,7 @@ function _block_rehash() {
           // If it's a new block, add identifiers.
           $block['module'] = $module;
           $block['delta']  = $delta;
-          $block['theme']  = $theme_key;
+          $block['theme']  = $theme;
           if (!isset($block['pages'])) {
             // {block}.pages is type 'text', so it cannot have a
             // default value, and not null, so we need to provide
@@ -266,9 +272,13 @@ function _block_rehash() {
         }
         else {
           // If it's an existing block, database settings should overwrite
-          // the code. But aside from 'info' everything that's definable in
-          // code is stored in the database and we do not store 'info', so we
-          // do not need to update the database here.
+          // the code. The only exceptions are 'cache' which is only definable
+          // and updatable in the code, and 'info' which is not stored in
+          // the database.
+          // Update the cache mode only; the other values don't need to change.
+          if (isset($block['cache']) && $block['cache'] != $old_blocks[$module][$delta]['cache']) {
+            db_query("UPDATE {blocks} SET cache = %d WHERE bid = %d", $block['cache'], $old_blocks[$module][$delta]['bid']);
+          }
           // Add 'info' to this block.
           $old_blocks[$module][$delta]['info'] = $block['info'];
           // If the region name does not exist, disable the block and assign it to none.
@@ -291,14 +301,31 @@ function _block_rehash() {
 
   // Remove blocks that are no longer defined by the code from the database.
   foreach ($old_blocks as $module => $old_module_blocks) {
-    foreach ($old_module_blocks as $delta => $block) {
-      db_query("DELETE FROM {blocks} WHERE module = '%s' AND delta = '%s' AND theme = '%s'", $module, $delta, $theme_key);
+    // This cleanup does not apply to disabled modules, to avoid configuration
+    // being lost when modules are disabled.
+    if (module_exists($module)) {
+      foreach ($old_module_blocks as $delta => $block) {
+        db_query("DELETE FROM {blocks} WHERE module = '%s' AND delta = '%s' AND theme = '%s'", $module, $delta, $theme);
+      }
     }
   }
   return $blocks;
 }
 
 /**
+ * Implementation of hook_flush_caches().
+ */
+function block_flush_caches() {
+  // Rehash blocks for active themes. We don't use list_themes() here,
+  // because if MAINTENANCE_MODE is defined it skips reading the database,
+  // and we can't tell which themes are active.
+  $result = db_query("SELECT name FROM {system} WHERE type = 'theme' AND status = 1");
+  while ($theme = db_result($result)) {
+    _block_rehash($theme);
+  }
+}
+
+/**
  * Returns information from database about a user-created (custom) block.
  *
  * @param $bid
@@ -414,14 +441,14 @@ function block_user($type, $edit, &$account, $category = NULL) {
  *   The name of a region.
  *
  * @return
- *   An array of block objects, indexed with <i>module</i>_<i>delta</i>.
- *   If you are displaying your blocks in one or two sidebars, you may check
- *   whether this array is empty to see how many columns are going to be
- *   displayed.
+ *   An array of block objects, indexed with module name and block delta
+ *   concatenated with an underscore, thus: MODULE_DELTA. If you are displaying
+ *   your blocks in one or two sidebars, you may check whether this array is
+ *   empty to see how many columns are going to be displayed.
  *
  * @todo
  *   Now that the blocks table has a primary key, we should use that as the
- *   array key instead of <i>module</i>_<i>delta</i>.
+ *   array key instead of MODULE_DELTA.
  */
 function block_list($region) {
   global $user, $theme_key;
diff --git a/modules/blog/blog.info b/modules/blog/blog.info
index 3dc8873..a35fd27 100644
--- a/modules/blog/blog.info
+++ b/modules/blog/blog.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Blog
 description = Enables keeping easily and regularly updated user web pages or blogs.
 package = Core - optional
diff --git a/modules/blog/blog.module b/modules/blog/blog.module
index 7f18033..4a9788c 100644
--- a/modules/blog/blog.module
+++ b/modules/blog/blog.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/blog/blog.pages.inc b/modules/blog/blog.pages.inc
index 5040dd3..e4c7074 100644
--- a/modules/blog/blog.pages.inc
+++ b/modules/blog/blog.pages.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -64,7 +63,7 @@ function blog_page_last() {
 
   $output = theme('item_list', $items);
 
-  $result = pager_query(db_rewrite_sql("SELECT n.nid, n.created FROM {node} n WHERE n.type = 'blog' AND n.status = 1 ORDER BY n.sticky DESC, n.created DESC"), variable_get('default_nodes_main', 10));
+  $result = pager_query(db_rewrite_sql("SELECT n.nid, n.sticky, n.created FROM {node} n WHERE n.type = 'blog' AND n.status = 1 ORDER BY n.sticky DESC, n.created DESC"), variable_get('default_nodes_main', 10));
   $has_posts = FALSE;
 
   while ($node = db_fetch_object($result)) {
diff --git a/modules/blogapi/blogapi.info b/modules/blogapi/blogapi.info
index d178111..8abffbe 100644
--- a/modules/blogapi/blogapi.info
+++ b/modules/blogapi/blogapi.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Blog API
 description = Allows users to post content using applications that support XML-RPC blog APIs.
 package = Core - optional
diff --git a/modules/blogapi/blogapi.install b/modules/blogapi/blogapi.install
index 926cfd6..c14c390 100644
--- a/modules/blogapi/blogapi.install
+++ b/modules/blogapi/blogapi.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Implementation of hook_install().
@@ -59,7 +58,7 @@ function blogapi_schema() {
 }
 
 /**
- * @defgroup updates-5.x-to-6.x Blog API updates from 5.x to 6.x
+ * @addtogroup updates-5.x-to-6.x
  * @{
  */
 
@@ -119,7 +118,7 @@ function blogapi_update_6001() {
 }
 
 /**
- * @} End of "defgroup updates-5.x-to-6.x"
+ * @} End of "addtogroup updates-5.x-to-6.x".
  * The next series of updates should start at 7000.
  */
 
diff --git a/modules/blogapi/blogapi.module b/modules/blogapi/blogapi.module
index d5101d5..6781382 100644
--- a/modules/blogapi/blogapi.module
+++ b/modules/blogapi/blogapi.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/book/book-all-books-block.tpl.php b/modules/book/book-all-books-block.tpl.php
index e3c2d2c..4f8300e 100644
--- a/modules/book/book-all-books-block.tpl.php
+++ b/modules/book/book-all-books-block.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file book-all-books-block.tpl.php
diff --git a/modules/book/book-export-html.tpl.php b/modules/book/book-export-html.tpl.php
index 912273f..401c309 100644
--- a/modules/book/book-export-html.tpl.php
+++ b/modules/book/book-export-html.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file book-export-html.tpl.php
diff --git a/modules/book/book-navigation.tpl.php b/modules/book/book-navigation.tpl.php
index 19eab29..9382af6 100644
--- a/modules/book/book-navigation.tpl.php
+++ b/modules/book/book-navigation.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file book-navigation.tpl.php
diff --git a/modules/book/book-node-export-html.tpl.php b/modules/book/book-node-export-html.tpl.php
index 384a426..44cb75f 100644
--- a/modules/book/book-node-export-html.tpl.php
+++ b/modules/book/book-node-export-html.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file book-node-export-html.tpl.php
diff --git a/modules/book/book-rtl.css b/modules/book/book-rtl.css
index f9bcde4..ccac94c 100644
--- a/modules/book/book-rtl.css
+++ b/modules/book/book-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 .book-navigation .page-previous {
   float: right;
diff --git a/modules/book/book.admin.inc b/modules/book/book.admin.inc
index 0a451d7..84cbe13 100644
--- a/modules/book/book.admin.inc
+++ b/modules/book/book.admin.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/book/book.css b/modules/book/book.css
index 3f4d90f..3b687b8 100644
--- a/modules/book/book.css
+++ b/modules/book/book.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 .book-navigation .menu {
   border-top: 1px solid #888;
diff --git a/modules/book/book.info b/modules/book/book.info
index ae4e24b..999d68b 100644
--- a/modules/book/book.info
+++ b/modules/book/book.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Book
 description = Allows users to structure site pages in a hierarchy or outline.
 package = Core - optional
diff --git a/modules/book/book.install b/modules/book/book.install
index 14be8c1..e3172f8 100644
--- a/modules/book/book.install
+++ b/modules/book/book.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Implementation of hook_install().
diff --git a/modules/book/book.module b/modules/book/book.module
index 41156a2..56f839a 100644
--- a/modules/book/book.module
+++ b/modules/book/book.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -650,7 +649,7 @@ function book_build_active_trail($book_link) {
  * Appends book navigation to all nodes in the book, and handles book outline
  * insertions and updates via the node form.
  */
-function book_nodeapi(&$node, $op, $teaser, $page) {
+function book_nodeapi(&$node, $op, $teaser = NULL, $page = NULL) {
   switch ($op) {
     case 'load':
       // Note - we cannot use book_link_load() because it will call node_load()
diff --git a/modules/book/book.pages.inc b/modules/book/book.pages.inc
index 48b8deb..e0e3f65 100644
--- a/modules/book/book.pages.inc
+++ b/modules/book/book.pages.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -40,6 +39,14 @@ function book_render() {
  *   in a format determined by the $type parameter.
  */
 function book_export($type, $nid) {
+  // Check that the node exists and that the current user has access to it.
+  $node = node_load($nid);
+  if (!$node) {
+    return MENU_NOT_FOUND;
+  }
+  if (!node_access('view', $node)) {
+    return MENU_ACCESS_DENIED;
+  }
 
   $type = drupal_strtolower($type);
 
@@ -78,8 +85,11 @@ function book_export_html($nid) {
     if (isset($node->book)) {
       $tree = book_menu_subtree_data($node->book);
       $contents = book_export_traverse($tree, 'book_node_export');
+      return theme('book_export_html', $node->title, $contents, $node->book['depth']);
+    }
+    else {
+      drupal_not_found();
     }
-    return theme('book_export_html', $node->title, $contents, $node->book['depth']);
   }
   else {
     drupal_access_denied();
@@ -216,19 +226,15 @@ function book_remove_form_submit($form, &$form_state) {
 }
 
 /**
- * AJAX callback to replace the book parent select options.
+ * Renders a new parent page select element when the book selection changes.
  *
- * This function is called when the selected book is changed.  It updates the
- * cached form (either the node form or the book outline form) and returns
- * rendered output to be used to replace the select containing the possible
- * parent pages in the newly selected book.
+ * This function is called via AJAX when the selected book is changed on a node
+ * or book outline form. It creates a new parent page select element, adds it
+ * to the cached form, and then returns the rendered element so it can be
+ * displayed on the form.
  *
- * @param $build_id
- *   The form's build_id.
- * @param $bid
- *   A bid from from among those in the form's book select.
  * @return
- *   Prints the replacement HTML in JSON format.
+ *   The rendered parent page select element.
  */
 function book_form_update() {
   $bid = $_POST['book']['bid'];
diff --git a/modules/color/color-rtl.css b/modules/color/color-rtl.css
index 0b3e308..319a634 100644
--- a/modules/color/color-rtl.css
+++ b/modules/color/color-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 #placeholder {
   left: 0;
diff --git a/modules/color/color.css b/modules/color/color.css
index 3e013bf..441961f 100644
--- a/modules/color/color.css
+++ b/modules/color/color.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /* Farbtastic placement */
 .color-form {
diff --git a/modules/color/color.info b/modules/color/color.info
index 82d04b2..4e8ac66 100644
--- a/modules/color/color.info
+++ b/modules/color/color.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Color
 description = Allows the user to change the color scheme of certain themes.
 package = Core - optional
diff --git a/modules/color/color.install b/modules/color/color.install
index 5526ec7..33b1f41 100644
--- a/modules/color/color.install
+++ b/modules/color/color.install
@@ -1,5 +1,4 @@
 <?php
-/* $Id$ */
 
 function color_requirements($phase) {
   $requirements = array();
@@ -33,3 +32,20 @@ function color_requirements($phase) {
 
   return $requirements;
 }
+
+/**
+ * Warn site administrator if unsafe CSS color codes are found in the database.
+ */
+function color_update_6001() {
+  $ret = array();
+  $result = db_query("SELECT name FROM {variable} WHERE name LIKE 'color_%_palette'");
+  while ($variable = db_fetch_array($result)) {
+    $palette = variable_get($variable['name'], array());
+    foreach ($palette as $key => $color) {
+      if (!preg_match('/^#([a-f0-9]{3}){1,2}$/iD', $color)) {
+        drupal_set_message('Some of the custom CSS color codes specified via the color module are invalid. Please examine the themes which are making use of the color module at the <a href="'. url('admin/appearance/settings') .'">Appearance settings</a> page to verify their CSS color values.', 'warning');
+      }
+    }
+  }
+  return $ret;
+}
diff --git a/modules/color/color.js b/modules/color/color.js
index 3814816..e024cf5 100644
--- a/modules/color/color.js
+++ b/modules/color/color.js
@@ -1,4 +1,3 @@
-// $Id$
 
 Drupal.behaviors.color = function (context) {
   // This behavior attaches by ID, so is only valid once on a page.
diff --git a/modules/color/color.module b/modules/color/color.module
index 407a93c..63fad7a 100644
--- a/modules/color/color.module
+++ b/modules/color/color.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Implementation of hook_help().
@@ -46,6 +45,7 @@ function color_form_alter(&$form, $form_state, $form_id) {
         '#theme' => 'color_scheme_form',
       );
       $form['color'] += color_scheme_form($form_state, arg(4));
+      $form['#validate'][] = 'color_scheme_form_validate';
       $form['#submit'][] = 'color_scheme_form_submit';
     }
   }
@@ -237,6 +237,18 @@ function theme_color_scheme_form($form) {
 }
 
 /**
+ * Validation handler for color change form.
+ */
+function color_scheme_form_validate($form, &$form_state) {
+  // Only accept hexadecimal CSS color strings to avoid XSS upon use.
+  foreach ($form_state['values']['palette'] as $key => $color) {
+    if (!preg_match('/^#([a-f0-9]{3}){1,2}$/iD', $color)) {
+      form_set_error('palette][' . $key, t('%name must be a valid hexadecimal CSS color value.', array('%name' => $form['color']['palette'][$key]['#title'])));
+    }
+  }
+}
+
+/**
  * Submit handler for color change form.
  */
 function color_scheme_form_submit($form, &$form_state) {
diff --git a/modules/comment/comment-folded.tpl.php b/modules/comment/comment-folded.tpl.php
index 016656b..97f54e3 100644
--- a/modules/comment/comment-folded.tpl.php
+++ b/modules/comment/comment-folded.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file comment-folded.tpl.php
diff --git a/modules/comment/comment-rtl.css b/modules/comment/comment-rtl.css
index 5cef412..39c3929 100644
--- a/modules/comment/comment-rtl.css
+++ b/modules/comment/comment-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 .indented {
   margin-left: 0;
diff --git a/modules/comment/comment-wrapper.tpl.php b/modules/comment/comment-wrapper.tpl.php
index 5a5cc29..d6471c6 100644
--- a/modules/comment/comment-wrapper.tpl.php
+++ b/modules/comment/comment-wrapper.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file comment-wrapper.tpl.php
@@ -28,7 +27,6 @@
  *   - COMMENT_CONTROLS_HIDDEN
  *
  * @see template_preprocess_comment_wrapper()
- * @see theme_comment_wrapper()
  */
 ?>
 <div id="comments">
diff --git a/modules/comment/comment.admin.inc b/modules/comment/comment.admin.inc
index 21f03e8..6212049 100644
--- a/modules/comment/comment.admin.inc
+++ b/modules/comment/comment.admin.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/comment/comment.css b/modules/comment/comment.css
index 0df1470..429480f 100644
--- a/modules/comment/comment.css
+++ b/modules/comment/comment.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 .indented {
   margin-left: 25px; /* LTR */
diff --git a/modules/comment/comment.info b/modules/comment/comment.info
index 5d13a6f..983c5a8 100644
--- a/modules/comment/comment.info
+++ b/modules/comment/comment.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Comment
 description = Allows users to comment on and discuss published content.
 package = Core - optional
diff --git a/modules/comment/comment.install b/modules/comment/comment.install
index 98949d2..aa696e2 100644
--- a/modules/comment/comment.install
+++ b/modules/comment/comment.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Implementation of hook_enable().
@@ -67,6 +66,35 @@ function comment_update_6003() {
   return $ret;
 }
 
+/**
+ * @addtogroup updates-6.x-extra
+ * @{
+ */
+
+/**
+ * Add index to to node_comment_statistics on comment_count
+ */
+function comment_update_6004() {
+  $ret = array();
+  db_add_index($ret, 'node_comment_statistics', 'comment_count', array('comment_count'));
+  return $ret;
+}
+
+/**
+ * Add indices to uid fields.
+ */
+function comment_update_6005() {
+  $ret = array();
+  db_add_index($ret, 'comments', 'comment_uid', array('uid'));
+  db_add_index($ret, 'node_comment_statistics', 'last_comment_uid', array('last_comment_uid'));
+  return $ret;
+}
+
+/**
+ * @} End of "addtogroup updates-6.x-extra".
+ * The next series of updates should start at 7000.
+ */
+
 
 /**
  * Implementation of hook_schema().
@@ -167,6 +195,7 @@ function comment_schema() {
     'indexes' => array(
       'pid'    => array('pid'),
       'nid'    => array('nid'),
+      'comment_uid'    => array('uid'),
       'status' => array('status'), // This index is probably unused
     ),
     'primary key' => array('cid'),
@@ -210,10 +239,11 @@ function comment_schema() {
     ),
     'primary key' => array('nid'),
     'indexes' => array(
-      'node_comment_timestamp' => array('last_comment_timestamp')
+      'node_comment_timestamp' => array('last_comment_timestamp'),
+      'comment_count' => array('comment_count'),
+      'last_comment_uid' => array('last_comment_uid'),
     ),
   );
 
   return $schema;
 }
-
diff --git a/modules/comment/comment.js b/modules/comment/comment.js
index cb1d1ab..451bc8a 100644
--- a/modules/comment/comment.js
+++ b/modules/comment/comment.js
@@ -1,4 +1,3 @@
-// $Id$
 
 Drupal.behaviors.comment = function (context) {
   var parts = new Array("name", "homepage", "mail");
diff --git a/modules/comment/comment.module b/modules/comment/comment.module
index 0b8ce23..34c6deb 100644
--- a/modules/comment/comment.module
+++ b/modules/comment/comment.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -1820,7 +1819,6 @@ function theme_comment_post_forbidden($node) {
  * Process variables for comment-wrapper.tpl.php.
  *
  * @see comment-wrapper.tpl.php
- * @see theme_comment_wrapper()
  */
 function template_preprocess_comment_wrapper(&$variables) {
   // Provide contextual information.
diff --git a/modules/comment/comment.pages.inc b/modules/comment/comment.pages.inc
index e318fa1..7aec87c 100644
--- a/modules/comment/comment.pages.inc
+++ b/modules/comment/comment.pages.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/comment/comment.tpl.php b/modules/comment/comment.tpl.php
index 2207246..9aea1c7 100644
--- a/modules/comment/comment.tpl.php
+++ b/modules/comment/comment.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file comment.tpl.php
diff --git a/modules/contact/contact.admin.inc b/modules/contact/contact.admin.inc
index e83afa4..e7a5def 100644
--- a/modules/contact/contact.admin.inc
+++ b/modules/contact/contact.admin.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/contact/contact.info b/modules/contact/contact.info
index 2a2e742..65693d0 100644
--- a/modules/contact/contact.info
+++ b/modules/contact/contact.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Contact
 description = Enables the use of both personal and site-wide contact forms.
 package = Core - optional
diff --git a/modules/contact/contact.install b/modules/contact/contact.install
index 559e073..6b67f52 100644
--- a/modules/contact/contact.install
+++ b/modules/contact/contact.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Implementation of hook_install().
diff --git a/modules/contact/contact.module b/modules/contact/contact.module
index ab369ef..107efc9 100644
--- a/modules/contact/contact.module
+++ b/modules/contact/contact.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/contact/contact.pages.inc b/modules/contact/contact.pages.inc
index ac85174..db9c942 100644
--- a/modules/contact/contact.pages.inc
+++ b/modules/contact/contact.pages.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/dblog/dblog-rtl.css b/modules/dblog/dblog-rtl.css
index e938aff..60a402d 100644
--- a/modules/dblog/dblog-rtl.css
+++ b/modules/dblog/dblog-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 #edit-type-wrapper, #edit-severity-wrapper {
   float: right;
diff --git a/modules/dblog/dblog.admin.inc b/modules/dblog/dblog.admin.inc
index fe27147..853a2ce 100644
--- a/modules/dblog/dblog.admin.inc
+++ b/modules/dblog/dblog.admin.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -80,7 +79,7 @@ function dblog_overview() {
         format_date($dblog->timestamp, 'small'),
         l(truncate_utf8(_dblog_format_message($dblog), 56, TRUE, TRUE), 'admin/reports/event/'. $dblog->wid, array('html' => TRUE)),
         theme('username', $dblog),
-        $dblog->link,
+        filter_xss($dblog->link),
       ),
       // Attributes for tr
       'class' => "dblog-". preg_replace('/[^a-z]/i', '-', $dblog->type) .' '. $classes[$dblog->severity]
@@ -215,7 +214,7 @@ function dblog_filters() {
   $filters = array();
 
   foreach (_dblog_get_message_types() as $type) {
-    $types[$type] = $type;
+    $types[$type] = t($type);
   }
 
   if (!empty($types)) {
diff --git a/modules/dblog/dblog.css b/modules/dblog/dblog.css
index f293b9f..52f62a4 100644
--- a/modules/dblog/dblog.css
+++ b/modules/dblog/dblog.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 #edit-type-wrapper, #edit-severity-wrapper {
   float: left; /* LTR */
diff --git a/modules/dblog/dblog.info b/modules/dblog/dblog.info
index 4072ad4..af5d0d9 100644
--- a/modules/dblog/dblog.info
+++ b/modules/dblog/dblog.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Database logging
 description = Logs and records system events to the database.
 package = Core - optional
diff --git a/modules/dblog/dblog.install b/modules/dblog/dblog.install
index c7bc983..f350e51 100644
--- a/modules/dblog/dblog.install
+++ b/modules/dblog/dblog.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Implementation of hook_install().
@@ -101,7 +100,7 @@ function dblog_schema() {
 }
 
 /**
- * @defgroup updates-6.x-extra Extra database logging updates for 6.x
+ * @addtogroup updates-6.x-extra
  * @{
  */
 
@@ -115,6 +114,6 @@ function dblog_update_6000() {
 }
 
 /**
- * @} End of "defgroup updates-6.x-extra"
+ * @} End of "addtogroup updates-6.x-extra".
  * The next series of updates should start at 7000.
  */
diff --git a/modules/dblog/dblog.module b/modules/dblog/dblog.module
index e5fb88b..149b3ed 100644
--- a/modules/dblog/dblog.module
+++ b/modules/dblog/dblog.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -98,7 +97,7 @@ function dblog_init() {
 /**
  * Implementation of hook_cron().
  *
- * Remove expired log messages and flood control events.
+ * Remove expired log messages.
  */
 function dblog_cron() {
   // Cleanup the watchdog table
diff --git a/modules/filter/filter.admin.inc b/modules/filter/filter.admin.inc
index d5e3380..36f3d67 100644
--- a/modules/filter/filter.admin.inc
+++ b/modules/filter/filter.admin.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/filter/filter.info b/modules/filter/filter.info
index 1f19f76..3201bb1 100644
--- a/modules/filter/filter.info
+++ b/modules/filter/filter.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Filter
 description = Handles the filtering of content in preparation for display.
 package = Core - required
diff --git a/modules/filter/filter.install b/modules/filter/filter.install
index 033f8b8..c6dc8ed 100644
--- a/modules/filter/filter.install
+++ b/modules/filter/filter.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Implementation of hook_schema().
diff --git a/modules/filter/filter.module b/modules/filter/filter.module
index 916e020..6ea0537 100644
--- a/modules/filter/filter.module
+++ b/modules/filter/filter.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -397,10 +396,9 @@ function filter_list_format($format) {
 }
 
 /**
- * @name Filtering functions
+ * @defgroup filtering_functions Filtering functions
  * @{
- * Modules which need to have content filtered can use these functions to
- * interact with the filter system.
+ * Functions for interacting with the content filtering system.
  *
  * For more info, see the hook_filter() documentation.
  *
@@ -604,19 +602,20 @@ function theme_filter_tips_more_info() {
 }
 
 /**
- * @name Standard filters
+ * @defgroup standard_filters Standard filters
  * @{
  * Filters implemented by the filter.module.
  */
 
 /**
- * Implementation of hook_filter(). Contains a basic set of essential filters.
- * - HTML filter:
- *     Validates user-supplied HTML, transforming it as necessary.
- * - Line break converter:
- *     Converts newlines into paragraph and break tags.
- * - URL and e-mail address filter:
- *     Converts newlines into paragraph and break tags.
+ * Implementation of hook_filter().
+ *
+ * Sets up a basic set of essential filters.
+ * - HTML filter: Restricts user-supplied HTML to certain tags, and removes
+ *   dangerous components in allowed tags.
+ * - Line break converter: Converts newlines into paragraph and break tags.
+ * - URL filter: Converts URLs and e-mail addresses into links.
+ * - HTML corrector: Fixes faulty HTML.
  */
 function filter_filter($op, $delta = 0, $format = -1, $text = '') {
   switch ($op) {
@@ -747,7 +746,7 @@ function _filter_url_settings($format) {
 
 /**
  * URL filter. Automatically converts text web addresses (URLs, e-mail addresses,
- * ftp links, etc.) into hyperlinks.
+ * FTP links, etc.) into hyperlinks.
  */
 function _filter_url($text, $format) {
   // Pass length to regexp callback
@@ -965,23 +964,30 @@ function filter_xss_admin($string) {
 }
 
 /**
- * Filters XSS. Based on kses by Ulf Harnhammar, see
- * http://sourceforge.net/projects/kses
+ * Filters an HTML string to prevent cross-site-scripting (XSS) vulnerabilities.
  *
- * For examples of various XSS attacks, see:
- * http://ha.ckers.org/xss.html
+ * Based on kses by Ulf Harnhammar, see http://sourceforge.net/projects/kses.
+ * For examples of various XSS attacks, see http://ha.ckers.org/xss.html.
  *
  * This code does four things:
- * - Removes characters and constructs that can trick browsers
- * - Makes sure all HTML entities are well-formed
- * - Makes sure all HTML tags and attributes are well-formed
- * - Makes sure no HTML tags contain URLs with a disallowed protocol (e.g. javascript:)
+ * - Removes characters and constructs that can trick browsers.
+ * - Makes sure all HTML entities are well-formed.
+ * - Makes sure all HTML tags and attributes are well-formed.
+ * - Makes sure no HTML tags contain URLs with a disallowed protocol (e.g.
+ *   javascript:).
  *
  * @param $string
- *   The string with raw HTML in it. It will be stripped of everything that can cause
- *   an XSS attack.
+ *   The string with raw HTML in it. It will be stripped of everything that can
+ *   cause an XSS attack.
  * @param $allowed_tags
  *   An array of allowed tags.
+ *
+ * @return
+ *   An XSS safe version of $string, or an empty string if $string is not
+ *   valid UTF-8.
+ *
+ * @see drupal_validate_utf8()
+ * @ingroup sanitization
  */
 function filter_xss($string, $allowed_tags = array('a', 'em', 'strong', 'cite', 'code', 'ul', 'ol', 'li', 'dl', 'dt', 'dd')) {
   // Only operate on valid UTF-8 strings. This is necessary to prevent cross
@@ -1212,7 +1218,7 @@ function _filter_xss_attributes($attr) {
 function filter_xss_bad_protocol($string, $decode = TRUE) {
   static $allowed_protocols;
   if (!isset($allowed_protocols)) {
-    $allowed_protocols = array_flip(variable_get('filter_allowed_protocols', array('http', 'https', 'ftp', 'news', 'nntp', 'telnet', 'mailto', 'irc', 'ssh', 'sftp', 'webcal', 'rtsp')));
+    $allowed_protocols = array_flip(variable_get('filter_allowed_protocols', array('http', 'https', 'ftp', 'news', 'nntp', 'tel', 'telnet', 'mailto', 'irc', 'ssh', 'sftp', 'webcal', 'rtsp')));
   }
 
   // Get the plain text representation of the attribute value (i.e. its meaning).
diff --git a/modules/filter/filter.pages.inc b/modules/filter/filter.pages.inc
index 20c4209..24613fa 100644
--- a/modules/filter/filter.pages.inc
+++ b/modules/filter/filter.pages.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/forum/forum-icon.tpl.php b/modules/forum/forum-icon.tpl.php
index 0139063..d2b987a 100644
--- a/modules/forum/forum-icon.tpl.php
+++ b/modules/forum/forum-icon.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file forum-icon.tpl.php
diff --git a/modules/forum/forum-list.tpl.php b/modules/forum/forum-list.tpl.php
index 46dbd5e..c3b809c 100644
--- a/modules/forum/forum-list.tpl.php
+++ b/modules/forum/forum-list.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file forum-list.tpl.php
diff --git a/modules/forum/forum-rtl.css b/modules/forum/forum-rtl.css
index 4f81bde..d31c9e7 100644
--- a/modules/forum/forum-rtl.css
+++ b/modules/forum/forum-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 #forum tr td.forum {
   padding-left: 0.5em;
diff --git a/modules/forum/forum-submitted.tpl.php b/modules/forum/forum-submitted.tpl.php
index dc3a6e4..11a6e91 100644
--- a/modules/forum/forum-submitted.tpl.php
+++ b/modules/forum/forum-submitted.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file forum-submitted.tpl.php
diff --git a/modules/forum/forum-topic-list.tpl.php b/modules/forum/forum-topic-list.tpl.php
index 900b7df..d3e0090 100644
--- a/modules/forum/forum-topic-list.tpl.php
+++ b/modules/forum/forum-topic-list.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file forum-topic-list.tpl.php
diff --git a/modules/forum/forum-topic-navigation.tpl.php b/modules/forum/forum-topic-navigation.tpl.php
index 92b2ff5..1b42b11 100644
--- a/modules/forum/forum-topic-navigation.tpl.php
+++ b/modules/forum/forum-topic-navigation.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file forum-topic-navigation.tpl.php
diff --git a/modules/forum/forum.admin.inc b/modules/forum/forum.admin.inc
index c806159..6eff8b3 100644
--- a/modules/forum/forum.admin.inc
+++ b/modules/forum/forum.admin.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/forum/forum.css b/modules/forum/forum.css
index bef5fd4..f4fcc87 100644
--- a/modules/forum/forum.css
+++ b/modules/forum/forum.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 #forum .description {
   font-size: 0.9em;
diff --git a/modules/forum/forum.info b/modules/forum/forum.info
index 00828a4..c7e6d21 100644
--- a/modules/forum/forum.info
+++ b/modules/forum/forum.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Forum
 description = Enables threaded discussions about general topics.
 dependencies[] = taxonomy
diff --git a/modules/forum/forum.install b/modules/forum/forum.install
index aa80507..f4c73ae 100644
--- a/modules/forum/forum.install
+++ b/modules/forum/forum.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Implementation of hook_install().
diff --git a/modules/forum/forum.module b/modules/forum/forum.module
index 5477e54..d656f10 100644
--- a/modules/forum/forum.module
+++ b/modules/forum/forum.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -166,7 +165,7 @@ function forum_init() {
 /**
  * Implementation of hook_nodeapi().
  */
-function forum_nodeapi(&$node, $op, $teaser, $page) {
+function forum_nodeapi(&$node, $op, $teaser = NULL, $page = NULL) {
   // We are going to return if $node->type is not one of the node
   // types assigned to the forum vocabulary.  If forum_nav_vocabulary
   // is undefined or the vocabulary does not exist, it clearly cannot
@@ -255,7 +254,7 @@ function forum_nodeapi(&$node, $op, $teaser, $page) {
             $node->tid = $term_id;
           }
         }
-        $old_tid = db_result(db_query_range("SELECT t.tid FROM {term_node} t INNER JOIN {node} n ON t.vid = n.vid WHERE n.nid = %d ORDER BY t.vid DESC", $node->nid, 0, 1));
+        $old_tid = db_result(db_query_range("SELECT f.tid FROM {forum} f INNER JOIN {node} n ON f.vid = n.vid WHERE n.nid = %d ORDER BY f.vid DESC", $node->nid, 0, 1));
         if ($old_tid && isset($node->tid) && ($node->tid != $old_tid) && !empty($node->shadow)) {
           // A shadow copy needs to be created. Retain new term and add old term.
           $node->taxonomy[] = $old_tid;
@@ -495,11 +494,31 @@ function forum_get_forums($tid = 0) {
   $_forums = taxonomy_get_tree($vid, $tid);
 
   if (count($_forums)) {
-
-    $counts = array();
-
-    $sql = "SELECT r.tid, COUNT(n.nid) AS topic_count, SUM(l.comment_count) AS comment_count FROM {node} n INNER JOIN {node_comment_statistics} l ON n.nid = l.nid INNER JOIN {term_node} r ON n.vid = r.vid WHERE n.status = 1 GROUP BY r.tid";
-    $sql = db_rewrite_sql($sql);
+  $counts = array();
+    $sql = "
+      SELECT r.tid AS tid, n.nid AS nid, l.comment_count AS nid_comment_count
+        FROM {node} n
+        INNER JOIN {node_comment_statistics} l ON n.nid = l.nid
+        INNER JOIN {term_node} r ON n.vid = r.vid
+        WHERE n.status = 1
+        GROUP BY r.tid, n.nid, l.comment_count";
+    $sql_rewritten = db_rewrite_sql($sql);
+    if ($sql_rewritten == $sql) {
+      $sql = "
+        SELECT r.tid, COUNT(n.nid) AS topic_count, SUM(l.comment_count) AS comment_count
+          FROM {node} n
+          INNER JOIN {node_comment_statistics} l ON n.nid = l.nid
+          INNER JOIN {term_node} r ON n.vid = r.vid
+          WHERE n.status = 1
+          GROUP BY r.tid";
+      $sql = db_rewrite_sql($sql);
+    }
+    else {
+      $sql = "
+        SELECT tid, COUNT(nid) AS topic_count, SUM(nid_comment_count) AS comment_count
+          FROM ($sql_rewritten) AS forum_content_list
+          GROUP BY tid";
+    }
     $_counts = db_query($sql);
     while ($count = db_fetch_object($_counts)) {
       $counts[$count->tid] = $count;
@@ -546,7 +565,7 @@ function forum_get_forums($tid = 0) {
  * than NODE_NEW_LIMIT.
  */
 function _forum_topics_unread($term, $uid) {
-  $sql = "SELECT COUNT(n.nid) FROM {node} n INNER JOIN {term_node} tn ON n.vid = tn.vid AND tn.tid = %d LEFT JOIN {history} h ON n.nid = h.nid AND h.uid = %d WHERE n.status = 1 AND n.created > %d AND h.nid IS NULL";
+  $sql = "SELECT COUNT(DISTINCT n.nid) FROM {node} n INNER JOIN {term_node} tn ON n.vid = tn.vid AND tn.tid = %d LEFT JOIN {history} h ON n.nid = h.nid AND h.uid = %d WHERE n.status = 1 AND n.created > %d AND h.nid IS NULL";
   $sql = db_rewrite_sql($sql);
   return db_result(db_query($sql, $term, $uid, NODE_NEW_LIMIT));
 }
@@ -575,7 +594,7 @@ function forum_get_topics($tid, $sortby, $forum_per_page) {
   $sql .= tablesort_sql($forum_topic_list_header, 'n.sticky DESC,');
   $sql .= ', n.created DESC';  // Always add a secondary sort order so that the news forum topics are on top.
 
-  $sql_count = db_rewrite_sql("SELECT COUNT(n.nid) FROM {node} n INNER JOIN {term_node} r ON n.vid = r.vid AND r.tid = %d WHERE n.status = 1");
+  $sql_count = db_rewrite_sql("SELECT COUNT(DISTINCT n.nid) FROM {node} n INNER JOIN {term_node} r ON n.vid = r.vid AND r.tid = %d WHERE n.status = 1");
 
   $result = pager_query($sql, $forum_per_page, 0, $sql_count, $tid);
   $topics = array();
@@ -671,7 +690,7 @@ function template_preprocess_forums(&$variables) {
       // Check if the current user has the 'create' permission for this node type.
       if (node_access('create', $type)) {
         // Fetch the "General" name of the content type;
-        // Push the link with title and url to the array.
+        // Push the link with title and URL to the array.
         $forum_types[$type] = array('title' => t('Post new @node_type', array('@node_type' => node_get_types('name', $type))), 'href' => 'node/add/'. str_replace('_', '-', $type) .'/'. $variables['tid']);
       }
     }
diff --git a/modules/forum/forum.pages.inc b/modules/forum/forum.pages.inc
index 4931411..35fbff2 100644
--- a/modules/forum/forum.pages.inc
+++ b/modules/forum/forum.pages.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/forum/forums.tpl.php b/modules/forum/forums.tpl.php
index 7c2dbc8..7139bad 100644
--- a/modules/forum/forums.tpl.php
+++ b/modules/forum/forums.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file forums.tpl.php
diff --git a/modules/help/help-rtl.css b/modules/help/help-rtl.css
index 79e99c4..8e40a8c 100644
--- a/modules/help/help-rtl.css
+++ b/modules/help/help-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 .help-items {
   float: right;
diff --git a/modules/help/help.admin.inc b/modules/help/help.admin.inc
index 7b70ce5..87e869d 100644
--- a/modules/help/help.admin.inc
+++ b/modules/help/help.admin.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/help/help.css b/modules/help/help.css
index c8062be..9228170 100644
--- a/modules/help/help.css
+++ b/modules/help/help.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 .help-items {
   float: left; /* LTR */
diff --git a/modules/help/help.info b/modules/help/help.info
index ea6dc55..21c1f9e 100644
--- a/modules/help/help.info
+++ b/modules/help/help.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Help
 description = Manages the display of online help.
 package = Core - optional
diff --git a/modules/help/help.module b/modules/help/help.module
index 4cdcfeb..3cf1f4e 100644
--- a/modules/help/help.module
+++ b/modules/help/help.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/locale/locale.css b/modules/locale/locale.css
index c9c8df5..9f451a7 100644
--- a/modules/locale/locale.css
+++ b/modules/locale/locale.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 .locale-untranslated {
   font-style: normal;
diff --git a/modules/locale/locale.info b/modules/locale/locale.info
index 1d5f2bf..fb2d9a5 100644
--- a/modules/locale/locale.info
+++ b/modules/locale/locale.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Locale
 description = Adds language handling functionality and enables the translation of the user interface to languages other than English.
 package = Core - optional
diff --git a/modules/locale/locale.install b/modules/locale/locale.install
index 2246917..6c04538 100644
--- a/modules/locale/locale.install
+++ b/modules/locale/locale.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Implementation of hook_install().
@@ -16,7 +15,7 @@ function locale_install() {
 }
 
 /**
- * @defgroup updates-5.x-to-6.x Locale updates from 5.x to 6.x
+ * @addtogroup updates-5.x-to-6.x
  * @{
  */
 
@@ -222,7 +221,26 @@ function locale_update_6006() {
 }
 
 /**
- * @} End of "defgroup updates-5.x-to-6.x"
+ * @} End of "addtogroup updates-5.x-to-6.x".
+ */
+
+/**
+ * @addtogroup updates-6.x-extra
+ * @{
+ */
+
+/**
+ * Fix Drupal.formatPlural().
+ */
+function locale_update_6007() {
+  drupal_load('module', 'locale');
+  locale_inc_callback('_locale_invalidate_js');
+  return array();
+}
+
+/**
+ * @} End of "addtogroup updates-6.x-extra".
+ * The next series of updates should start at 7000.
  */
 
 /**
diff --git a/modules/locale/locale.module b/modules/locale/locale.module
index a69205d..092eb48 100644
--- a/modules/locale/locale.module
+++ b/modules/locale/locale.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -25,14 +24,14 @@ function locale_help($path, $arg) {
       $output .= '<p>'. t('Beyond translation of the Drupal interface, the locale module provides a feature set tailored to the needs of a multi-lingual site. Language negotiation allows your site to automatically change language based on the domain or path used for each request. Users may (optionally) select their preferred language on their <em>My account</em> page, and your site can be configured to honor a web browser\'s preferred language settings. Your site content can be created in (and translated to) any enabled language, and each post may have a language-appropriate alias for each of its translations. The locale module works in concert with the <a href="@content-help">content translation module</a> to manage translated content.', array('@content-help' => url('admin/help/translation'))) .'</p>';
       $output .= '<p>'. t('Translations may be provided by:') .'</p>';
       $output .= '<ul><li>'. t("translating the original text via the locale module's integrated web interface, or") .'</li>';
-      $output .= '<li>'. t('importing files from a set of existing translations, known as a translation package. A translation package enables the display of a specific version of Drupal in a specific language, and contain files in the Gettext Portable Object (<em>.po</em>) format. Although not all languages are available for every version of Drupal, translation packages for many languages are available for download from the <a href="@translations">Drupal translation page</a>.', array('@translations' => 'http://drupal.org/project/translations')) .'</li></ul>';
+      $output .= '<li>'. t('importing files from a set of existing translations, known as a translation package. A translation package enables the display of a specific version of Drupal in a specific language, and contain files in the Gettext Portable Object (<em>.po</em>) format. Although not all languages are available for every version of Drupal, translation packages for many languages are available for download from the <a href="@translations">Drupal translation page</a>.', array('@translations' => 'http://localize.drupal.org')) .'</li></ul>';
       $output .= '<p>'. t('If an existing translation package does not meet your needs, the Gettext Portable Object (<em>.po</em>) files within a package may be modified, or new <em>.po</em> files may be created, using a desktop Gettext editor. The locale module\'s <a href="@import">import</a> feature allows the translated strings from a new or modified <em>.po</em> file to be added to your site. The locale module\'s <a href="@export">export</a> feature generates files from your site\'s translated strings, that can either be shared with others or edited offline by a Gettext translation editor.', array('@import' => url('admin/build/translate/import'), '@export' => url('admin/build/translate/export'))) .'</p>';
       $output .= '<p>'. t('For more information, see the online handbook entry for <a href="@locale">Locale module</a>.', array('@locale' => 'http://drupal.org/handbook/modules/locale/')) .'</p>';
       return $output;
     case 'admin/settings/language':
       $output = '<p>'. t("This page provides an overview of your site's enabled languages. If multiple languages are available and enabled, the text on your site interface may be translated, registered users may select their preferred language on the <em>My account</em> page, and site authors may indicate a specific language when creating posts. The site's default language is used for anonymous visitors and for users who have not selected a preferred language.") .'</p>';
       $output .= '<p>'. t('For each language available on the site, use the <em>edit</em> link to configure language details, including name, an optional language-specific path or domain, and whether the language is natively presented either left-to-right or right-to-left. These languages also appear in the <em>Language</em> selection when creating a post of a content type with multilingual support.') .'</p>';
-      $output .= '<p>'. t('Use the <a href="@add-language">add language page</a> to enable additional languages (and automatically import files from a translation package, if available), the <a href="@search">translate interface page</a> to locate strings for manual translation, or the <a href="@import">import page</a> to add translations from individual <em>.po</em> files. A number of contributed translation packages containing <em>.po</em> files are available on the <a href="@translations">Drupal.org translations page</a>.', array('@add-language' => url('admin/settings/language/add'), '@search' => url('admin/build/translate/search'), '@import' => url('admin/build/translate/import'), '@translations' => 'http://drupal.org/project/translations')) .'</p>';
+      $output .= '<p>'. t('Use the <a href="@add-language">add language page</a> to enable additional languages (and automatically import files from a translation package, if available), the <a href="@search">translate interface page</a> to locate strings for manual translation, or the <a href="@import">import page</a> to add translations from individual <em>.po</em> files. A number of contributed translation packages containing <em>.po</em> files are available on the <a href="@translations">Drupal.org translations page</a>.', array('@add-language' => url('admin/settings/language/add'), '@search' => url('admin/build/translate/search'), '@import' => url('admin/build/translate/import'), '@translations' => 'http://localize.drupal.org')) .'</p>';
       return $output;
     case 'admin/settings/language/add':
       return '<p>'. t('Add all languages to be supported by your site. If your desired language is not available in the <em>Language name</em> drop-down, click <em>Custom language</em> and provide a language code and other details manually. When providing a language code manually, be sure to enter a standardized language code, since this code may be used by browsers to determine an appropriate display language.') .'</p>';
@@ -50,7 +49,7 @@ function locale_help($path, $arg) {
       return $output;
     case 'admin/build/translate/import':
       $output = '<p>'. t('This page imports the translated strings contained in an individual Gettext Portable Object (<em>.po</em>) file. Normally distributed as part of a translation package (each translation package may contain several <em>.po</em> files), a <em>.po</em> file may need to be imported after off-line editing in a Gettext translation editor. Importing an individual <em>.po</em> file may be a lengthy process.') .'</p>';
-      $output .= '<p>'. t('Note that the <em>.po</em> files within a translation package are imported automatically (if available) when new modules or themes are enabled, or as new languages are added. Since this page only allows the import of one <em>.po</em> file at a time, it may be simpler to download and extract a translation package into your Drupal installation directory and <a href="@language-add">add the language</a> (which automatically imports all <em>.po</em> files within the package). Translation packages are available for download on the <a href="@translations">Drupal translation page</a>.', array('@language-add' => url('admin/settings/language/add'), '@translations' => 'http://drupal.org/project/translations')) .'</p>';
+      $output .= '<p>'. t('Note that the <em>.po</em> files within a translation package are imported automatically (if available) when new modules or themes are enabled, or as new languages are added. Since this page only allows the import of one <em>.po</em> file at a time, it may be simpler to download and extract a translation package into your Drupal installation directory and <a href="@language-add">add the language</a> (which automatically imports all <em>.po</em> files within the package). Translation packages are available for download on the <a href="@translations">Drupal translation page</a>.', array('@language-add' => url('admin/settings/language/add'), '@translations' => 'http://localize.drupal.org')) .'</p>';
       return $output;
     case 'admin/build/translate/export':
       return '<p>'. t('This page exports the translated strings used by your site. An export file may be in Gettext Portable Object (<em>.po</em>) form, which includes both the original string and the translation (used to share translations with others), or in Gettext Portable Object Template (<em>.pot</em>) form, which includes the original strings only (used to create new translations with a Gettext translation editor).') .'</p>';
diff --git a/modules/menu/menu.admin.inc b/modules/menu/menu.admin.inc
index 1092afb..a62f246 100644
--- a/modules/menu/menu.admin.inc
+++ b/modules/menu/menu.admin.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -410,7 +409,7 @@ function menu_edit_menu(&$form_state, $type, $menu = array()) {
     $form['menu_name'] = array(
       '#type' => 'textfield',
       '#title' => t('Menu name'),
-      '#maxsize' => MENU_MAX_MENU_NAME_LENGTH_UI,
+      '#maxlength' => MENU_MAX_MENU_NAME_LENGTH_UI,
       '#description' => t('The machine-readable name of this menu. This text will be used for constructing the URL of the <em>menu overview</em> page for this menu. This name must contain only lowercase letters, numbers, and hyphens, and must be unique.'),
       '#required' => TRUE,
     );
@@ -510,9 +509,6 @@ function menu_edit_menu_validate($form, &$form_state) {
   if (preg_match('/[^a-z0-9-]/', $item['menu_name'])) {
     form_set_error('menu_name', t('The menu name may only consist of lowercase letters, numbers, and hyphens.'));
   }
-  if (strlen($item['menu_name']) > MENU_MAX_MENU_NAME_LENGTH_UI) {
-    form_set_error('menu_name', format_plural(MENU_MAX_MENU_NAME_LENGTH_UI, "The menu name can't be longer than 1 character.", "The menu name can't be longer than @count characters."));
-  }
   if ($form['#insert']) {
     // We will add 'menu-' to the menu name to help avoid name-space conflicts.
     $item['menu_name'] = 'menu-'. $item['menu_name'];
diff --git a/modules/menu/menu.info b/modules/menu/menu.info
index 56f8d14..4f21c69 100644
--- a/modules/menu/menu.info
+++ b/modules/menu/menu.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Menu
 description = Allows administrators to customize the site navigation menu.
 package = Core - optional
diff --git a/modules/menu/menu.install b/modules/menu/menu.install
index 141283c..3c69c40 100644
--- a/modules/menu/menu.install
+++ b/modules/menu/menu.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Implementation of hook_install().
diff --git a/modules/menu/menu.module b/modules/menu/menu.module
index 7d7379b..ff804d9 100644
--- a/modules/menu/menu.module
+++ b/modules/menu/menu.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -46,7 +45,7 @@ function menu_perm() {
 function menu_menu() {
   $items['admin/build/menu'] = array(
     'title' => 'Menus',
-    'description' => "Control your site's navigation menu, primary links and secondary links. as well as rename and reorganize menu items.",
+    'description' => "Control your site's navigation menu, primary links and secondary links, as well as rename and reorganize menu items.",
     'page callback' => 'menu_overview_page',
     'access callback' => 'user_access',
     'access arguments' => array('administer menu'),
@@ -274,7 +273,6 @@ function menu_block($op = 'list', $delta = 0) {
   if ($op == 'list') {
     $blocks = array();
     foreach ($menus as $name => $title) {
-      // Default "Navigation" block is handled by user.module.
       $blocks[$name]['info'] = check_plain($title);
       // Menu blocks can't be cached because each menu item can have
       // a custom access callback. menu.inc manages its own caching.
diff --git a/modules/node/content_types.inc b/modules/node/content_types.inc
index b600831..7442949 100644
--- a/modules/node/content_types.inc
+++ b/modules/node/content_types.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/node/node-rtl.css b/modules/node/node-rtl.css
index f829ab9..3ecb0ea 100644
--- a/modules/node/node-rtl.css
+++ b/modules/node/node-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 #node-admin-buttons {
   float: right;
diff --git a/modules/node/node.admin.inc b/modules/node/node.admin.inc
index 8c7dd2a..41f4730 100644
--- a/modules/node/node.admin.inc
+++ b/modules/node/node.admin.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -182,7 +181,7 @@ function node_build_filter_query() {
       case 'category':
         $table = "tn$index";
         $where[] = "$table.tid = %d";
-        $join .= "INNER JOIN {term_node} $table ON n.nid = $table.nid ";
+        $join .= "INNER JOIN {term_node} $table ON n.vid = $table.vid ";
         break;
       case 'type':
         $where[] = "n.type = '%s'";
diff --git a/modules/node/node.css b/modules/node/node.css
index 7b56fd7..60d0130 100644
--- a/modules/node/node.css
+++ b/modules/node/node.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 .node-unpublished {
   background-color: #fff4f4;
diff --git a/modules/node/node.info b/modules/node/node.info
index 95ddbe3..4bd95ef 100644
--- a/modules/node/node.info
+++ b/modules/node/node.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Node
 description = Allows content to be submitted to the site and displayed on pages.
 package = Core - required
diff --git a/modules/node/node.install b/modules/node/node.install
index 8397986..a0b1ce3 100644
--- a/modules/node/node.install
+++ b/modules/node/node.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Implementation of hook_schema().
diff --git a/modules/node/node.module b/modules/node/node.module
index e1f66d5..4cc6bdf 100644
--- a/modules/node/node.module
+++ b/modules/node/node.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -398,23 +397,30 @@ function node_teaser($body, $format = NULL, $size = NULL) {
 }
 
 /**
- * Builds a list of available node types, and returns all of part of this list
- * in the specified format.
+ * Builds a list of available node types, and returns all or part of this list.
  *
  * @param $op
- *   The format in which to return the list. When this is set to 'type',
- *   'module', or 'name', only the specified node type is returned. When set to
- *   'types' or 'names', all node types are returned.
+ *   The format in which to return the list: 'type', 'types', 'module', 'name',
+ *   or 'names'. See return value section below for details.
  * @param $node
- *   A node object, array, or string that indicates the node type to return.
- *   Leave at default value (NULL) to return a list of all node types.
+ *   A node object, an array representation of a node object, or a node type
+ *   name string. See return value section below for details.
  * @param $reset
  *   Whether or not to reset this function's internal cache (defaults to
  *   FALSE).
  *
  * @return
- *   Either an array of all available node types, or a single node type, in a
- *   variable format. Returns FALSE if the node type is not found.
+ *   If $node is supplied and it doesn't correspond to a known node type,
+ *   or if $op is 'type', 'name', or 'module' and $node is not given, the
+ *   function returns FALSE. Otherwise, the return value depends on the
+ *   value of $op:
+ *   - 'types': An array of all available node type objects, keyed by machine
+ *     name.
+ *   - 'type': The single node type object indicated by $node.
+ *   - 'names': An array of the display names of all available node types,
+ *     keyed by machine name and sorted by display name.
+ *   - 'name': The single node type display name indicated by $node.
+ *   - 'module': The name of the node type module indicated by $node.
  */
 function node_get_types($op = 'types', $node = NULL, $reset = FALSE) {
   static $_node_types, $_node_names;
@@ -788,7 +794,7 @@ function node_validate($node, $form = array()) {
   // Make sure the body has the minimum number of words.
   // TODO : use a better word counting algorithm that will work in other languages
   if (!empty($type->min_word_count) && isset($node->body) && count(explode(' ', $node->body)) < $type->min_word_count) {
-    form_set_error('body', t('The body of your @type is too short. You need at least %words words.', array('%words' => $type->min_word_count, '@type' => $type->name)));
+    form_set_error('body', t('The @body_label of your @type is too short. You need at least %words words.', array('@body_label' => $type->body_label, '@type' => $type->name, '%words' => $type->min_word_count)));
   }
 
   if (isset($node->nid) && (node_last_changed($node->nid) > $node->changed)) {
@@ -816,7 +822,13 @@ function node_validate($node, $form = array()) {
 }
 
 /**
- * Prepare node for save and allow modules to make changes.
+ * Prepares a node for saving by populating teaser, author, and creation date.
+ *
+ * @param object|array $node
+ *   A node object or array.
+ *
+ * @return
+ *   A validated node object with a populated teaser, author, and creation date.
  */
 function node_submit($node) {
   global $user;
@@ -968,6 +980,7 @@ function node_delete($nid) {
   if (node_access('delete', $node)) {
     db_query('DELETE FROM {node} WHERE nid = %d', $node->nid);
     db_query('DELETE FROM {node_revisions} WHERE nid = %d', $node->nid);
+    db_query('DELETE FROM {node_access} WHERE nid = %d', $node->nid);
 
     // Call the node-specific callback (if any):
     node_invoke($node, 'delete');
@@ -1063,8 +1076,8 @@ function node_prepare($node, $teaser = FALSE) {
  *   Whether the node is being displayed by itself as a page.
  *
  * @return
- *   An structured array containing the individual elements
- *   of the node's body.
+ *   A node object with its content property set to a structured array
+ *   containing the individual elements of the node's body.
  */
 function node_build_content($node, $teaser = FALSE, $page = FALSE) {
 
@@ -1232,7 +1245,10 @@ function node_search($op = 'search', $keys = NULL) {
       }
       if ($weight = (int)variable_get('node_rank_recent', 5)) {
         // Exponential decay with half-life of 6 months, starting at last indexed node
-        $ranking[] = '%d * POW(2, (GREATEST(MAX(n.created), MAX(n.changed), MAX(c.last_comment_timestamp)) - %d) * 6.43e-8)';
+        // c.last_comment_timestamp may be NULL. Since both MAX(anynumber, NULL) and
+        // GREATEST(anynumber, NULL) return NULL, we use COALESCE(MAX(c.last_comment_timestamp), 0)
+        // to prevent it from being NULL.
+        $ranking[] = '%d * POW(2, (GREATEST(MAX(n.created), MAX(n.changed), COALESCE(MAX(c.last_comment_timestamp), 0)) - %d) * 6.43e-8)';
         $arguments2[] = $weight;
         $arguments2[] = (int)variable_get('node_cron_last', 0);
         $join2 .= ' LEFT JOIN {node_comment_statistics} c ON c.nid = i.sid';
@@ -1616,7 +1632,7 @@ function node_last_changed($nid) {
  */
 function node_revision_list($node) {
   $revisions = array();
-  $result = db_query('SELECT r.vid, r.title, r.log, r.uid, n.vid AS current_vid, r.timestamp, u.name FROM {node_revisions} r LEFT JOIN {node} n ON n.vid = r.vid INNER JOIN {users} u ON u.uid = r.uid WHERE r.nid = %d ORDER BY r.timestamp DESC', $node->nid);
+  $result = db_query('SELECT r.vid, r.title, r.log, r.uid, n.vid AS current_vid, r.timestamp, u.name FROM {node_revisions} r LEFT JOIN {node} n ON n.vid = r.vid INNER JOIN {users} u ON u.uid = r.uid WHERE r.nid = %d ORDER BY r.vid DESC', $node->nid);
   while ($revision = db_fetch_object($result)) {
     $revisions[$revision->vid] = $revision;
   }
@@ -2187,13 +2203,13 @@ function node_db_rewrite_sql($query, $primary_table, $primary_field) {
 }
 
 /**
- * This function will call module invoke to get a list of grants and then
- * write them to the database. It is called at node save, and should be
- * called by modules whenever something other than a node_save causes
- * the permissions on a node to change.
+ * Gets the list of node access grants and writes them to the database.
  *
- * This function is the only function that should write to the node_access
- * table.
+ * This function is called when a node is saved, and can also be called by
+ * modules if something other than a node save causes node access permissions
+ * to change. It collects all node access grants for the node from
+ * hook_node_access_records() implementations and saves the collected
+ * grants to the database.
  *
  * @param $node
  *   The $node to acquire grants for.
@@ -2217,12 +2233,12 @@ function node_access_acquire_grants($node) {
 }
 
 /**
- * This function will write a list of grants to the database, deleting
- * any pre-existing grants. If a realm is provided, it will only
- * delete grants from that realm, but it will always delete a grant
- * from the 'all' realm. Modules which utilize node_access can
- * use this function when doing mass updates due to widespread permission
- * changes.
+ * Writes a list of grants to the database, deleting any previously saved ones.
+ *
+ * If a realm is provided, it will only delete grants from that realm, but it
+ * will always delete a grant from the 'all' realm. Modules that utilize
+ * node_access can use this function when doing mass updates due to widespread
+ * permission changes.
  *
  * @param $node
  *   The $node being written to. All that is necessary is that it contain a nid.
@@ -2685,7 +2701,7 @@ function node_save_action($node) {
 function node_assign_owner_action(&$node, $context) {
   $node->uid = $context['owner_uid'];
   $owner_name = db_result(db_query("SELECT name FROM {users} WHERE uid = %d", $context['owner_uid']));
-  watchdog('action', 'Changed owner of @type %title to uid %name.', array('@type' => node_get_types('type', $node), '%title' => $node->title, '%name' => $owner_name));
+  watchdog('action', 'Changed owner of @type %title to uid %name.', array('@type' => node_get_types('name', $node), '%title' => $node->title, '%name' => $owner_name));
 }
 
 function node_assign_owner_action_form($context) {
diff --git a/modules/node/node.pages.inc b/modules/node/node.pages.inc
index 3a65010..5b20004 100644
--- a/modules/node/node.pages.inc
+++ b/modules/node/node.pages.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -15,6 +14,9 @@ function node_page_edit($node) {
   return drupal_get_form($node->type .'_node_form', $node);
 }
 
+/**
+ * Page callback: Displays add content links for available content types.
+ */
 function node_add_page() {
   $item = menu_get_item();
   $content = system_admin_menu_block($item);
diff --git a/modules/node/node.tpl.php b/modules/node/node.tpl.php
index 6fc9674..0db067c 100644
--- a/modules/node/node.tpl.php
+++ b/modules/node/node.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file node.tpl.php
@@ -16,7 +15,7 @@
  * - $links: Themed links like "Read more", "Add new comment", etc. output
  *   from theme_links().
  * - $name: Themed username of node author output from theme_username().
- * - $node_url: Direct url of the current node.
+ * - $node_url: Direct URL of the current node.
  * - $terms: the themed list of taxonomy term links output from theme_links().
  * - $submitted: themed submission information output from
  *   theme_node_submitted().
diff --git a/modules/openid/openid.css b/modules/openid/openid.css
index 844696f..900c0d4 100644
--- a/modules/openid/openid.css
+++ b/modules/openid/openid.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 #edit-openid-identifier {
   background-image: url("login-bg.png");
diff --git a/modules/openid/openid.inc b/modules/openid/openid.inc
index 888aaaf..70dbee9 100644
--- a/modules/openid/openid.inc
+++ b/modules/openid/openid.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -362,7 +361,7 @@ function _openid_dh_rand($stop) {
   }
 
   do {
-    $bytes = "\x00". _openid_get_bytes($nbytes);
+    $bytes = "\x00". drupal_random_bytes($nbytes);
     $n = _openid_dh_binary_to_long($bytes);
     // Keep looping if this value is in the low duplicated range.
   } while (bccomp($n, $duplicate) < 0);
@@ -371,23 +370,7 @@ function _openid_dh_rand($stop) {
 }
 
 function _openid_get_bytes($num_bytes) {
-  static $f = null;
-  $bytes = '';
-  if (!isset($f)) {
-    $f = @fopen(OPENID_RAND_SOURCE, "r");
-  }
-  if (!$f) {
-    // pseudorandom used
-    $bytes = '';
-    for ($i = 0; $i < $num_bytes; $i += 4) {
-      $bytes .= pack('L', mt_rand());
-    }
-    $bytes = substr($bytes, 0, $num_bytes);
-  }
-  else {
-    $bytes = fread($f, $num_bytes);
-  }
-  return $bytes;
+  return drupal_random_bytes($num_bytes);
 }
 
 function _openid_response($str = NULL) {
diff --git a/modules/openid/openid.info b/modules/openid/openid.info
index 015dee6..0c49491 100644
--- a/modules/openid/openid.info
+++ b/modules/openid/openid.info
@@ -1,4 +1,3 @@
-; $Id$
 name = OpenID
 description = "Allows users to log into your site using OpenID."
 version = VERSION
diff --git a/modules/openid/openid.install b/modules/openid/openid.install
index d430258..0b0c95d 100644
--- a/modules/openid/openid.install
+++ b/modules/openid/openid.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Implementation of hook_install().
@@ -27,13 +26,14 @@ function openid_schema() {
       'idp_endpoint_uri' => array(
         'type' => 'varchar',
         'length' => 255,
-        'description' => 'URI of the OpenID Provider endpoint.',
+        'not null' => TRUE,
+        'description' => 'Primary Key: URI of the OpenID Provider endpoint.',
       ),
       'assoc_handle' => array(
         'type' => 'varchar',
         'length' => 255,
         'not null' => TRUE,
-        'description' => 'Primary Key: Used to refer to this association in subsequent messages.',
+        'description' => 'Used to refer to this association in subsequent messages.',
       ),
       'assoc_type' => array(
         'type' => 'varchar',
@@ -63,7 +63,10 @@ function openid_schema() {
         'description' => 'The lifetime, in seconds, of this association.',
       ),
     ),
-    'primary key' => array('assoc_handle'),
+    'primary key' => array('idp_endpoint_uri'),
+    'unique keys' => array(
+      'assoc_handle' => array('assoc_handle'),
+    ),
   );
 
   $schema['openid_nonce'] = array(
@@ -96,7 +99,7 @@ function openid_schema() {
 }
 
 /**
- * @defgroup updates-6.x-extra Extra openid updates for 6.x
+ * @addtogroup updates-6.x-extra
  * @{
  */
 
@@ -140,6 +143,68 @@ function openid_update_6000() {
 }
 
 /**
- * @} End of "defgroup updates-6.x-extra"
+ * Bind associations to their providers.
+ */
+function openid_update_6001() {
+  $ret = array();
+
+  db_drop_table($ret, 'openid_association');
+
+  $schema['openid_association'] = array(
+    'description' => 'Stores temporary shared key association information for OpenID authentication.',
+    'fields' => array(
+      'idp_endpoint_uri' => array(
+        'type' => 'varchar',
+        'length' => 255,
+        'not null' => TRUE,
+        'description' => 'Primary Key: URI of the OpenID Provider endpoint.',
+      ),
+      'assoc_handle' => array(
+        'type' => 'varchar',
+        'length' => 255,
+        'not null' => TRUE,
+        'description' => 'Used to refer to this association in subsequent messages.',
+      ),
+      'assoc_type' => array(
+        'type' => 'varchar',
+        'length' => 32,
+        'description' => 'The signature algorithm used: one of HMAC-SHA1 or HMAC-SHA256.',
+      ),
+      'session_type' => array(
+        'type' => 'varchar',
+        'length' => 32,
+        'description' => 'Valid association session types: "no-encryption", "DH-SHA1", and "DH-SHA256".',
+      ),
+      'mac_key' => array(
+        'type' => 'varchar',
+        'length' => 255,
+        'description' => 'The MAC key (shared secret) for this association.',
+      ),
+      'created' => array(
+        'type' => 'int',
+        'not null' => TRUE,
+        'default' => 0,
+        'description' => 'UNIX timestamp for when the association was created.',
+      ),
+      'expires_in' => array(
+        'type' => 'int',
+        'not null' => TRUE,
+        'default' => 0,
+        'description' => 'The lifetime, in seconds, of this association.',
+      ),
+    ),
+    'primary key' => array('idp_endpoint_uri'),
+    'unique keys' => array(
+      'assoc_handle' => array('assoc_handle'),
+    ),
+  );
+
+  db_create_table($ret, 'openid_association', $schema['openid_association']);
+
+  return $ret;
+}
+
+/**
+ * @} End of "addtogroup updates-6.x-extra".
  * The next series of updates should start at 7000.
  */
diff --git a/modules/openid/openid.js b/modules/openid/openid.js
index bd2948d..ce9de89 100644
--- a/modules/openid/openid.js
+++ b/modules/openid/openid.js
@@ -1,4 +1,3 @@
-// $Id$
 
 Drupal.behaviors.openid = function (context) {
   var $loginElements = $("#edit-name-wrapper, #edit-pass-wrapper, li.openid-link");
diff --git a/modules/openid/openid.module b/modules/openid/openid.module
index 79c020f..4a7c57b 100644
--- a/modules/openid/openid.module
+++ b/modules/openid/openid.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -111,7 +110,7 @@ function openid_form_alter(&$form, $form_state, $form_id) {
       '#weight' => -1,
       '#description' => l(t('What is OpenID?'), 'http://openid.net/', array('external' => TRUE)),
     );
-    $form['openid.return_to'] = array('#type' => 'hidden', '#value' => url('openid/authenticate', array('absolute' => TRUE, 'query' => drupal_get_destination())));
+    $form['openid.return_to'] = array('#type' => 'hidden', '#value' => url('openid/authenticate', array('absolute' => TRUE, 'query' => user_login_destination())));
   }
   elseif ($form_id == 'user_register' && isset($_SESSION['openid']['values'])) {
     // We were unable to auto-register a new user. Prefill the registration
@@ -426,14 +425,17 @@ function openid_authentication($response) {
   elseif (variable_get('user_register', 1)) {
     // Register new user
     $form_state['redirect'] = NULL;
-    $form_state['values']['name'] = (empty($response['openid.sreg.nickname'])) ? '' : $response['openid.sreg.nickname'];
-    $form_state['values']['mail'] = (empty($response['openid.sreg.email'])) ? '' : $response['openid.sreg.email'];
+    // Only signed SREG keys are included as required by OpenID Simple
+    // Registration Extension 1.0, section 4.
+    $signed_keys = explode(',', $response['openid.signed']);
+    $form_state['values']['name'] = in_array('sreg.nickname', $signed_keys) ? $response['openid.sreg.nickname'] : '';
+    $form_state['values']['mail'] = in_array('sreg.email', $signed_keys) ? $response['openid.sreg.email'] : '';
     $form_state['values']['pass']  = user_password();
     $form_state['values']['status'] = variable_get('user_register', 1) == 1;
     $form_state['values']['response'] = $response;
     $form_state['values']['auth_openid'] = $identity;
 
-    if (empty($response['openid.sreg.email']) && empty($response['openid.sreg.nickname'])) {
+    if (empty($form_state['values']['name']) && empty($form_state['values']['mail'])) {
       drupal_set_message(t('Please complete the registration by filling out the form below. If you already have an account, you can <a href="@login">log in</a> now and add your OpenID under "My account".', array('@login' => url('user/login'))), 'warning');
       $success = FALSE;
     }
@@ -497,6 +499,8 @@ function openid_association_request($public) {
 }
 
 function openid_authentication_request($claimed_id, $identity, $return_to = '', $assoc_handle = '', $version = 2) {
+  global $base_url;
+
   module_load_include('inc', 'openid');
 
   $ns = ($version == 2) ? OPENID_NS_2_0 : OPENID_NS_1_0;
@@ -510,10 +514,10 @@ function openid_authentication_request($claimed_id, $identity, $return_to = '',
   );
 
   if ($version == 2) {
-    $request['openid.realm'] = url('', array('absolute' => TRUE));
+    $request['openid.realm'] = $base_url . '/';
   }
   else {
-    $request['openid.trust_root'] = url('', array('absolute' => TRUE));
+    $request['openid.trust_root'] = $base_url . '/';
   }
 
   // Simple Registration
@@ -547,7 +551,7 @@ function openid_verify_assertion($service, $response) {
   // http://openid.net/specs/openid-authentication-2_0.html#rfc.section.11.4
   // Verify the signatures.
   $valid = FALSE;
-  $association = db_fetch_object(db_query("SELECT * FROM {openid_association} WHERE assoc_handle = '%s'", $response['openid.assoc_handle']));
+  $association = db_fetch_object(db_query("SELECT * FROM {openid_association} WHERE idp_endpoint_uri = '%s' AND assoc_handle = '%s'", $service['uri'], $response['openid.assoc_handle']));
   if ($association && isset($association->session_type)) {
     // http://openid.net/specs/openid-authentication-2_0.html#rfc.section.11.4.2
     // Verification using an association.
diff --git a/modules/openid/openid.pages.inc b/modules/openid/openid.pages.inc
index 79afad8..5ac1671 100644
--- a/modules/openid/openid.pages.inc
+++ b/modules/openid/openid.pages.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/openid/xrds.inc b/modules/openid/xrds.inc
index 9558768..36f5282 100644
--- a/modules/openid/xrds.inc
+++ b/modules/openid/xrds.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 // Global variables to track parsing state
 $xrds_open_elements = array();
diff --git a/modules/path/path.admin.inc b/modules/path/path.admin.inc
index bee4b84..dba0d03 100644
--- a/modules/path/path.admin.inc
+++ b/modules/path/path.admin.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/path/path.info b/modules/path/path.info
index 8ba436f..8b9c52a 100644
--- a/modules/path/path.info
+++ b/modules/path/path.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Path
 description = Allows users to rename URLs.
 package = Core - optional
diff --git a/modules/path/path.module b/modules/path/path.module
index f7eb8c0..953feb2 100644
--- a/modules/path/path.module
+++ b/modules/path/path.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -84,8 +83,27 @@ function path_admin_delete($pid = 0) {
 
 /**
  * Set an aliased path for a given Drupal path, preventing duplicates.
+ * 
+ * @param $path
+ *   Path URL. Set to NULL to delete alias.
+ * @param $alias
+ *   Alias URL. Set to NULL to delete alias.
+ * @param $pid
+ *   Path id to update. Set to NULL to create a new alias or to delete a group of aliases.
+ * @param $language
+ *   The language this alias is valid for.
  */
 function path_set_alias($path = NULL, $alias = NULL, $pid = NULL, $language = '') {
+  /* This function claimed to prevent duplicate aliases but has not done
+   * so since the end of 2007.
+   * The uniqueness of dst+language pairs was enforced on the database level
+   * until D6.16 (march 2010); trying to insert duplicate aliass would yield a
+   * database error.
+   * From D6.16 onwards, duplicates would silently be inserted, and
+   * drupal_lookup_path() consistently uses those newer aliases.
+   * While fixing an issue in D6.23, the behavior was reverted to preventing
+   * duplicates by the below code. Watchdog errors are now logged instead.
+   */
   $path = urldecode($path);
   $alias = urldecode($alias);
   // First we check if we deal with an existing alias and delete or modify it based on pid.
@@ -97,20 +115,43 @@ function path_set_alias($path = NULL, $alias = NULL, $pid = NULL, $language = ''
     }
     else {
       // Update the existing alias.
-      db_query("UPDATE {url_alias} SET src = '%s', dst = '%s', language = '%s' WHERE pid = %d", $path, $alias, $language, $pid);
+      // Check if the alias exists already.
+      $existing = db_fetch_array(db_query("SELECT pid, src FROM {url_alias} WHERE dst = '%s' AND language = '%s' ORDER BY pid DESC", $alias, $language));
+      if (!$existing || ($existing['pid'] == $pid && $existing['src'] != $path)) {
+        db_query("UPDATE {url_alias} SET src = '%s', dst = '%s', language = '%s' WHERE pid = %d", $path, $alias, $language, $pid);
+      }
+      else {
+        if ($existing['src'] != $path) {
+          watchdog('path', "The alias for path '@path' (language '@lang') was not updated to '@alias', because the path '@expath' already has the same alias.",
+            array('@path' => $path, '@lang' => $language, '@alias' => $alias, '@expath' => $existing['src']),
+            WATCHDOG_ERROR);
+        }
+        // Don't clear cache if we didn't change anything
+        return;
+      }
     }
   }
-  else if ($path && $alias) {
-    // Check for existing aliases.
-    if ($alias == drupal_get_path_alias($path, $language)) {
-      // There is already such an alias, neutral or in this language.
-      // Update the alias based on alias; setting the language if not yet done.
-      db_query("UPDATE {url_alias} SET src = '%s', dst = '%s', language = '%s' WHERE dst = '%s'", $path, $alias, $language, $alias);
-    }
-    else {
+  elseif ($path && $alias) {
+    // Add this alias to the database, if it's new & doesn't cause conflicts.
+    $existing = db_fetch_array(db_query("SELECT src, language, pid FROM {url_alias} WHERE dst = '%s' AND language IN('%s', '') ORDER BY language DESC, pid DESC", $alias, $language));
+    if (!$existing || ($existing['language'] != $language && $existing['src'] != $path)) {
       // A new alias. Add it to the database.
       db_query("INSERT INTO {url_alias} (src, dst, language) VALUES ('%s', '%s', '%s')", $path, $alias, $language);
     }
+    elseif ($existing['language'] != $language) {
+      // This alias already exists ONLY for 'language neutral': update language.
+      // (We can only get here if $language != '')
+      db_query("UPDATE {url_alias} SET language = '%s' WHERE pid = %d", $language, $existing['pid']);
+    }
+    else {
+      if ($existing['src'] != $path) {
+        watchdog('path', "The alias '@alias' for path '@path' (language '@lang') was not created, because the path '@expath' already has the same alias.",
+          array('@path' => $path, '@lang' => $language, '@alias' => $alias, '@expath' => $existing['src']),
+          WATCHDOG_ERROR);
+      }
+      // Don't clear cache if we didn't change anything
+      return;
+    }
   }
   else {
     // Delete the alias.
@@ -131,7 +172,7 @@ function path_set_alias($path = NULL, $alias = NULL, $pid = NULL, $language = ''
  * Allows URL aliases for nodes to be specified at node edit time rather
  * than through the administrative interface.
  */
-function path_nodeapi(&$node, $op, $arg) {
+function path_nodeapi(&$node, $op, $arg = NULL) {
   // Permissions are required for everything except node loading.
   if (user_access('create url aliases') || user_access('administer url aliases') || ($op == 'load')) {
     $language = isset($node->language) ? $node->language : '';
@@ -162,6 +203,10 @@ function path_nodeapi(&$node, $op, $arg) {
         break;
 
       case 'update':
+        // $node->pid is usually only set when updating from a node edit form
+        // (see path_form_alter). If it is not set (e.g. on most node_save()
+        // commands), we cannot be sure whether a change in $node->path is meant
+        // to replace an existing alias or add one extra, so we do the latter.
         path_set_alias('node/'. $node->nid, isset($node->path) ? $node->path : NULL, isset($node->pid) ? $node->pid : NULL, $language);
         break;
 
diff --git a/modules/php/php.info b/modules/php/php.info
index 2327acc..558d129 100644
--- a/modules/php/php.info
+++ b/modules/php/php.info
@@ -1,4 +1,3 @@
-; $Id$
 name = PHP filter
 description = Allows embedded PHP code/snippets to be evaluated.
 package = Core - optional
diff --git a/modules/php/php.install b/modules/php/php.install
index d5ee4d8..b41d054 100644
--- a/modules/php/php.install
+++ b/modules/php/php.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Implementation of hook_install().
diff --git a/modules/php/php.module b/modules/php/php.module
index 6ba088f..0533d43 100644
--- a/modules/php/php.module
+++ b/modules/php/php.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/ping/ping.info b/modules/ping/ping.info
index c89de3b..c427829 100644
--- a/modules/ping/ping.info
+++ b/modules/ping/ping.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Ping
 description = Alerts other sites when your site has been updated.
 package = Core - optional
diff --git a/modules/ping/ping.module b/modules/ping/ping.module
index 6b27077..6553960 100644
--- a/modules/ping/ping.module
+++ b/modules/ping/ping.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/poll/poll-bar-block.tpl.php b/modules/poll/poll-bar-block.tpl.php
index ca744d6..d5fbaee 100644
--- a/modules/poll/poll-bar-block.tpl.php
+++ b/modules/poll/poll-bar-block.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file poll-bar-block.tpl.php
diff --git a/modules/poll/poll-bar.tpl.php b/modules/poll/poll-bar.tpl.php
index 54a7999..cb4dbc8 100644
--- a/modules/poll/poll-bar.tpl.php
+++ b/modules/poll/poll-bar.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file poll-bar.tpl.php
diff --git a/modules/poll/poll-results-block.tpl.php b/modules/poll/poll-results-block.tpl.php
index 0d2d62d..12ec6d9 100644
--- a/modules/poll/poll-results-block.tpl.php
+++ b/modules/poll/poll-results-block.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 /**
  * @file poll-results-block.tpl.php
  * Display the poll results in a block.
diff --git a/modules/poll/poll-results.tpl.php b/modules/poll/poll-results.tpl.php
index 670a50a..bb57f12 100644
--- a/modules/poll/poll-results.tpl.php
+++ b/modules/poll/poll-results.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file poll-results-block.tpl.php
diff --git a/modules/poll/poll-rtl.css b/modules/poll/poll-rtl.css
index f81ef34..14d42e6 100644
--- a/modules/poll/poll-rtl.css
+++ b/modules/poll/poll-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 .poll .bar .foreground {
   float: right;
diff --git a/modules/poll/poll-vote.tpl.php b/modules/poll/poll-vote.tpl.php
index 5b4a736..5ab1cb5 100644
--- a/modules/poll/poll-vote.tpl.php
+++ b/modules/poll/poll-vote.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file poll-vote.tpl.php
diff --git a/modules/poll/poll.css b/modules/poll/poll.css
index 2aaf228..7ee0beb 100644
--- a/modules/poll/poll.css
+++ b/modules/poll/poll.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 .poll .bar {
   height: 1em;
diff --git a/modules/poll/poll.info b/modules/poll/poll.info
index 1622d36..8edb999 100644
--- a/modules/poll/poll.info
+++ b/modules/poll/poll.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Poll
 description = Allows your site to capture votes on different topics in the form of multiple choice questions.
 package = Core - optional
diff --git a/modules/poll/poll.install b/modules/poll/poll.install
index 18cff15..5dd977d 100644
--- a/modules/poll/poll.install
+++ b/modules/poll/poll.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Implementation of hook_install().
diff --git a/modules/poll/poll.module b/modules/poll/poll.module
index d40d66e..7bc5587 100644
--- a/modules/poll/poll.module
+++ b/modules/poll/poll.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -128,26 +127,24 @@ function _poll_menu_access($node, $perm, $inspect_allowvotes) {
  * Generates a block containing the latest poll.
  */
 function poll_block($op = 'list', $delta = 0) {
-  if (user_access('access content')) {
-    if ($op == 'list') {
-      $blocks[0]['info'] = t('Most recent poll');
-      return $blocks;
-    }
-    else if ($op == 'view') {
-      // Retrieve the latest poll.
-      $sql = db_rewrite_sql("SELECT MAX(n.created) FROM {node} n INNER JOIN {poll} p ON p.nid = n.nid WHERE n.status = 1 AND p.active = 1");
-      $timestamp = db_result(db_query($sql));
-      if ($timestamp) {
-        $poll = node_load(array('type' => 'poll', 'created' => $timestamp, 'status' => 1));
-
-        if ($poll->nid) {
-          $poll = poll_view($poll, TRUE, FALSE, TRUE);
-        }
+  if ($op == 'list') {
+    $blocks[0]['info'] = t('Most recent poll');
+    return $blocks;
+  }
+  else if ($op == 'view' && user_access('access content')) {
+    // Retrieve the latest poll.
+    $sql = db_rewrite_sql("SELECT MAX(n.created) FROM {node} n INNER JOIN {poll} p ON p.nid = n.nid WHERE n.status = 1 AND p.active = 1");
+    $timestamp = db_result(db_query($sql));
+    if ($timestamp) {
+      $poll = node_load(array('type' => 'poll', 'created' => $timestamp, 'status' => 1));
+
+      if ($poll->nid) {
+        $poll = poll_view($poll, TRUE, FALSE, TRUE);
       }
-      $block['subject'] = t('Poll');
-      $block['content'] = drupal_render($poll->content);
-      return $block;
     }
+    $block['subject'] = t('Poll');
+    $block['content'] = drupal_render($poll->content);
+    return $block;
   }
 }
 
diff --git a/modules/poll/poll.pages.inc b/modules/poll/poll.pages.inc
index 5970735..e3fb5de 100644
--- a/modules/poll/poll.pages.inc
+++ b/modules/poll/poll.pages.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/profile/profile-block.tpl.php b/modules/profile/profile-block.tpl.php
index 31bf5d1..174598c 100644
--- a/modules/profile/profile-block.tpl.php
+++ b/modules/profile/profile-block.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file profile-block.tpl.php
diff --git a/modules/profile/profile-listing.tpl.php b/modules/profile/profile-listing.tpl.php
index fb22c06..c0046d8 100644
--- a/modules/profile/profile-listing.tpl.php
+++ b/modules/profile/profile-listing.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file profile-listing.tpl.php
diff --git a/modules/profile/profile-wrapper.tpl.php b/modules/profile/profile-wrapper.tpl.php
index 2030c2a..4601b59 100644
--- a/modules/profile/profile-wrapper.tpl.php
+++ b/modules/profile/profile-wrapper.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file profile-wrapper.tpl.php
@@ -7,7 +6,7 @@
  * profiles.
  *
  * This template is used when viewing a list of users. It can be a general
- * list for viewing all users with the url of "example.com/profile" or when
+ * list for viewing all users with the URL of "example.com/profile" or when
  * viewing a set of users who share a specific value for a profile such
  * as "example.com/profile/country/belgium".
  *
diff --git a/modules/profile/profile.admin.inc b/modules/profile/profile.admin.inc
index d953618..089b5ea 100644
--- a/modules/profile/profile.admin.inc
+++ b/modules/profile/profile.admin.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/profile/profile.css b/modules/profile/profile.css
index b64ef9c..c3132f9 100644
--- a/modules/profile/profile.css
+++ b/modules/profile/profile.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 #profile-fields td.category {
   font-weight: bold;
diff --git a/modules/profile/profile.info b/modules/profile/profile.info
index 139670c..a6764f5 100644
--- a/modules/profile/profile.info
+++ b/modules/profile/profile.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Profile
 description = Supports configurable user profiles.
 package = Core - optional
diff --git a/modules/profile/profile.install b/modules/profile/profile.install
index e113dc6..e2a7612 100644
--- a/modules/profile/profile.install
+++ b/modules/profile/profile.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Implementation of hook_install().
diff --git a/modules/profile/profile.js b/modules/profile/profile.js
index 2d84d27..7661d23 100644
--- a/modules/profile/profile.js
+++ b/modules/profile/profile.js
@@ -1,4 +1,3 @@
-// $Id$
 
 /**
  * Add functionality to the profile drag and drop table.
diff --git a/modules/profile/profile.module b/modules/profile/profile.module
index eba16aa..141c094 100644
--- a/modules/profile/profile.module
+++ b/modules/profile/profile.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/profile/profile.pages.inc b/modules/profile/profile.pages.inc
index ef13923..065bdeb 100644
--- a/modules/profile/profile.pages.inc
+++ b/modules/profile/profile.pages.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/search/search-block-form.tpl.php b/modules/search/search-block-form.tpl.php
index a464765..2de4bfa 100644
--- a/modules/search/search-block-form.tpl.php
+++ b/modules/search/search-block-form.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file search-block-form.tpl.php
diff --git a/modules/search/search-result.tpl.php b/modules/search/search-result.tpl.php
index 1f9f96e..78c0d34 100644
--- a/modules/search/search-result.tpl.php
+++ b/modules/search/search-result.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file search-result.tpl.php
diff --git a/modules/search/search-results.tpl.php b/modules/search/search-results.tpl.php
index 709245b..f2d95d4 100644
--- a/modules/search/search-results.tpl.php
+++ b/modules/search/search-results.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file search-results.tpl.php
diff --git a/modules/search/search-rtl.css b/modules/search/search-rtl.css
index f6c69ac..fb22300 100644
--- a/modules/search/search-rtl.css
+++ b/modules/search/search-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 .search-advanced .criterion {
   float: right;
diff --git a/modules/search/search-theme-form.tpl.php b/modules/search/search-theme-form.tpl.php
index 541b498..ab1e97e 100644
--- a/modules/search/search-theme-form.tpl.php
+++ b/modules/search/search-theme-form.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file search-theme-form.tpl.php
diff --git a/modules/search/search.admin.inc b/modules/search/search.admin.inc
index 6e57c65..3b374bb 100644
--- a/modules/search/search.admin.inc
+++ b/modules/search/search.admin.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/search/search.css b/modules/search/search.css
index cb4a220..a6eccc9 100644
--- a/modules/search/search.css
+++ b/modules/search/search.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 .search-form {
   margin-bottom: 1em;
diff --git a/modules/search/search.info b/modules/search/search.info
index 1ea0f11..5908fc0 100644
--- a/modules/search/search.info
+++ b/modules/search/search.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Search
 description = Enables site-wide keyword searching.
 package = Core - optional
diff --git a/modules/search/search.install b/modules/search/search.install
index ebadaf7..0d9d748 100644
--- a/modules/search/search.install
+++ b/modules/search/search.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Implementation of hook_install().
diff --git a/modules/search/search.module b/modules/search/search.module
index efe1780..fbd4438 100644
--- a/modules/search/search.module
+++ b/modules/search/search.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -44,7 +43,7 @@ define('PREG_CLASS_SEARCH_EXCLUDE',
 '\x{2ce5}-\x{2cff}\x{2d6f}\x{2e00}-\x{3005}\x{3007}-\x{303b}\x{303d}-\x{303f}'.
 '\x{3099}-\x{309e}\x{30a0}\x{30fb}\x{30fd}\x{30fe}\x{3190}-\x{319f}\x{31c0}-'.
 '\x{31cf}\x{3200}-\x{33ff}\x{4dc0}-\x{4dff}\x{a015}\x{a490}-\x{a716}\x{a802}'.
-'\x{a806}\x{a80b}\x{a823}-\x{a82b}\x{d800}-\x{f8ff}\x{fb1e}\x{fb29}\x{fd3e}'.
+'\x{a806}\x{a80b}\x{a823}-\x{a82b}\x{e000}-\x{f8ff}\x{fb1e}\x{fb29}\x{fd3e}'.
 '\x{fd3f}\x{fdfc}-\x{fe6b}\x{feff}-\x{ff0f}\x{ff1a}-\x{ff20}\x{ff3b}-\x{ff40}'.
 '\x{ff5b}-\x{ff65}\x{ff70}\x{ff9e}\x{ff9f}\x{ffe0}-\x{fffd}');
 
@@ -911,7 +910,7 @@ function _search_parse_query(&$word, &$scores, $not = FALSE) {
  *              Default: 'ORDER BY score DESC'
  *
  * @return
- *   An array of SIDs for the search results.
+ *   An array of objects for the search results.
  *
  * @ingroup search
  */
@@ -988,15 +987,14 @@ function search_get_keys() {
  * for all of the search features to work.
  *
  * There are three ways to interact with the search system:
- * - Specifically for searching nodes, you can implement nodeapi('update index')
- *   and nodeapi('search result'). However, note that the search system already
- *   indexes all visible output of a node, i.e. everything displayed normally
- *   by hook_view() and hook_nodeapi('view'). This is usually sufficient.
- *   You should only use this mechanism if you want additional, non-visible data
- *   to be indexed.
+ * - Specifically for searching nodes, you can implement
+ *   hook_nodeapi('update index') and hook_nodeapi('search result'). However,
+ *   note that the search system already indexes all visible output of a node,
+ *   i.e. everything displayed normally by hook_view() and hook_nodeapi('view').
+ *   This is usually sufficient. You should only use this mechanism if you want
+ *   additional, non-visible data to be indexed.
  * - Implement hook_search(). This will create a search tab for your module on
- *   the /search page with a simple keyword search form. You may optionally
- *   implement hook_search_item() to customize the display of your results.
+ *   the /search page with a simple keyword search form.
  * - Implement hook_update_index(). This allows your module to use Drupal's
  *   HTML indexing mechanism for searching full text efficiently.
  *
@@ -1019,7 +1017,7 @@ function search_get_keys() {
  * @param $prompt
  *   A piece of text to put before the form (e.g. "Enter your keywords")
  * @return
- *   An HTML string containing the search form.
+ *   A Form API array for the search form.
  */
 function search_form(&$form_state, $action = '', $keys = '', $type = NULL, $prompt = NULL) {
 
@@ -1038,7 +1036,7 @@ function search_form(&$form_state, $action = '', $keys = '', $type = NULL, $prom
     '#attributes' => array('class' => 'search-form'),
   );
   $form['module'] = array('#type' => 'value', '#value' => $type);
-  $form['basic'] = array('#type' => 'item', '#title' => $prompt);
+  $form['basic'] = array('#type' => 'item', '#title' => $prompt, '#id' => 'edit-keys');
   $form['basic']['inline'] = array('#prefix' => '<div class="container-inline">', '#suffix' => '</div>');
   $form['basic']['inline']['keys'] = array(
     '#type' => 'textfield',
@@ -1060,7 +1058,7 @@ function search_form(&$form_state, $action = '', $keys = '', $type = NULL, $prom
  *
  * @ingroup forms
  * @see search_box_form_submit()
- * @see theme_search_box_form()
+ * @see search-block-form.tpl.php
  */
 function search_box(&$form_state, $form_id) {
   $form[$form_id] = array(
diff --git a/modules/search/search.pages.inc b/modules/search/search.pages.inc
index db1773f..9faa1c9 100644
--- a/modules/search/search.pages.inc
+++ b/modules/search/search.pages.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/statistics/statistics.admin.inc b/modules/statistics/statistics.admin.inc
index 729d8b8..63845fe 100644
--- a/modules/statistics/statistics.admin.inc
+++ b/modules/statistics/statistics.admin.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/statistics/statistics.info b/modules/statistics/statistics.info
index 8934614..b297368 100644
--- a/modules/statistics/statistics.info
+++ b/modules/statistics/statistics.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Statistics
 description = Logs access statistics for your site.
 package = Core - optional
diff --git a/modules/statistics/statistics.install b/modules/statistics/statistics.install
index 2a11753..9103588 100644
--- a/modules/statistics/statistics.install
+++ b/modules/statistics/statistics.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Implementation of hook_install().
@@ -119,7 +118,7 @@ function statistics_schema() {
 }
 
 /**
- * @defgroup updates-6.x-extra Extra statistics updates for 6.x
+ * @addtogroup updates-6.x-extra
  * @{
  */
 
@@ -133,6 +132,6 @@ function statistics_update_6000() {
 }
 
 /**
- * @} End of "defgroup updates-6.x-extra"
+ * @} End of "addtogroup updates-6.x-extra".
  * The next series of updates should start at 7000.
  */
diff --git a/modules/statistics/statistics.module b/modules/statistics/statistics.module
index 7ee1e13..ba964ef 100644
--- a/modules/statistics/statistics.module
+++ b/modules/statistics/statistics.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/statistics/statistics.pages.inc b/modules/statistics/statistics.pages.inc
index db94129..f10e81c 100644
--- a/modules/statistics/statistics.pages.inc
+++ b/modules/statistics/statistics.pages.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/syslog/syslog.info b/modules/syslog/syslog.info
index e08efb5..81cda0a 100644
--- a/modules/syslog/syslog.info
+++ b/modules/syslog/syslog.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Syslog
 description = Logs and records system events to syslog.
 package = Core - optional
diff --git a/modules/syslog/syslog.install b/modules/syslog/syslog.install
new file mode 100644
index 0000000..12ff4fb
--- /dev/null
+++ b/modules/syslog/syslog.install
@@ -0,0 +1,15 @@
+<?php
+
+/**
+ * @file
+ * Install, update and uninstall functions for the syslog module.
+ */
+
+/**
+ * Implements hook_uninstall().
+ */
+function syslog_uninstall() {
+  variable_del('syslog_identity');
+  variable_del('syslog_facility');
+  variable_del('syslog_format');
+}
diff --git a/modules/syslog/syslog.module b/modules/syslog/syslog.module
index 5f92580..ad2929d 100644
--- a/modules/syslog/syslog.module
+++ b/modules/syslog/syslog.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -38,6 +37,13 @@ function syslog_menu() {
 }
 
 function syslog_admin_settings() {
+  $form['syslog_identity'] = array(
+    '#type'          => 'textfield',
+    '#title'         => t('Syslog identity'),
+    '#default_value' => variable_get('syslog_identity', 'drupal'),
+    '#description'   => t('A string that will be prepended to every message logged to Syslog. If you have multiple sites logging to the same Syslog log file, a unique identity per site makes it easy to tell the log entries apart. For more information on syslog, see <a href="@syslog_help">Syslog help</a>.', array(
+      '@syslog_help' => url('admin/help/syslog'))),
+  );
   $form['syslog_facility'] = array(
     '#type'          => 'select',
     '#title'         => t('Send events to this syslog facility'),
@@ -73,7 +79,7 @@ function syslog_watchdog($entry) {
 
   if (!$log_init) {
     $log_init = TRUE;
-    openlog('drupal', LOG_NDELAY, variable_get('syslog_facility', DEFAULT_SYSLOG_FACILITY));
+    openlog(variable_get('syslog_identity', 'drupal'), LOG_NDELAY, variable_get('syslog_facility', DEFAULT_SYSLOG_FACILITY));
   }
 
   syslog($entry['severity'], theme('syslog_format', $entry));
diff --git a/modules/system/admin-rtl.css b/modules/system/admin-rtl.css
index 08f12ac..4a9ee2c 100644
--- a/modules/system/admin-rtl.css
+++ b/modules/system/admin-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 div.admin-panel .body {
   padding: 0 8px 2px 4px;
diff --git a/modules/system/admin.css b/modules/system/admin.css
index 00ad19d..3d5c52f 100644
--- a/modules/system/admin.css
+++ b/modules/system/admin.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /*
 ** Formatting for administration page
diff --git a/modules/system/block.tpl.php b/modules/system/block.tpl.php
index 506f894..0f7f1e1 100644
--- a/modules/system/block.tpl.php
+++ b/modules/system/block.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file block.tpl.php
diff --git a/modules/system/box.tpl.php b/modules/system/box.tpl.php
index 796c3dc..ac4df35 100644
--- a/modules/system/box.tpl.php
+++ b/modules/system/box.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file box.tpl.php
diff --git a/modules/system/defaults-rtl.css b/modules/system/defaults-rtl.css
index fc50f7b..924ac5f 100644
--- a/modules/system/defaults-rtl.css
+++ b/modules/system/defaults-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 th {
   text-align: right;
diff --git a/modules/system/defaults.css b/modules/system/defaults.css
index 7e97e88..eb983b7 100644
--- a/modules/system/defaults.css
+++ b/modules/system/defaults.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /*
 ** HTML elements
diff --git a/modules/system/maintenance-page.tpl.php b/modules/system/maintenance-page.tpl.php
index 4e4e409..750c1e2 100644
--- a/modules/system/maintenance-page.tpl.php
+++ b/modules/system/maintenance-page.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file maintenance-page.tpl.php
diff --git a/modules/system/maintenance.css b/modules/system/maintenance.css
index a18f10c..c234932 100644
--- a/modules/system/maintenance.css
+++ b/modules/system/maintenance.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /* Update styles */
 #update-results {
diff --git a/modules/system/page.tpl.php b/modules/system/page.tpl.php
index d4cfe92..c9ff36c 100644
--- a/modules/system/page.tpl.php
+++ b/modules/system/page.tpl.php
@@ -1,10 +1,8 @@
 <?php
-// $Id$
 
 /**
- * @file page.tpl.php
- *
- * Theme implementation to display a single Drupal page.
+ * @file
+ * Displays a single Drupal page.
  *
  * Available variables:
  *
@@ -14,62 +12,68 @@
  * - $css: An array of CSS files for the current page.
  * - $directory: The directory the theme is located in, e.g. themes/garland or
  *   themes/garland/minelli.
- * - $is_front: TRUE if the current page is the front page. Used to toggle the mission statement.
+ * - $is_front: TRUE if the current page is the front page.
  * - $logged_in: TRUE if the user is registered and signed in.
  * - $is_admin: TRUE if the user has permission to access administration pages.
  *
  * Page metadata:
  * - $language: (object) The language the site is being displayed in.
  *   $language->language contains its textual representation.
- *   $language->dir contains the language direction. It will either be 'ltr' or 'rtl'.
- * - $head_title: A modified version of the page title, for use in the TITLE tag.
- * - $head: Markup for the HEAD section (including meta tags, keyword tags, and
+ *   $language->dir contains the language direction. It will either be 'ltr' or
+ *   'rtl'.
+ * - $head_title: A modified version of the page title, for use in the TITLE
+ *   element.
+ * - $head: Markup for the HEAD element (including meta tags, keyword tags, and
  *   so on).
  * - $styles: Style tags necessary to import all CSS files for the page.
  * - $scripts: Script tags necessary to load the JavaScript files and settings
  *   for the page.
  * - $body_classes: A set of CSS classes for the BODY tag. This contains flags
- *   indicating the current layout (multiple columns, single column), the current
- *   path, whether the user is logged in, and so on.
+ *   indicating the current layout (multiple columns, single column), the
+ *   current path, whether the user is logged in, and so on.
  *
  * Site identity:
  * - $front_page: The URL of the front page. Use this instead of $base_path,
- *   when linking to the front page. This includes the language domain or prefix.
+ *   when linking to the front page. This includes the language domain or
+ *   prefix.
  * - $logo: The path to the logo image, as defined in theme configuration.
- * - $site_name: The name of the site, empty when display has been disabled
- *   in theme settings.
+ * - $site_name: The name of the site, empty when display has been disabled in
+ *   theme settings.
  * - $site_slogan: The slogan of the site, empty when display has been disabled
  *   in theme settings.
- * - $mission: The text of the site mission, empty when display has been disabled
- *   in theme settings.
+ * - $mission: The text of the site mission, empty when display has been
+ *   disabled in theme settings.
  *
  * Navigation:
- * - $search_box: HTML to display the search box, empty if search has been disabled.
- * - $primary_links (array): An array containing primary navigation links for the
- *   site, if they have been configured.
- * - $secondary_links (array): An array containing secondary navigation links for
+ * - $search_box: HTML to display the search box, empty if search has been
+ *   disabled.
+ * - $primary_links (array): An array containing primary navigation links for
  *   the site, if they have been configured.
+ * - $secondary_links (array): An array containing secondary navigation links
+ *   for the site, if they have been configured.
  *
- * Page content (in order of occurrance in the default page.tpl.php):
+ * Page content (in order of occurrence in the default page.tpl.php):
  * - $left: The HTML for the left sidebar.
- *
  * - $breadcrumb: The breadcrumb trail for the current page.
  * - $title: The page title, for use in the actual HTML content.
  * - $help: Dynamic help text, mostly for admin pages.
- * - $messages: HTML for status and error messages. Should be displayed prominently.
- * - $tabs: Tabs linking to any sub-pages beneath the current page (e.g., the view
- *   and edit tabs when displaying a node).
- *
+ * - $messages: HTML for status and error messages. Should be displayed
+ *   prominently.
+ * - $tabs: Tabs linking to any sub-pages beneath the current page (e.g., the
+ *   view and edit tabs when displaying a node).
  * - $content: The main content of the current Drupal page.
- *
  * - $right: The HTML for the right sidebar.
+ * - $node: The node object, if there is an automatically-loaded node associated
+ *   with the page, and the node ID is the second argument in the page's path
+ *   (e.g. node/12345 and node/12345/revisions, but not comment/reply/12345).
  *
  * Footer/closing data:
  * - $feed_icons: A string of all feed icons for the current page.
  * - $footer_message: The footer message as defined in the admin settings.
  * - $footer : The footer region.
  * - $closure: Final closing markup from any modules that have altered the page.
- *   This variable should always be output last, after all other dynamic content.
+ *   This variable should always be output last, after all other dynamic
+ *   content.
  *
  * @see template_preprocess()
  * @see template_preprocess_page()
diff --git a/modules/system/system-menus-rtl.css b/modules/system/system-menus-rtl.css
index 4ef54c3..3b92bfb 100644
--- a/modules/system/system-menus-rtl.css
+++ b/modules/system/system-menus-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 ul.menu {
   text-align:right;
diff --git a/modules/system/system-menus.css b/modules/system/system-menus.css
index 369dcc4..05eb2de 100644
--- a/modules/system/system-menus.css
+++ b/modules/system/system-menus.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 ul.menu {
   list-style: none;
diff --git a/modules/system/system-rtl.css b/modules/system/system-rtl.css
index d8d2d62..a0fc51e 100644
--- a/modules/system/system-rtl.css
+++ b/modules/system/system-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 thead th {
   text-align: right;
diff --git a/modules/system/system.admin.inc b/modules/system/system.admin.inc
index 798a5ff..42fd311 100644
--- a/modules/system/system.admin.inc
+++ b/modules/system/system.admin.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -62,6 +61,7 @@ function system_main_admin_page($arg = NULL) {
 
 /**
  * Provide a single block from the administration menu as a page.
+ *
  * This function is often a destination for these blocks.
  * For example, 'admin/content/types' needs to have a destination to be valid
  * in the Drupal menu system, but too much information there might be
@@ -128,7 +128,7 @@ function system_admin_by_module() {
 }
 
 /**
- * Menu callback; displays a module's settings page.
+ * Menu callback: Displays the configuration overview page.
  */
 function system_settings_overview() {
   // Check database setup if necessary
@@ -503,17 +503,6 @@ function system_theme_settings(&$form_state, $key = '') {
   }
 
   if ($key) {
-    // Include the theme's theme-settings.php file
-    $filename = './'. str_replace("/$key.info", '', $themes[$key]->filename) .'/theme-settings.php';
-    if (!file_exists($filename) and !empty($themes[$key]->info['base theme'])) {
-      // If the theme doesn't have a theme-settings.php file, use the base theme's.
-      $base = $themes[$key]->info['base theme'];
-      $filename = './'. str_replace("/$base.info", '', $themes[$base]->filename) .'/theme-settings.php';
-    }
-    if (file_exists($filename)) {
-      require_once $filename;
-    }
-
     // Call engine-specific settings.
     $function = $themes[$key]->prefix .'_engine_settings';
     if (function_exists($function)) {
@@ -523,16 +512,36 @@ function system_theme_settings(&$form_state, $key = '') {
         $form['engine_specific'] = array_merge($form['engine_specific'], $group);
       }
     }
-    // Call theme-specific settings.
-    $function = $key .'_settings';
-    if (!function_exists($function)) {
-      $function = $themes[$key]->prefix .'_settings';
+
+    // Create a list which includes the current theme and all its base themes.
+    if (isset($themes[$key]->base_themes)) {
+      $theme_keys = array_keys($themes[$key]->base_themes);
+      $theme_keys[] = $key;
     }
-    if (function_exists($function)) {
-      $group = $function($settings);
-      if (!empty($group)) {
-        $form['theme_specific'] = array('#type' => 'fieldset', '#title' => t('Theme-specific settings'), '#description' => t('These settings only exist for the %theme theme and all the styles based on it.', array('%theme' => $themes[$key]->info['name'])));
-        $form['theme_specific'] = array_merge($form['theme_specific'], $group);
+    else {
+      $theme_keys = array($key);
+    }
+
+    // Process the theme and all its base themes.
+    foreach ($theme_keys as $theme) {
+      // Include the theme-settings.php file.
+      $filename = './'. str_replace("/$theme.info", '', $themes[$theme]->filename) .'/theme-settings.php';
+      if (file_exists($filename)) {
+        require_once $filename;
+      }
+
+      $function = $theme .'_settings';
+      if (!function_exists($function)) {
+        $function = $themes[$theme]->prefix .'_settings';
+      }
+      if (function_exists($function)) {
+        $group = $function($settings);
+        if (!empty($group)) {
+          $form['theme_specific']['#type'] = 'fieldset';
+          $form['theme_specific']['#title'] = t('Theme-specific settings');
+          $form['theme_specific']['#description'] = t('These settings only exist for the %theme theme and all the styles based on it.', array('%theme' => $themes[$theme]->info['name']));
+          $form['theme_specific'] = array_merge($form['theme_specific'], $group);
+        }
       }
     }
   }
@@ -628,15 +637,23 @@ function system_modules($form_state = array()) {
   // Get current list of modules.
   $files = module_rebuild_cache();
 
-  uasort($files, 'system_sort_modules_by_info_name');
+  // Remove hidden modules from display list.
+  $visible_files = $files;
+  foreach ($visible_files as $filename => $file) {
+    if (!empty($file->info['hidden'])) {
+      unset($visible_files[$filename]);
+    }
+  }
+
+  uasort($visible_files, 'system_sort_modules_by_info_name');
 
   if (!empty($form_state['storage'])) {
-    return system_modules_confirm_form($files, $form_state['storage']);
+    return system_modules_confirm_form($visible_files, $form_state['storage']);
   }
   $dependencies = array();
 
   // Store module list for validation callback.
-  $form['validation_modules'] = array('#type' => 'value', '#value' => $files);
+  $form['validation_modules'] = array('#type' => 'value', '#value' => $visible_files);
 
   // Create storage for disabled modules as browser will disable checkboxes.
   $form['disabled_modules'] = array('#type' => 'value', '#value' => array());
@@ -644,7 +661,7 @@ function system_modules($form_state = array()) {
   // Traverse the files, checking for compatibility
   $incompatible_core = array();
   $incompatible_php = array();
-  foreach ($files as $filename => $file) {
+  foreach ($visible_files as $filename => $file) {
     // Ensure this module is compatible with this version of core.
     if (!isset($file->info['core']) || $file->info['core'] != DRUPAL_CORE_COMPATIBILITY) {
       $incompatible_core[$file->name] = $file->name;
@@ -659,7 +676,7 @@ function system_modules($form_state = array()) {
   $disabled = array();
   $throttle = array();
   // Traverse the files retrieved and build the form.
-  foreach ($files as $filename => $file) {
+  foreach ($visible_files as $filename => $file) {
     $form['name'][$filename] = array('#value' => $file->info['name']);
     $form['version'][$filename] = array('#value' => $file->info['version']);
     $form['description'][$filename] = array('#value' => t($file->info['description']));
@@ -681,19 +698,20 @@ function system_modules($form_state = array()) {
     // Check for missing dependencies.
     if (is_array($file->info['dependencies'])) {
       foreach ($file->info['dependencies'] as $dependency) {
-        if (!isset($files[$dependency]) || !$files[$dependency]->status) {
-          if (isset($files[$dependency])) {
-            $dependencies[] = t('@module (<span class="admin-disabled">disabled</span>)', array('@module' => $files[$dependency]->info['name']));
+        if (!isset($files[$dependency])) {
+          $dependencies[] = t('@module (<span class="admin-missing">missing</span>)', array('@module' => drupal_ucfirst($dependency)));
+          $disabled[] = $filename;
+          $form['disabled_modules']['#value'][$filename] = FALSE;
+        }
+        // Only display visible modules.
+        elseif (isset($visible_files[$dependency])) {
+          if ($files[$dependency]->status) {
+            $dependencies[] = t('@module (<span class="admin-enabled">enabled</span>)', array('@module' => $files[$dependency]->info['name']));
           }
           else {
-            $dependencies[] = t('@module (<span class="admin-missing">missing</span>)', array('@module' => drupal_ucfirst($dependency)));
-            $disabled[] = $filename;
-            $form['disabled_modules']['#value'][$filename] = FALSE;
+            $dependencies[] = t('@module (<span class="admin-disabled">disabled</span>)', array('@module' => $files[$dependency]->info['name']));
           }
         }
-        else {
-          $dependencies[] = t('@module (<span class="admin-enabled">enabled</span>)', array('@module' => $files[$dependency]->info['name']));
-        }
       }
 
       // Add text for dependencies.
@@ -709,13 +727,16 @@ function system_modules($form_state = array()) {
     // Mark dependents disabled so user can not remove modules being depended on.
     $dependents = array();
     foreach ($file->info['dependents'] as $dependent) {
-      if ($files[$dependent]->status == 1) {
-        $dependents[] = t('@module (<span class="admin-enabled">enabled</span>)', array('@module' => $files[$dependent]->info['name']));
-        $disabled[] = $filename;
-        $form['disabled_modules']['#value'][$filename] = TRUE;
-      }
-      else {
-        $dependents[] = t('@module (<span class="admin-disabled">disabled</span>)', array('@module' => $files[$dependent]->info['name']));
+      // Hidden modules are unset already.
+      if (isset($visible_files[$dependent])) {
+        if ($files[$dependent]->status == 1) {
+          $dependents[] = t('@module (<span class="admin-enabled">enabled</span>)', array('@module' => $files[$dependent]->info['name']));
+          $disabled[] = $filename;
+          $form['disabled_modules']['#value'][$filename] = TRUE;
+        }
+        else {
+          $dependents[] = t('@module (<span class="admin-disabled">disabled</span>)', array('@module' => $files[$dependent]->info['name']));
+        }
       }
     }
 
diff --git a/modules/system/system.css b/modules/system/system.css
index 2e14530..9371bb4 100644
--- a/modules/system/system.css
+++ b/modules/system/system.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /*
 ** HTML elements
@@ -189,7 +188,7 @@ dl.multiselect dd.b, dl.multiselect dd.b .form-item, dl.multiselect dd.b select
   width: 14em;
 }
 dl.multiselect dd.a, dl.multiselect dd.a .form-item {
-  width: 8em;
+  width: 10em;
 }
 dl.multiselect dt, dl.multiselect dd {
   float: left; /* LTR */
diff --git a/modules/system/system.info b/modules/system/system.info
index 28c8a68..55986f9 100644
--- a/modules/system/system.info
+++ b/modules/system/system.info
@@ -1,4 +1,3 @@
-; $Id$
 name = System
 description = Handles general site configuration for administrators.
 package = Core - required
diff --git a/modules/system/system.install b/modules/system/system.install
index f7cfba4..33f4c4d 100644
--- a/modules/system/system.install
+++ b/modules/system/system.install
@@ -1,13 +1,7 @@
 <?php
-// $Id$
 
 /**
- * Test and report Drupal installation requirements.
- *
- * @param $phase
- *   The current system installation phase.
- * @return
- *   An array of system requirements.
+ * Implementation of hook_requirements().
  */
 function system_requirements($phase) {
   $requirements = array();
@@ -123,6 +117,35 @@ function system_requirements($phase) {
     $requirements['settings.php']['title'] = $t('Configuration file');
   }
 
+  // Test the contents of the .htaccess files.
+  if ($phase == 'runtime') {
+    // Try to write the .htaccess files first, to prevent false alarms in case
+    // (for example) the /tmp directory was wiped.
+    file_create_htaccess(file_directory_path());
+    file_create_htaccess(file_directory_temp());
+    $htaccess_files['files_htaccess'] = array(
+      'title' => $t('Files directory'),
+      'directory' => file_directory_path(),
+    );
+    $htaccess_files['temporary_files_htaccess'] = array(
+      'title' => $t('Temporary files directory'),
+      'directory' => file_directory_temp(),
+    );
+    foreach ($htaccess_files as $key => $file_info) {
+      // Check for the string which was added to the recommended .htaccess file
+      // in the latest security update.
+      $htaccess_file = $file_info['directory'] . '/.htaccess';
+      if (!file_exists($htaccess_file) || !($contents = @file_get_contents($htaccess_file)) || strpos($contents, 'Drupal_Security_Do_Not_Remove_See_SA_2013_003') === FALSE) {
+        $requirements[$key] = array(
+          'title' => $file_info['title'],
+          'value' => $t('Not fully protected'),
+          'severity' => REQUIREMENT_ERROR,
+          'description' => $t('See <a href="@url">@url</a> for information about the recommended .htaccess file which should be added to the %directory directory to help protect against arbitrary code execution.', array('@url' => 'http://drupal.org/SA-CORE-2013-003', '%directory' => $file_info['directory'])),
+        );
+      }
+    }
+  }
+
   // Report cron status.
   if ($phase == 'runtime') {
     // Cron warning threshold defaults to two days.
@@ -629,7 +652,7 @@ function system_schema() {
         'not null' => TRUE,
         'default' => 0),
       'status' => array(
-        'description' => 'A flag indicating whether file is temporary (1) or permanent (0).',
+        'description' => 'A flag indicating whether file is temporary (0) or permanent (1).',
         'type' => 'int',
         'not null' => TRUE,
         'default' => 0),
@@ -1175,7 +1198,7 @@ function system_update_1022() {
 }
 
 /**
- * @} End of "defgroup updates-5.x-extra"
+ * @} End of "defgroup updates-5.x-extra".
  */
 
 /**
@@ -2577,7 +2600,7 @@ function system_update_6047() {
 }
 
 /**
- * @} End of "defgroup updates-5.x-to-6.x"
+ * @} End of "defgroup updates-5.x-to-6.x".
  */
 
 /**
@@ -2672,27 +2695,31 @@ function system_update_6053() {
 function system_update_6054() {
   $ret = array();
 
-  $schema['semaphore'] = array(
-    'fields' => array(
-      'name' => array(
-        'type' => 'varchar',
-        'length' => 255,
-        'not null' => TRUE,
-        'default' => ''),
-      'value' => array(
-        'type' => 'varchar',
-        'length' => 255,
-        'not null' => TRUE,
-        'default' => ''),
-      'expire' => array(
-        'type' => 'float',
-        'size' => 'big',
-        'not null' => TRUE),
-      ),
-    'indexes' => array('expire' => array('expire')),
-    'primary key' => array('name'),
-  );
-  db_create_table($ret, 'semaphore', $schema['semaphore']);
+  // The table may have already been added by update_fix_d6_requirements(), so
+  // check for its existence before creating.
+  if (!db_table_exists('semaphore')) {
+    $schema['semaphore'] = array(
+      'fields' => array(
+        'name' => array(
+          'type' => 'varchar',
+          'length' => 255,
+          'not null' => TRUE,
+          'default' => ''),
+        'value' => array(
+          'type' => 'varchar',
+          'length' => 255,
+          'not null' => TRUE,
+          'default' => ''),
+        'expire' => array(
+          'type' => 'float',
+          'size' => 'big',
+          'not null' => TRUE),
+        ),
+      'indexes' => array('expire' => array('expire')),
+      'primary key' => array('name'),
+    );
+    db_create_table($ret, 'semaphore', $schema['semaphore']);
+  }
 
   return $ret;
 }
@@ -2710,7 +2737,7 @@ function system_update_6055() {
 }
 
 /**
- * @} End of "defgroup updates-6.x-extra"
+ * @} End of "defgroup updates-6.x-extra".
  * The next series of updates should start at 7000.
  */
 
diff --git a/modules/system/system.js b/modules/system/system.js
index 9f875c0..48fd016 100644
--- a/modules/system/system.js
+++ b/modules/system/system.js
@@ -1,4 +1,3 @@
-// $Id$
 
 /**
  * Internal function to check using Ajax if clean URLs can be enabled on the
diff --git a/modules/system/system.module b/modules/system/system.module
index 30d6efa..221589f 100644
--- a/modules/system/system.module
+++ b/modules/system/system.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -9,7 +8,7 @@
 /**
  * The current system version.
  */
-define('VERSION', '6.18');
+define('VERSION', '6.31');
 
 /**
  * Core API compatibility.
@@ -806,22 +805,52 @@ function system_theme_default() {
  *   Array of all available themes and their data.
  */
 function system_theme_data() {
+  $write_database = TRUE;
+  // If lock not acquired, return $files data without writing to database.
+  if (!lock_acquire('system_theme_data')) {
+    $write_database = FALSE;
+    // Wait for the parallel thread to be done so we are more likely
+    // to get updated and consistent data.
+    lock_wait('system_theme_data');
+  }
   // Scan the installation theme .info files and their engines.
   $themes = _system_theme_data();
+  foreach ($themes as $key => $theme) {
+    if (!isset($theme->owner)) {
+      $themes[$key]->owner = '';
+    }
+  }
 
   // Extract current files from database.
   system_get_files_database($themes, 'theme');
 
-  db_query("DELETE FROM {system} WHERE type = 'theme'");
+  // If lock not acquired, return $themes data without writing to database.
+  if ($write_database) {
+    $filenames = array();
 
-  foreach ($themes as $theme) {
-    if (!isset($theme->owner)) {
-      $theme->owner = '';
+    foreach ($themes as $theme) {
+      // Record the filename of each theme that was found.
+      $filenames[] = $theme->filename;
+      // Existing themes will always have $theme->status set, since it's a
+      // property that is only stored in the database.
+      if (isset($theme->status)) {
+        db_query("UPDATE {system} SET owner = '%s', info = '%s', filename = '%s' WHERE name = '%s' AND type = '%s'", $theme->owner, serialize($theme->info), $theme->filename, $theme->name, 'theme');
+      }
+      // New themes must get a $theme->status before they are inserted into the
+      // database. For the default theme, we force it to be enabled (to handle
+      // the initial installation of Drupal), but otherwise new themes should
+      // always start off as disabled.
+      else {
+        $theme->status = ($theme->name == variable_get('theme_default', 'garland'));
+        db_query("INSERT INTO {system} (name, owner, info, type, filename, status, throttle, bootstrap) VALUES ('%s', '%s', '%s', '%s', '%s', %d, %d, %d)", $theme->name, $theme->owner, serialize($theme->info), 'theme', $theme->filename, $theme->status, 0, 0);
+      }
     }
-
-    db_query("INSERT INTO {system} (name, owner, info, type, filename, status, throttle, bootstrap) VALUES ('%s', '%s', '%s', '%s', '%s', %d, %d, %d)", $theme->name, $theme->owner, serialize($theme->info), 'theme', $theme->filename, isset($theme->status) ? $theme->status : 0, 0, 0);
+    // Delete from the system table any themes missing from the file system.
+    if ($filenames) {
+      db_query("DELETE FROM {system} WHERE type = 'theme' AND filename NOT IN (". db_placeholders($filenames, 'varchar') .")", $filenames);
+    }
+    lock_release('system_theme_data');
   }
-
   return $themes;
 }
 
@@ -920,7 +949,13 @@ function _system_theme_data() {
     $themes_info = $themes;
   }
 
-  return $themes_info;
+  // To avoid side effects, we don't return the original objects.
+  $themes_info_cloned = array();
+  foreach ($themes_info as $key => $theme) {
+    $themes_info_cloned[$key] = drupal_clone($theme);
+  }
+
+  return $themes_info_cloned;
 }
 
 /**
@@ -1173,8 +1208,6 @@ function system_node_type($op, $info) {
  *   - A string containing a Drupal path.
  *   - An associative array with a 'path' key. Additional array values are
  *     passed as the $options parameter to l().
- *   If the 'destination' query parameter is set in the URL when viewing a
- *   confirmation form, that value will be used instead of $path.
  * @param $description
  *   Additional text to display. Defaults to t('This action cannot be undone.').
  * @param $yes
@@ -1661,7 +1694,7 @@ function system_send_email_action_form($context) {
     '#default_value' => $context['message'],
     '#cols' => '80',
     '#rows' => '20',
-    '#description' => t('The message that should be sent. You may include the following variables: %site_name, %username, %node_url, %node_type, %title, %teaser, %body. Not all variables will be available in all contexts.'),
+    '#description' => t('The message that should be sent. You may include the following variables: %site_name, %username, %node_url, %node_type, %title, %teaser, %body, %term_name, %term_description, %term_id, %vocabulary_name, %vocabulary_description, %vocabulary_id. Not all variables will be available in all contexts.'),
   );
   return $form;
 }
@@ -1923,9 +1956,9 @@ function _system_zonelist() {
  */
 function system_check_http_request() {
   // Try to get the content of the front page via drupal_http_request().
-  $result = drupal_http_request(url('', array('absolute' => TRUE)));
-  // We only care that we get a http response - this means that Drupal
-  // can make a http request.
+  $result = drupal_http_request(url('', array('absolute' => TRUE)), array(), 'GET', NULL, 0);
+  // We only care that we get a HTTP response - this means that Drupal
+  // can make a HTTP request.
   $works = isset($result->code) && ($result->code >= 100) && ($result->code < 600);
   variable_set('drupal_http_request_fails', !$works);
   return $works;
diff --git a/modules/taxonomy/taxonomy.admin.inc b/modules/taxonomy/taxonomy.admin.inc
index afc1340..4bd58b5 100644
--- a/modules/taxonomy/taxonomy.admin.inc
+++ b/modules/taxonomy/taxonomy.admin.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/taxonomy/taxonomy.css b/modules/taxonomy/taxonomy.css
index 5fdd2b0..36cd641 100644
--- a/modules/taxonomy/taxonomy.css
+++ b/modules/taxonomy/taxonomy.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 tr.taxonomy-term-preview {
   background-color: #EEE;
diff --git a/modules/taxonomy/taxonomy.info b/modules/taxonomy/taxonomy.info
index b1a2195..35900ec 100644
--- a/modules/taxonomy/taxonomy.info
+++ b/modules/taxonomy/taxonomy.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Taxonomy
 description = Enables the categorization of content.
 package = Core - optional
diff --git a/modules/taxonomy/taxonomy.install b/modules/taxonomy/taxonomy.install
index 12e99c6..5ae3650 100644
--- a/modules/taxonomy/taxonomy.install
+++ b/modules/taxonomy/taxonomy.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Implementation of hook_schema().
diff --git a/modules/taxonomy/taxonomy.js b/modules/taxonomy/taxonomy.js
index 0631ebd..34ae84a 100644
--- a/modules/taxonomy/taxonomy.js
+++ b/modules/taxonomy/taxonomy.js
@@ -1,4 +1,3 @@
-// $Id$
 
 /**
  * Move a block in the blocks table from one region to another via select list.
diff --git a/modules/taxonomy/taxonomy.module b/modules/taxonomy/taxonomy.module
index 5752a96..168e289 100644
--- a/modules/taxonomy/taxonomy.module
+++ b/modules/taxonomy/taxonomy.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -254,18 +253,22 @@ function taxonomy_del_vocabulary($vid) {
 
 /**
  * Dynamically check and update the hierarachy flag of a vocabulary.
+ * Checks and updates the hierarchy flag of a vocabulary.
  *
  * Checks the current parents of all terms in a vocabulary and updates the
- * vocabularies hierarchy setting to the lowest possible level. A hierarchy with
- * no parents in any of its terms will be given a hierarchy of 0. If terms
- * contain at most a single parent, the vocabulary will be given a hierarchy of
- * 1. If any term contain multiple parents, the vocabulary will be given a
- * hieararchy of 2.
+ * vocabulary's hierarchy setting to the lowest possible level. If no term
+ * has parent terms then the vocabulary will be given a hierarchy of 0.
+ * If any term has a single parent then the vocabulary will be given a
+ * hierarchy of 1. If any term has multiple parents then the vocabulary
+ * will be given a hierarchy of 2.
  *
  * @param $vocabulary
  *   An array of the vocabulary structure.
  * @param $changed_term
  *   An array of the term structure that was updated.
+ *
+ * @return
+ *   An integer that represents the level of the vocabulary's hierarchy.
  */
 function taxonomy_check_vocabulary_hierarchy($vocabulary, $changed_term) {
   $tree = taxonomy_get_tree($vocabulary['vid']);
@@ -509,8 +512,9 @@ function taxonomy_form_alter(&$form, $form_state, $form_id) {
       $terms = empty($node->nid) ? array() : taxonomy_node_get_terms($node);
     }
     else {
-      // After preview the terms must be converted to objects.
-      if (isset($form_state['node_preview'])) {
+      // After a preview or form reload, the terms must be converted to objects.
+      reset($node->taxonomy);
+      if (!is_object(current($node->taxonomy))) {
         $node->taxonomy = taxonomy_preview_terms($node);
       }
       $terms = $node->taxonomy;
@@ -625,11 +629,15 @@ function taxonomy_node_get_terms_by_vocabulary($node, $vid, $key = 'tid') {
 /**
  * Find all terms associated with the given node, ordered by vocabulary and term weight.
  */
-function taxonomy_node_get_terms($node, $key = 'tid') {
+function taxonomy_node_get_terms($node, $key = 'tid', $reset = FALSE) {
   static $terms;
 
+  if ($reset) {
+    unset($terms[$node->vid]);
+  }
+
   if (!isset($terms[$node->vid][$key])) {
-    $result = db_query(db_rewrite_sql('SELECT t.* FROM {term_node} r INNER JOIN {term_data} t ON r.tid = t.tid INNER JOIN {vocabulary} v ON t.vid = v.vid WHERE r.vid = %d ORDER BY v.weight, t.weight, t.name', 't', 'tid'), $node->vid);
+    $result = db_query(db_rewrite_sql('SELECT t.*,v.weight AS v_weight_unused FROM {term_node} r INNER JOIN {term_data} t ON r.tid = t.tid INNER JOIN {vocabulary} v ON t.vid = v.vid WHERE r.vid = %d ORDER BY v.weight, t.weight, t.name', 't', 'tid'), $node->vid);
     $terms[$node->vid][$key] = array();
     while ($term = db_fetch_object($result)) {
       $terms[$node->vid][$key][$term->$key] = $term;
@@ -660,7 +668,7 @@ function taxonomy_node_validate(&$node) {
 /**
  * Save term associations for a given node.
  */
-function taxonomy_node_save($node, $terms) {
+function taxonomy_node_save(&$node, $terms) {
 
   taxonomy_node_delete_revision($node);
 
@@ -717,6 +725,9 @@ function taxonomy_node_save($node, $terms) {
       }
     }
   }
+
+  // Flush the term "cache" for this node
+  $node->taxonomy = taxonomy_node_get_terms($node, 'tid', TRUE);
 }
 
 /**
@@ -823,7 +834,8 @@ function taxonomy_get_children($tid, $vid = 0, $key = 'tid') {
  *   for the entire vocabulary.
  *
  * @param $depth
- *   Internal use only.
+ *   Internal use only. Now deprecated and isn't used. It is left here only
+ *   because of @link http://drupal.org/node/556842 compatibility issues. @endlink
  *
  * @param $max_depth
  *   The number of levels of the tree to return. Leave NULL to return all levels.
@@ -836,12 +848,12 @@ function taxonomy_get_children($tid, $vid = 0, $key = 'tid') {
 function taxonomy_get_tree($vid, $parent = 0, $depth = -1, $max_depth = NULL) {
   static $children, $parents, $terms;
 
-  $depth++;
-
   // We cache trees, so it's not CPU-intensive to call get_tree() on a term
   // and its children, too.
   if (!isset($children[$vid])) {
     $children[$vid] = array();
+    $parents[$vid] = array();
+    $terms[$vid] = array();
 
     $result = db_query(db_rewrite_sql('SELECT t.tid, t.*, parent FROM {term_data} t INNER JOIN {term_hierarchy} h ON t.tid = h.tid WHERE t.vid = %d ORDER BY weight, name', 't', 'tid'), $vid);
     while ($term = db_fetch_object($result)) {
@@ -851,18 +863,58 @@ function taxonomy_get_tree($vid, $parent = 0, $depth = -1, $max_depth = NULL) {
     }
   }
 
-  $max_depth = (is_null($max_depth)) ? count($children[$vid]) : $max_depth;
+  $max_depth = (!isset($max_depth)) ? count($children[$vid]) : $max_depth;
   $tree = array();
-  if ($max_depth > $depth && !empty($children[$vid][$parent])) {
-    foreach ($children[$vid][$parent] as $child) {
-      $term = drupal_clone($terms[$vid][$child]);
-      $term->depth = $depth;
-      // The "parent" attribute is not useful, as it would show one parent only.
-      unset($term->parent);
-      $term->parents = $parents[$vid][$child];
-      $tree[] = $term;
-      if (!empty($children[$vid][$child])) {
-        $tree = array_merge($tree, taxonomy_get_tree($vid, $child, $depth, $max_depth));
+
+  // Keeps track of the parents we have to process, the last entry is used
+  // for the next processing step.
+  $process_parents = array();
+  $process_parents[] = $parent;
+
+  // Loops over the parent terms and adds its children to the tree array.
+  // Uses a loop instead of a recursion, because it's more efficient.
+  while (count($process_parents)) {
+    $parent = array_pop($process_parents);
+    // The number of parents determines the current depth.
+    $depth = count($process_parents);
+    if ($max_depth > $depth && !empty($children[$vid][$parent])) {
+      $has_children = FALSE;
+      $child = current($children[$vid][$parent]);
+      do {
+        if (empty($child)) {
+          break;
+        }
+        $term = $terms[$vid][$child];
+        if (count($parents[$vid][$term->tid]) > 1) {
+          // We have a term with multi parents here. Clone the term,
+          // so that the depth attribute remains correct.
+          $term = clone $term;
+        }
+        $term->depth = $depth;
+        unset($term->parent);
+        $term->parents = $parents[$vid][$term->tid];
+        $tree[] = $term;
+        if (!empty($children[$vid][$term->tid])) {
+          $has_children = TRUE;
+
+          // We have to continue with this parent later.
+          $process_parents[] = $parent;
+          // Use the current term as parent for the next iteration.
+          $process_parents[] = $term->tid;
+
+          // Reset pointers for child lists because we step in there more often
+          // with multi parents.
+          reset($children[$vid][$term->tid]);
+          // Move pointer so that we get the correct term the next time.
+          next($children[$vid][$parent]);
+          break;
+        }
+      } while ($child = next($children[$vid][$parent]));
+
+      if (!$has_children) {
+        // We processed all terms in this hierarchy-level, reset pointer
+        // so that this function works the next time it gets called.
+        reset($children[$vid][$parent]);
       }
     }
   }
@@ -1195,7 +1247,7 @@ function taxonomy_render_nodes($result) {
 /**
  * Implementation of hook_nodeapi().
  */
-function taxonomy_nodeapi($node, $op, $arg = 0) {
+function taxonomy_nodeapi(&$node, $op, $arg = 0) {
   switch ($op) {
     case 'load':
       $output['taxonomy'] = taxonomy_node_get_terms($node);
@@ -1329,7 +1381,9 @@ function _taxonomy_get_tid_from_term($term) {
 }
 
 /**
- * Implode a list of tags of a certain vocabulary into a string.
+ * Implodes a list of tags of a certain vocabulary into a string.
+ *
+ * @see drupal_explode_tags()
  */
 function taxonomy_implode_tags($tags, $vid = NULL) {
   $typed_tags = array();
diff --git a/modules/taxonomy/taxonomy.pages.inc b/modules/taxonomy/taxonomy.pages.inc
index f272ef9..aa3e68d 100644
--- a/modules/taxonomy/taxonomy.pages.inc
+++ b/modules/taxonomy/taxonomy.pages.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/throttle/throttle.admin.inc b/modules/throttle/throttle.admin.inc
index 86fc51f..367009a 100644
--- a/modules/throttle/throttle.admin.inc
+++ b/modules/throttle/throttle.admin.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/throttle/throttle.info b/modules/throttle/throttle.info
index 7bdc100..c1ed4e3 100644
--- a/modules/throttle/throttle.info
+++ b/modules/throttle/throttle.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Throttle
 description = Handles the auto-throttling mechanism, to control site congestion.
 package = Core - optional
diff --git a/modules/throttle/throttle.module b/modules/throttle/throttle.module
index 43d0903..ecb57aa 100644
--- a/modules/throttle/throttle.module
+++ b/modules/throttle/throttle.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/tracker/tracker.css b/modules/tracker/tracker.css
index 3a2d30f..138be88 100644
--- a/modules/tracker/tracker.css
+++ b/modules/tracker/tracker.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 #tracker td.replies {
   text-align: center;
diff --git a/modules/tracker/tracker.info b/modules/tracker/tracker.info
index 0381690..497bc94 100644
--- a/modules/tracker/tracker.info
+++ b/modules/tracker/tracker.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Tracker
 description = Enables tracking of recent posts for users.
 dependencies[] = comment
diff --git a/modules/tracker/tracker.module b/modules/tracker/tracker.module
index d1d2555..18726c0 100644
--- a/modules/tracker/tracker.module
+++ b/modules/tracker/tracker.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/tracker/tracker.pages.inc b/modules/tracker/tracker.pages.inc
index c82fed6..64c9383 100644
--- a/modules/tracker/tracker.pages.inc
+++ b/modules/tracker/tracker.pages.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/translation/translation.info b/modules/translation/translation.info
index f47870d..d67587d 100644
--- a/modules/translation/translation.info
+++ b/modules/translation/translation.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Content translation
 description = Allows content to be translated into different languages.
 dependencies[] = locale
diff --git a/modules/translation/translation.module b/modules/translation/translation.module
index 5aa1bd3..cf17cd1 100644
--- a/modules/translation/translation.module
+++ b/modules/translation/translation.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -163,7 +162,7 @@ function translation_link($type, $node = NULL, $teaser = FALSE) {
     unset($translations[$node->language]);
     $languages = language_list();
     foreach ($languages as $langcode => $language) {
-      if (isset($translations[$langcode])) {
+      if (isset($translations[$langcode]) && $translations[$langcode]->status) {
         $links["node_translation_$langcode"] = array(
           'title' => $language->native,
           'href' => 'node/'. $translations[$langcode]->nid,
@@ -181,7 +180,7 @@ function translation_link($type, $node = NULL, $teaser = FALSE) {
  *
  * Manages translation information for nodes.
  */
-function translation_nodeapi(&$node, $op, $teaser, $page) {
+function translation_nodeapi(&$node, $op, $teaser = NULL, $page = NULL) {
   // Only act if we are dealing with a content type supporting translations.
   if (!translation_supported_type($node->type)) {
     return;
@@ -227,6 +226,7 @@ function translation_nodeapi(&$node, $op, $teaser, $page) {
           db_query("UPDATE {node} SET tnid = %d, translate = %d WHERE nid = %d", $tnid, 0, $node->translation_source->nid);
         }
         db_query("UPDATE {node} SET tnid = %d, translate = %d WHERE nid = %d", $tnid, 0, $node->nid);
+        $node->tnid = $tnid;
       }
       break;
 
@@ -289,7 +289,7 @@ function translation_node_get_translations($tnid) {
   if (is_numeric($tnid) && $tnid) {
     if (!isset($translations[$tnid])) {
       $translations[$tnid] = array();
-      $result = db_query(db_rewrite_sql('SELECT n.nid, n.title, n.language FROM {node} n WHERE n.tnid = %d'), $tnid);
+      $result = db_query(db_rewrite_sql('SELECT n.nid, n.type, n.uid, n.status, n.title, n.language FROM {node} n WHERE n.tnid = %d'), $tnid);
       while ($node = db_fetch_object($result)) {
         $translations[$tnid][$node->language] = $node;
       }
@@ -336,8 +336,12 @@ function translation_path_get_translations($path) {
  */
 function translation_translation_link_alter(&$links, $path) {
   if ($paths = translation_path_get_translations($path)) {
+    // Path can only start with "node/$nid" or "node/$nid/" here.
+    $path = explode('/', $path);
+    $node = node_load($path[1]);
+    $translations = translation_node_get_translations($node->tnid);  
     foreach ($links as $langcode => $link) {
-      if (isset($paths[$langcode])) {
+      if (isset($paths[$langcode]) && $translations[$langcode]->status) {
         // Translation in a different node.
         $links[$langcode]['href'] = $paths[$langcode];
       }
diff --git a/modules/translation/translation.pages.inc b/modules/translation/translation.pages.inc
index 9818506..ad0fac0 100644
--- a/modules/translation/translation.pages.inc
+++ b/modules/translation/translation.pages.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/trigger/trigger.admin.inc b/modules/trigger/trigger.admin.inc
index 61123fa..2201c7e 100644
--- a/modules/trigger/trigger.admin.inc
+++ b/modules/trigger/trigger.admin.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/trigger/trigger.info b/modules/trigger/trigger.info
index ca08f85..fb6cebd 100644
--- a/modules/trigger/trigger.info
+++ b/modules/trigger/trigger.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Trigger
 description = Enables actions to be fired on certain system events, such as when new content is created.
 package = Core - optional
diff --git a/modules/trigger/trigger.install b/modules/trigger/trigger.install
index 03c8585..5d78dd1 100644
--- a/modules/trigger/trigger.install
+++ b/modules/trigger/trigger.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Implementation of hook_install().
diff --git a/modules/trigger/trigger.module b/modules/trigger/trigger.module
index 817476f..263a2a1 100644
--- a/modules/trigger/trigger.module
+++ b/modules/trigger/trigger.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -105,6 +104,7 @@ function trigger_menu() {
       'title' => $nice_name,
       'page callback' => 'trigger_assign',
       'page arguments' => array($module),
+      'access callback' => 'trigger_access_check',
       'access arguments' => array($module),
       'type' => MENU_LOCAL_TASK,
       'file' => 'trigger.admin.inc',
@@ -210,7 +210,7 @@ function _trigger_normalize_node_context($type, $node) {
 /**
  * Implementation of hook_nodeapi().
  */
-function trigger_nodeapi(&$node, $op, $a3, $a4) {
+function trigger_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
   // Keep objects for reuse so that changes actions make to objects can persist.
   static $objects;
   // Prevent recursion by tracking which operations have already been called.
diff --git a/modules/update/update-rtl.css b/modules/update/update-rtl.css
index a19c85f..5fc83d1 100644
--- a/modules/update/update-rtl.css
+++ b/modules/update/update-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 .update .project {
   padding-right: .25em;
diff --git a/modules/update/update.compare.inc b/modules/update/update.compare.inc
index b9458ad..1c2e818 100644
--- a/modules/update/update.compare.inc
+++ b/modules/update/update.compare.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/update/update.css b/modules/update/update.css
index ce0dcd6..57cef84 100644
--- a/modules/update/update.css
+++ b/modules/update/update.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 .update .project {
   font-weight: bold;
diff --git a/modules/update/update.fetch.inc b/modules/update/update.fetch.inc
index 470bb41..d1e3812 100644
--- a/modules/update/update.fetch.inc
+++ b/modules/update/update.fetch.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -222,6 +221,11 @@ class update_xml_parser {
         $this->current_term = array();
         $this->current_object = &$this->current_term;
         break;
+      case 'FILE':
+        unset($this->current_object);
+        $this->current_file = array();
+        $this->current_object = &$this->current_file;
+        break;
     }
   }
 
@@ -253,6 +257,13 @@ class update_xml_parser {
       case 'TERMS':
         $this->current_object = &$this->current_release;
         break;
+      case 'FILE':
+        unset($this->current_object);
+        $this->current_release['files'][] = $this->current_file;
+        break;
+      case 'FILES':
+        $this->current_object = &$this->current_release;
+        break;
       default:
         $this->current_object[strtolower($this->current_tag)] = trim($this->current_object[strtolower($this->current_tag)]);
         $this->current_tag = '';
@@ -260,7 +271,7 @@ class update_xml_parser {
   }
 
   function data($parser, $data) {
-    if ($this->current_tag && !in_array($this->current_tag, array('PROJECT', 'RELEASE', 'RELEASES', 'TERM', 'TERMS'))) {
+    if ($this->current_tag && !in_array($this->current_tag, array('PROJECT', 'RELEASE', 'RELEASES', 'TERM', 'TERMS', 'FILE', 'FILES'))) {
       $tag = strtolower($this->current_tag);
       if (isset($this->current_object[$tag])) {
         $this->current_object[$tag] .= $data;
diff --git a/modules/update/update.info b/modules/update/update.info
index 9c6172a..aba6e82 100644
--- a/modules/update/update.info
+++ b/modules/update/update.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Update status
 description = Checks the status of available updates for Drupal and your installed modules and themes.
 version = VERSION
diff --git a/modules/update/update.install b/modules/update/update.install
index ba91b70..8aa86f1 100644
--- a/modules/update/update.install
+++ b/modules/update/update.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Implementation of hook_install().
diff --git a/modules/update/update.module b/modules/update/update.module
index b6b595a..7c622b3 100644
--- a/modules/update/update.module
+++ b/modules/update/update.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/update/update.report.inc b/modules/update/update.report.inc
index 94ba82e..5565563 100644
--- a/modules/update/update.report.inc
+++ b/modules/update/update.report.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/update/update.settings.inc b/modules/update/update.settings.inc
index 15a1cd8..117e9f7 100644
--- a/modules/update/update.settings.inc
+++ b/modules/update/update.settings.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/modules/upload/upload.admin.inc b/modules/upload/upload.admin.inc
index d937190..fe46db2 100644
--- a/modules/upload/upload.admin.inc
+++ b/modules/upload/upload.admin.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Form API callback to validate the upload settings form.
diff --git a/modules/upload/upload.info b/modules/upload/upload.info
index dfb83d2..32bed34 100644
--- a/modules/upload/upload.info
+++ b/modules/upload/upload.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Upload
 description = Allows users to upload and attach files to content.
 package = Core - optional
diff --git a/modules/upload/upload.install b/modules/upload/upload.install
index 22334d7..421883b 100644
--- a/modules/upload/upload.install
+++ b/modules/upload/upload.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Implementation of hook_install().
diff --git a/modules/upload/upload.module b/modules/upload/upload.module
index 0efe099..ee5b127 100644
--- a/modules/upload/upload.module
+++ b/modules/upload/upload.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -17,8 +16,8 @@ function upload_help($path, $arg) {
       $output .= '<p>'. t('Users with the upload files permission can upload attachments to posts. Uploads may be enabled for specific content types on the content types settings page. Each user role can be customized to limit or control the file size of uploads, or the maximum dimension of image files.') .'</p>';
       $output .= '<p>'. t('For more information, see the online handbook entry for <a href="@upload">Upload module</a>.', array('@upload' => 'http://drupal.org/handbook/modules/upload/')) .'</p>';
       return $output;
-    case 'admin/settings/upload':
-      return '<p>'. t('Users with the <a href="@permissions">upload files permission</a> can upload attachments. Users with the <a href="@permissions">view uploaded files permission</a> can view uploaded attachments. You can choose which post types can take attachments on the <a href="@types">content types settings</a> page.', array('@permissions' => url('admin/user/permissions'), '@types' => url('admin/settings/types'))) .'</p>';
+    case 'admin/settings/uploads':
+      return '<p>'. t('Users with the <a href="@permissions">upload files permission</a> can upload attachments. Users with the <a href="@permissions">view uploaded files permission</a> can view uploaded attachments. You can choose which post types can take attachments on the <a href="@types">content types settings</a> page.', array('@permissions' => url('admin/user/permissions', array('fragment' => 'module-upload')), '@types' => url('admin/content/types'))) .'</p>';
   }
 }
 
@@ -196,7 +195,7 @@ function upload_node_form_submit(&$form, &$form_state) {
   if (isset($form_state['values']['files'])) {
     foreach ($form_state['values']['files'] as $fid => $file) {
       // If the node was previewed prior to saving, $form['#node']->files[$fid]
-      // is an array instead of an object. Convert file to object for compatibility. 
+      // is an array instead of an object. Convert file to object for compatibility.
       $form['#node']->files[$fid] = (object) $form['#node']->files[$fid];
       $form_state['values']['files'][$fid]['new'] = !empty($form['#node']->files[$fid]->new);
     }
@@ -273,7 +272,7 @@ function upload_form_alter(&$form, $form_state, $form_id) {
 /**
  * Implementation of hook_nodeapi().
  */
-function upload_nodeapi(&$node, $op, $teaser) {
+function upload_nodeapi(&$node, $op, $teaser = NULL) {
   switch ($op) {
 
     case 'load':
@@ -315,10 +314,10 @@ function upload_nodeapi(&$node, $op, $teaser) {
       break;
 
     case 'search result':
-      return isset($node->files) && is_array($node->files) ? format_plural(count($node->files), '1 attachment', '@count attachments') : NULL;
+      return isset($node->files) && is_array($node->files) && user_access('view uploaded files') ? format_plural(count($node->files), '1 attachment', '@count attachments') : NULL;
 
     case 'rss item':
-      if (is_array($node->files)) {
+      if (is_array($node->files) && user_access('view uploaded files')) {
         $files = array();
         foreach ($node->files as $file) {
           if ($file->list) {
@@ -625,7 +624,12 @@ function upload_js() {
     '#tree' => FALSE,
     '#parents' => array(),
   );
-  drupal_alter('form', $form, array(), 'upload_js');
+
+  $empty_form_state = array();
+  $data = &$form;
+  $data['__drupal_alter_by_ref'] = array(&$empty_form_state);
+  drupal_alter('form', $data, 'upload_js');
+
   $form_state = array('submitted' => FALSE);
   $form = form_builder('upload_js', $form, $form_state);
   $output = theme('status_messages') . drupal_render($form);
diff --git a/modules/user/user-picture.tpl.php b/modules/user/user-picture.tpl.php
index ae07680..183f151 100644
--- a/modules/user/user-picture.tpl.php
+++ b/modules/user/user-picture.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file user-picture.tpl.php
diff --git a/modules/user/user-profile-category.tpl.php b/modules/user/user-profile-category.tpl.php
index 5594664..bea21f0 100644
--- a/modules/user/user-profile-category.tpl.php
+++ b/modules/user/user-profile-category.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file user-profile-category.tpl.php
diff --git a/modules/user/user-profile-item.tpl.php b/modules/user/user-profile-item.tpl.php
index e51a4b1..70b1de9 100644
--- a/modules/user/user-profile-item.tpl.php
+++ b/modules/user/user-profile-item.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file user-profile-item.tpl.php
diff --git a/modules/user/user-profile.tpl.php b/modules/user/user-profile.tpl.php
index e100d6d..8840749 100644
--- a/modules/user/user-profile.tpl.php
+++ b/modules/user/user-profile.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file user-profile.tpl.php
diff --git a/modules/user/user-rtl.css b/modules/user/user-rtl.css
index ea0278b..2e4c2b4 100644
--- a/modules/user/user-rtl.css
+++ b/modules/user/user-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 #permissions td.permission {
   padding-left: 0;
diff --git a/modules/user/user.admin.inc b/modules/user/user.admin.inc
index 658907a..c84fdbc 100644
--- a/modules/user/user.admin.inc
+++ b/modules/user/user.admin.inc
@@ -1,11 +1,25 @@
 <?php
-// $Id$
 
 /**
  * @file
  * Admin page callback file for the user module.
  */
 
+/**
+ * Page callback: Generates the appropriate user administration form.
+ *
+ * This function generates the user registration, multiple user cancellation,
+ * or filtered user list admin form, depending on the argument and the POST
+ * form values.
+ *
+ * @param string $callback_arg
+ *   (optional) Indicates which form to build. Defaults to '', which will
+ *   trigger the user filter form. If the POST value 'op' is present, this
+ *   function uses that value as the callback argument.
+ *
+ * @return string
+ *   A renderable form array for the respective request.
+ */
 function user_admin($callback_arg = '') {
   $op = isset($_POST['op']) ? $_POST['op'] : $callback_arg;
 
diff --git a/modules/user/user.css b/modules/user/user.css
index 8e08c77..7b2163e 100644
--- a/modules/user/user.css
+++ b/modules/user/user.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 #permissions td.module {
   font-weight: bold;
diff --git a/modules/user/user.info b/modules/user/user.info
index 6059609..6df834c 100644
--- a/modules/user/user.info
+++ b/modules/user/user.info
@@ -1,4 +1,3 @@
-; $Id$
 name = User
 description = Manages the user registration and login system.
 package = Core - required
diff --git a/modules/user/user.install b/modules/user/user.install
index 44d55f3..b2dd5bb 100644
--- a/modules/user/user.install
+++ b/modules/user/user.install
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Implementation of hook_schema().
diff --git a/modules/user/user.js b/modules/user/user.js
index 371474d..46bfad0 100644
--- a/modules/user/user.js
+++ b/modules/user/user.js
@@ -1,4 +1,3 @@
-// $Id$
 
 /**
  * Attach handlers to evaluate the strength of any password fields and to check
diff --git a/modules/user/user.module b/modules/user/user.module
index 3a58b44..0dea21e 100644
--- a/modules/user/user.module
+++ b/modules/user/user.module
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -14,12 +13,23 @@ define('EMAIL_MAX_LENGTH', 64);
  *
  * We cannot use module_invoke() for this, because the arguments need to
  * be passed by reference.
+ *
+ * @param $op
+ *   The operation to be passed as the first parameter of the hook function.
+ * @param $edit
+ *   An associative array variable containing form values to be passed
+ *   as the second parameter of the hook function.
+ * @param $account
+ *   The user account object to be passed as the third parameter of the hook
+ *   function.
+ * @param $category
+ *   The category of user information being acted upon.
  */
-function user_module_invoke($type, &$array, &$user, $category = NULL) {
+function user_module_invoke($op, &$edit, &$account, $category = NULL) {
   foreach (module_list() as $module) {
     $function = $module .'_user';
     if (function_exists($function)) {
-      $function($type, $array, $user, $category);
+      $function($op, $edit, $account, $category);
     }
   }
 }
@@ -130,27 +140,29 @@ function user_external_login($account, $edit = array()) {
 /**
  * Fetch a user object.
  *
- * @param $array
- *   An associative array of attributes to search for in selecting the
- *   user, such as user name or e-mail address.
+ * @param $user_info
+ *   Information about the user to load, consisting of one of the following:
+ *   - An associative array whose keys are fields in the {users} table (such as
+ *     uid, name, pass, mail, status) and whose values are the field's value.
+ *   - A numeric user ID.
  *
  * @return
  *   A fully-loaded $user object upon successful user load or FALSE if user
  *   cannot be loaded.
  */
-function user_load($array = array()) {
+function user_load($user_info = array()) {
   // Dynamically compose a SQL query:
   $query = array();
   $params = array();
 
-  if (is_numeric($array)) {
-    $array = array('uid' => $array);
+  if (is_numeric($user_info)) {
+    $user_info = array('uid' => $user_info);
   }
-  elseif (!is_array($array)) {
+  elseif (!is_array($user_info)) {
     return FALSE;
   }
 
-  foreach ($array as $key => $value) {
+  foreach ($user_info as $key => $value) {
     if ($key == 'uid' || $key == 'status') {
       $query[] = "$key = %d";
       $params[] = $value;
@@ -180,7 +192,7 @@ function user_load($array = array()) {
     while ($role = db_fetch_object($result)) {
       $user->roles[$role->rid] = $role->name;
     }
-    user_module_invoke('load', $array, $user);
+    user_module_invoke('load', $user_info, $user);
   }
   else {
     $user = FALSE;
@@ -193,14 +205,17 @@ function user_load($array = array()) {
  * Save changes to a user account or add a new user.
  *
  * @param $account
- *   The $user object for the user to modify or add. If $user->uid is
- *   omitted, a new user will be added.
- *
+ *   The user object for to modify or add. If you want to modify an existing
+ *   user account, you will need to ensure that (a) $account is an object, and
+ *   (b) you have set $account->uid to the numeric user ID of the user account
+ *   you wish to modify. Pass in NULL or any non-object to add a new user.
  * @param $array
  *   (optional) An array of fields and values to save. For example,
- *   array('name' => 'My name'); Setting a field to NULL deletes it from
- *   the data column.
- *
+ *   array('name' => 'My name'); Keys that do not belong to columns
+ *   in the user-related tables are added to the a serialized array
+ *   in the 'data' column and will be loaded in the $user->data array by
+ *   user_load(). Setting a field to NULL deletes it from the data column,
+ *   if you are modifying an existing user account.
  * @param $category
  *   (optional) The category for storing profile information in.
  *
@@ -235,7 +250,7 @@ function user_save($account, $array = array(), $category = 'account') {
           if ($value === NULL) {
             unset($data[$key]);
           }
-          else {
+          elseif (!empty($key)) {
             $data[$key] = $value;
           }
         }
@@ -462,12 +477,15 @@ function user_password($length = 10) {
 
   // Loop the number of times specified by $length.
   for ($i = 0; $i < $length; $i++) {
+    do {
+      // Find a secure random number within the range needed.
+      $index = ord(drupal_random_bytes(1));
+    } while ($index > $len);
 
     // Each iteration, pick a random character from the
     // allowable string and append it to the password:
-    $pass .= $allowable_characters[mt_rand(0, $len)];
+    $pass .= $allowable_characters[$index];
   }
-
   return $pass;
 }
 
@@ -525,7 +543,12 @@ function user_access($string, $account = NULL, $reset = FALSE) {
 /**
  * Checks for usernames blocked by user administration.
  *
- * @return boolean TRUE for blocked users, FALSE for active.
+ * @param $name
+ *   A string containing a name of the user.
+ *
+ * @return
+ *   Object with property 'name' (the user name), if the user is blocked;
+ *   FALSE if the user is not blocked.
  */
 function user_is_blocked($name) {
   $deny = db_fetch_object(db_query("SELECT name FROM {users} WHERE status = 0 AND name = LOWER('%s')", $name));
@@ -584,14 +607,17 @@ function user_search($op = 'search', $keys = NULL, $skip_access_check = FALSE) {
         // Replace wildcards with MySQL/PostgreSQL wildcards.
         $keys = preg_replace('!\*+!', '%', $keys);
         if (user_access('administer users')) {
-          // Administrators can also search in the otherwise private email field.
+          // Administrators can also search in the otherwise private email
+          // field, and they don't need to be restricted to only active users.
           $result = pager_query("SELECT name, uid, mail FROM {users} WHERE LOWER(name) LIKE LOWER('%%%s%%') OR LOWER(mail) LIKE LOWER('%%%s%%')", 15, 0, NULL, $keys, $keys);
           while ($account = db_fetch_object($result)) {
             $find[] = array('title' => $account->name .' ('. $account->mail .')', 'link' => url('user/'. $account->uid, array('absolute' => TRUE)));
           }
         }
         else {
-          $result = pager_query("SELECT name, uid FROM {users} WHERE LOWER(name) LIKE LOWER('%%%s%%')", 15, 0, NULL, $keys);
+          // Regular users can only search via user names, and we do not show
+          // them blocked accounts.
+          $result = pager_query("SELECT name, uid FROM {users} WHERE status = 1 AND LOWER(name) LIKE LOWER('%%%s%%')", 15, 0, NULL, $keys);
           while ($account = db_fetch_object($result)) {
             $find[] = array('title' => $account->name, 'link' => url('user/'. $account->uid, array('absolute' => TRUE)));
           }
@@ -772,17 +798,7 @@ function user_block($op = 'list', $delta = 0, $edit = array()) {
           // Perform database queries to gather online user lists.  We use s.timestamp
           // rather than u.access because it is much faster.
           $anonymous_count = sess_count($interval);
-          $authenticated_users = db_query('SELECT DISTINCT u.uid, u.name, s.timestamp FROM {users} u INNER JOIN {sessions} s ON u.uid = s.uid WHERE s.timestamp >= %d AND s.uid > 0 ORDER BY s.timestamp DESC', $interval);
-          $authenticated_count = 0;
-          $max_users = variable_get('user_block_max_list_count', 10);
-          $items = array();
-          while ($account = db_fetch_object($authenticated_users)) {
-            if ($max_users > 0) {
-              $items[] = $account;
-              $max_users--;
-            }
-            $authenticated_count++;
-          }
+          $authenticated_count = db_result(db_query('SELECT COUNT(DISTINCT s.uid) FROM {sessions} s WHERE s.timestamp >= %d AND s.uid > 0', $interval));
 
           // Format the output with proper grammar.
           if ($anonymous_count == 1 && $authenticated_count == 1) {
@@ -795,6 +811,10 @@ function user_block($op = 'list', $delta = 0, $edit = array()) {
           // Display a list of currently online users.
           $max_users = variable_get('user_block_max_list_count', 10);
           if ($authenticated_count && $max_users) {
+            $authenticated_users = db_query_range('SELECT u.uid, u.name, MAX(s.timestamp) AS timestamp FROM {users} u INNER JOIN {sessions} s ON u.uid = s.uid WHERE s.timestamp >= %d AND s.uid > 0 GROUP BY u.uid, u.name ORDER BY s.timestamp DESC', $interval, 0, $max_users);
+            while ($account = db_fetch_object($authenticated_users)) {
+              $items[] = $account;
+            }
             $output .= theme('user_list', $items, t('Online users'));
           }
 
@@ -1081,8 +1101,8 @@ function user_menu() {
     'title' => 'Delete',
     'page callback' => 'drupal_get_form',
     'page arguments' => array('user_confirm_delete', 1),
-    'access callback' => 'user_access',
-    'access arguments' => array('administer users'),
+    'access callback' => 'user_delete_access',
+    'access arguments' => array(1),
     'type' => MENU_CALLBACK,
     'file' => 'user.pages.inc',
   );
@@ -2115,7 +2135,7 @@ function theme_user_signature($signature) {
  *
  * @param $account
  *  The user object of the account being notified.  Must contain at
- *  least the fields 'uid', 'name', and 'mail'.
+ *  least the fields 'uid', 'name', 'pass', 'login', and 'mail'.
  * @param $language
  *  Language object to generate the tokens with.
  * @return
@@ -2171,22 +2191,25 @@ function user_preferred_language($account, $default = NULL) {
  * @see drupal_mail()
  *
  * @param $op
- *  The operation being performed on the account.  Possible values:
- *  'register_admin_created': Welcome message for user created by the admin
- *  'register_no_approval_required': Welcome message when user self-registers
- *  'register_pending_approval': Welcome message, user pending admin approval
- *  'password_reset': Password recovery request
- *  'status_activated': Account activated
- *  'status_blocked': Account blocked
- *  'status_deleted': Account deleted
+ *   The operation being performed on the account. Possible values:
+ *   - 'register_admin_created': Welcome message for user created by the admin.
+ *   - 'register_no_approval_required': Welcome message when user
+ *     self-registers.
+ *   - 'register_pending_approval': Welcome message, user pending admin
+ *     approval.
+ *   - 'password_reset': Password recovery request.
+ *   - 'status_activated': Account activated.
+ *   - 'status_blocked': Account blocked.
+ *   - 'status_deleted': Account deleted.
  *
  * @param $account
- *  The user object of the account being notified.  Must contain at
- *  least the fields 'uid', 'name', and 'mail'.
+ *   The user object of the account being notified. Must contain at
+ *   least the fields 'uid', 'name', and 'mail'.
  * @param $language
- *  Optional language to use for the notification, overriding account language.
+ *   Optional language to use for the notification, overriding account language.
+ *
  * @return
- *  The return value from drupal_mail_send(), if ends up being called.
+ *   The return value from drupal_mail_send(), if ends up being called.
  */
 function _user_mail_notify($op, $account, $language = NULL) {
   // By default, we always notify except for deleted and blocked.
@@ -2508,7 +2531,8 @@ if (Drupal.jsEnabled) {
 }
 
 function user_register_validate($form, &$form_state) {
-  user_module_invoke('validate', $form_state['values'], $form_state['values'], 'account');
+  $account = (object) $form_state['values'];
+  user_module_invoke('validate', $form_state['values'], $account, 'account');
 }
 
 /**
@@ -2527,3 +2551,28 @@ function _user_forms(&$edit, $account, $category, $hook = 'form') {
 
   return empty($groups) ? FALSE : $groups;
 }
+
+/**
+ * Prepare a destination query string for use in combination with drupal_goto().
+ *
+ * Used to direct the user back to the referring page after completing
+ * the openid login.  This function prevents the login page from being
+ * returned because that page will give an access denied message to an
+ * authenticated user.
+ *
+ * @see drupal_get_destination()
+ */
+function user_login_destination() {
+  $destination = drupal_get_destination();
+  return $destination == 'destination=user%2Flogin' ? 'destination=user' : $destination;
+}
+
+/**
+ * Menu access callback; limit access to account deletion pages.
+ *
+ * Limit access to administrative users, and prevent the anonymous user account
+ * from being deleted.
+ */
+function user_delete_access($account) {
+  return user_access('administer users') && $account->uid > 0;
+}
diff --git a/modules/user/user.pages.inc b/modules/user/user.pages.inc
index e541256..3a52a01 100644
--- a/modules/user/user.pages.inc
+++ b/modules/user/user.pages.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/profiles/default/default.profile b/profiles/default/default.profile
index 15bda76..1d28ebc 100644
--- a/profiles/default/default.profile
+++ b/profiles/default/default.profile
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Return an array of the modules to be enabled when this profile is installed.
diff --git a/robots.txt b/robots.txt
index 3c94870..6647f69 100644
--- a/robots.txt
+++ b/robots.txt
@@ -1,4 +1,3 @@
-# $Id$
 #
 # robots.txt
 #
@@ -25,7 +24,6 @@ Disallow: /misc/
 Disallow: /modules/
 Disallow: /profiles/
 Disallow: /scripts/
-Disallow: /sites/
 Disallow: /themes/
 # Files
 Disallow: /CHANGELOG.txt
@@ -42,7 +40,7 @@ Disallow: /xmlrpc.php
 # Paths (clean URLs)
 Disallow: /admin/
 Disallow: /comment/reply/
-Disallow: /contact/
+Disallow: /filter/tips/
 Disallow: /logout/
 Disallow: /node/add/
 Disallow: /search/
@@ -52,7 +50,7 @@ Disallow: /user/login/
 # Paths (no clean URLs)
 Disallow: /?q=admin/
 Disallow: /?q=comment/reply/
-Disallow: /?q=contact/
+Disallow: /?q=filter/tips/
 Disallow: /?q=logout/
 Disallow: /?q=node/add/
 Disallow: /?q=search/
diff --git a/scripts/code-clean.sh b/scripts/code-clean.sh
index 19a15ad..3338b6a 100644
--- a/scripts/code-clean.sh
+++ b/scripts/code-clean.sh
@@ -1,5 +1,4 @@
 #!/bin/sh
-# $Id$
 
 find . -name "*~" -type f | xargs rm -f
 find . -name ".#*" -type f | xargs rm -f
diff --git a/scripts/code-style.pl b/scripts/code-style.pl
index 5970fc1..f71bef9 100644
--- a/scripts/code-style.pl
+++ b/scripts/code-style.pl
@@ -1,5 +1,4 @@
 #!/usr/bin/perl -w
-# $Id$
 
 use Pod::Usage;
 use Getopt::Long qw(GetOptions);
diff --git a/scripts/cron-curl.sh b/scripts/cron-curl.sh
index 633b3d8..9b168ab 100644
--- a/scripts/cron-curl.sh
+++ b/scripts/cron-curl.sh
@@ -1,4 +1,3 @@
 #!/bin/sh
-# $Id$
 
 curl --silent --compressed http://example.com/cron.php
diff --git a/scripts/cron-lynx.sh b/scripts/cron-lynx.sh
index 04317be..904667a 100644
--- a/scripts/cron-lynx.sh
+++ b/scripts/cron-lynx.sh
@@ -1,4 +1,3 @@
 #!/bin/sh
-# $Id$
 
 /usr/bin/lynx -source http://example.com/cron.php > /dev/null 2>&1
diff --git a/scripts/drupal.sh b/scripts/drupal.sh
index c6ee726..36b1f06 100755
--- a/scripts/drupal.sh
+++ b/scripts/drupal.sh
@@ -1,6 +1,5 @@
 #!/usr/bin/php
 <?php
-// $Id$
 
 /**
  * Drupal shell execution script
@@ -113,7 +112,7 @@ while ($param = array_shift($_SERVER['argv'])) {
           $_REQUEST = $_GET;
         }
 
-        // set file to execute or Drupal path (clean urls enabled)
+        // set file to execute or Drupal path (clean URLs enabled)
         if (isset($path['path']) && file_exists(substr($path['path'], 1))) {
           $_SERVER['PHP_SELF'] = $_SERVER['REQUEST_URI'] = $path['path'];
           $cmd = substr($path['path'], 1);
diff --git a/sites/all/README.txt b/sites/all/README.txt
index 4f044e3..7166d37 100644
--- a/sites/all/README.txt
+++ b/sites/all/README.txt
@@ -1,4 +1,3 @@
-// $Id$
 
 This directory should be used to place downloaded and custom modules
 and themes which are common to all sites. This will allow you to
diff --git a/sites/default/default.settings.php b/sites/default/default.settings.php
index 070a3e2..70c6480 100644
--- a/sites/default/default.settings.php
+++ b/sites/default/default.settings.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -93,6 +92,26 @@ $db_url = 'mysql://username:password@localhost/databasename';
 $db_prefix = '';
 
 /**
+ * Database default collation.
+ *
+ * All data stored in Drupal is in UTF-8. Certain databases, such as MySQL,
+ * support different algorithms for comparing, indexing, and sorting characters;
+ * a so called "collation". The default collation of a database normally works
+ * for many use-cases, but depending on the language(s) of the stored data, it
+ * may be necessary to use a different collation.
+ * Important:
+ * - Only set or change this value BEFORE installing Drupal, unless you know
+ *   what you are doing.
+ * - All database tables and columns should be in the same collation. Otherwise,
+ *   string comparisons performed for table JOINs will be significantly slower.
+ * - Especially when storing data in German or Russian on MySQL 5.1+, you want
+ *   to use the 'utf8_unicode_ci' collation instead.
+ *
+ * @see http://drupal.org/node/772678
+ */
+# $db_collation = 'utf8_general_ci';
+
+/**
  * Access control for update.php script
  *
  * If you are updating your Drupal installation using the update.php script
diff --git a/themes/bluemarine/block.tpl.php b/themes/bluemarine/block.tpl.php
index 02ec48c..a2a9d3b 100644
--- a/themes/bluemarine/block.tpl.php
+++ b/themes/bluemarine/block.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 ?>
   <div class="block block-<?php print $block->module; ?>" id="block-<?php print $block->module; ?>-<?php print $block->delta; ?>">
     <h2 class="title"><?php print $block->subject; ?></h2>
diff --git a/themes/bluemarine/bluemarine.info b/themes/bluemarine/bluemarine.info
index 38c3385..4182d98 100644
--- a/themes/bluemarine/bluemarine.info
+++ b/themes/bluemarine/bluemarine.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Bluemarine
 description = Table-based multi-column theme with a marine and ash color scheme.
 version = VERSION
diff --git a/themes/bluemarine/box.tpl.php b/themes/bluemarine/box.tpl.php
index c1ca328..09b07da 100644
--- a/themes/bluemarine/box.tpl.php
+++ b/themes/bluemarine/box.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 ?>
   <div class="box">
     <?php if ($title) { ?><h2 class="title"><?php print $title; ?></h2><?php } ?>
diff --git a/themes/bluemarine/comment.tpl.php b/themes/bluemarine/comment.tpl.php
index bd12491..736faa1 100644
--- a/themes/bluemarine/comment.tpl.php
+++ b/themes/bluemarine/comment.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 ?>
   <div class="comment<?php print ' '. $status; ?>">
     <?php if ($picture) {
diff --git a/themes/bluemarine/node.tpl.php b/themes/bluemarine/node.tpl.php
index 4a6e1fa..657cc1a 100644
--- a/themes/bluemarine/node.tpl.php
+++ b/themes/bluemarine/node.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 ?>
   <div class="node<?php if ($sticky) { print " sticky"; } ?><?php if (!$status) { print " node-unpublished"; } ?>">
     <?php if ($picture) {
diff --git a/themes/bluemarine/page.tpl.php b/themes/bluemarine/page.tpl.php
index cd324f9..74e4962 100644
--- a/themes/bluemarine/page.tpl.php
+++ b/themes/bluemarine/page.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 ?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
 <html xmlns="http://www.w3.org/1999/xhtml" lang="<?php print $language->language ?>" xml:lang="<?php print $language->language ?>" dir="<?php print $language->dir ?>">
 
diff --git a/themes/bluemarine/style-rtl.css b/themes/bluemarine/style-rtl.css
index ef3c469..63c2352 100644
--- a/themes/bluemarine/style-rtl.css
+++ b/themes/bluemarine/style-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 body {
   direction: rtl;
 }
diff --git a/themes/bluemarine/style.css b/themes/bluemarine/style.css
index c88def1..961e938 100644
--- a/themes/bluemarine/style.css
+++ b/themes/bluemarine/style.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /*
 ** HTML elements
diff --git a/themes/chameleon/chameleon.info b/themes/chameleon/chameleon.info
index 4a6850e..5f9854b 100644
--- a/themes/chameleon/chameleon.info
+++ b/themes/chameleon/chameleon.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Chameleon
 description = Minimalist tabled theme with light colors.
 regions[left] = Left sidebar
diff --git a/themes/chameleon/chameleon.theme b/themes/chameleon/chameleon.theme
index d10b127..b7c0559 100644
--- a/themes/chameleon/chameleon.theme
+++ b/themes/chameleon/chameleon.theme
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/themes/chameleon/common-rtl.css b/themes/chameleon/common-rtl.css
index 8ce725d..9fbcd87 100644
--- a/themes/chameleon/common-rtl.css
+++ b/themes/chameleon/common-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 body {
   direction: rtl;
diff --git a/themes/chameleon/common.css b/themes/chameleon/common.css
index 642dc48..4d3523d 100644
--- a/themes/chameleon/common.css
+++ b/themes/chameleon/common.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /*
 ** HTML elements
diff --git a/themes/chameleon/marvin/marvin.info b/themes/chameleon/marvin/marvin.info
index ac46c4e..6685030 100644
--- a/themes/chameleon/marvin/marvin.info
+++ b/themes/chameleon/marvin/marvin.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Marvin
 description = Boxy tabled theme in all grays.
 regions[left] = Left sidebar
diff --git a/themes/chameleon/marvin/style-rtl.css b/themes/chameleon/marvin/style-rtl.css
index 6da7ca6..2e540d4 100644
--- a/themes/chameleon/marvin/style-rtl.css
+++ b/themes/chameleon/marvin/style-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 body {
   background-image: url(druplicon-watermark-rtl.png);
diff --git a/themes/chameleon/marvin/style.css b/themes/chameleon/marvin/style.css
index bcd3bce..456bbc2 100644
--- a/themes/chameleon/marvin/style.css
+++ b/themes/chameleon/marvin/style.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /*
 ** HTML elements
diff --git a/themes/chameleon/style-rtl.css b/themes/chameleon/style-rtl.css
index c9c43a4..0bf1f34 100644
--- a/themes/chameleon/style-rtl.css
+++ b/themes/chameleon/style-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 body {
   padding: 5em 3em 0 0;
diff --git a/themes/chameleon/style.css b/themes/chameleon/style.css
index 0769c0c..c4c5787 100644
--- a/themes/chameleon/style.css
+++ b/themes/chameleon/style.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /*
 ** HTML elements
diff --git a/themes/engines/phptemplate/phptemplate.engine b/themes/engines/phptemplate/phptemplate.engine
index 9eadf48..214e1a4 100644
--- a/themes/engines/phptemplate/phptemplate.engine
+++ b/themes/engines/phptemplate/phptemplate.engine
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/themes/garland/block.tpl.php b/themes/garland/block.tpl.php
index 1b7ae30..e1167ad 100644
--- a/themes/garland/block.tpl.php
+++ b/themes/garland/block.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 ?>
 <div id="block-<?php print $block->module .'-'. $block->delta; ?>" class="clear-block block block-<?php print $block->module ?>">
 
diff --git a/themes/garland/color/color.inc b/themes/garland/color/color.inc
index 10d76de..02db92a 100644
--- a/themes/garland/color/color.inc
+++ b/themes/garland/color/color.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 $info = array(
 
diff --git a/themes/garland/color/preview.css b/themes/garland/color/preview.css
index 8ba5876..771be83 100644
--- a/themes/garland/color/preview.css
+++ b/themes/garland/color/preview.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /* Positioning */
 #preview {
diff --git a/themes/garland/comment.tpl.php b/themes/garland/comment.tpl.php
index ea83a24..739057c 100644
--- a/themes/garland/comment.tpl.php
+++ b/themes/garland/comment.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 ?>
 <div class="comment<?php print ($comment->new) ? ' comment-new' : ''; print ' '. $status; print ' '. $zebra; ?>">
 
diff --git a/themes/garland/fix-ie-rtl.css b/themes/garland/fix-ie-rtl.css
index 370d7a8..fe160a1 100644
--- a/themes/garland/fix-ie-rtl.css
+++ b/themes/garland/fix-ie-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 body {
   /* Center layout */
diff --git a/themes/garland/fix-ie.css b/themes/garland/fix-ie.css
index cb7e93b..325aaef 100644
--- a/themes/garland/fix-ie.css
+++ b/themes/garland/fix-ie.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /**
  * Garland, for Drupal 6.x
diff --git a/themes/garland/garland.info b/themes/garland/garland.info
index 3a5d3bb..b435812 100644
--- a/themes/garland/garland.info
+++ b/themes/garland/garland.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Garland
 description = Tableless, recolorable, multi-column, fluid width theme (default).
 version = VERSION
diff --git a/themes/garland/maintenance-page.tpl.php b/themes/garland/maintenance-page.tpl.php
index 1a422cd..91987d7 100644
--- a/themes/garland/maintenance-page.tpl.php
+++ b/themes/garland/maintenance-page.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file maintenance-page.tpl.php
diff --git a/themes/garland/minnelli/color/color.inc b/themes/garland/minnelli/color/color.inc
index eab1235..a05fe66 100644
--- a/themes/garland/minnelli/color/color.inc
+++ b/themes/garland/minnelli/color/color.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 $info = array(
 
diff --git a/themes/garland/minnelli/minnelli.css b/themes/garland/minnelli/minnelli.css
index 6c6a256..cec148c 100644
--- a/themes/garland/minnelli/minnelli.css
+++ b/themes/garland/minnelli/minnelli.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /**
  * Minnelli, for Drupal 6.x
diff --git a/themes/garland/minnelli/minnelli.info b/themes/garland/minnelli/minnelli.info
index 3fdb8fc..21a4c38 100644
--- a/themes/garland/minnelli/minnelli.info
+++ b/themes/garland/minnelli/minnelli.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Minnelli
 description = Tableless, recolorable, multi-column, fixed width theme.
 version = VERSION
diff --git a/themes/garland/node.tpl.php b/themes/garland/node.tpl.php
index b227d86..184e11c 100644
--- a/themes/garland/node.tpl.php
+++ b/themes/garland/node.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 ?>
 <div id="node-<?php print $node->nid; ?>" class="node<?php if ($sticky) { print ' sticky'; } ?><?php if (!$status) { print ' node-unpublished'; } ?>">
 
diff --git a/themes/garland/page.tpl.php b/themes/garland/page.tpl.php
index 773869c..8c7ff9a 100644
--- a/themes/garland/page.tpl.php
+++ b/themes/garland/page.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 ?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
 <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="<?php print $language->language ?>" lang="<?php print $language->language ?>" dir="<?php print $language->dir ?>">
diff --git a/themes/garland/print.css b/themes/garland/print.css
index 86583c4..1b82c36 100644
--- a/themes/garland/print.css
+++ b/themes/garland/print.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /**
  * Garland, for Drupal 5.0
@@ -19,7 +18,7 @@ ul.primary-links, ul.secondary-links,
   display: none;
 }
 
-body.sidebars, body.sideber-left, body.sidebar-right, body {
+body.sidebars, body.sidebar-left, body.sidebar-right, body {
   width: 640px;
 }
 
diff --git a/themes/garland/style-rtl.css b/themes/garland/style-rtl.css
index 791abf2..c9e783c 100644
--- a/themes/garland/style-rtl.css
+++ b/themes/garland/style-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 html {
   direction: rtl;
diff --git a/themes/garland/style.css b/themes/garland/style.css
index cef969c..5052709 100644
--- a/themes/garland/style.css
+++ b/themes/garland/style.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /**
  * Garland, for Drupal 6.x
@@ -223,7 +222,7 @@ tr.even {
 }
 
 tr.drag {
-  background-color: #fffff0;
+  background-color: #ffb;
 }
 
 tr.drag-previous {
diff --git a/themes/garland/template.php b/themes/garland/template.php
index ce85ea5..5426620 100644
--- a/themes/garland/template.php
+++ b/themes/garland/template.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * Sets the body-tag class attribute.
diff --git a/themes/pushbutton/block.tpl.php b/themes/pushbutton/block.tpl.php
index 0e2978e..c787f7f 100644
--- a/themes/pushbutton/block.tpl.php
+++ b/themes/pushbutton/block.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 ?>
 <div class="<?php print "block block-$block->module" ?>" id="<?php print "block-$block->module-$block->delta"; ?>">
   <div class="title"><h3><?php print $block->subject ?></h3></div>
diff --git a/themes/pushbutton/box.tpl.php b/themes/pushbutton/box.tpl.php
index 0374ba6..d89d67b 100644
--- a/themes/pushbutton/box.tpl.php
+++ b/themes/pushbutton/box.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 ?>
 <div class="box">
   <?php if ($title): ?>
diff --git a/themes/pushbutton/comment.tpl.php b/themes/pushbutton/comment.tpl.php
index 264561b..9a4151b 100644
--- a/themes/pushbutton/comment.tpl.php
+++ b/themes/pushbutton/comment.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 ?>
 <div class="comment<?php print ' '. $status; ?>">
   <?php if ($picture) : ?>
diff --git a/themes/pushbutton/node.tpl.php b/themes/pushbutton/node.tpl.php
index c464011..68853f7 100644
--- a/themes/pushbutton/node.tpl.php
+++ b/themes/pushbutton/node.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 ?>
 <div class="node<?php if ($sticky) { print " sticky"; } ?><?php if (!$status) { print " node-unpublished"; } ?>">
   <?php print $picture ?>
diff --git a/themes/pushbutton/page.tpl.php b/themes/pushbutton/page.tpl.php
index d3dce0d..7443df1 100644
--- a/themes/pushbutton/page.tpl.php
+++ b/themes/pushbutton/page.tpl.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 ?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
 <html xmlns="http://www.w3.org/1999/xhtml" lang="<?php print $language->language ?>" xml:lang="<?php print $language->language ?>" dir="<?php print $language->dir ?>">
 <head>
diff --git a/themes/pushbutton/pushbutton.info b/themes/pushbutton/pushbutton.info
index 2f78fa4..5bd8f57 100644
--- a/themes/pushbutton/pushbutton.info
+++ b/themes/pushbutton/pushbutton.info
@@ -1,4 +1,3 @@
-; $Id$
 name = Pushbutton
 description = Tabled, multi-column theme in blue and orange tones.
 version = VERSION
diff --git a/themes/pushbutton/style-rtl.css b/themes/pushbutton/style-rtl.css
index 9a7bfb5..1448829 100644
--- a/themes/pushbutton/style-rtl.css
+++ b/themes/pushbutton/style-rtl.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 body {
   direction: rtl;
diff --git a/themes/pushbutton/style.css b/themes/pushbutton/style.css
index 47e0d5b..365f738 100644
--- a/themes/pushbutton/style.css
+++ b/themes/pushbutton/style.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 /*
 ** HTML elements
diff --git a/update.php b/update.php
index 6bb019d..0d62ae7 100644
--- a/update.php
+++ b/update.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -184,6 +183,9 @@ function update_do_one($module, $number, &$context) {
   $context['message'] = 'Updating '. check_plain($module) .' module';
 }
 
+/**
+ * Renders a form with a list of available database updates.
+ */
 function update_selection_page() {
   $output = '<p>The version of Drupal you are updating from has been automatically detected. You can select a different version, but you should not need to.</p>';
   $output .= '<p>Click Update to start the update process.</p>';
@@ -346,8 +348,8 @@ function update_results_page() {
           if (!count($queries)) {
             $output .= '<li class="none">No queries</li>';
           }
+          $output .= '</ul>';
         }
-        $output .= '</ul>';
       }
     }
     $output .= '</div>';
@@ -369,7 +371,7 @@ function update_info_page() {
   update_task_list('info');
   drupal_set_title('Drupal database update');
   $token = drupal_get_token('update');
-  $output = '<p>Use this utility to update your database whenever a new release of Drupal or a module is installed.</p><p>For more detailed information, see the <a href="http://drupal.org/node/258">Installation and upgrading handbook</a>. If you are unsure what these terms mean you should probably contact your hosting provider.</p>';
+  $output = '<p>Use this utility to update your database whenever a new release of Drupal or a module is installed.</p><p>For more detailed information, see the <a href="http://drupal.org/upgrade">upgrading handbook</a>. If you are unsure what these terms mean you should probably contact your hosting provider.</p>';
   $output .= "<ol>\n";
   $output .= "<li><strong>Back up your database</strong>. This process will change your database values and in case of emergency you may need to revert to a backup.</li>\n";
   $output .= "<li><strong>Back up your code</strong>. Hint: when backing up module code, do not leave that backup in the 'modules' or 'sites/*/modules' directories as this may confuse Drupal's auto-discovery mechanism.</li>\n";
@@ -517,6 +519,31 @@ function update_fix_d6_requirements() {
       'primary key' => array('cid'),
     );
     db_create_table($ret, 'cache_block', $schema['cache_block']);
+
+    // Create the semaphore table now -- the menu system after 6.15 depends on
+    // this table, and menu code runs in updates prior to the table being
+    // created in its original update function, system_update_6054().
+    $schema['semaphore'] = array(
+      'fields' => array(
+        'name' => array(
+          'type' => 'varchar',
+          'length' => 255,
+          'not null' => TRUE,
+          'default' => ''),
+        'value' => array(
+          'type' => 'varchar',
+          'length' => 255,
+          'not null' => TRUE,
+          'default' => ''),
+        'expire' => array(
+          'type' => 'float',
+          'size' => 'big',
+          'not null' => TRUE),
+        ),
+      'indexes' => array('expire' => array('expire')),
+      'primary key' => array('name'),
+    );
+    db_create_table($ret, 'semaphore', $schema['semaphore']);
   }
 
   return $ret;
@@ -628,13 +655,13 @@ if (!empty($update_free_access) || $user->uid == 1) {
   $op = isset($_REQUEST['op']) ? $_REQUEST['op'] : '';
   switch ($op) {
     case 'selection':
-      if (isset($_GET['token']) && $_GET['token'] == drupal_get_token('update')) {
+      if (isset($_GET['token']) && drupal_valid_token($_GET['token'], 'update')) {
         $output = update_selection_page();
         break;
       }
 
     case 'Update':
-      if (isset($_GET['token']) && $_GET['token'] == drupal_get_token('update')) {
+      if (isset($_GET['token']) && drupal_valid_token($_GET['token'], 'update')) {
         update_batch();
         break;
       }
diff --git a/xmlrpc.php b/xmlrpc.php
index feab8f0..0f0300b 100644
--- a/xmlrpc.php
+++ b/xmlrpc.php
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
