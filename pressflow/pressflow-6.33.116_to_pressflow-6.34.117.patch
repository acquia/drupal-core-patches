diff --git a/CHANGELOG.txt b/CHANGELOG.txt
index 814adba..ce78b01 100644
--- a/CHANGELOG.txt
+++ b/CHANGELOG.txt
@@ -1,4 +1,8 @@
 
+Drupal 6.34, 2014-11-19
+----------------------
+- Fixed security issues (session hijacking). See SA-CORE-2014-006.
+
 Drupal 6.33, 2014-08-06
 ----------------------
 - Fixed security issues (denial of service). See SA-CORE-2014-004.
diff --git a/includes/bootstrap.inc b/includes/bootstrap.inc
index b46a1de..89bf964 100644
--- a/includes/bootstrap.inc
+++ b/includes/bootstrap.inc
@@ -1722,7 +1722,9 @@ function drupal_session_initialize() {
    
   session_set_save_handler('sess_open', 'sess_close', 'sess_read', 'sess_write', 'sess_destroy_sid', 'sess_gc');
  
-  if (isset($_COOKIE[session_name()])) {
+  // Use !empty() in the following check to ensure that blank session IDs
+  // are not valid.
+  if (!empty($_COOKIE[session_name()])) {
     // If a session cookie exists, initialize the session. Otherwise the
     // session is only started on demand in drupal_session_commit(), making
     // anonymous users not use a session cookie unless something is stored in
diff --git a/includes/session.inc b/includes/session.inc
index df4719c..2786938 100644
--- a/includes/session.inc
+++ b/includes/session.inc
@@ -42,7 +42,7 @@ function sess_read($key) {
   register_shutdown_function('session_write_close');
 
   // Handle the case of first time visitors and clients that don't store cookies (eg. web crawlers).
-  if (!isset($_COOKIE[session_name()])) {
+  if (empty($key) || !isset($_COOKIE[session_name()])) {
     $user = drupal_anonymous_user();
     return '';
   }
diff --git a/modules/system/system.module b/modules/system/system.module
index 05671bf..a64cdc4 100644
--- a/modules/system/system.module
+++ b/modules/system/system.module
@@ -8,7 +8,7 @@
 /**
  * The current system version.
  */
-define('VERSION', '6.33');
+define('VERSION', '6.34');
 
 /**
  * Core API compatibility.
