diff --git a/CHANGELOG.txt b/CHANGELOG.txt
index 750aabb..69d94de 100644
--- a/CHANGELOG.txt
+++ b/CHANGELOG.txt
@@ -1,4 +1,9 @@
 
+Drupal 7.21, 2013-03-06
+-----------------------
+- Allowed sites using the 'image_allow_insecure_derivatives' variable to still
+  have partial protection from the security issues fixed in Drupal 7.20.
+
 Drupal 7.20, 2013-02-20
 -----------------------
 - Fixed security issues (denial of service). See SA-CORE-2013-002.
diff --git a/includes/bootstrap.inc b/includes/bootstrap.inc
index 2cfdfe9..93322de 100644
--- a/includes/bootstrap.inc
+++ b/includes/bootstrap.inc
@@ -8,7 +8,7 @@
 /**
  * The current system version.
  */
-define('VERSION', '7.20');
+define('VERSION', '7.21');
 
 /**
  * Core API compatibility.
diff --git a/modules/aggregator/aggregator.info b/modules/aggregator/aggregator.info
index 557d055..53683b6 100644
--- a/modules/aggregator/aggregator.info
+++ b/modules/aggregator/aggregator.info
@@ -7,8 +7,8 @@ files[] = aggregator.test
 configure = admin/config/services/aggregator/settings
 stylesheets[all][] = aggregator.css
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/aggregator/tests/aggregator_test.info b/modules/aggregator/tests/aggregator_test.info
index 00836d1..d1e0bcc 100644
--- a/modules/aggregator/tests/aggregator_test.info
+++ b/modules/aggregator/tests/aggregator_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/block/block.info b/modules/block/block.info
index 2ffb628..470a378 100644
--- a/modules/block/block.info
+++ b/modules/block/block.info
@@ -6,8 +6,8 @@ core = 7.x
 files[] = block.test
 configure = admin/structure/block
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/block/tests/block_test.info b/modules/block/tests/block_test.info
index e70f391..d5a6af3 100644
--- a/modules/block/tests/block_test.info
+++ b/modules/block/tests/block_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/block/tests/themes/block_test_theme/block_test_theme.info b/modules/block/tests/themes/block_test_theme/block_test_theme.info
index 65e240e..46291e4 100644
--- a/modules/block/tests/themes/block_test_theme/block_test_theme.info
+++ b/modules/block/tests/themes/block_test_theme/block_test_theme.info
@@ -13,8 +13,8 @@ regions[footer] = Footer
 regions[highlighted] = Highlighted
 regions[help] = Help
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/blog/blog.info b/modules/blog/blog.info
index 9dc8f3b..16ef24a 100644
--- a/modules/blog/blog.info
+++ b/modules/blog/blog.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 files[] = blog.test
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/book/book.info b/modules/book/book.info
index eb920e1..4a96b2c 100644
--- a/modules/book/book.info
+++ b/modules/book/book.info
@@ -7,8 +7,8 @@ files[] = book.test
 configure = admin/content/book/settings
 stylesheets[all][] = book.css
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/color/color.info b/modules/color/color.info
index 3da8cc6..4e70155 100644
--- a/modules/color/color.info
+++ b/modules/color/color.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 files[] = color.test
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/comment/comment.info b/modules/comment/comment.info
index bef4c55..fd2f91b 100644
--- a/modules/comment/comment.info
+++ b/modules/comment/comment.info
@@ -9,8 +9,8 @@ files[] = comment.test
 configure = admin/content/comment
 stylesheets[all][] = comment.css
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/contact/contact.info b/modules/contact/contact.info
index 3c317c0..6a355df 100644
--- a/modules/contact/contact.info
+++ b/modules/contact/contact.info
@@ -6,8 +6,8 @@ core = 7.x
 files[] = contact.test
 configure = admin/structure/contact
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/contextual/contextual.info b/modules/contextual/contextual.info
index f2aa021..cd3ba08 100644
--- a/modules/contextual/contextual.info
+++ b/modules/contextual/contextual.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 files[] = contextual.test
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/dashboard/dashboard.info b/modules/dashboard/dashboard.info
index ada3e53..448fdcc 100644
--- a/modules/dashboard/dashboard.info
+++ b/modules/dashboard/dashboard.info
@@ -7,8 +7,8 @@ files[] = dashboard.test
 dependencies[] = block
 configure = admin/dashboard/customize
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/dblog/dblog.info b/modules/dblog/dblog.info
index 5e35048..1e36fc7 100644
--- a/modules/dblog/dblog.info
+++ b/modules/dblog/dblog.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 files[] = dblog.test
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/field/field.info b/modules/field/field.info
index 223587c..c194d6e 100644
--- a/modules/field/field.info
+++ b/modules/field/field.info
@@ -10,8 +10,8 @@ dependencies[] = field_sql_storage
 required = TRUE
 stylesheets[all][] = theme/field.css
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/field/modules/field_sql_storage/field_sql_storage.info b/modules/field/modules/field_sql_storage/field_sql_storage.info
index ab4cf34..3dec0c4 100644
--- a/modules/field/modules/field_sql_storage/field_sql_storage.info
+++ b/modules/field/modules/field_sql_storage/field_sql_storage.info
@@ -7,8 +7,8 @@ dependencies[] = field
 files[] = field_sql_storage.test
 required = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/field/modules/list/list.info b/modules/field/modules/list/list.info
index a84296c..ee82df0 100644
--- a/modules/field/modules/list/list.info
+++ b/modules/field/modules/list/list.info
@@ -7,8 +7,8 @@ dependencies[] = field
 dependencies[] = options
 files[] = tests/list.test
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/field/modules/list/tests/list_test.info b/modules/field/modules/list/tests/list_test.info
index 2e961de..4020c37 100644
--- a/modules/field/modules/list/tests/list_test.info
+++ b/modules/field/modules/list/tests/list_test.info
@@ -5,8 +5,8 @@ package = Testing
 version = VERSION
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/field/modules/number/number.info b/modules/field/modules/number/number.info
index 74ba621..efc5403 100644
--- a/modules/field/modules/number/number.info
+++ b/modules/field/modules/number/number.info
@@ -6,8 +6,8 @@ core = 7.x
 dependencies[] = field
 files[] = number.test
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/field/modules/options/options.info b/modules/field/modules/options/options.info
index 3e989d3..61cd19d 100644
--- a/modules/field/modules/options/options.info
+++ b/modules/field/modules/options/options.info
@@ -6,8 +6,8 @@ core = 7.x
 dependencies[] = field
 files[] = options.test
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/field/modules/text/text.info b/modules/field/modules/text/text.info
index e09eaa7..15f87ce 100644
--- a/modules/field/modules/text/text.info
+++ b/modules/field/modules/text/text.info
@@ -7,8 +7,8 @@ dependencies[] = field
 files[] = text.test
 required = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/field/tests/field_test.info b/modules/field/tests/field_test.info
index c457fe9..81010dc 100644
--- a/modules/field/tests/field_test.info
+++ b/modules/field/tests/field_test.info
@@ -6,8 +6,8 @@ files[] = field_test.entity.inc
 version = VERSION
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/field_ui/field_ui.info b/modules/field_ui/field_ui.info
index 0957d1e..4497bcb 100644
--- a/modules/field_ui/field_ui.info
+++ b/modules/field_ui/field_ui.info
@@ -6,8 +6,8 @@ core = 7.x
 dependencies[] = field
 files[] = field_ui.test
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/file/file.info b/modules/file/file.info
index 5a70a1e..25b9033 100644
--- a/modules/file/file.info
+++ b/modules/file/file.info
@@ -6,8 +6,8 @@ core = 7.x
 dependencies[] = field
 files[] = tests/file.test
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/file/tests/file_module_test.info b/modules/file/tests/file_module_test.info
index 4f74a9c..7b2fcbb 100644
--- a/modules/file/tests/file_module_test.info
+++ b/modules/file/tests/file_module_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/filter/filter.info b/modules/filter/filter.info
index 2c0b0fe..baf12a9 100644
--- a/modules/filter/filter.info
+++ b/modules/filter/filter.info
@@ -7,8 +7,8 @@ files[] = filter.test
 required = TRUE
 configure = admin/config/content/formats
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/forum/forum.info b/modules/forum/forum.info
index 22c1775..b2fac60 100644
--- a/modules/forum/forum.info
+++ b/modules/forum/forum.info
@@ -9,8 +9,8 @@ files[] = forum.test
 configure = admin/structure/forum
 stylesheets[all][] = forum.css
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/help/help.info b/modules/help/help.info
index 58562c0..91c34ee 100644
--- a/modules/help/help.info
+++ b/modules/help/help.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 files[] = help.test
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/image/image.info b/modules/image/image.info
index 2919d36..fdbc98c 100644
--- a/modules/image/image.info
+++ b/modules/image/image.info
@@ -7,8 +7,8 @@ dependencies[] = file
 files[] = image.test
 configure = admin/config/media/image-styles
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/image/image.module b/modules/image/image.module
index d7178ad..a9cc1a5 100644
--- a/modules/image/image.module
+++ b/modules/image/image.module
@@ -780,9 +780,11 @@ function image_style_deliver($style, $scheme) {
   // derivative token is valid. (Sites which require image derivatives to be
   // generated without a token can set the 'image_allow_insecure_derivatives'
   // variable to TRUE to bypass the latter check, but this will increase the
-  // site's vulnerability to denial-of-service attacks.)
+  // site's vulnerability to denial-of-service attacks. To prevent this
+  // variable from leaving the site vulnerable to the most serious attacks, a
+  // token is always required when a derivative of a derivative is requested.)
   $valid = !empty($style) && file_stream_wrapper_valid_scheme($scheme);
-  if (!variable_get('image_allow_insecure_derivatives', FALSE)) {
+  if (!variable_get('image_allow_insecure_derivatives', FALSE) || strpos(ltrim($target, '\/'), 'styles/') === 0) {
     $valid = $valid && isset($_GET[IMAGE_DERIVATIVE_TOKEN]) && $_GET[IMAGE_DERIVATIVE_TOKEN] === image_style_path_token($style['name'], $scheme . '://' . $target);
   }
   if (!$valid) {
@@ -867,6 +869,11 @@ function image_style_deliver($style, $scheme) {
  * @see image_style_load()
  */
 function image_style_create_derivative($style, $source, $destination) {
+  // If the source file doesn't exist, return FALSE without creating folders.
+  if (!$image = image_load($source)) {
+    return FALSE;
+  }
+
   // Get the folder for the final location of this style.
   $directory = drupal_dirname($destination);
 
@@ -876,10 +883,6 @@ function image_style_create_derivative($style, $source, $destination) {
     return FALSE;
   }
 
-  if (!$image = image_load($source)) {
-    return FALSE;
-  }
-
   foreach ($style['effects'] as $effect) {
     image_effect_apply($image, $effect);
   }
diff --git a/modules/image/image.test b/modules/image/image.test
index d4db213..25fddf6 100644
--- a/modules/image/image.test
+++ b/modules/image/image.test
@@ -249,6 +249,51 @@ class ImageStylesPathAndUrlTestCase extends DrupalWebTestCase {
       $this->drupalGet(str_replace(IMAGE_DERIVATIVE_TOKEN . '=', IMAGE_DERIVATIVE_TOKEN . '=Zo', $generate_url));
       $this->assertResponse(200, 'Existing image was accessible at the URL wih an invalid token.');
     }
+
+    // Allow insecure image derivatives to be created for the remainder of this
+    // test.
+    variable_set('image_allow_insecure_derivatives', TRUE);
+
+    // Create another working copy of the file.
+    $files = $this->drupalGetTestFiles('image');
+    $file = array_shift($files);
+    $image_info = image_get_info($file->uri);
+    $original_uri = file_unmanaged_copy($file->uri, $scheme . '://', FILE_EXISTS_RENAME);
+    // Let the image_module_test module know about this file, so it can claim
+    // ownership in hook_file_download().
+    variable_set('image_module_test_file_download', $original_uri);
+
+    // Get the URL of a file that has not been generated and try to create it.
+    $generated_uri = image_style_path($this->style_name, $original_uri);
+    $this->assertFalse(file_exists($generated_uri), 'Generated file does not exist.');
+    $generate_url = image_style_url($this->style_name, $original_uri);
+
+    // Check that the image is accessible even without the security token.
+    $this->drupalGet(str_replace(IMAGE_DERIVATIVE_TOKEN . '=', 'wrongparam=', $generate_url));
+    $this->assertResponse(200, 'Image was accessible at the URL with a missing token.');
+
+    // Check that a security token is still required when generating a second
+    // image derivative using the first one as a source.
+    $nested_uri = image_style_path($this->style_name, $generated_uri);
+    $nested_url = image_style_url($this->style_name, $generated_uri);
+    $nested_url_with_wrong_token = str_replace(IMAGE_DERIVATIVE_TOKEN . '=', 'wrongparam=', $nested_url);
+    $this->drupalGet($nested_url_with_wrong_token);
+    $this->assertResponse(403, 'Image generated from an earlier derivative was inaccessible at the URL with a missing token.');
+    // Check that this restriction cannot be bypassed by adding extra slashes
+    // to the URL.
+    $this->drupalGet(substr_replace($nested_url_with_wrong_token, '//styles/', strrpos($nested_url_with_wrong_token, '/styles/'), strlen('/styles/')));
+    $this->assertResponse(403, 'Image generated from an earlier derivative was inaccessible at the URL with a missing token, even with an extra forward slash in the URL.');
+    $this->drupalGet(substr_replace($nested_url_with_wrong_token, '/\styles/', strrpos($nested_url_with_wrong_token, '/styles/'), strlen('/styles/')));
+    $this->assertResponse(403, 'Image generated from an earlier derivative was inaccessible at the URL with a missing token, even with an extra backslash in the URL.');
+    // Make sure the image can still be generated if a correct token is used.
+    $this->drupalGet($nested_url);
+    $this->assertResponse(200, 'Image was accessible when a correct token was provided in the URL.');
+
+    // Check that requesting a nonexistent image does not create any new
+    // directories in the file system.
+    $directory = $scheme . '://styles/' . $this->style_name . '/' . $scheme . '/' . $this->randomName();
+    $this->drupalGet(file_create_url($directory . '/' . $this->randomName()));
+    $this->assertFalse(file_exists($directory), 'New directory was not created in the filesystem when requesting an unauthorized image.');
   }
 }
 
diff --git a/modules/image/tests/image_module_test.info b/modules/image/tests/image_module_test.info
index 7f46493..40b45ab 100644
--- a/modules/image/tests/image_module_test.info
+++ b/modules/image/tests/image_module_test.info
@@ -6,8 +6,8 @@ core = 7.x
 files[] = image_module_test.module
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/locale/locale.info b/modules/locale/locale.info
index 147ce84..fcacaec 100644
--- a/modules/locale/locale.info
+++ b/modules/locale/locale.info
@@ -6,8 +6,8 @@ core = 7.x
 files[] = locale.test
 configure = admin/config/regional/language
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/locale/tests/locale_test.info b/modules/locale/tests/locale_test.info
index 06c0eee..afad365 100644
--- a/modules/locale/tests/locale_test.info
+++ b/modules/locale/tests/locale_test.info
@@ -5,8 +5,8 @@ package = Testing
 version = VERSION
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/menu/menu.info b/modules/menu/menu.info
index 16b08ae..f4e0cc9 100644
--- a/modules/menu/menu.info
+++ b/modules/menu/menu.info
@@ -6,8 +6,8 @@ core = 7.x
 files[] = menu.test
 configure = admin/structure/menu
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/node/node.info b/modules/node/node.info
index 26805f6..c02a537 100644
--- a/modules/node/node.info
+++ b/modules/node/node.info
@@ -9,8 +9,8 @@ required = TRUE
 configure = admin/structure/types
 stylesheets[all][] = node.css
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/node/tests/node_access_test.info b/modules/node/tests/node_access_test.info
index d620c7d..bb7a5a7 100644
--- a/modules/node/tests/node_access_test.info
+++ b/modules/node/tests/node_access_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/node/tests/node_test.info b/modules/node/tests/node_test.info
index fe157e0..005bb4f 100644
--- a/modules/node/tests/node_test.info
+++ b/modules/node/tests/node_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/node/tests/node_test_exception.info b/modules/node/tests/node_test_exception.info
index c4f4270..afd1ec7 100644
--- a/modules/node/tests/node_test_exception.info
+++ b/modules/node/tests/node_test_exception.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/openid/openid.info b/modules/openid/openid.info
index bd63243..e5ff501 100644
--- a/modules/openid/openid.info
+++ b/modules/openid/openid.info
@@ -5,8 +5,8 @@ package = Core
 core = 7.x
 files[] = openid.test
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/openid/tests/openid_test.info b/modules/openid/tests/openid_test.info
index b562e5c..0205ca8 100644
--- a/modules/openid/tests/openid_test.info
+++ b/modules/openid/tests/openid_test.info
@@ -6,8 +6,8 @@ core = 7.x
 dependencies[] = openid
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/overlay/overlay.info b/modules/overlay/overlay.info
index 73bfc1b..6dd4b95 100644
--- a/modules/overlay/overlay.info
+++ b/modules/overlay/overlay.info
@@ -4,8 +4,8 @@ package = Core
 version = VERSION
 core = 7.x
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/path/path.info b/modules/path/path.info
index 52d277a..4abfa03 100644
--- a/modules/path/path.info
+++ b/modules/path/path.info
@@ -6,8 +6,8 @@ core = 7.x
 files[] = path.test
 configure = admin/config/search/path
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/php/php.info b/modules/php/php.info
index bcd8a92..c5e57d5 100644
--- a/modules/php/php.info
+++ b/modules/php/php.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 files[] = php.test
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/poll/poll.info b/modules/poll/poll.info
index 0033ec0..2ae2ac2 100644
--- a/modules/poll/poll.info
+++ b/modules/poll/poll.info
@@ -6,8 +6,8 @@ core = 7.x
 files[] = poll.test
 stylesheets[all][] = poll.css
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/profile/profile.info b/modules/profile/profile.info
index a60c2a2..4867fd3 100644
--- a/modules/profile/profile.info
+++ b/modules/profile/profile.info
@@ -11,8 +11,8 @@ configure = admin/config/people/profile
 ; See user_system_info_alter().
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/rdf/rdf.info b/modules/rdf/rdf.info
index 322527e..2877b2d 100644
--- a/modules/rdf/rdf.info
+++ b/modules/rdf/rdf.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 files[] = rdf.test
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/rdf/tests/rdf_test.info b/modules/rdf/tests/rdf_test.info
index 88ebd82..fb18967 100644
--- a/modules/rdf/tests/rdf_test.info
+++ b/modules/rdf/tests/rdf_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/search/search.info b/modules/search/search.info
index 32a4999..780c52f 100644
--- a/modules/search/search.info
+++ b/modules/search/search.info
@@ -8,8 +8,8 @@ files[] = search.test
 configure = admin/config/search/settings
 stylesheets[all][] = search.css
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/search/tests/search_embedded_form.info b/modules/search/tests/search_embedded_form.info
index 10a15ff..1ea2234 100644
--- a/modules/search/tests/search_embedded_form.info
+++ b/modules/search/tests/search_embedded_form.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/search/tests/search_extra_type.info b/modules/search/tests/search_extra_type.info
index 1917148..fce90a5 100644
--- a/modules/search/tests/search_extra_type.info
+++ b/modules/search/tests/search_extra_type.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/shortcut/shortcut.info b/modules/shortcut/shortcut.info
index 00a88e0..e27160c 100644
--- a/modules/shortcut/shortcut.info
+++ b/modules/shortcut/shortcut.info
@@ -6,8 +6,8 @@ core = 7.x
 files[] = shortcut.test
 configure = admin/config/user-interface/shortcut
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/simpletest/simpletest.info b/modules/simpletest/simpletest.info
index c3d3e92..687f236 100644
--- a/modules/simpletest/simpletest.info
+++ b/modules/simpletest/simpletest.info
@@ -55,8 +55,8 @@ files[] = tests/upgrade/update.trigger.test
 files[] = tests/upgrade/update.field.test
 files[] = tests/upgrade/update.user.test
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/simpletest/tests/actions_loop_test.info b/modules/simpletest/tests/actions_loop_test.info
index e684a3b..bd440bf 100644
--- a/modules/simpletest/tests/actions_loop_test.info
+++ b/modules/simpletest/tests/actions_loop_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/simpletest/tests/ajax_forms_test.info b/modules/simpletest/tests/ajax_forms_test.info
index d96d7de..19ff8a1 100644
--- a/modules/simpletest/tests/ajax_forms_test.info
+++ b/modules/simpletest/tests/ajax_forms_test.info
@@ -5,8 +5,8 @@ package = Testing
 version = VERSION
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/simpletest/tests/ajax_test.info b/modules/simpletest/tests/ajax_test.info
index d48c68f..042426d 100644
--- a/modules/simpletest/tests/ajax_test.info
+++ b/modules/simpletest/tests/ajax_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/simpletest/tests/batch_test.info b/modules/simpletest/tests/batch_test.info
index c03fb4d..c4e00dd 100644
--- a/modules/simpletest/tests/batch_test.info
+++ b/modules/simpletest/tests/batch_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/simpletest/tests/common_test.info b/modules/simpletest/tests/common_test.info
index 1702d73..aec732b 100644
--- a/modules/simpletest/tests/common_test.info
+++ b/modules/simpletest/tests/common_test.info
@@ -7,8 +7,8 @@ stylesheets[all][] = common_test.css
 stylesheets[print][] = common_test.print.css
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/simpletest/tests/common_test_cron_helper.info b/modules/simpletest/tests/common_test_cron_helper.info
index 9662122..3834dfa 100644
--- a/modules/simpletest/tests/common_test_cron_helper.info
+++ b/modules/simpletest/tests/common_test_cron_helper.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/simpletest/tests/database_test.info b/modules/simpletest/tests/database_test.info
index 8129705..a21a08a 100644
--- a/modules/simpletest/tests/database_test.info
+++ b/modules/simpletest/tests/database_test.info
@@ -5,8 +5,8 @@ package = Testing
 version = VERSION
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/simpletest/tests/drupal_system_listing_compatible_test/drupal_system_listing_compatible_test.info b/modules/simpletest/tests/drupal_system_listing_compatible_test/drupal_system_listing_compatible_test.info
index 7918eae..ee0ce89 100644
--- a/modules/simpletest/tests/drupal_system_listing_compatible_test/drupal_system_listing_compatible_test.info
+++ b/modules/simpletest/tests/drupal_system_listing_compatible_test/drupal_system_listing_compatible_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/simpletest/tests/drupal_system_listing_incompatible_test/drupal_system_listing_incompatible_test.info b/modules/simpletest/tests/drupal_system_listing_incompatible_test/drupal_system_listing_incompatible_test.info
index 73120f6..225e516 100644
--- a/modules/simpletest/tests/drupal_system_listing_incompatible_test/drupal_system_listing_incompatible_test.info
+++ b/modules/simpletest/tests/drupal_system_listing_incompatible_test/drupal_system_listing_incompatible_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/simpletest/tests/entity_cache_test.info b/modules/simpletest/tests/entity_cache_test.info
index 5cf393f..f9249fc 100644
--- a/modules/simpletest/tests/entity_cache_test.info
+++ b/modules/simpletest/tests/entity_cache_test.info
@@ -6,8 +6,8 @@ core = 7.x
 dependencies[] = entity_cache_test_dependency
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/simpletest/tests/entity_cache_test_dependency.info b/modules/simpletest/tests/entity_cache_test_dependency.info
index 22ebd0a..b03e244 100644
--- a/modules/simpletest/tests/entity_cache_test_dependency.info
+++ b/modules/simpletest/tests/entity_cache_test_dependency.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/simpletest/tests/entity_crud_hook_test.info b/modules/simpletest/tests/entity_crud_hook_test.info
index bede4cd..a27e9eb 100644
--- a/modules/simpletest/tests/entity_crud_hook_test.info
+++ b/modules/simpletest/tests/entity_crud_hook_test.info
@@ -5,8 +5,8 @@ package = Testing
 version = VERSION
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/simpletest/tests/entity_query_access_test.info b/modules/simpletest/tests/entity_query_access_test.info
index 10c6db2..396f07e 100644
--- a/modules/simpletest/tests/entity_query_access_test.info
+++ b/modules/simpletest/tests/entity_query_access_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/simpletest/tests/error_test.info b/modules/simpletest/tests/error_test.info
index 62ed657..e009ed4 100644
--- a/modules/simpletest/tests/error_test.info
+++ b/modules/simpletest/tests/error_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/simpletest/tests/file_test.info b/modules/simpletest/tests/file_test.info
index 1f9be7f..047e5a8 100644
--- a/modules/simpletest/tests/file_test.info
+++ b/modules/simpletest/tests/file_test.info
@@ -6,8 +6,8 @@ core = 7.x
 files[] = file_test.module
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/simpletest/tests/filter_test.info b/modules/simpletest/tests/filter_test.info
index c6c5a3c..dd95f92 100644
--- a/modules/simpletest/tests/filter_test.info
+++ b/modules/simpletest/tests/filter_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/simpletest/tests/form_test.info b/modules/simpletest/tests/form_test.info
index 04abff4..d868663 100644
--- a/modules/simpletest/tests/form_test.info
+++ b/modules/simpletest/tests/form_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/simpletest/tests/image_test.info b/modules/simpletest/tests/image_test.info
index 8dbb281..50d5158 100644
--- a/modules/simpletest/tests/image_test.info
+++ b/modules/simpletest/tests/image_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/simpletest/tests/menu_test.info b/modules/simpletest/tests/menu_test.info
index 6c9514d..404cd8d 100644
--- a/modules/simpletest/tests/menu_test.info
+++ b/modules/simpletest/tests/menu_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/simpletest/tests/module_test.info b/modules/simpletest/tests/module_test.info
index 7f4ba7d..40eaced 100644
--- a/modules/simpletest/tests/module_test.info
+++ b/modules/simpletest/tests/module_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/simpletest/tests/path_test.info b/modules/simpletest/tests/path_test.info
index d2cab0a..29b5f76 100644
--- a/modules/simpletest/tests/path_test.info
+++ b/modules/simpletest/tests/path_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/simpletest/tests/requirements1_test.info b/modules/simpletest/tests/requirements1_test.info
index 13e388f..d3ad033 100644
--- a/modules/simpletest/tests/requirements1_test.info
+++ b/modules/simpletest/tests/requirements1_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/simpletest/tests/requirements2_test.info b/modules/simpletest/tests/requirements2_test.info
index 371f1f1..322b37e 100644
--- a/modules/simpletest/tests/requirements2_test.info
+++ b/modules/simpletest/tests/requirements2_test.info
@@ -7,8 +7,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/simpletest/tests/session_test.info b/modules/simpletest/tests/session_test.info
index d1c6101..b4b5ea9 100644
--- a/modules/simpletest/tests/session_test.info
+++ b/modules/simpletest/tests/session_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/simpletest/tests/system_dependencies_test.info b/modules/simpletest/tests/system_dependencies_test.info
index a6efc8d..f556fd8 100644
--- a/modules/simpletest/tests/system_dependencies_test.info
+++ b/modules/simpletest/tests/system_dependencies_test.info
@@ -6,8 +6,8 @@ core = 7.x
 hidden = TRUE
 dependencies[] = _missing_dependency
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/simpletest/tests/system_incompatible_core_version_dependencies_test.info b/modules/simpletest/tests/system_incompatible_core_version_dependencies_test.info
index bda7979..a1701b0 100644
--- a/modules/simpletest/tests/system_incompatible_core_version_dependencies_test.info
+++ b/modules/simpletest/tests/system_incompatible_core_version_dependencies_test.info
@@ -6,8 +6,8 @@ core = 7.x
 hidden = TRUE
 dependencies[] = system_incompatible_core_version_test
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/simpletest/tests/system_incompatible_core_version_test.info b/modules/simpletest/tests/system_incompatible_core_version_test.info
index a9de42e..8133d3b 100644
--- a/modules/simpletest/tests/system_incompatible_core_version_test.info
+++ b/modules/simpletest/tests/system_incompatible_core_version_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 5.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/simpletest/tests/system_incompatible_module_version_dependencies_test.info b/modules/simpletest/tests/system_incompatible_module_version_dependencies_test.info
index 1f58f63..e174c76 100644
--- a/modules/simpletest/tests/system_incompatible_module_version_dependencies_test.info
+++ b/modules/simpletest/tests/system_incompatible_module_version_dependencies_test.info
@@ -7,8 +7,8 @@ hidden = TRUE
 ; system_incompatible_module_version_test declares version 1.0
 dependencies[] = system_incompatible_module_version_test (>2.0)
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/simpletest/tests/system_incompatible_module_version_test.info b/modules/simpletest/tests/system_incompatible_module_version_test.info
index ea9a42b..558a4cb 100644
--- a/modules/simpletest/tests/system_incompatible_module_version_test.info
+++ b/modules/simpletest/tests/system_incompatible_module_version_test.info
@@ -5,8 +5,8 @@ version = 1.0
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/simpletest/tests/system_test.info b/modules/simpletest/tests/system_test.info
index 068755b..884a65a 100644
--- a/modules/simpletest/tests/system_test.info
+++ b/modules/simpletest/tests/system_test.info
@@ -6,8 +6,8 @@ core = 7.x
 files[] = system_test.module
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/simpletest/tests/taxonomy_test.info b/modules/simpletest/tests/taxonomy_test.info
index 42ed05f..6cf0823 100644
--- a/modules/simpletest/tests/taxonomy_test.info
+++ b/modules/simpletest/tests/taxonomy_test.info
@@ -6,8 +6,8 @@ core = 7.x
 hidden = TRUE
 dependencies[] = taxonomy
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/simpletest/tests/theme_test.info b/modules/simpletest/tests/theme_test.info
index d05453a..4ac92f8 100644
--- a/modules/simpletest/tests/theme_test.info
+++ b/modules/simpletest/tests/theme_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/simpletest/tests/themes/test_basetheme/test_basetheme.info b/modules/simpletest/tests/themes/test_basetheme/test_basetheme.info
index cc583f0..79dd3da 100644
--- a/modules/simpletest/tests/themes/test_basetheme/test_basetheme.info
+++ b/modules/simpletest/tests/themes/test_basetheme/test_basetheme.info
@@ -6,8 +6,8 @@ hidden = TRUE
 settings[basetheme_only] = base theme value
 settings[subtheme_override] = base theme value
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/simpletest/tests/themes/test_subtheme/test_subtheme.info b/modules/simpletest/tests/themes/test_subtheme/test_subtheme.info
index e744045..cb63c50 100644
--- a/modules/simpletest/tests/themes/test_subtheme/test_subtheme.info
+++ b/modules/simpletest/tests/themes/test_subtheme/test_subtheme.info
@@ -6,8 +6,8 @@ hidden = TRUE
 
 settings[subtheme_override] = subtheme value
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/simpletest/tests/themes/test_theme/test_theme.info b/modules/simpletest/tests/themes/test_theme/test_theme.info
index ae04477..654495a 100644
--- a/modules/simpletest/tests/themes/test_theme/test_theme.info
+++ b/modules/simpletest/tests/themes/test_theme/test_theme.info
@@ -17,8 +17,8 @@ stylesheets[all][] = system.base.css
 
 settings[theme_test_setting] = default value
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/simpletest/tests/update_script_test.info b/modules/simpletest/tests/update_script_test.info
index ed8c967..6250658 100644
--- a/modules/simpletest/tests/update_script_test.info
+++ b/modules/simpletest/tests/update_script_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/simpletest/tests/update_test_1.info b/modules/simpletest/tests/update_test_1.info
index 40dad06..640724d 100644
--- a/modules/simpletest/tests/update_test_1.info
+++ b/modules/simpletest/tests/update_test_1.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/simpletest/tests/update_test_2.info b/modules/simpletest/tests/update_test_2.info
index 40dad06..640724d 100644
--- a/modules/simpletest/tests/update_test_2.info
+++ b/modules/simpletest/tests/update_test_2.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/simpletest/tests/update_test_3.info b/modules/simpletest/tests/update_test_3.info
index 40dad06..640724d 100644
--- a/modules/simpletest/tests/update_test_3.info
+++ b/modules/simpletest/tests/update_test_3.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/simpletest/tests/url_alter_test.info b/modules/simpletest/tests/url_alter_test.info
index c5691f4..c34b15e 100644
--- a/modules/simpletest/tests/url_alter_test.info
+++ b/modules/simpletest/tests/url_alter_test.info
@@ -5,8 +5,8 @@ package = Testing
 version = VERSION
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/simpletest/tests/xmlrpc_test.info b/modules/simpletest/tests/xmlrpc_test.info
index ac5af5c..37b45dc 100644
--- a/modules/simpletest/tests/xmlrpc_test.info
+++ b/modules/simpletest/tests/xmlrpc_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/statistics/statistics.info b/modules/statistics/statistics.info
index f73dab1..695bc64 100644
--- a/modules/statistics/statistics.info
+++ b/modules/statistics/statistics.info
@@ -6,8 +6,8 @@ core = 7.x
 files[] = statistics.test
 configure = admin/config/system/statistics
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/syslog/syslog.info b/modules/syslog/syslog.info
index e0ea374..b88a5f6 100644
--- a/modules/syslog/syslog.info
+++ b/modules/syslog/syslog.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 files[] = syslog.test
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/system/system.info b/modules/system/system.info
index dca4780..5336502 100644
--- a/modules/system/system.info
+++ b/modules/system/system.info
@@ -12,8 +12,8 @@ files[] = system.test
 required = TRUE
 configure = admin/config/system
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/taxonomy/taxonomy.info b/modules/taxonomy/taxonomy.info
index fa3363f..ec6e2e6 100644
--- a/modules/taxonomy/taxonomy.info
+++ b/modules/taxonomy/taxonomy.info
@@ -8,8 +8,8 @@ files[] = taxonomy.module
 files[] = taxonomy.test
 configure = admin/structure/taxonomy
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/toolbar/toolbar.info b/modules/toolbar/toolbar.info
index c0aa88b..70d98c3 100644
--- a/modules/toolbar/toolbar.info
+++ b/modules/toolbar/toolbar.info
@@ -4,8 +4,8 @@ core = 7.x
 package = Core
 version = VERSION
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/tracker/tracker.info b/modules/tracker/tracker.info
index 4342207..0158a65 100644
--- a/modules/tracker/tracker.info
+++ b/modules/tracker/tracker.info
@@ -6,8 +6,8 @@ version = VERSION
 core = 7.x
 files[] = tracker.test
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/translation/tests/translation_test.info b/modules/translation/tests/translation_test.info
index d84803e..eed01c8 100644
--- a/modules/translation/tests/translation_test.info
+++ b/modules/translation/tests/translation_test.info
@@ -5,8 +5,8 @@ package = Testing
 version = VERSION
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/translation/translation.info b/modules/translation/translation.info
index ca65d35..b15e758 100644
--- a/modules/translation/translation.info
+++ b/modules/translation/translation.info
@@ -6,8 +6,8 @@ version = VERSION
 core = 7.x
 files[] = translation.test
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/trigger/tests/trigger_test.info b/modules/trigger/tests/trigger_test.info
index f81749a..278d6cd 100644
--- a/modules/trigger/tests/trigger_test.info
+++ b/modules/trigger/tests/trigger_test.info
@@ -4,8 +4,8 @@ package = Testing
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/trigger/trigger.info b/modules/trigger/trigger.info
index 0586f45..fba5029 100644
--- a/modules/trigger/trigger.info
+++ b/modules/trigger/trigger.info
@@ -6,8 +6,8 @@ core = 7.x
 files[] = trigger.test
 configure = admin/structure/trigger
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/update/tests/aaa_update_test.info b/modules/update/tests/aaa_update_test.info
index 7029293..b0e8d6a 100644
--- a/modules/update/tests/aaa_update_test.info
+++ b/modules/update/tests/aaa_update_test.info
@@ -4,8 +4,8 @@ package = Testing
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/update/tests/bbb_update_test.info b/modules/update/tests/bbb_update_test.info
index 2e84546..e58911a 100644
--- a/modules/update/tests/bbb_update_test.info
+++ b/modules/update/tests/bbb_update_test.info
@@ -4,8 +4,8 @@ package = Testing
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/update/tests/ccc_update_test.info b/modules/update/tests/ccc_update_test.info
index b8fd231..c852adf 100644
--- a/modules/update/tests/ccc_update_test.info
+++ b/modules/update/tests/ccc_update_test.info
@@ -4,8 +4,8 @@ package = Testing
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/update/tests/themes/update_test_basetheme/update_test_basetheme.info b/modules/update/tests/themes/update_test_basetheme/update_test_basetheme.info
index 3c5fa32..201ca82 100644
--- a/modules/update/tests/themes/update_test_basetheme/update_test_basetheme.info
+++ b/modules/update/tests/themes/update_test_basetheme/update_test_basetheme.info
@@ -3,8 +3,8 @@ description = Test theme which acts as a base theme for other test subthemes.
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/update/tests/themes/update_test_subtheme/update_test_subtheme.info b/modules/update/tests/themes/update_test_subtheme/update_test_subtheme.info
index 7f23938..e388390 100644
--- a/modules/update/tests/themes/update_test_subtheme/update_test_subtheme.info
+++ b/modules/update/tests/themes/update_test_subtheme/update_test_subtheme.info
@@ -4,8 +4,8 @@ core = 7.x
 base theme = update_test_basetheme
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/update/tests/update_test.info b/modules/update/tests/update_test.info
index 8cec919..fea86ae 100644
--- a/modules/update/tests/update_test.info
+++ b/modules/update/tests/update_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/update/update.info b/modules/update/update.info
index fef63c5..64183b3 100644
--- a/modules/update/update.info
+++ b/modules/update/update.info
@@ -6,8 +6,8 @@ core = 7.x
 files[] = update.test
 configure = admin/reports/updates/settings
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/user/tests/user_form_test.info b/modules/user/tests/user_form_test.info
index ff4cd76..871e1fb 100644
--- a/modules/user/tests/user_form_test.info
+++ b/modules/user/tests/user_form_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/modules/user/user.info b/modules/user/user.info
index eef6b45..1430b68 100644
--- a/modules/user/user.info
+++ b/modules/user/user.info
@@ -9,8 +9,8 @@ required = TRUE
 configure = admin/config/people
 stylesheets[all][] = user.css
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/profiles/commons/build-commons-dev.make b/profiles/commons/build-commons-dev.make
index a8996ac..581a227 100644
--- a/profiles/commons/build-commons-dev.make
+++ b/profiles/commons/build-commons-dev.make
@@ -9,5 +9,5 @@ projects[commons][type] = "profile"
 projects[commons][download][type] = "git"
 projects[commons][download][url] = "http://git.drupal.org/project/commons.git"
 ; http://drupal.org/node/1908812#comment-7045196
-projects[commons][patch][] = "http://drupal.org/files/1908812-drupal-org-dev-make-5.patch"
+projects[commons][patch][] = "http://drupal.org/files/1908812-drupal-org-dev-make-17.patch"
 projects[commons][download][branch] = "7.x-3.x"
\ No newline at end of file
diff --git a/profiles/commons/build_distro.sh b/profiles/commons/build_distro.sh
index 9b4617c..801a7b9 100755
--- a/profiles/commons/build_distro.sh
+++ b/profiles/commons/build_distro.sh
@@ -3,12 +3,18 @@ repos=(commons_activity_streams commons_featured commons_notices commons_profile
 
 pull_git() {
     cd $BUILD_PATH/commons_profile
+    if [[ -n $RESET ]]; then
+      git reset --hard HEAD
+    fi
     git pull origin 7.x-3.x
 
     cd $BUILD_PATH/repos/modules
     for i in "${repos[@]}"; do
       echo $i
       cd $i
+      if [[ -n $RESET ]]; then
+        git reset --hard HEAD
+      fi
       git pull origin 7.x-3.x
       cd ..
     done
@@ -17,17 +23,28 @@ pull_git() {
 }
 
 release_notes() {
-  OUTPUT="Release Notes for $RELEASE"
+  rm -rf rn.txt
+  pull_git $BUILD_PATH
+  OUTPUT="<h2>Release Notes for $RELEASE</h2>"
   cd $BUILD_PATH/commons_profile
-  OUTPUT="$OUTPUT <h3>$i:</h3>  `drush rn --date $FROM_DATE $TO_DATE`"
+  OUTPUT="$OUTPUT <h3>Commons Profile:</h3> `drush rn --date $FROM_DATE $TO_DATE`"
 
   cd $BUILD_PATH/repos/modules
   for i in "${repos[@]}"; do
     echo $i
     cd $i
-    OUTPUT="$OUTPUT <h3>$i:</h3> `drush rn --date $FROM_DATE $TO_DATE`"
+    RN=`drush rn --date $FROM_DATE $TO_DATE`
+    if [[ -n $RN ]]; then
+      OUTPUT="$OUTPUT <h3>$i:</h3> $RN"
+    fi
     cd ..
   done
+  cd $BUILD_PATH/repos/themes/commons_origins
+  RN=`drush rn --date $FROM_DATE $TO_DATE`
+  if [[ -n $RN ]]; then
+    OUTPUT="$OUTPUT <h3>commons_origins:</h3> $RN"
+  fi
+
   echo $OUTPUT >> $BUILD_PATH/rn.txt
 }
 
@@ -67,15 +84,41 @@ build_distro() {
     fi
 }
 
+# This allows users to build the most recent release from git and apply it to their directory. No-dev removes the symlinks and puts in real versions of the module.
+update() {
+    if [[ -d $BUILD_PATH ]]; then
+        cd $BUILD_PATH
+        # do we have the profile?
+        if [[ -d $BUILD_PATH/commons_profile ]]; then
+          if [[ $DEV == dev ]]; then
+            tar -czvf sites-tmp.tar.gz publish/sites/default
+            build_distro $BUILD_PATH
+            tar -zxvf sites-tmp.tar.gz
+          fi
+
+          if [[ $DEV == nodev ]]; then
+            drush make commons_profile/build-commons.make --no-cache --tar publish
+            tar -zxvf publish.tar.gz
+          fi
+        fi
+    else
+      echo "invalid build path"
+      exit 1
+    fi
+}
+
 case $1 in
   pull)
     if [[ -n $2 ]]; then
       BUILD_PATH=$2
+      if [[ -n $3 ]]; then
+       RESET=1
+      fi
     else
       echo "Usage: build_distro.sh pull [build_path]"
       exit 1
     fi
-    pull_git $BUILD_PATH;;
+    pull_git $BUILD_PATH $RESET;;
   build)
     if [[ -n $2 ]]; then
       BUILD_PATH=$2
@@ -84,6 +127,19 @@ case $1 in
       exit 1
     fi
     build_distro;;
+  update)
+    if [[ -n $2 ]]; then
+      BUILD_PATH=$2
+      if [[ $3 == 'dev' ]] || [[ $3 == 'nodev' ]]; then
+        DEV=$3
+      else
+        DEV='dev'
+      fi
+    else
+      echo "Usage: build_distro.sh update [build_path] [dev|nodev]"
+      exit 1
+    fi
+    update $BUILD_PATH $DEV;;
   rn)
     if [[ -n $2 ]] && [[ -n $3 ]] && [[ -n $4 ]] && [[ -n $5 ]]; then
       BUILD_PATH=$2
@@ -95,4 +151,4 @@ case $1 in
       exit 1
     fi
     release_notes $BUILD_PATH $RELEASE $FROM_DATE $TO_DATE;;
-esac
+esac
\ No newline at end of file
diff --git a/profiles/commons/commons.info b/profiles/commons/commons.info
index cf22af1..a0f73f3 100644
--- a/profiles/commons/commons.info
+++ b/profiles/commons/commons.info
@@ -96,9 +96,9 @@ dependencies[] = commons_location
 dependencies[] = commons_wysiwyg
 dependencies[] = commons_social_sharing
 
-; Information added by drupal.org packaging script on 2013-02-25
-version = "7.x-3.0"
+; Information added by drupal.org packaging script on 2013-04-04
+version = "7.x-3.2"
 core = "7.x"
 project = "commons"
-datestamp = "1361827541"
+datestamp = "1365041413"
 
diff --git a/profiles/commons/commons.install b/profiles/commons/commons.install
index e75e762..c0effe6 100644
--- a/profiles/commons/commons.install
+++ b/profiles/commons/commons.install
@@ -95,3 +95,28 @@ function commons_update_3101() {
   variable_set('node_admin_theme', FALSE);
   return array();
 }
+
+/**
+ * Reset the default avatar if the associated file doesn't exist in the file_managed table.
+ */
+function commons_update_3102() {
+  $reset_avatar = FALSE;
+  $file = variable_get('user_picture_default', '');
+  if(!$file) {
+    $reset_avatar = TRUE;
+  }
+  if(!$reset_avatar) {
+    $results = db_select('file_managed', 'f')
+      ->fields('f', array('fid'))
+      ->condition('filename', $file,'=')
+      ->execute()
+      ->fetchAll();
+    if(count($results) === 0) {
+      $reset_avatar = TRUE;
+    }
+  }
+  if($reset_avatar) {
+    commons_set_default_avatar();
+  }
+  return array();
+}
\ No newline at end of file
diff --git a/profiles/commons/commons.profile b/profiles/commons/commons.profile
index a589360..818c45c 100644
--- a/profiles/commons/commons.profile
+++ b/profiles/commons/commons.profile
@@ -117,8 +117,8 @@ function commons_install_tasks() {
   }
 
   //make sure we have more memory than 196M. if not lets try to increase it.
-  if (ini_get('max_execution_time') != '-1' && ini_get('max_execution_time') <= '60') {
-    ini_set('max_execution_time', '60');
+  if ((int)ini_get('max_execution_time') != -1 && (int)ini_get('max_execution_time') != 0 && (int)ini_get('max_execution_time') <= 120) {
+    ini_set('max_execution_time', 120);
   }
 
   $demo_content = variable_get('commons_install_example_content', FALSE);
@@ -131,7 +131,7 @@ function commons_install_tasks() {
       'run' => $acquia_connector ? INSTALL_TASK_RUN_IF_NOT_COMPLETED : INSTALL_TASK_SKIP,
     ),
     'commons_installer_palette' => array(
-      'display_name' => st('Chose site color palette'),
+      'display_name' => st('Choose site color palette'),
       'display' => TRUE,
       'type' => 'form',
       'function' => 'commons_installer_palette',
@@ -617,8 +617,7 @@ function commons_install_finished(&$install_state) {
   drupal_flush_all_caches();
 
   // We make custom code for the footer here because we want people to be able to freely edit it if they wish.
-  $footer_body = '<h3>'.variable_get('site_name', 'Drupal Commons').'</h3>
-  <p>'. st('A Commons Community, powered by <a href="@acquia">Acquia</a>', array('@acquia' => url('https://www.acquia.com/products-services/drupal-commons-social-business-software'))) . '</p>';
+  $footer_body = '<p>'. st('A Commons Community, powered by <a href="@acquia">Acquia</a>', array('@acquia' => url('https://www.acquia.com/products-services/drupal-commons-social-business-software'))) . '</p>';
 
   $footer_block_text = array(
     'body' => st($footer_body),
@@ -636,7 +635,7 @@ function commons_install_finished(&$install_state) {
       'status' => 1,
       'pages' => 0,
       'weight' => 1,
-      'title' => '<none>',
+      'title' => variable_get('site_name', 'Drupal Commons'),
     );
     drupal_write_record('block', $footer_block);
   }
diff --git a/profiles/commons/drupal-org-core.make b/profiles/commons/drupal-org-core.make
index 9c9ec39..8f50959 100644
--- a/profiles/commons/drupal-org-core.make
+++ b/profiles/commons/drupal-org-core.make
@@ -3,7 +3,7 @@ core = 7.x
 
 ; Download Drupal core and apply core patches if needed.
 projects[drupal][type] = "core"
-projects[drupal][version] = "7.20"
+projects[drupal][version] = "7.21"
 
 ; Hide the profiles under /profiles, so Commons is the only one. This allows
 ; the installation to start at the Language selection screen, bypassing a
diff --git a/profiles/commons/drupal-org.make b/profiles/commons/drupal-org.make
index 0a174e7..998357c 100644
--- a/profiles/commons/drupal-org.make
+++ b/profiles/commons/drupal-org.make
@@ -5,32 +5,40 @@ core = 7.x
 
 projects[addressfield][type] = "module"
 projects[addressfield][subdir] = "contrib"
+projects[addressfield][version] = "1.0-beta3"
 
 projects[acquia_connector][type] = "module"
 projects[acquia_connector][subdir] = "contrib"
+projects[acquia_connector][version] = "2.8"
 
 projects[advancedqueue][type] = "module"
 projects[advancedqueue][subdir] = "contrib"
+projects[advancedqueue][version] = "1.0-alpha2"
 
 projects[apachesolr][type] = "module"
 projects[apachesolr][subdir] = "contrib"
+projects[apachesolr][version] = "1.1"
 
-projects[apachesolr_og][version] = "1.x-dev"
 projects[apachesolr_og][type] = "module"
 projects[apachesolr_og][subdir] = "contrib"
+projects[apachesolr_og][download][type] = "git"
+projects[apachesolr_og][download][url] = "http://git.drupal.org/project/apachesolr_og.git"
+projects[apachesolr_og][download][branch] = "7.x-1.x"
+projects[apachesolr_og][download]revision] = "49820b4a4fcff7c1c4efe449da033fb6d8711ac5"
 
 projects[apachesolr_proximity][type] = "module"
 projects[apachesolr_proximity][subdir] = "contrib"
+projects[apachesolr_proximity][version] = "1.0-rc1"
 
-projects[connector][version] = "1.x-dev"
 projects[connector][type] = "module"
 projects[connector][subdir] = "contrib"
+projects[connector][version] = "1.0-beta2"
 
 projects[ckeditor][type] = "module"
 projects[ckeditor][subdir] = "contrib"
 projects[ckeditor][download][type] = "git"
 projects[ckeditor][download][url] = "http://git.drupal.org/project/ckeditor.git"
-; Use Libraries API for ckeditor
+; Use Libraries API for ckeditor.
 ; http://drupal.org/node/1063482#comment-6964504
 projects[ckeditor][download][branch] = "7.x-1.x"
 projects[ckeditor][download][revision] = "f6abbda"
@@ -41,48 +49,70 @@ projects[ckeditor][patch][] = "http://drupal.org/files/ckeditor-install-lib-1898
 
 projects[ctools][type] = "module"
 projects[ctools][subdir] = "contrib"
-; http://drupal.org/node/1494860#comment-6204438
-projects[ctools][patch][] = "http://drupal.org/files/ctools-dependent-js-broken-with-jquery-1.7-1494860-30.patch"
+projects[ctools][version] = "1.3"
 
 projects[custom_search][type] = "module"
 projects[custom_search][subdir] = "contrib"
-projects[custom_search][version] = "1.x-dev"
+projects[custom_search][download][type] = "git"
+projects[custom_search][download][url] = "http://git.drupal.org/project/custom_search.git"
+projects[custom_search][download][branch] = "7.x-1.x"
+projects[custom_search][download][revision] = "e6be0ee6f5f7c7e56f09e79d0d3351fd193c0840"
 
 projects[date][type] = "module"
 projects[date][subdir] = "contrib"
+projects[date][version] = "2.6"
 
 projects[date_facets][type] = "module"
 projects[date_facets][subdir] = "contrib"
+projects[date_facets][version] = "1.0-beta1"
 
+; Keeping this to the latest version, since it should only be used for development.
 projects[devel][version] = "1.x-dev"
 projects[devel][type] = "module"
 projects[devel][subdir] = "contrib"
 
 projects[diff][type] = "module"
 projects[diff][subdir] = "contrib"
+projects[diff][version] = "3.2"
 
 projects[email_registration][type] = "module"
 projects[email_registration][subdir] = "contrib"
+projects[email_registration][version] = "1.1"
 
 projects[entity][type] = "module"
 projects[entity][subdir] = "contrib"
+projects[entity][version] = "1.0"
+
+; Force LANGUAGE_NONE entities to still display within rendered entities.
+; http://drupal.org/node/1782134
+projects[entity][patch][] = "http://drupal.org/files/entity-translatable_fields_not_overriding_und_with_empty_values.patch"
 
 projects[entitycache][type] = "module"
 projects[entitycache][subdir] = "contrib"
+projects[entitycache][version] = "1.1"
 
-projects[entityreference][version] = "1.x-dev"
 projects[entityreference][type] = "module"
 projects[entityreference][subdir] = "contrib"
+projects[entityreference][download][type] = "git"
+projects[entityreference][download][url] = "http://git.drupal.org/project/entityreference.git"
+projects[entityreference][download][branch] = "7.x-1.x"
+projects[entityreference][download][revision] = "06089a92ee8b269f153064ad3090ce6b464f38aa"
 
+; Profile has no recommended release
 projects[edit_profile][type] = "module"
 projects[edit_profile][subdir] = "contrib"
+projects[edit_profile][version] = "1.0-beta2"
 
 projects[entityreference_prepopulate][type] = "module"
 projects[entityreference_prepopulate][subdir] = "contrib"
+projects[entityreference_prepopulate][version] = "1.2"
 
-projects[features][version] = "2.x-dev"
 projects[features][type] = "module"
 projects[features][subdir] = "contrib"
+projects[features][download][type] = "git"
+projects[features][download][url] = "http://git.drupal.org/project/features.git"
+projects[features][download][branch] = "7.x-2.x"
+projects[features][download][revision] = "63db687c75d7880bb5d2652fa9227e3ca6e4e9f0"
 
 ; Separate fields from field instances.
 ; http://drupal.org/node/1064472#comment-7042482
@@ -90,79 +120,103 @@ projects[features][patch][] = "http://drupal.org/files/features-instances-106447
 
 projects[flag][type] = "module"
 projects[flag][subdir] = "contrib"
+projects[flag][version] = "2.0"
 
 projects[flag_abuse][type] = "module"
 projects[flag_abuse][subdir] = "contrib"
-projects[flag_abuse][version] = "2.x-dev"
+projects[flag_abuse][version] = "2.0-alpha1"
+
 
 projects[redirect][type] = "module"
 projects[redirect][subdir] = "contrib"
+projects[redirect][version] = "1.0-rc1"
 
-projects[http_client][version] = "2.x-dev"
 projects[http_client][type] = "module"
 projects[http_client][subdir] = "contrib"
+projects[http_client][version] = "2.4"
 
-projects[admin_icons][version] = "1.x-dev"
 projects[admin_icons][type] = "module"
 projects[admin_icons][subdir] = "contrib"
+projects[admin_icons][download][type] = "git"
+projects[admin_icons][download][url] = "http://git.drupal.org/project/admin_icons.git"
+projects[admin_icons][download][branch] = "7.x-1.x"
+projects[admin_icons][download][revision] = "60d9f28801533fecc92216a60d444d89d80e7611"
 
 projects[libraries][type] = "module"
 projects[libraries][subdir] = "contrib"
+projects[libraries][version] = "2.1"
 
 projects[link][type] = "module"
 projects[link][subdir] = "contrib"
+projects[link][version] = "1.1"
 
 projects[menu_attributes][type] = "module"
 projects[menu_attributes][subdir] = "contrib"
+projects[menu_attributes][version] = "1.0-rc2"
 
 projects[message][type] = "module"
 projects[message][subdir] = "contrib"
-projects[message][version] = "1.x-dev"
+projects[message][download][type] = "git"
+projects[message][download][url] = "http://git.drupal.org/project/message.git"
+projects[message][download][branch] = "7.x-1.x"
+projects[message][download][revision] = "5ae12e8c0b7482f8525106825009409f3b9b7140"
+
 ; Make message access alterable.
 ; http://drupal.org/node/1920560#comment-7080942
 projects[message][patch][] = "http://drupal.org/files/1920560-message-access-alterable.patch"
 
 projects[message_notify][type] = "module"
 projects[message_notify][subdir] = "contrib"
-projects[message_notify][version] = "2.x-dev"
+projects[message_notify][download][type] = "git"
+projects[message_notify][download][url] = "http://git.drupal.org/project/message_notify.git"
+projects[message_notify][download][branch] = "7.x-2.x"
+projects[message_notify][download][revision] = "f8731d574f427dda3bc99e75f541549305655309"
 
 projects[message_subscribe][type] = "module"
 projects[message_subscribe][subdir] = "contrib"
-projects[message_subscribe][version] = "1.x-dev"
+projects[message_subscribe][download][type] = "git"
+projects[message_subscribe][download][url] = "http://git.drupal.org/project/message_subscribe.git"
+projects[message_subscribe][download][branch] = "7.x-1.x"
+projects[message_subscribe][download][revision] = "0063ab0fd922a5dbd2a052114a75a60e10e6ab07"
 
-; Remove "email" as default notifier
+; Remove "email" as default notifier.
 ; http://drupal.org/node/1828184#comment-7081868
 projects[message_subscribe][patch][] = "http://drupal.org/files/email-notifiers-1828184-15.patch"
 
-
 projects[memcache][type] = "module"
 projects[memcache][subdir] = "contrib"
+projects[memcache][version] = "1.0"
 
 projects[metatag][type] = "module"
 projects[metatag][subdir] = "contrib"
+projects[metatag][version] = "1.0-beta5"
+
 ; Support for rel=author link in head
 ; http://drupal.org/node/1865228#comment-6839604
 projects[metatag][patch][] = "http://drupal.org/files/metatag-n1865228-3.patch"
 
 projects[module_filter][type] = "module"
 projects[module_filter][subdir] = "contrib"
+projects[module_filter][version] = "1.7"
 
 projects[mollom][type] = "module"
 projects[mollom][subdir] = "contrib"
+projects[mollom][version] = "2.4"
 
-projects[oauth][version] = "3.x-dev"
 projects[oauth][type] = "module"
 projects[oauth][subdir] = "contrib"
+projects[oauth][version] = "3.1"
 
-projects[oauthconnector][version] = "1.x-dev"
 projects[oauthconnector][type] = "module"
 projects[oauthconnector][subdir] = "contrib"
+projects[oauthconnector][download][type] = "git"
+projects[oauthconnector][download][url] = "http://git.drupal.org/project/oauthconnector.git"
+projects[oauthconnector][download][branch] = "7.x-1.x"
+projects[oauthconnector][download][revision] = "0ce7ac9614710c0f68d0a58cb4ae4667f8bd6fa7"
 
 projects[og][type] = "module"
 projects[og][subdir] = "contrib"
-; Language tweak for 'user has been added to [group]'
-; http://drupal.org/node/1842830
-projects[og][patch][] = "http://drupal.org/files/og-add-group-message.patch"
+projects[og][version] = "2.1"
 
 ; og_group_ref field should respect og_user_access()
 ; http://drupal.org/node/1902086#comment-7026516
@@ -170,9 +224,12 @@ projects[og][patch][] = "http://drupal.org/files/1902086-og-ref-respect-og-user-
 
 projects[panelizer][type] = "module"
 projects[panelizer][subdir] = "contrib"
+projects[panelizer][version] = "3.1"
 
 projects[panels][type] = "module"
 projects[panels][subdir] = "contrib"
+projects[panels][version] = "3.3"
+
 ; Fatal error: Call to undefined function panels_get_layouts()
 ; http://drupal.org/node/1828684#comment-6694732
 projects[panels][patch][] = "http://drupal.org/files/1828684-layout-fix-6.patch"
@@ -183,17 +240,25 @@ projects[panels][patch][] = "http://drupal.org/files/panels-n1632898-15.patch"
 
 projects[pathauto][type] = "module"
 projects[pathauto][subdir] = "contrib"
+projects[pathauto][version] = "1.2"
 
 projects[pm_existing_pages][type] = "module"
 projects[pm_existing_pages][subdir] = "contrib"
+projects[pm_existing_pages][version] = "1.4"
 
 projects[quicktabs][type] = "module"
 projects[quicktabs][subdir] = "contrib"
-projects[quicktabs][version] = "3.x-dev"
+projects[quicktabs][download][type] = "git"
+projects[quicktabs][download][url] = "http://git.drupal.org/project/quicktabs.git"
+projects[quicktabs][download][branch] = "7.x-3.x"
+projects[quicktabs][download][revision] = "0788eba"
 
 projects[radioactivity][type] = "module"
 projects[radioactivity][subdir] = "contrib"
-projects[radioactivity][version] = "2.x-dev"
+projects[radioactivity][download][type] = "git"
+projects[radioactivity][download][url] = "http://git.drupal.org/project/radioactivity.git"
+projects[radioactivity][download][branch] = "7.x-2.x"
+projects[radioactivity][download][revision] = "aee21dbed4f54d0e626e3c19ecc550bf1ec656f6"
 
 ; Radioactivity not compatible with Memcache module
 ; http://drupal.org/node/1860216
@@ -201,15 +266,19 @@ projects[radioactivity][patch][] = "http://drupal.org/files/radioactivity-memcac
 
 projects[r4032login][type] = "module"
 projects[r4032login][subdir] = "contrib"
+projects[r4032login][version] = "1.5"
 
 projects[rate][type] = "module"
 projects[rate][subdir] = "contrib"
+projects[rate][version] = "1.6"
+
 ; Add widget to node/comment $links
 ; http://drupal.org/node/947516#comment-6979780
 projects[rate][patch][] = "http://drupal.org/files/947516-rate-node-links-15.patch"
 
 projects[realname][type] = "module"
 projects[realname][subdir] = "contrib"
+projects[realname][version] = "1.1"
 
 projects[registration][subdir] = "contrib"
 projects[registration][type] = "module"
@@ -224,64 +293,94 @@ projects[registration][patch][] = "http://drupal.org/files/entity_cache_support-
 
 projects[rules][type] = "module"
 projects[rules][subdir] = "contrib"
+projects[rules][version] = "2.3"
 
 projects[search_facetapi][type] = "module"
 projects[search_facetapi][subdir] = "contrib"
+projects[search_facetapi][version] = "1.0-beta2"
 
 projects[sharethis][type] = "module"
 projects[sharethis][subdir] = "contrib"
+projects[sharethis][version] = "2.5"
 
 projects[facetapi][type] = "module"
 projects[facetapi][subdir] = "contrib"
+projects[facetapi][version] = "1.3"
 
-; Remove snippets from non-node type searches:
-; http://drupal.org/node/1923904#comment-7094488
 projects[rich_snippets][type] = "module"
 projects[rich_snippets][subdir] = "contrib"
+projects[rich_snippets][version] = "1.0-beta2"
+
+; Remove snippets from non-node type searches:
+; http://drupal.org/node/1923904#comment-7094488
 projects[rich_snippets][patch][] = "http://drupal.org/files/1923904-search-nodes-only.patch"
 
 projects[schemaorg][type] = "module"
 projects[schemaorg][subdir] = "contrib"
+projects[schemaorg][version] = "1.0-beta3"
 
-projects[strongarm][version] = "2.x-dev"
 projects[strongarm][type] = "module"
 projects[strongarm][subdir] = "contrib"
+projects[strongarm][download][type] = "git"
+projects[strongarm][download][url] = "http://git.drupal.org/project/strongarm.git"
+projects[strongarm][download][branch] = "7.x-2.x"
+projects[strongarm][download][revision] = "5a2326ba67e59923ecce63d9bb5e0ed6548abdf8"
 
 projects[timeago][type] = "module"
 projects[timeago][subdir] = "contrib"
 projects[timeago][version] = "2.x-dev"
+projects[timeago][download][type] = "git"
+projects[timeago][download][url] = "http://git.drupal.org/project/timeago.git"
+projects[timeago][download][branch] = "7.x-2.x"
+projects[timeago][download][revision] = "768ea66"
 
 ; Provide a dedicated date type:
 ; http://drupal.org/node/1427226#comment-6638836
 projects[timeago][patch][] = "http://drupal.org/files/1427226-timeago-date-type.patch"
 
+; Redundant call to drupal_add_js() when Libraries module is enabled.
+; http://drupal.org/node/1945942
+projects[timeago][patch][] = "http://drupal.org/files/timeago-libraries-a.patch"
+
 projects[title][type] = "module"
 projects[title][subdir] = "contrib"
+projects[title][version] = "1.0-alpha7"
 
 projects[token][type] = "module"
 projects[token][subdir] = "contrib"
+projects[token][version] = "1.5"
+
 
 projects[views][type] = "module"
 projects[views][subdir] = "contrib"
-projects[views][version] = "3.x-dev"
+projects[views][version] = "3.6"
+
 
 projects[views_field_view][type] = "module"
 projects[views_field_view][subdir] = "contrib"
+projects[views_field_view][version] = "1.0"
 
 projects[views_load_more][type] = "module"
 projects[views_load_more][subdir] = "contrib"
+projects[views_load_more][version] = "1.1"
 
 projects[views_bulk_operations][type] = "module"
 projects[views_bulk_operations][subdir] = "contrib"
+projects[views_bulk_operations][version] = "3.1"
 
 projects[views_litepager][type] = "module"
 projects[views_litepager][subdir] = "contrib"
+projects[views_litepager][version] = "3.0"
 
+; We have the version of voting api at the top so it doesn't get included in our dev make patch.
+projects[votingapi][version] = "2.11"
 projects[votingapi][type] = "module"
 projects[votingapi][subdir] = "contrib"
 
 ; Commons contrib modules:
+; We don't tag a release here because want them to auto-increment.. and we are the ones who test it.
 
+; We don't have a release for this?!?!
 projects[commons_activity_streams][type] = "module"
 projects[commons_activity_streams][subdir] = "contrib"
 
@@ -373,10 +472,14 @@ projects[commons_topics][subdir] = "contrib"
 
 projects[adaptivetheme][type] = "theme"
 projects[adaptivetheme][subdir] = "contrib"
-projects[adaptivetheme][version] = "3.x-dev"
+projects[adaptivetheme][download][type] = "git"
+projects[adaptivetheme][download][url] = "git://git.drupal.org/project/adaptivetheme.git"
+projects[adaptivetheme][download][branch] = "7.x-3.x"
+projects[adaptivetheme][download][revision] = "4e29d43"
 
 projects[sky][type] = "theme"
 projects[sky][subdir] = "contrib"
+projects[sky][version] = "3.0-rc1"
 
 projects[commons_origins][type] = "theme"
 projects[commons_origins][subdir] = "contrib"
diff --git a/profiles/commons/libraries/timeago/jquery.timeago.js b/profiles/commons/libraries/timeago/jquery.timeago.js
index 54da8af..e3731b2 100644
--- a/profiles/commons/libraries/timeago/jquery.timeago.js
+++ b/profiles/commons/libraries/timeago/jquery.timeago.js
@@ -3,7 +3,7 @@
  * updating fuzzy timestamps (e.g. "4 minutes ago" or "about 1 day ago").
  *
  * @name timeago
- * @version 1.0.2
+ * @version 1.1.0
  * @requires jQuery v1.2.3+
  * @author Ryan McGeary
  * @license MIT License - http://www.opensource.org/licenses/mit-license.php
@@ -40,6 +40,7 @@
     settings: {
       refreshMillis: 60000,
       allowFuture: false,
+      localeTitle: false,
       strings: {
         prefixAgo: null,
         prefixFromNow: null,
@@ -117,15 +118,34 @@
     }
   });
 
-  $.fn.timeago = function() {
-    var self = this;
-    self.each(refresh);
+  // functions that can be called via $(el).timeago('action')
+  // init is default when no action is given
+  // functions are called with context of a single element
+  var functions = {
+    init: function(){
+      var refresh_el = $.proxy(refresh, this);
+      refresh_el();
+      var $s = $t.settings;
+      if ($s.refreshMillis > 0) {
+        setInterval(refresh_el, $s.refreshMillis);
+      }
+    },
+    update: function(time){
+      $(this).data('timeago', { datetime: $t.parse(time) });
+      refresh.apply(this);
+    }
+  };
 
-    var $s = $t.settings;
-    if ($s.refreshMillis > 0) {
-      setInterval(function() { self.each(refresh); }, $s.refreshMillis);
+  $.fn.timeago = function(action, options) {
+    var fn = action ? functions[action] : functions.init;
+    if(!fn){
+      throw new Error("Unknown function name '"+ action +"' for timeago");
     }
-    return self;
+    // each over objects here and call the requested function
+    this.each(function(){
+      fn.call(this, options);
+    });
+    return this;
   };
 
   function refresh() {
@@ -141,7 +161,9 @@
     if (!element.data("timeago")) {
       element.data("timeago", { datetime: $t.datetime(element) });
       var text = $.trim(element.text());
-      if (text.length > 0 && !($t.isTime(element) && element.attr("title"))) {
+      if ($t.settings.localeTitle) {
+        element.attr("title", element.data('timeago').datetime.toLocaleString());
+      } else if (text.length > 0 && !($t.isTime(element) && element.attr("title"))) {
         element.attr("title", text);
       }
     }
diff --git a/profiles/commons/modules/contrib/admin_icons/admin_icons.info b/profiles/commons/modules/contrib/admin_icons/admin_icons.info
index cb94ffa..849f7bf 100644
--- a/profiles/commons/modules/contrib/admin_icons/admin_icons.info
+++ b/profiles/commons/modules/contrib/admin_icons/admin_icons.info
@@ -3,9 +3,9 @@ description = Icon font library for use with other modules and themes.
 core = 7.x
 
 
-; Information added by drupal.org packaging script on 2012-10-01
-version = "7.x-1.x-dev"
-core = "7.x"
+
+; Information added by drush on 2013-04-04
+version = ""
 project = "admin_icons"
-datestamp = "1349049710"
+datestamp = "1365041466"
 
diff --git a/profiles/commons/modules/contrib/apachesolr_og/apachesolr_og.info b/profiles/commons/modules/contrib/apachesolr_og/apachesolr_og.info
index 006622f..9308fe2 100644
--- a/profiles/commons/modules/contrib/apachesolr_og/apachesolr_og.info
+++ b/profiles/commons/modules/contrib/apachesolr_og/apachesolr_og.info
@@ -6,9 +6,10 @@ core = 7.x
 dependencies[] = apachesolr
 dependencies[] = og
 
-; Information added by drupal.org packaging script on 2012-11-15
+
+; Information added by drush on 2013-04-04
 version = "7.x-1.0+2-dev"
 core = "7.x"
 project = "apachesolr_og"
-datestamp = "1352939745"
+datestamp = "1365041483"
 
diff --git a/profiles/commons/modules/contrib/ckeditor/ckeditor.info b/profiles/commons/modules/contrib/ckeditor/ckeditor.info
index cb2045e..3b342f8 100644
--- a/profiles/commons/modules/contrib/ckeditor/ckeditor.info
+++ b/profiles/commons/modules/contrib/ckeditor/ckeditor.info
@@ -5,9 +5,9 @@ package     = User interface
 configure   = admin/config/content/ckeditor
 files[]     = includes/ckeditor.user.inc
 
-; Information added by drush on 2013-02-25
+; Information added by drush on 2013-04-04
 version = "7.x-1.12+7-dev"
 core = "7.x"
 project = "ckeditor"
-datestamp = "1361827582"
+datestamp = "1365041517"
 
diff --git a/profiles/commons/modules/contrib/commons_activity_streams/commons_activity_page/commons_activity_page.info b/profiles/commons/modules/contrib/commons_activity_streams/commons_activity_page/commons_activity_page.info
index cefae79..1ed5d52 100644
--- a/profiles/commons/modules/contrib/commons_activity_streams/commons_activity_page/commons_activity_page.info
+++ b/profiles/commons/modules/contrib/commons_activity_streams/commons_activity_page/commons_activity_page.info
@@ -2,18 +2,19 @@ name = Commons Activity Page
 description = Allows users to view a stream of site-wide and personalized activity.
 core = 7.x
 package = Commons - Landing pages
-version = 7.x-3.0-alpha1
 project = commons_activity_page
 dependencies[] = ctools
+dependencies[] = panels
+dependencies[] = panels_ipe
 dependencies[] = page_manager
 dependencies[] = commons_featured
 dependencies[] = commons_activity_streams
 features[ctools][] = page_manager:pages_default:1
 features[features_api][] = api:1
 features[page_manager_pages][] = commons_activity_streams_activity
-; Information added by drupal.org packaging script on 2013-02-25
-version = "7.x-3.x-dev"
+; Information added by drupal.org packaging script on 2013-04-04
+version = "7.x-3.2"
 core = "7.x"
 project = "commons_activity_streams"
-datestamp = "1361753001"
+datestamp = "1365037816"
 
diff --git a/profiles/commons/modules/contrib/commons_activity_streams/commons_activity_streams.features.inc b/profiles/commons/modules/contrib/commons_activity_streams/commons_activity_streams.features.inc
index c1dc799..b331da6 100644
--- a/profiles/commons/modules/contrib/commons_activity_streams/commons_activity_streams.features.inc
+++ b/profiles/commons/modules/contrib/commons_activity_streams/commons_activity_streams.features.inc
@@ -37,9 +37,9 @@ function commons_activity_streams_default_message_type() {
     "arguments" : null,
     "message_text" : { "und" : [
         {
-          "value" : "[message:user:picture]",
+          "value" : "[message:user:picture:35x35]",
           "format" : "filtered_html",
-          "safe_value" : "[message:user:picture]"
+          "safe_value" : "[message:user:picture:35x35]"
         },
         {
           "value" : "\\u003Ca href=\\u0022[message:user:url:absolute]\\u0022\\u003E[message:user:name]\\u003C\\/a\\u003E commented on \\u003Ca href=\\u0022[message:field-target-nodes:0:url]\\u0022\\u003E[message:field-target-nodes:0:title]\\u003C\\/a\\u003E",
@@ -66,9 +66,9 @@ function commons_activity_streams_default_message_type() {
     "arguments" : null,
     "message_text" : { "und" : [
         {
-          "value" : "[message:user:picture]",
+          "value" : "[message:user:picture:35x35]",
           "format" : "filtered_html",
-          "safe_value" : "[message:user:picture]"
+          "safe_value" : "[message:user:picture:35x35]"
         },
         {
           "value" : "\\u003Ca href=\\u0022[message:user:url:absolute]\\u0022\\u003E[message:user:name]\\u003C\\/a\\u003E created \\u003Ca href=\\u0022[message:field-target-nodes:0:url]\\u0022\\u003E[message:field-target-nodes:0:title]\\u003C\\/a\\u003E",
@@ -95,9 +95,9 @@ function commons_activity_streams_default_message_type() {
     "arguments" : null,
     "message_text" : { "und" : [
         {
-          "value" : "[message:user:picture]",
+          "value" : "[message:user:picture:35x35]",
           "format" : "filtered_html",
-          "safe_value" : "[message:user:picture]"
+          "safe_value" : "[message:user:picture:35x35]"
         },
         {
           "value" : "\\u003Ca href=\\u0022[message:user:url:absolute]\\u0022\\u003E[message:user:name]\\u003C\\/a\\u003E has an updated profile",
diff --git a/profiles/commons/modules/contrib/commons_activity_streams/commons_activity_streams.info b/profiles/commons/modules/contrib/commons_activity_streams/commons_activity_streams.info
index 80342f2..68d9d32 100644
--- a/profiles/commons/modules/contrib/commons_activity_streams/commons_activity_streams.info
+++ b/profiles/commons/modules/contrib/commons_activity_streams/commons_activity_streams.info
@@ -41,9 +41,9 @@ features_exclude[field][message-commons_activity_streams_comment_created-field_t
 features_exclude[field][message-commons_activity_streams_node_created-field_target_nodes] = message-commons_activity_streams_node_created-field_target_nodes
 features_exclude[field][message-commons_activity_streams_user_profile_updated-field_target_users] = message-commons_activity_streams_user_profile_updated-field_target_users
 
-; Information added by drupal.org packaging script on 2013-02-25
-version = "7.x-3.x-dev"
+; Information added by drupal.org packaging script on 2013-04-04
+version = "7.x-3.2"
 core = "7.x"
 project = "commons_activity_streams"
-datestamp = "1361753001"
+datestamp = "1365037816"
 
diff --git a/profiles/commons/modules/contrib/commons_activity_streams/commons_activity_streams.install b/profiles/commons/modules/contrib/commons_activity_streams/commons_activity_streams.install
index a8e8d75..9f38dc8 100644
--- a/profiles/commons/modules/contrib/commons_activity_streams/commons_activity_streams.install
+++ b/profiles/commons/modules/contrib/commons_activity_streams/commons_activity_streams.install
@@ -6,4 +6,15 @@
 function commons_activity_streams_update_3101() {
   features_revert(array('commons_activity_streams' => array('message_type', 'field_instance')));
   return array();
-}
\ No newline at end of file
+}
+
+/**
+ * Set activity stream user pictures to 35x35 image style.
+ */
+function commons_activity_streams_update_3102() {
+  $revert = array(
+    'commons_activity_streams' => array('message_type'),
+  );
+  features_revert($revert);
+  return array();
+}
diff --git a/profiles/commons/modules/contrib/commons_activity_streams/commons_activity_streams.module b/profiles/commons/modules/contrib/commons_activity_streams/commons_activity_streams.module
index 322141b..d0bc8df 100644
--- a/profiles/commons/modules/contrib/commons_activity_streams/commons_activity_streams.module
+++ b/profiles/commons/modules/contrib/commons_activity_streams/commons_activity_streams.module
@@ -196,3 +196,66 @@ function commons_activity_streams_user_profile_submit($form, &$form_state) {
   $wrapper->field_target_users[] = $account;
   $wrapper->save();
 }
+
+/**
+ * Implements hook_token_info().
+ */
+function commons_activity_streams_token_info() {
+  $styles = image_styles();
+  $tokens = array();
+  foreach ($styles as $style_name => $style) {
+    $tokens['picture:' . $style_name] = array(
+      'name' => t('Picture: @st image style', array('@st' => $style_name)),
+      'description' => t('Picture: @st image style', array('@st' => $style_name)),
+    );
+  }
+  return array(
+    'tokens' => array(
+      'user' => $tokens,
+    ),
+  );
+}
+
+/**
+ * Implements hook_tokens().
+ */
+function commons_activity_streams_tokens($type, $tokens, array $data = array(), array $options = array()) {
+  $replacements = array();
+  if ($type == 'user' && isset($data['user'])) {
+    $user = $data['user'];
+    $user_wrapper = entity_metadata_wrapper('user', $user);
+    $alt = $user->name;
+    if (isset($user->field_name_first)) {
+      $alt = $user_wrapper->field_name_first->value();
+      if (isset($user->field_name_last)) {
+        $alt .= " " . $user_wrapper->field_name_last->value();
+      }
+    }
+    $alt = t("@name's picture", array('@name' => $alt));
+    foreach ($tokens as $token => $original) {
+      if (strpos($token, 'picture:') !== FALSE) {
+        list( , $style) = explode(':', $token);
+        $path = variable_get('user_picture_default', '/profiles/commons/images/avatars/user-avatar.png');
+        if (!empty($user->picture)) {
+          $path = image_style_url($style, $user->picture->uri);
+        }
+        $image_variables = array(
+          'path' => $path,
+          'alt' => $alt,
+          'title' => $alt,
+          'class' => array('image-style-none'),
+        );
+        $image = theme('image', $image_variables);
+        $user_path = user_uri($user);
+        $link_options = array(
+          'attributes' => array(
+            'title' => t('View user profile.'),
+          ),
+          'html' => TRUE,
+        );
+        $replacements[$original] = "<div class='user-picture'>" . l($image, $user_path['path'], $link_options) . "</div>";
+      }
+    }
+  }
+  return $replacements;
+}
diff --git a/profiles/commons/modules/contrib/commons_activity_streams/commons_activity_streams_groups/commons_activity_streams_groups.info b/profiles/commons/modules/contrib/commons_activity_streams/commons_activity_streams_groups/commons_activity_streams_groups.info
index 6c41d09..f7c2073 100644
--- a/profiles/commons/modules/contrib/commons_activity_streams/commons_activity_streams_groups/commons_activity_streams_groups.info
+++ b/profiles/commons/modules/contrib/commons_activity_streams/commons_activity_streams_groups/commons_activity_streams_groups.info
@@ -3,7 +3,6 @@ description = Contains Organic Groups integration for Commons Activity Streams
 core = 7.x
 package = Commons - Building blocks
 php = 5.2.4
-version = 7.x-3.0-alpha1
 project = commons_activity_streams_groups
 dependencies[] = commons_activity_streams
 dependencies[] = entity
@@ -13,9 +12,9 @@ features[ctools][] = views:views_default:3.0
 features[features_api][] = api:1
 features[views_view][] = activity_group
 
-; Information added by drupal.org packaging script on 2013-02-25
-version = "7.x-3.x-dev"
+; Information added by drupal.org packaging script on 2013-04-04
+version = "7.x-3.2"
 core = "7.x"
 project = "commons_activity_streams"
-datestamp = "1361753001"
+datestamp = "1365037816"
 
diff --git a/profiles/commons/modules/contrib/commons_content_moderation/commons_content_moderation.info b/profiles/commons/modules/contrib/commons_content_moderation/commons_content_moderation.info
index 9358259..5f3cba5 100644
--- a/profiles/commons/modules/contrib/commons_content_moderation/commons_content_moderation.info
+++ b/profiles/commons/modules/contrib/commons_content_moderation/commons_content_moderation.info
@@ -21,9 +21,9 @@ features[views_view][] = commons_content_moderation_reported_comments
 features[views_view][] = commons_content_moderation_reported_nodes
 features_exclude[dependencies][features] = features
 
-; Information added by drupal.org packaging script on 2013-02-25
-version = "7.x-3.0"
+; Information added by drupal.org packaging script on 2013-03-27
+version = "7.x-3.1"
 core = "7.x"
 project = "commons_content_moderation"
-datestamp = "1361820311"
+datestamp = "1364416512"
 
diff --git a/profiles/commons/modules/contrib/commons_content_moderation/commons_content_moderation.module b/profiles/commons/modules/contrib/commons_content_moderation/commons_content_moderation.module
index 69f8689..3e9c917 100644
--- a/profiles/commons/modules/contrib/commons_content_moderation/commons_content_moderation.module
+++ b/profiles/commons/modules/contrib/commons_content_moderation/commons_content_moderation.module
@@ -83,6 +83,9 @@ function commons_content_moderation_views_default_views_alter(&$views) {
   * Implements hook_views_bulk_operations_form_alter().
   */
 function commons_content_moderation_views_bulk_operations_form_alter(&$form, $form_state, $vbo) {
+  if(!isset($vbo->options['vbo_operations']['action::commons_content_moderation_delete_node_block_user'])) {
+    return;
+  }
   if ($form_state['step'] == 'views_form_views_form' && $vbo->options['vbo_operations']['action::commons_content_moderation_delete_node_block_user']['selected'] == 1) {
     if (module_exists('mollom') && _mollom_status()) {
       $form['mollom_text'] = array(
@@ -94,6 +97,5 @@ function commons_content_moderation_views_bulk_operations_form_alter(&$form, $fo
         '#markup' => t('When the !mollom module is installed and configured, content deleted here will also be reported to Mollom.', array('!mollom' => l('Mollom', 'http://drupal.org/project/mollom'))),
       );
     }
-
   }
 }
\ No newline at end of file
diff --git a/profiles/commons/modules/contrib/commons_documents/commons_documents.info b/profiles/commons/modules/contrib/commons_documents/commons_documents.info
index bf31844..53d783b 100644
--- a/profiles/commons/modules/contrib/commons_documents/commons_documents.info
+++ b/profiles/commons/modules/contrib/commons_documents/commons_documents.info
@@ -36,9 +36,9 @@ features[variable][] = node_options_document
 features[variable][] = node_preview_document
 features[variable][] = node_submitted_document
 features[views_view][] = commons_bw_documents
-; Information added by drupal.org packaging script on 2013-02-25
-version = "7.x-3.0"
+; Information added by drupal.org packaging script on 2013-04-04
+version = "7.x-3.2"
 core = "7.x"
 project = "commons_documents"
-datestamp = "1361820312"
+datestamp = "1365037212"
 
diff --git a/profiles/commons/modules/contrib/commons_documents/commons_documents.module b/profiles/commons/modules/contrib/commons_documents/commons_documents.module
index 86ce1d5..3376cf9 100644
--- a/profiles/commons/modules/contrib/commons_documents/commons_documents.module
+++ b/profiles/commons/modules/contrib/commons_documents/commons_documents.module
@@ -28,7 +28,7 @@ function commons_documents_views_pre_render(&$view) {
   if ($view->name == 'commons_bw_documents') {
     $group_id = $view->args[0];
     if (og_user_access('node', $group_id, 'create document content') && node_access('create', 'document')) {
-      $view->attachment_before = l('Create a document', 'node/add/document', array('query' => array('og_group_ref' => $group_id)));
+      $view->attachment_before = l(t('Create a document'), 'node/add/document', array('query' => array('og_group_ref' => $group_id)));
     }
   }
 }
diff --git a/profiles/commons/modules/contrib/commons_events/commons_events.features.field_base.inc b/profiles/commons/modules/contrib/commons_events/commons_events.features.field_base.inc
index 2377d7f..038c9c6 100644
--- a/profiles/commons/modules/contrib/commons_events/commons_events.features.field_base.inc
+++ b/profiles/commons/modules/contrib/commons_events/commons_events.features.field_base.inc
@@ -142,6 +142,47 @@ function commons_events_field_default_field_bases() {
     'type' => 'text',
   );
 
+  // Exported field_base: 'field_organizers'
+  $field_bases['field_organizers'] = array(
+    'active' => '1',
+    'cardinality' => '-1',
+    'deleted' => '0',
+    'entity_types' => array(),
+    'field_name' => 'field_organizers',
+    'foreign keys' => array(
+      'users' => array(
+        'columns' => array(
+          'target_id' => 'uid',
+        ),
+        'table' => 'users',
+      ),
+    ),
+    'indexes' => array(
+      'target_id' => array(
+        0 => 'target_id',
+      ),
+    ),
+    'locked' => '0',
+    'module' => 'entityreference',
+    'settings' => array(
+      'handler' => 'base',
+      'handler_settings' => array(
+        'behaviors' => array(
+          'views-select-list' => array(
+            'status' => 0,
+          ),
+        ),
+        'sort' => array(
+          'type' => 'none',
+        ),
+        'target_bundles' => array(),
+      ),
+      'target_type' => 'user',
+    ),
+    'translatable' => '0',
+    'type' => 'entityreference',
+  );
+
   // Exported field_base: 'field_registration'
   $field_bases['field_registration'] = array(
     'active' => '1',
diff --git a/profiles/commons/modules/contrib/commons_events/commons_events.features.field_instance.inc b/profiles/commons/modules/contrib/commons_events/commons_events.features.field_instance.inc
index 3abaa5d..242060e 100644
--- a/profiles/commons/modules/contrib/commons_events/commons_events.features.field_instance.inc
+++ b/profiles/commons/modules/contrib/commons_events/commons_events.features.field_instance.inc
@@ -31,7 +31,7 @@ function commons_events_field_default_field_instances() {
           'trim_length' => 600,
         ),
         'type' => 'text_summary_or_trimmed',
-        'weight' => 0,
+        'weight' => '3',
       ),
     ),
     'entity_type' => 'node',
@@ -85,10 +85,16 @@ function commons_events_field_default_field_instances() {
         'weight' => '2',
       ),
       'teaser' => array(
-        'label' => 'above',
-        'settings' => array(),
-        'type' => 'hidden',
-        'weight' => 0,
+        'label' => 'hidden',
+        'module' => 'addressfield',
+        'settings' => array(
+          'format_handlers' => array(
+            0 => 'address'
+          ),
+          'use_widget_handlers' => 1,
+        ),
+        'type' => 'addressfield_default',
+        'weight' => '2',
       ),
     ),
     'entity_type' => 'node',
@@ -112,7 +118,7 @@ function commons_events_field_default_field_instances() {
         ),
       ),
       'type' => 'addressfield_standard',
-      'weight' => '6',
+      'weight' => '8',
     ),
   );
 
@@ -126,7 +132,7 @@ function commons_events_field_default_field_instances() {
         'label' => 'hidden',
         'module' => 'date',
         'settings' => array(
-          'format_type' => 'long',
+          'format_type' => 'event_datetime',
           'fromto' => 'both',
           'multiple_from' => '',
           'multiple_number' => '',
@@ -136,10 +142,14 @@ function commons_events_field_default_field_instances() {
         'weight' => '1',
       ),
       'teaser' => array(
-        'label' => 'above',
-        'settings' => array(),
-        'type' => 'hidden',
-        'weight' => 0,
+        'label' => 'hidden',
+        'module' => 'date',
+        'settings' => array(
+          'format_type' => 'event_datetime',
+          'fromto' => 'both',
+        ),
+        'type' => 'date_default',
+        'weight' => '1',
       ),
     ),
     'entity_type' => 'node',
@@ -165,7 +175,7 @@ function commons_events_field_default_field_instances() {
         'year_range' => '-3:+3',
       ),
       'type' => 'date_popup',
-      'weight' => '4',
+      'weight' => '5',
     ),
   );
 
@@ -190,7 +200,7 @@ function commons_events_field_default_field_instances() {
         'label' => 'above',
         'settings' => array(),
         'type' => 'hidden',
-        'weight' => 0,
+        'weight' => '0',
       ),
     ),
     'entity_type' => 'node',
@@ -205,7 +215,7 @@ function commons_events_field_default_field_instances() {
       'module' => 'options',
       'settings' => array(),
       'type' => 'options_select',
-      'weight' => '5',
+      'weight' => '7',
     ),
   );
 
@@ -220,16 +230,19 @@ function commons_events_field_default_field_instances() {
         'module' => 'image',
         'settings' => array(
           'image_link' => '',
-          'image_style' => '',
+          'image_style' => '50x50',
         ),
         'type' => 'image',
         'weight' => '0',
       ),
       'teaser' => array(
         'label' => 'hidden',
-        'settings' => array(),
-        'type' => 'hidden',
-        'weight' => 0,
+        'module' => 'image',
+        'settings' => array(
+          'image_style' => '50x50',
+        ),
+        'type' => 'image',
+        'weight' => '0',
       ),
     ),
     'entity_type' => 'node',
@@ -251,11 +264,11 @@ function commons_events_field_default_field_instances() {
       'active' => 1,
       'module' => 'image',
       'settings' => array(
-        'preview_image_style' => 'thumbnail',
+        'preview_image_style' => '50x50',
         'progress_indicator' => 'throbber',
       ),
       'type' => 'image_image',
-      'weight' => '8',
+      'weight' => '9',
     ),
   );
 
@@ -299,7 +312,7 @@ function commons_events_field_default_field_instances() {
       'module' => 'number',
       'settings' => array(),
       'type' => 'number',
-      'weight' => '11',
+      'weight' => '12',
     ),
   );
 
@@ -339,6 +352,55 @@ function commons_events_field_default_field_instances() {
         'size' => '60',
       ),
       'type' => 'text_textfield',
+      'weight' => '3',
+    ),
+  );
+
+  // Exported field_instance: 'node-event-field_organizers'
+  $field_instances['node-event-field_organizers'] = array(
+    'bundle' => 'event',
+    'default_value' => NULL,
+    'default_value_function' => '',
+    'deleted' => '0',
+    'description' => '',
+    'display' => array(
+      'default' => array(
+        'label' => 'above',
+        'module' => 'entityreference',
+        'settings' => array(
+          'link' => FALSE,
+        ),
+        'type' => 'hidden',
+        'weight' => 12,
+      ),
+      'teaser' => array(
+        'label' => 'above',
+        'settings' => array(),
+        'type' => 'hidden',
+        'weight' => 0,
+      ),
+    ),
+    'entity_type' => 'node',
+    'field_name' => 'field_organizers',
+    'label' => 'Organizers',
+    'required' => 1,
+    'settings' => array(
+      'behaviors' => array(
+        'prepopulate' => array(
+          'status' => 0,
+        ),
+      ),
+      'user_register_form' => FALSE,
+    ),
+    'widget' => array(
+      'active' => 1,
+      'module' => 'entityreference',
+      'settings' => array(
+        'match_operator' => 'CONTAINS',
+        'path' => '',
+        'size' => '60',
+      ),
+      'type' => 'entityreference_autocomplete_tags',
       'weight' => '2',
     ),
   );
@@ -398,7 +460,7 @@ function commons_events_field_default_field_instances() {
       'module' => 'registration',
       'settings' => array(),
       'type' => 'registration_select',
-      'weight' => '9',
+      'weight' => '10',
     ),
   );
 
@@ -434,7 +496,7 @@ function commons_events_field_default_field_instances() {
       'module' => 'options',
       'settings' => array(),
       'type' => 'options_select',
-      'weight' => '10',
+      'weight' => '11',
     ),
   );
 
@@ -474,7 +536,7 @@ function commons_events_field_default_field_instances() {
         'size' => 60,
       ),
       'type' => 'taxonomy_autocomplete',
-      'weight' => '12',
+      'weight' => '13',
     ),
   );
 
@@ -487,6 +549,7 @@ function commons_events_field_default_field_instances() {
   t('Event logo');
   t('Location');
   t('Maximum number of attendees');
+  t('Organizers');
   t('Registration');
   t('Registration type');
   t('URL');
diff --git a/profiles/commons/modules/contrib/commons_events/commons_events.info b/profiles/commons/modules/contrib/commons_events/commons_events.info
index 6e390f5..5a536aa 100644
--- a/profiles/commons/modules/contrib/commons_events/commons_events.info
+++ b/profiles/commons/modules/contrib/commons_events/commons_events.info
@@ -49,6 +49,7 @@ features[field_base][] = field_location
 features[field_base][] = field_logo
 features[field_base][] = field_number_of_attendees
 features[field_base][] = field_offsite_url
+features[field_base][] = field_organizers
 features[field_base][] = field_registration
 features[field_base][] = field_registration_type
 features[field_instance][] = node-event-body
@@ -58,6 +59,7 @@ features[field_instance][] = node-event-field_location
 features[field_instance][] = node-event-field_logo
 features[field_instance][] = node-event-field_number_of_attendees
 features[field_instance][] = node-event-field_offsite_url
+features[field_instance][] = node-event-field_organizers
 features[field_instance][] = node-event-field_registration
 features[field_instance][] = node-event-field_registration_type
 features[field_instance][] = node-event-field_topics
@@ -93,6 +95,7 @@ features[variable][] = node_options_event
 features[variable][] = node_preview_event
 features[variable][] = node_submitted_event
 features[views_view][] = commons_events_event_attendee_list
+features[views_view][] = commons_events_organizers
 features[views_view][] = commons_events_upcoming
 features[views_view][] = commons_events_user_upcoming_events
 files[] = commons_events.features.inc
@@ -101,9 +104,9 @@ files[] = commons_events.features.field_instance.inc
 files[] = commons_events.strongarm.inc
 files[] = includes/commons_events.forms.inc
 files[] = includes/commons_events.theme.inc
-; Information added by drupal.org packaging script on 2013-02-25
-version = "7.x-3.0"
+; Information added by drupal.org packaging script on 2013-04-04
+version = "7.x-3.2"
 core = "7.x"
 project = "commons_events"
-datestamp = "1361820316"
+datestamp = "1365037511"
 
diff --git a/profiles/commons/modules/contrib/commons_events/commons_events.install b/profiles/commons/modules/contrib/commons_events/commons_events.install
index 2c3ab27..72ebe55 100644
--- a/profiles/commons/modules/contrib/commons_events/commons_events.install
+++ b/profiles/commons/modules/contrib/commons_events/commons_events.install
@@ -1,11 +1,132 @@
 <?php
 
 /**
+ * Implements hook_install().
+ * Creates a default datetime format for events.
+ */
+function commons_events_install() {
+  db_insert('date_formats')
+    ->fields(array(
+      'format' => 'M d Y - g:ia T',
+      'type' => 'event_datetime',
+      'locked' => 1,
+    ))
+    ->execute();
+
+  db_insert('date_format_type')
+    ->fields(array(
+      'type' => 'event_datetime',
+      'title' => 'Event Datetime',
+      'locked' => 0,
+    ))
+    ->execute();
+
+  variable_set('date_format_event_datetime', 'M d Y - g:ia T');
+}
+
+/**
  * Disable summary on Event nodes.
  */
 function commons_events_update_7000() {
-    $revert = array(
-      'commons_events' => array('field_instance'),
+  $revert = array(
+    'commons_events' => array('field_instance'),
+  );
+  features_revert($revert);
+  return array();
+}
+
+/**
+ * Switch attendee view and event logo to use 50x50 image style.
+ */
+function commons_events_update_7001() {
+  $revert = array(
+    'commons_events' => array('views', 'node'),
+  );
+  features_revert($revert);
+  return array();
+}
+
+/**
+ * Add the Organizers entity reference field to Events and update existing nodes
+ * with the event's creator as the default value.
+ */
+function commons_events_update_7002() {
+  // Revert node and views to use default implementations. This resets field
+  // weights to configuration due to new Organizers field.
+  $revert = array(
+    'commons_events' => array('node'),
+  );
+  features_revert($revert);
+  if (field_info_field('field_organizers') == NULL) {
+    // Create the field so we can update the default values for existing events.
+    module_load_include('inc', 'commons_events', 'commons_events.features.field_base');
+    $fields = commons_events_field_default_field_bases();
+    field_create_field($fields['field_organizers']);
+  }
+  if (field_info_instance('node', 'field_organizers', 'event') == NULL) {
+    // Create the instance on Events.
+    module_load_include('inc', 'commons_events', 'commons_events.features.field_instance');
+    $instances = commons_events_field_default_field_instances();
+    field_create_instance($instances['node-event-field_organizers']);
+  }
+  // Now update all existing Events to have the creator as the default organizer.
+  $events = new EntityFieldQuery();
+  $events->entityCondition('entity_type', 'node')
+    ->entityCondition('bundle', 'event');
+  $events = $events->execute();
+  $events = entity_load('node', array_keys($events['node']));
+  foreach($events as $nid => $event) {
+    if (!property_exists($event, 'field_organizers') || empty($event->field_organizers)) {
+      $event->field_organizers = array(
+        $event->language => array(
+          0 => array(
+            'target_id' => $event->uid
+          )
+        ),
+      );
+      node_save($event);
+    }
+  }
+  return array();
+}
+
+/**
+ * Change event teaser display to show logo, date, and address.
+ */
+function commons_events_update_7003() {
+  $revert = array(
+    'commons_events' => array('field_instance'),
+  );
+  features_revert($revert);
+  return array();
+}
+
+/**
+* Create the event_datetime date format.
+*/
+function commons_events_update_7004() {
+  db_insert('date_formats')
+    ->fields(array(
+      'format' => 'M d Y - g:ia T',
+      'type' => 'event_datetime',
+      'locked' => 1,
+    ))
+    ->execute();
+
+  db_insert('date_format_type')
+    ->fields(array(
+      'type' => 'event_datetime',
+      'title' => 'Event Datetime',
+      'locked' => 0,
+    ))
+    ->execute();
+
+  variable_set('date_format_event_datetime', 'M d Y - g:ia T');
+
+  // Revert commons_events to make sure its referencing the event_datetime module.
+  $revert = array(
+    'commons_events' => array('field_instance'),
+    'commons_events' => array('views_view'),
   );
   features_revert($revert);
   return array();
diff --git a/profiles/commons/modules/contrib/commons_events/commons_events.module b/profiles/commons/modules/contrib/commons_events/commons_events.module
index c894d8d..fda15bd 100644
--- a/profiles/commons/modules/contrib/commons_events/commons_events.module
+++ b/profiles/commons/modules/contrib/commons_events/commons_events.module
@@ -7,23 +7,6 @@
 include_once 'commons_events.features.inc';
 
 /**
- * Implements hook_menu().
- */
-function commons_events_menu() {
-  $items = array();
-  $items['node/%node/attendees'] = array(
-    'title' => 'Attendees',
-    'page callback' => 'commons_events_event_attendees_page',
-    'page arguments' => array(1),
-    'access callback' => 'commons_events_attendee_access',
-    'access arguments' => array(1),
-    'type' => MENU_LOCAL_TASK,
-    'weight' => 5,
-  );
-  return $items;
-}
-
-/**
  * Implements hook_menu_alter().
  */
 function commons_events_menu_alter(&$items) {
@@ -94,6 +77,65 @@ function commons_events_theme($existing, $type, $theme, $path) {
 }
 
 /**
+ * Implements hook_element_info_alter().
+ */
+function commons_events_element_info_alter(&$type) {
+  // Extend date_combo processing to alter the label text on the fields.
+  if (isset($type['date_combo'])) {
+    $type['date_combo']['#process'][] = 'commons_events_date_combo_element_process';
+  }
+
+  // Extend date_popup processing to remove the redundant descriptions on
+  // fields.
+  if (isset($type['date_popup'])) {
+    $type['date_popup']['#process'][] = 'commons_events_date_popup_element_process';
+  }
+}
+
+/**
+ * Process date_combo field output.
+ *
+ * This is an extension of the Date module's own processing.
+ *
+ * @see date_combo_element_process()
+ * @see commons_events_element_info_alter()
+ */
+function commons_events_date_combo_element_process($element, &$form_state, $form) {
+  $field = field_widget_field($element, $form_state);
+
+  // Change the labels for from and to dates to something more meaningful.
+  if (!empty($field['settings']['todate'])) {
+    $element['value']['#title'] = t('Start date');
+    $element['value2']['#title'] = t('End date');
+  }
+
+  return $element;
+}
+
+/**
+ * Process date_popup field output.
+ *
+ * This is an extension of the Date module's own processing.
+ *
+ * @see date_popup_element_process()
+ * @see commons_events_element_info_alter()
+ */
+function commons_events_date_popup_element_process($element, &$form_state, $form) {
+  // If a date_popup field is part of a larger range widget, simplify the
+  // output.
+  if (!empty($element['#field']['settings']['todate'])) {
+    foreach (array('date', 'time') as $type) {
+      if (!empty($element[$type])) {
+        // The description and title are unnecessary.
+        unset($element[$type]['#description']);
+        $element[$type]['#title'] = '';
+      }
+    }
+  }
+  return $element;
+}
+
+/**
  * Implements hook_entity_view_alter().
  */
 function commons_events_entity_view_alter(&$build, $type) {
@@ -171,12 +213,6 @@ function commons_events_form_node_form_alter(&$form, &$form_state) {
     );
     $form['field_number_of_attendees']['#weight'] = 11;
     $form['field_topics']['#weight'] = 12;
-    // URL field shown if registration is offsite only.
-    $form['field_offsite_url']['#states'] = array(
-      'visible' => array(
-        ':input[name^="field_registration_type"]' => array('value' => 'external'),
-      ),
-    );
     $form['#validate'] = array_merge(array('commons_events_node_form_validate'), $form['#validate']);
     $form['#submit'][] = 'commons_events_node_form_submit';
     // Move registration settings into a fieldset so we can move the group.
@@ -188,6 +224,13 @@ function commons_events_form_node_form_alter(&$form, &$form_state) {
       '#group' => 'additional_settings',
       '#weight' => -10,
     );
+    if (empty($form['field_organizers'][$form['field_organizers']['#language']]['#default_value'])) {
+      global $user;
+      $user_wrapper = entity_metadata_wrapper('user', $user);
+      $name = $user_wrapper->field_name_first->value() . " " . $user_wrapper->field_name_last->value() . " (" . $user->uid . ")";
+      $form['field_organizers'][$form['field_organizers']['#language']]['#default_value'] = $name;
+    }
+    $form['event_registration_settings']['field_organizers'] = $form['field_organizers'];
     $form['event_registration_settings']['field_registration_type'] = $form['field_registration_type'];
     $form['event_registration_settings']['field_status'] = $form['field_status'];
     $form['event_registration_settings']['field_number_of_attendees'] = $form['field_number_of_attendees'];
@@ -199,11 +242,12 @@ function commons_events_form_node_form_alter(&$form, &$form_state) {
       '#group' => 'additional_settings',
       '#weight' => -9,
     );
+    $form['field_organizers'] = array('#language' => NULL);
     $form['event_topics']['field_topics'] = $form['field_topics'];
-    unset($form['field_topics']);
-    unset($form['field_registration_type']);
-    unset($form['field_status']);
-    unset($form['field_number_of_attendees']);
+    $form['field_topics'] = array('#language' => NULL);
+    $form['field_registration_type'] = array('#language' => NULL);
+    $form['field_status'] = array('#language' => NULL);
+    $form['field_number_of_attendees'] = array('#language' => NULL);
   }
 }
 
@@ -257,6 +301,28 @@ function commons_events_node_form_submit($form, $form_state) {
     }
     $settings['settings'] = serialize($settings['settings']);
     registration_update_entity_settings('node', $node->nid, $settings);
+    // Automatically register the node creator for the event.
+    $registration_type = registration_get_entity_registration_type('node', $node);
+    $registration = entity_get_controller('registration')->create(array(
+      'entity_type' => 'node',
+      'entity_id' => $node->nid,
+      'type' => $registration_type,
+    ));
+    if (!isset($node->uid)) {
+      global $user;
+      $uid = $user->uid;
+    }
+    else {
+      $uid = $node->uid;
+    }
+    if ($settings['status'] == 1
+      && !registration_is_registered($registration, NULL, $uid)) {
+      $registration->user_uid = $uid;
+      $registration->author_uid = $uid;
+      $registration->state = NULL;
+      $registration->count = 1;
+      registration_save($registration);
+    }
   }
 }
 
@@ -380,3 +446,67 @@ function commons_events_block_view($delta = '') {
     );
   }
 }
+
+/**
+ * Implements hook_theme_registry_alter().
+ * Gives us the ability to insert our pretty date formatter for the dates we choose below.
+ */
+function commons_events_theme_registry_alter(&$theme_registry) {
+  $theme_registry['date_display_range']['theme path'] = drupal_get_path('module', 'commons_events');
+  $theme_registry['date_display_range']['function'] = 'commons_events_theme_date_display_range';
+}
+
+/**
+ * Returns specific HTML for a date element formatted with the event formatter M j Y - g:ia
+ * We the do some awesome stuff with regular expressions to take all the different formats available to us and format it pretty.
+ */
+function commons_events_theme_date_display_range($variables) {
+  // Use the regular date formatter if we are any other date format than below.
+  if (!preg_match('/[FmMnt|dDjlNSwz|oYy] - [gGhH]:[i][Aa]{0,1}/', $variables['dates']['format'])) {
+    return theme_date_display_range($variables);
+  }
+
+  // If the difference is over a year:
+  if ($variables['dates']['value']['db']['object']->difference($variables['dates']['value2']['db']['object'], 'years') > 0) {
+    return theme_date_display_range($variables);
+  } else {
+    preg_match('/[oYy]/', $variables['dates']['format'], $year_format);
+    $year = $variables['dates']['value']['db']['object']->format($year_format[0]);
+  }
+  // Remove the time and year.
+  $stripped_format = preg_replace('/\s\s+/', ' ', preg_filter(array('/[oYy]/', '/[-:aABgGhHisuT]/'), array('', ''), $variables['dates']['format']));
+  if (!empty($variables['dates']['value2']['formatted_time'])) {
+    $end_time = TRUE;
+  }
+  // If the difference is over a month:
+  if ($variables['dates']['value']['db']['object']->difference($variables['dates']['value2']['db']['object'], 'months') > 0) {
+    $dm_seg = $variables['dates']['value']['db']['object']->format($stripped_format) . '-' . $variables['dates']['value2']['db']['object']->format($stripped_format);
+    $date = preg_filter(array('/[FmMntdDjlNSwz] [FmMntdDjlNSwz]/', '/[oYy]/', '/- [gGhH]:[i][Aa]{0,1} [T]/'), array($dm_seg, $year, ''), $variables['dates']['format']);
+  }
+  // If the difference is under a month but over a day:
+  else if ($variables['dates']['value']['db']['object']->difference($variables['dates']['value2']['db']['object'], 'days') > 0) {
+    $days = $variables['dates']['value']['db']['object']->format(preg_filter(array('/[FmMnt]/'), array(''), $stripped_format)) . '-' .
+      $variables['dates']['value2']['db']['object']->format(preg_filter(array('/[FmMnt]/'), array(''), $stripped_format));
+    $months = $variables['dates']['value']['db']['object']->format(preg_filter(array('/[dDjlNSwz]/'), array(''), $stripped_format));
+    $date = preg_filter(array('/[FmMnt]/', '/[dDjlNSwz]/', '/[oYy]/', '/- [gGhH]:[i][Aa]{0,1} [T]/'), array($months, $days, $year, ''), $variables['dates']['format']);
+  }
+  // Same day event, output the formatted start date and strip the end time if its the same as start time.
+  else {
+    $date = $variables['dates']['value']['formatted_date'];
+    if($variables['dates']['value']['formatted_time'] === $variables['dates']['value2']['formatted_time']) {
+      $end_time = FALSE;
+    }
+  }
+  if ($end_time) {
+    $time = $variables['dates']['value']['formatted_time'] . '-' . $variables['dates']['value2']['formatted_time'];
+  } else {
+    $time = $variables['dates']['value']['formatted_time'];
+  }
+  $timezone = $variables['timezone'];
+  $attributes_start = $variables['attributes_start'];
+
+  // Wrap the result with the attributes.
+  return t('!start-date', array(
+    '!start-date' => '<span class="date-display-start"' . drupal_attributes($attributes_start) . '>' . $date . $time . $timezone . '</span>',
+  ));
+}
\ No newline at end of file
diff --git a/profiles/commons/modules/contrib/commons_events/commons_events.views_default.inc b/profiles/commons/modules/contrib/commons_events/commons_events.views_default.inc
index 2d9d17a..86240a5 100644
--- a/profiles/commons/modules/contrib/commons_events/commons_events.views_default.inc
+++ b/profiles/commons/modules/contrib/commons_events/commons_events.views_default.inc
@@ -51,7 +51,7 @@ function commons_events_views_default_views() {
   $handler->display->display_options['fields']['picture']['relationship'] = 'user_uid';
   $handler->display->display_options['fields']['picture']['label'] = '';
   $handler->display->display_options['fields']['picture']['element_label_colon'] = FALSE;
-  $handler->display->display_options['fields']['picture']['image_style'] = 'thumbnail';
+  $handler->display->display_options['fields']['picture']['image_style'] = '50x50';
   /* Field: User: Name */
   $handler->display->display_options['fields']['name']['id'] = 'name';
   $handler->display->display_options['fields']['name']['table'] = 'users';
@@ -148,7 +148,7 @@ function commons_events_views_default_views() {
   $handler->display->display_options['fields']['field_date']['label'] = '';
   $handler->display->display_options['fields']['field_date']['element_label_colon'] = FALSE;
   $handler->display->display_options['fields']['field_date']['settings'] = array(
-    'format_type' => 'long',
+    'format_type' => 'event_datetime',
     'fromto' => 'both',
     'multiple_number' => '',
     'multiple_from' => '',
@@ -265,7 +265,7 @@ function commons_events_views_default_views() {
   $handler->display->display_options['fields']['field_date']['label'] = '';
   $handler->display->display_options['fields']['field_date']['element_label_colon'] = FALSE;
   $handler->display->display_options['fields']['field_date']['settings'] = array(
-    'format_type' => 'long',
+    'format_type' => 'event_datetime',
     'fromto' => 'both',
     'multiple_number' => '',
     'multiple_from' => '',
@@ -327,16 +327,18 @@ function commons_events_views_default_views() {
   $handler->display->display_options['defaults']['row_options'] = FALSE;
   $handler->display->display_options['defaults']['header'] = FALSE;
   $handler->display->display_options['defaults']['sorts'] = FALSE;
-  /* Sort criterion: Content: Date -  start date (field_date) */
-  $handler->display->display_options['sorts']['field_date_value']['id'] = 'field_date_value';
-  $handler->display->display_options['sorts']['field_date_value']['table'] = 'field_data_field_date';
-  $handler->display->display_options['sorts']['field_date_value']['field'] = 'field_date_value';
   /* Sort criterion: Content: Promoted to front page */
   $handler->display->display_options['sorts']['promote']['id'] = 'promote';
   $handler->display->display_options['sorts']['promote']['table'] = 'node';
   $handler->display->display_options['sorts']['promote']['field'] = 'promote';
   $handler->display->display_options['sorts']['promote']['exposed'] = TRUE;
   $handler->display->display_options['sorts']['promote']['expose']['label'] = 'Featured';
+  /* Sort criterion: Content: Date -  start date (field_date) */
+  $handler->display->display_options['sorts']['field_date_value']['id'] = 'field_date_value';
+  $handler->display->display_options['sorts']['field_date_value']['table'] = 'field_data_field_date';
+  $handler->display->display_options['sorts']['field_date_value']['field'] = 'field_date_value';
+  $handler->display->display_options['sorts']['field_date_value']['exposed'] = TRUE;
+  $handler->display->display_options['sorts']['field_date_value']['expose']['label'] = 'Date';
   $export['commons_events_upcoming'] = $view;
 
   $view = new view();
@@ -621,5 +623,64 @@ function commons_events_views_default_views() {
   $handler->display->display_options['defaults']['arguments'] = FALSE;
   $export['commons_events_user_upcoming_events'] = $view;
 
+  $view = new view();
+  $view->name = 'commons_events_organizers';
+  $view->description = 'Event organizer panel pane.';
+  $view->tag = 'commons_events';
+  $view->base_table = 'node';
+  $view->human_name = 'Commons Events - Organizers';
+  $view->core = 7;
+  $view->api_version = '3.0';
+  $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
+
+  /* Display: Master */
+  $handler = $view->new_display('default', 'Master', 'default');
+  $handler->display->display_options['title'] = 'Organizers';
+  $handler->display->display_options['use_more_always'] = FALSE;
+  $handler->display->display_options['access']['type'] = 'perm';
+  $handler->display->display_options['cache']['type'] = 'none';
+  $handler->display->display_options['query']['type'] = 'views_query';
+  $handler->display->display_options['exposed_form']['type'] = 'basic';
+  $handler->display->display_options['pager']['type'] = 'none';
+  $handler->display->display_options['pager']['options']['offset'] = '0';
+  $handler->display->display_options['style_plugin'] = 'grid';
+  $handler->display->display_options['row_plugin'] = 'fields';
+  /* Relationship: Entity Reference: Referenced Entity */
+  $handler->display->display_options['relationships']['field_organizers_target_id']['id'] = 'field_organizers_target_id';
+  $handler->display->display_options['relationships']['field_organizers_target_id']['table'] = 'field_data_field_organizers';
+  $handler->display->display_options['relationships']['field_organizers_target_id']['field'] = 'field_organizers_target_id';
+  $handler->display->display_options['relationships']['field_organizers_target_id']['required'] = TRUE;
+  /* Field: User: Picture */
+  $handler->display->display_options['fields']['picture']['id'] = 'picture';
+  $handler->display->display_options['fields']['picture']['table'] = 'users';
+  $handler->display->display_options['fields']['picture']['field'] = 'picture';
+  $handler->display->display_options['fields']['picture']['relationship'] = 'field_organizers_target_id';
+  $handler->display->display_options['fields']['picture']['label'] = '';
+  $handler->display->display_options['fields']['picture']['element_label_colon'] = FALSE;
+  $handler->display->display_options['fields']['picture']['image_style'] = '50x50';
+  /* Contextual filter: Content: Nid */
+  $handler->display->display_options['arguments']['nid']['id'] = 'nid';
+  $handler->display->display_options['arguments']['nid']['table'] = 'node';
+  $handler->display->display_options['arguments']['nid']['field'] = 'nid';
+  $handler->display->display_options['arguments']['nid']['default_action'] = 'not found';
+  $handler->display->display_options['arguments']['nid']['default_argument_type'] = 'fixed';
+  $handler->display->display_options['arguments']['nid']['summary']['number_of_records'] = '0';
+  $handler->display->display_options['arguments']['nid']['summary']['format'] = 'default_summary';
+  $handler->display->display_options['arguments']['nid']['summary_options']['items_per_page'] = '25';
+
+  /* Display: Content pane */
+  $handler = $view->new_display('panel_pane', 'Content pane', 'panel_pane_1');
+  $handler->display->display_options['argument_input'] = array(
+    'nid' => array(
+      'type' => 'context',
+      'context' => 'entity:node.nid',
+      'context_optional' => 0,
+      'panel' => '0',
+      'fixed' => '',
+      'label' => 'Content: Nid',
+    ),
+  );
+  $export['commons_events_organizers'] = $view;
+
   return $export;
 }
diff --git a/profiles/commons/modules/contrib/commons_events/includes/commons_events.theme.inc b/profiles/commons/modules/contrib/commons_events/includes/commons_events.theme.inc
index 4487f69..1975ef6 100644
--- a/profiles/commons/modules/contrib/commons_events/includes/commons_events.theme.inc
+++ b/profiles/commons/modules/contrib/commons_events/includes/commons_events.theme.inc
@@ -19,6 +19,7 @@ function theme_commons_events_attending_event($variables = array()) {
     'entity_type' => 'node',
     'entity_id' => $event->nid,
     'type' => $registration_type,
+    'author_uid' => $user->uid,
   ));
   if (!function_exists('commons_events_attend_event_form')
     || !function_exists('commons_events_cancel_event_form')) {
diff --git a/profiles/commons/modules/contrib/commons_events/js/commons_events.js b/profiles/commons/modules/contrib/commons_events/js/commons_events.js
index e69822c..334fc15 100644
--- a/profiles/commons/modules/contrib/commons_events/js/commons_events.js
+++ b/profiles/commons/modules/contrib/commons_events/js/commons_events.js
@@ -1,9 +1,11 @@
 (function ($) {
   $.fn.changeElementType = function(newType) {
     var attrs = {};
-    $.each(this[0].attributes, function(idx, attr) {
-      attrs[attr.nodeName] = attr.nodeValue;
-    });
+    if ($(this).length) {
+      $.each(this[0].attributes, function(idx, attr) {
+        attrs[attr.nodeName] = attr.nodeValue;
+      });
+    }
     this.replaceWith(function() {
       return $("<" + newType + "/>", attrs).append($(this).contents());
     });
diff --git a/profiles/commons/modules/contrib/commons_events/modules/commons_events_pages/commons_events_pages.info b/profiles/commons/modules/contrib/commons_events/modules/commons_events_pages/commons_events_pages.info
index 08708e6..e69bc3f 100644
--- a/profiles/commons/modules/contrib/commons_events/modules/commons_events_pages/commons_events_pages.info
+++ b/profiles/commons/modules/contrib/commons_events/modules/commons_events_pages/commons_events_pages.info
@@ -15,9 +15,9 @@ features[variable][] = panelizer_defaults_node_event
 files[] = commons_events_pages.features.inc
 files[] = commons_events_pages.strongarm.inc
 
-; Information added by drupal.org packaging script on 2013-02-25
-version = "7.x-3.0"
+; Information added by drupal.org packaging script on 2013-04-04
+version = "7.x-3.2"
 core = "7.x"
 project = "commons_events"
-datestamp = "1361820316"
+datestamp = "1365037511"
 
diff --git a/profiles/commons/modules/contrib/commons_events/modules/commons_events_pages/commons_events_pages.panelizer.inc b/profiles/commons/modules/contrib/commons_events/modules/commons_events_pages/commons_events_pages.panelizer.inc
index 2dd12e4..d5b36f1 100644
--- a/profiles/commons/modules/contrib/commons_events/modules/commons_events_pages/commons_events_pages.panelizer.inc
+++ b/profiles/commons/modules/contrib/commons_events/modules/commons_events_pages/commons_events_pages.panelizer.inc
@@ -77,6 +77,28 @@ function commons_events_pages_panelizer_defaults() {
     $pane->pid = 'new-2';
     $pane->panel = 'two_66_33_second';
     $pane->type = 'views_panes';
+    $pane->subtype = 'commons_events_organizers-panel_pane_1';
+    $pane->shown = TRUE;
+    $pane->access = array();
+    $pane->configuration = array(
+      'context' => array(
+        0 => 'panelizer',
+      ),
+    );
+    $pane->cache = array();
+    $pane->style = array(
+      'settings' => NULL,
+    );
+    $pane->css = array();
+    $pane->extras = array();
+    $pane->position = 0;
+    $pane->locks = array();
+    $display->content['new-2'] = $pane;
+    $display->panels['two_66_33_second'][0] = 'new-2';
+    $pane = new stdClass();
+    $pane->pid = 'new-3';
+    $pane->panel = 'two_66_33_second';
+    $pane->type = 'views_panes';
     $pane->subtype = 'commons_events_event_attendee_list-panel_pane_1';
     $pane->shown = TRUE;
     $pane->access = array();
@@ -95,10 +117,10 @@ function commons_events_pages_panelizer_defaults() {
     );
     $pane->css = array();
     $pane->extras = array();
-    $pane->position = 0;
+    $pane->position = 1;
     $pane->locks = array();
-    $display->content['new-2'] = $pane;
-    $display->panels['two_66_33_second'][0] = 'new-2';
+    $display->content['new-3'] = $pane;
+    $display->panels['two_66_33_second'][1] = 'new-3';
   $display->hide_title = PANELS_TITLE_NONE;
   $display->title_pane = '0';
   $panelizer->display = $display;
diff --git a/profiles/commons/modules/contrib/commons_events/modules/commons_events_solr/commons_events_solr.info b/profiles/commons/modules/contrib/commons_events/modules/commons_events_solr/commons_events_solr.info
index ee70f4e..c0fea81 100644
--- a/profiles/commons/modules/contrib/commons_events/modules/commons_events_solr/commons_events_solr.info
+++ b/profiles/commons/modules/contrib/commons_events/modules/commons_events_solr/commons_events_solr.info
@@ -21,9 +21,9 @@ features[page_manager_existing_pages][] = solr_events_search
 features[page_manager_handlers][] = pm_existing_pages_solr_events_search_panel_context
 features[variable][] = pm_existing_pages_disabled_solr_events_search
 
-; Information added by drupal.org packaging script on 2013-02-25
-version = "7.x-3.0"
+; Information added by drupal.org packaging script on 2013-04-04
+version = "7.x-3.2"
 core = "7.x"
 project = "commons_events"
-datestamp = "1361820316"
+datestamp = "1365037511"
 
diff --git a/profiles/commons/modules/contrib/commons_events/modules/commons_events_solr/commons_events_solr.module b/profiles/commons/modules/contrib/commons_events/modules/commons_events_solr/commons_events_solr.module
index b3d6032..c37a5e7 100644
--- a/profiles/commons/modules/contrib/commons_events/modules/commons_events_solr/commons_events_solr.module
+++ b/profiles/commons/modules/contrib/commons_events/modules/commons_events_solr/commons_events_solr.module
@@ -241,9 +241,9 @@ function commons_events_solr_apachesolr_process_results(&$results, DrupalSolrQue
 /**
  * Implements hook_preprocess_hook().
  */
-function commons_events_solr_preprocess_search_results(&$variables) {
+function commons_events_solr_process_search_results(&$variables) {
   if ($variables['search_page']['page_id'] == 'solr_events') {
-    $variables['search_title'] = format_plural(count($variables['results']), '1 event', '@count events');
+    $variables['title'] = format_plural(count($variables['results']), '1 event', '@count events');
   }
 }
 
@@ -284,12 +284,10 @@ function commons_events_solr_environment_form_submit($form, $form_state) {
 }
 
 /**
- * Implements hook_modules_enabled().
+ *  Implements hook_node_presave to display a message warning the user that results won't occur immediately
  */
-function commons_events_solr_modules_enabled($modules) {
-  if (in_array('acquia_search', $modules)) {
-    // If Acquia Search is enabled later, we need to force update our facets,
-    // otherwise our Events Solr page has no facets.
-    commons_events_solr_create_facets(ACQUIA_SEARCH_ENVIRONMENT_ID);
+function commons_events_solr_node_presave($node) {
+  if ($node->type == 'event') {
+    drupal_set_message(t('Your event may take a few minutes to appear on the listing page.'));
   }
-}
+}
\ No newline at end of file
diff --git a/profiles/commons/modules/contrib/commons_groups/commons_groups.features.field_base.inc b/profiles/commons/modules/contrib/commons_groups/commons_groups.features.field_base.inc
index e1b9d59..cd8b2c0 100644
--- a/profiles/commons/modules/contrib/commons_groups/commons_groups.features.field_base.inc
+++ b/profiles/commons/modules/contrib/commons_groups/commons_groups.features.field_base.inc
@@ -42,6 +42,7 @@ function commons_groups_field_default_field_bases() {
     'cardinality' => '-1',
     'deleted' => '0',
     'entity_types' => array(),
+    'description' => 'Separate group names with commas',
     'field_name' => 'og_group_ref',
     'foreign keys' => array(
       'node' => array(
diff --git a/profiles/commons/modules/contrib/commons_groups/commons_groups.features.field_instance.inc b/profiles/commons/modules/contrib/commons_groups/commons_groups.features.field_instance.inc
index df71673..653dfdf 100644
--- a/profiles/commons/modules/contrib/commons_groups/commons_groups.features.field_instance.inc
+++ b/profiles/commons/modules/contrib/commons_groups/commons_groups.features.field_instance.inc
@@ -209,7 +209,7 @@ function commons_groups_field_definition(&$field_instances, $entity_type, $bundl
     'default_value' => NULL,
     'default_value_function' => 'commons_groups_entityreference_default_value',
     'deleted' => '0',
-    'description' => '',
+    'description' => 'Separate group names with commas',
     'display' => array(
       'default' => array(
         'label' => 'above',
diff --git a/profiles/commons/modules/contrib/commons_groups/commons_groups.features.user_permission.inc b/profiles/commons/modules/contrib/commons_groups/commons_groups.features.user_permission.inc
new file mode 100644
index 0000000..6535493
--- /dev/null
+++ b/profiles/commons/modules/contrib/commons_groups/commons_groups.features.user_permission.inc
@@ -0,0 +1,34 @@
+<?php
+/**
+ * @file
+ * commons_groups.features.user_permission.inc
+ */
+
+/**
+ * Implements hook_user_default_permissions().
+ */
+function commons_groups_user_default_permissions() {
+  $permissions = array();
+
+  // Exported permission: create group content.
+  $permissions['create group content'] = array(
+    'name' => 'create group content',
+    'roles' => array(
+      'administrator' => 'administrator',
+      'authenticated user' => 'authenticated user',
+    ),
+    'module' => 'node',
+  );
+
+  // Exported permission: edit own group content.
+  $permissions['edit own group content'] = array(
+    'name' => 'edit own group content',
+    'roles' => array(
+      'administrator' => 'administrator',
+      'authenticated user' => 'authenticated user',
+    ),
+    'module' => 'node',
+  );
+
+  return $permissions;
+}
diff --git a/profiles/commons/modules/contrib/commons_groups/commons_groups.info b/profiles/commons/modules/contrib/commons_groups/commons_groups.info
index 6b9c796..1f284ad 100644
--- a/profiles/commons/modules/contrib/commons_groups/commons_groups.info
+++ b/profiles/commons/modules/contrib/commons_groups/commons_groups.info
@@ -34,6 +34,8 @@ features[field_instance][] = og_membership-og_membership_type_default-og_members
 features[image][] = 35x35
 features[image][] = 50x50
 features[node][] = group
+features[user_permission][] = create group content
+features[user_permission][] = edit own group content
 features[variable][] = comment_anonymous_group
 features[variable][] = comment_default_mode_group
 features[variable][] = comment_default_per_page_group
@@ -47,6 +49,7 @@ features[variable][] = menu_parent_group
 features[variable][] = node_options_group
 features[variable][] = node_preview_group
 features[variable][] = node_submitted_group
+features[variable][] = og_group_manager_default_rids_node_group
 features[variable][] = pathauto_node_group_pattern
 features[variable][] = pathauto_node_pattern
 features[views_view][] = commons_bw_all
@@ -56,9 +59,9 @@ features[views_view][] = commons_groups_contributors
 features[views_view][] = commons_groups_directory
 features[views_view][] = commons_groups_recent_content
 features[views_view][] = commons_groups_user_groups
-; Information added by drupal.org packaging script on 2013-02-25
-version = "7.x-3.0"
+; Information added by drupal.org packaging script on 2013-03-27
+version = "7.x-3.1"
 core = "7.x"
 project = "commons_groups"
-datestamp = "1361820323"
+datestamp = "1364416518"
 
diff --git a/profiles/commons/modules/contrib/commons_groups/commons_groups.install b/profiles/commons/modules/contrib/commons_groups/commons_groups.install
index a7bc43c..23b8375 100644
--- a/profiles/commons/modules/contrib/commons_groups/commons_groups.install
+++ b/profiles/commons/modules/contrib/commons_groups/commons_groups.install
@@ -6,4 +6,90 @@
 function commons_groups_update_3100() {
   features_revert(array('commons_groups' => array('variable')));
   return array();
+}
+/**
+* Grant users the "group organizer" role after she's created a group.
+*/
+function commons_groups_update_3101() {
+  // We've updated the og_group_manager_default_rids_node_group variable.
+  features_revert(array('commons_groups' => array('variable')));
+  return array();
+}
+
+/**
+* Ensure that the anonymous users is not listed as a group member,
+* per http://drupal.org/node/1910874.
+*/
+function commons_groups_update_3102() {
+  $delete = db_delete('og_users_roles')
+    ->condition('uid', 0, '=')
+    ->execute();
+  return array();
+}
+
+/**
+* Grant authenticated users permission to create group nodes
+* per http://drupal.org/node/1936714.
+*/
+function commons_groups_update_3103() {
+  features_revert(array('commons_groups' => array('user_permission')));
+  return array();
+}
+
+/**
+* Grant authenticated users permission to create group nodes
+* per http://drupal.org/node/1936714.
+*/
+function commons_groups_update_3104() {
+  features_revert(array('commons_groups' => array('field_base', 'field_instance')));
+  return array();
+}
+
+/**
+ * Change the OG Organizer role back to Administrator member.
+ * See http://drupal.org/node/1940150 for more information.
+ */
+function commons_groups_update_3105() {
+  $result = db_update('og_role')
+    ->fields(array('name' => 'administrator member'))
+    ->condition('rid', 3, '=')
+    ->execute();
+  return array();
+}
+
+/**
+ * Update contributor view to show the titles per the interactive prototype.
+ * (http://drupal.org/node/1821808).
+ */
+function commons_groups_update_3106() {
+    $revert = array(
+      'commons_groups' => array('views_view'),
+  );
+  features_revert($revert);
+  return array();
+}
+
+/**
+ * Give group owners the organizer role for their own group
+ */
+function commons_groups_update_3107() {
+  // Ensure that the group creator is also listed as an organizer.
+  $group_nodes = db_select('node', 'n')
+    ->fields('n', array('nid', 'uid'))
+    ->condition('n.type', 'group','=')
+    ->execute()
+    ->fetchAll();
+  $organizer_role = db_select('og_role', 'o')
+    ->fields('o', array('rid'))
+    ->condition('o.group_bundle', 'group')
+    ->condition('o.name', 'administrator member')
+    ->execute()
+    ->fetchField();
+
+  foreach($group_nodes as $record) {
+    if (!empty($organizer_role)) {
+      og_role_grant('node', $record->nid, $record->uid, $organizer_role);
+    }
+  }
+  return array();
 }
\ No newline at end of file
diff --git a/profiles/commons/modules/contrib/commons_groups/commons_groups.module b/profiles/commons/modules/contrib/commons_groups/commons_groups.module
index c731676..40c407f 100644
--- a/profiles/commons/modules/contrib/commons_groups/commons_groups.module
+++ b/profiles/commons/modules/contrib/commons_groups/commons_groups.module
@@ -151,6 +151,11 @@ function commons_groups_module_implements_alter(&$implementations, $hook) {
 * Implements hook_form_alter().
 */
 function commons_groups_form_alter(&$form, &$form_state, $form_id) {
+  if($form_id == 'views_exposed_form' && strstr($form['#id'], 'views-exposed-form-commons-groups-directory')) {
+    $form['groups-keys']['#attributes'] = array(
+        'placeholder' => t('Separate keywords with commas'),
+      );
+  }
   if((strstr($form_id, 'views_form_commons_group_moderation_page'))) {
     $form['select']['action::views_bulk_operations_delete_item']['#weight'] = 9;
   }
@@ -165,7 +170,8 @@ function commons_groups_form_alter(&$form, &$form_state, $form_id) {
       $types = node_type_get_types();
       $type = $form['#node']->type;
       // Use 'a' or 'an' appropriately.
-      $verb = strtolower($type[0]) == 'a' ? 'Create an' : 'Create a';
+      $vowels = array('a', 'e', 'i', 'o', 'u');
+      $verb = strtolower(in_array($type[0], $vowels)) ? 'Create an' : 'Create a';
       drupal_set_title(t("$verb @name", array('@name' => $types[$type]->name)), PASS_THROUGH);
     }
     // Customizations to the node form for entitites that are group content.
@@ -241,11 +247,13 @@ function commons_groups_og_user_access_alter(&$temp_perm, $context) {
   $user_is_member = (bool)og_is_member('node', $context['group']->nid, 'user', $context['account']);
   foreach ($commons_groups_entity_types['node'] as $type => $options) {
     // We do a literal user_access() check on the create permission here
-    // because we can't call node_access() without causing recursion.
+    // because we can't call node_access() OR og_user_access without causing recursion.
     // The code flow is:
     // node_access()>og_node_access()=>og_user_access_entity=>og_user_access=>
     // og_user_access_alter()=>commons_groups_og_user_access_alter().
     // See also: http://drupal.org/node/1910874.
+
+    // If a group is not restricted, or the user is a member, and the user can create content of a certain type, let them post temporarily
     if ($context['string'] == "create $type content" && (!$group_content_restricted || $user_is_member) && user_access("create $type content", $context['account'])) {
       $temp_perm["create $type content"] = TRUE;
       return;
@@ -432,12 +440,14 @@ function commons_groups_entityreference_default_value($entity_type, $entity, $fi
   }
 }
 
- function commons_groups_default_rules_configuration_alter(&$configs) {
+function commons_groups_default_rules_configuration_alter(&$configs) {
   // Disable default OG new content notifications.
   // The language doesn't correspond to Commons' open groups model and we use
   // commons_follow and commons_follow_notify for new content notifications.
-  $configs['rules_og_member_active']->active = FALSE;
- }
+  if (isset($configs['rules_og_member_active'])) {
+    $configs['rules_og_member_active']->active = FALSE;
+  }
+}
 
 /**
 * Implements hook_node_update().
@@ -486,6 +496,11 @@ function commons_groups_get_group_content_entity_types() {
 * grant her the contributor role within that group.
 */
 function commons_groups_first_contribution($account, $node) {
+  // Anonymous users should never be added to a group automatically
+  if ($account->uid == 0) {
+    return;
+  }
+
   // Find the groups that this piece of content belongs to.
   $groups = og_get_entity_groups('node', $node);
   if (!empty($groups)) {
@@ -496,6 +511,10 @@ function commons_groups_first_contribution($account, $node) {
       $account_groups = array();
     }
     // For groups where this user is not already a member, add her to the group.
+    // Anonymous users should never be added to a group automatically
+    if ($account->uid == 0) {
+      return;
+    }
     $new_groups = array_diff($node_groups, $account_groups);
     if (!empty($new_groups)) {
       foreach ($new_groups as $new_group_nid) {
@@ -520,3 +539,14 @@ function commons_groups_commons_bw_group_widget() {
     ),
   );
 }
+
+/**
+ * Implements hook_preprocess_views_view_grid().
+ */
+function commons_groups_preprocess_views_view_grid(&$variables, $hook) {
+  // Change the displayed role name in the group contributors block to
+  // "Organizers".
+  if ($variables['view']->name == 'commons_contributors_group' && !empty($variables['title']) && $variables['title'] == 'administrator member') {
+    $variables['title'] = t('Organizers');
+  }
+}
\ No newline at end of file
diff --git a/profiles/commons/modules/contrib/commons_groups/commons_groups.strongarm.inc b/profiles/commons/modules/contrib/commons_groups/commons_groups.strongarm.inc
index eac0507..999b285 100644
--- a/profiles/commons/modules/contrib/commons_groups/commons_groups.strongarm.inc
+++ b/profiles/commons/modules/contrib/commons_groups/commons_groups.strongarm.inc
@@ -125,6 +125,15 @@ function commons_groups_strongarm() {
   $strongarm = new stdClass();
   $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
   $strongarm->api_version = 1;
+  $strongarm->name = 'og_group_manager_default_rids_node_group';
+  $strongarm->value = array(
+    3 => '3',
+  );
+  $export['og_group_manager_default_rids_node_group'] = $strongarm;
+
+  $strongarm = new stdClass();
+  $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
+  $strongarm->api_version = 1;
   $strongarm->name = 'pathauto_node_pattern';
   $strongarm->value = 'groups/[node:og-group-ref:0:title]/[node:title]';
   $export['pathauto_node_pattern'] = $strongarm;
diff --git a/profiles/commons/modules/contrib/commons_groups/commons_groups.views_default.inc b/profiles/commons/modules/contrib/commons_groups/commons_groups.views_default.inc
index 936ca79..f8d7129 100644
--- a/profiles/commons/modules/contrib/commons_groups/commons_groups.views_default.inc
+++ b/profiles/commons/modules/contrib/commons_groups/commons_groups.views_default.inc
@@ -119,7 +119,7 @@ function commons_groups_views_default_views() {
 
   /* Display: Master */
   $handler = $view->new_display('default', 'Master', 'default');
-  $handler->display->display_options['title'] = 'Contributors';
+  $handler->display->display_options['title'] = 'Group contributors';
   $handler->display->display_options['use_more'] = TRUE;
   $handler->display->display_options['use_more_always'] = FALSE;
   $handler->display->display_options['access']['type'] = 'perm';
@@ -172,6 +172,8 @@ function commons_groups_views_default_views() {
 
   /* Display: group teaser */
   $handler = $view->new_display('panel_pane', 'group teaser', 'panel_pane_1');
+  $handler->display->display_options['defaults']['title'] = FALSE;
+  $handler->display->display_options['title'] = 'Recent contributors';
   $handler->display->display_options['defaults']['hide_admin_links'] = FALSE;
   $handler->display->display_options['defaults']['pager'] = FALSE;
   $handler->display->display_options['pager']['type'] = 'some';
@@ -257,7 +259,7 @@ function commons_groups_views_default_views() {
   $handler->display->display_options['fields']['og_roles']['label'] = '';
   $handler->display->display_options['fields']['og_roles']['exclude'] = TRUE;
   $handler->display->display_options['fields']['og_roles']['element_label_colon'] = FALSE;
-  $handler->display->display_options['fields']['og_roles']['type'] = 'ul';
+  $handler->display->display_options['fields']['og_roles']['empty'] = 'Contributors';
   $handler->display->display_options['argument_input'] = array(
     'gid' => array(
       'type' => 'context',
@@ -884,7 +886,7 @@ function commons_groups_views_default_views() {
   /* Display: Master */
   $handler = $view->new_display('default', 'Master', 'default');
   $handler->display->display_options['title'] = 'Groups';
-  $handler->display->display_options['use_ajax'] = TRUE;
+  $handler->display->display_options['use_ajax'] = FALSE;
   $handler->display->display_options['use_more_always'] = FALSE;
   $handler->display->display_options['access']['type'] = 'perm';
   $handler->display->display_options['cache']['type'] = 'none';
diff --git a/profiles/commons/modules/contrib/commons_groups/modules/commons_group_privacy/commons_group_privacy.features.field_instance.inc b/profiles/commons/modules/contrib/commons_groups/modules/commons_group_privacy/commons_group_privacy.features.field_instance.inc
index 0539b58..6ff12af 100644
--- a/profiles/commons/modules/contrib/commons_groups/modules/commons_group_privacy/commons_group_privacy.features.field_instance.inc
+++ b/profiles/commons/modules/contrib/commons_groups/modules/commons_group_privacy/commons_group_privacy.features.field_instance.inc
@@ -11,12 +11,11 @@ function commons_group_privacy_field_default_field_instances() {
   $field_instances = array();
    // Get a list of content types that should have the og_groups_ref field added.
   // Modules can alter this list by implementing hook_strongarm_alter().
-  $commons_groups_entity_types = variable_get('commons_groups_entity_types', array());
-  if (!empty($commons_groups_entity_types['node'])) {
-    $field_instances = array();
-    foreach($commons_groups_entity_types['node'] as $type => $enabled) {
-      if ($enabled) {
-        commons_group_privacy_field_definition($field_instances, $type);
+  $commons_groups_entity_types = commons_groups_get_group_content_entity_types();
+  if (!empty($commons_groups_entity_types)) {
+    foreach ($commons_groups_entity_types as $entity_type => $bundles) {
+      foreach(array_keys($bundles) as $bundle) {
+        commons_group_privacy_field_definition($field_instances, $entity_type, $bundle);
       }
     }
   }
@@ -133,10 +132,10 @@ function commons_group_privacy_field_default_field_instances() {
   return $field_instances;
 }
 
-function commons_group_privacy_field_definition(&$field_instances, $type) {
+function commons_group_privacy_field_definition(&$field_instances, $entity_type, $bundle) {
   // Exported field_instance: 'node-TYPE-group_content_access'
-  $field_instances["node-$type-group_content_access"] = array(
-    'bundle' => $type,
+  $field_instances["$entity_type-$bundle-group_content_access"] = array(
+    'bundle' => $bundle,
     'default_value' => array(
       0 => array(
         'value' => 0,
@@ -159,7 +158,7 @@ function commons_group_privacy_field_definition(&$field_instances, $type) {
         'weight' => 0,
       ),
     ),
-    'entity_type' => 'node',
+    'entity_type' => $entity_type,
     'field_name' => 'group_content_access',
     'label' => 'Group content visibility',
     'required' => TRUE,
diff --git a/profiles/commons/modules/contrib/commons_groups/modules/commons_group_privacy/commons_group_privacy.info b/profiles/commons/modules/contrib/commons_groups/modules/commons_group_privacy/commons_group_privacy.info
index d5c6899..a912ec2 100644
--- a/profiles/commons/modules/contrib/commons_groups/modules/commons_group_privacy/commons_group_privacy.info
+++ b/profiles/commons/modules/contrib/commons_groups/modules/commons_group_privacy/commons_group_privacy.info
@@ -12,9 +12,9 @@ features[field_base][] = og_roles_permissions
 features[field_instance][] = node-group-group_access
 features[field_instance][] = node-group-og_roles_permissions
 features[field_instance][] = node-post-group_content_access
-; Information added by drupal.org packaging script on 2013-02-25
-version = "7.x-3.0"
+; Information added by drupal.org packaging script on 2013-03-27
+version = "7.x-3.1"
 core = "7.x"
 project = "commons_groups"
-datestamp = "1361820323"
+datestamp = "1364416518"
 
diff --git a/profiles/commons/modules/contrib/commons_groups/modules/commons_group_privacy/commons_group_privacy.install b/profiles/commons/modules/contrib/commons_groups/modules/commons_group_privacy/commons_group_privacy.install
new file mode 100644
index 0000000..104f051
--- /dev/null
+++ b/profiles/commons/modules/contrib/commons_groups/modules/commons_group_privacy/commons_group_privacy.install
@@ -0,0 +1,10 @@
+<?php
+
+/**
+* Revert field instances for group content privacy,
+* which where not added per http://drupal.org/node/1936446.
+*/
+function commons_group_privacy_update_3100() {
+  features_revert(array('commons_group_privacy' => array('field_instance')));
+  return array();
+}
\ No newline at end of file
diff --git a/profiles/commons/modules/contrib/commons_groups/modules/commons_group_privacy/commons_group_privacy.module b/profiles/commons/modules/contrib/commons_groups/modules/commons_group_privacy/commons_group_privacy.module
index 18d699c..1a431fc 100644
--- a/profiles/commons/modules/contrib/commons_groups/modules/commons_group_privacy/commons_group_privacy.module
+++ b/profiles/commons/modules/contrib/commons_groups/modules/commons_group_privacy/commons_group_privacy.module
@@ -33,3 +33,25 @@ function commons_group_privacy_features_pipe_alter(&$pipe, $data, $export) {
   }
 }
 
+/**
+* Implements hook_system_info_alter().
+*/
+function commons_group_privacy_system_info_alter(&$info, $file, $type) {
+  // Commons Groups dynamically adds the og_group_ref field to
+  // content types that request it by altering the
+  // commons_groups_entity_types variable.
+  // We must add a corresponding line for each field instance
+  // to commons_groups.info so that Features is aware of the instance
+  // and can sucessfully revert the field_instance component back
+  // to its default state.
+  if ($file->name == 'commons_group_privacy') {
+    $group_content_entity_types = commons_groups_get_group_content_entity_types();
+    if (!empty($group_content_entity_types)) {
+      foreach ($group_content_entity_types as $entity_type => $bundles) {
+        foreach(array_keys($bundles) as $bundle) {
+          $info['features']['field_instance'][] = "$entity_type-$bundle-group_content_access";
+        }
+      }
+    }
+  }
+}
\ No newline at end of file
diff --git a/profiles/commons/modules/contrib/commons_groups/modules/commons_groups_directory/commons_groups_directory.info b/profiles/commons/modules/contrib/commons_groups/modules/commons_groups_directory/commons_groups_directory.info
index 0490af5..bbe3c41 100644
--- a/profiles/commons/modules/contrib/commons_groups/modules/commons_groups_directory/commons_groups_directory.info
+++ b/profiles/commons/modules/contrib/commons_groups/modules/commons_groups_directory/commons_groups_directory.info
@@ -18,9 +18,9 @@ features[ctools][] = views:views_default:3.0
 features[features_api][] = api:1
 features[page_manager_pages][] = groups_directory
 
-; Information added by drupal.org packaging script on 2013-02-25
-version = "7.x-3.0"
+; Information added by drupal.org packaging script on 2013-03-27
+version = "7.x-3.1"
 core = "7.x"
 project = "commons_groups"
-datestamp = "1361820323"
+datestamp = "1364416518"
 
diff --git a/profiles/commons/modules/contrib/commons_groups/modules/commons_groups_pages/commons_groups_pages.info b/profiles/commons/modules/contrib/commons_groups/modules/commons_groups_pages/commons_groups_pages.info
index 5bcd5b1..393e80b 100644
--- a/profiles/commons/modules/contrib/commons_groups/modules/commons_groups_pages/commons_groups_pages.info
+++ b/profiles/commons/modules/contrib/commons_groups/modules/commons_groups_pages/commons_groups_pages.info
@@ -19,9 +19,9 @@ features[panelizer_defaults][] = node:group:default
 features[panelizer_defaults][] = node:group:default:teaser
 features[variable][] = panelizer_defaults_node_group
 
-; Information added by drupal.org packaging script on 2013-02-25
-version = "7.x-3.0"
+; Information added by drupal.org packaging script on 2013-03-27
+version = "7.x-3.1"
 core = "7.x"
 project = "commons_groups"
-datestamp = "1361820323"
+datestamp = "1364416518"
 
diff --git a/profiles/commons/modules/contrib/commons_misc/commons_misc.info b/profiles/commons/modules/contrib/commons_misc/commons_misc.info
index bd37ef2..cfd7da1 100644
--- a/profiles/commons/modules/contrib/commons_misc/commons_misc.info
+++ b/profiles/commons/modules/contrib/commons_misc/commons_misc.info
@@ -26,9 +26,9 @@ features[variable][] = theme_commons_origins_settings
 features[variable][] = user_register
 features_exclude[dependencies][page_manager] = page_manager
 
-; Information added by drupal.org packaging script on 2013-02-25
-version = "7.x-3.0"
+; Information added by drupal.org packaging script on 2013-03-27
+version = "7.x-3.1"
 core = "7.x"
 project = "commons_misc"
-datestamp = "1361820328"
+datestamp = "1364416521"
 
diff --git a/profiles/commons/modules/contrib/commons_misc/commons_misc.module b/profiles/commons/modules/contrib/commons_misc/commons_misc.module
index 883a318..32fbc63 100644
--- a/profiles/commons/modules/contrib/commons_misc/commons_misc.module
+++ b/profiles/commons/modules/contrib/commons_misc/commons_misc.module
@@ -30,11 +30,18 @@ function commons_misc_form_post_node_form_alter(&$form, &$form_state, $form_id)
  */
 function commons_misc_form_system_theme_settings_alter(&$form, &$form_state, $form_id) {
   $themes_list = list_themes(TRUE);
+
+  // Filter down to just the commons_origins theme:
+  // If commons_origins theme exists
+  // If commons_origins is enabled
+  // If we're not on the general settings tab -- because args aren't set yet
+  // And we're on the commons_origin settings page, then show the color palette
   if (isset($themes_list['commons_origins'])
     && $themes_list['commons_origins']->status == 1
+    && !empty($form_state['build_info']['args'])
     && $form_state['build_info']['args'][0] == 'commons_origins') {
     // Add the color palette selection form to the apperance settings form.
     require_once(drupal_get_path('theme', 'commons_origins') . '/commons_origins.palettes.inc');
     commons_origins_palettes_form($form);
   }
-}
+}
\ No newline at end of file
diff --git a/profiles/commons/modules/contrib/commons_polls/commons_polls.info b/profiles/commons/modules/contrib/commons_polls/commons_polls.info
index fa28ac8..c947919 100644
--- a/profiles/commons/modules/contrib/commons_polls/commons_polls.info
+++ b/profiles/commons/modules/contrib/commons_polls/commons_polls.info
@@ -45,9 +45,9 @@ features[variable][] = node_options_poll
 features[variable][] = node_preview_poll
 features[variable][] = node_submitted_poll
 features[views_view][] = commons_bw_polls
-; Information added by drupal.org packaging script on 2013-02-25
-version = "7.x-3.0"
+; Information added by drupal.org packaging script on 2013-04-04
+version = "7.x-3.2"
 core = "7.x"
 project = "commons_polls"
-datestamp = "1361820341"
+datestamp = "1365038717"
 
diff --git a/profiles/commons/modules/contrib/commons_polls/commons_polls.module b/profiles/commons/modules/contrib/commons_polls/commons_polls.module
index 4247edf..06f1e69 100644
--- a/profiles/commons/modules/contrib/commons_polls/commons_polls.module
+++ b/profiles/commons/modules/contrib/commons_polls/commons_polls.module
@@ -26,7 +26,7 @@ function commons_polls_commons_bw_group_widget() {
  */
 function commons_polls_commons_bw_create_all_widget($group) {
   if (og_user_access('node', $group->nid, 'create poll content')) {
-    $link = l('Create a poll','node/add/poll',
+    $link = l(t('Create a poll'),'node/add/poll',
     array('attributes' => array('class' => 'commons-polls-create'), 'query' => array('og_group_ref' => $group->nid))
     );
     return array(
@@ -60,7 +60,7 @@ function commons_polls_views_pre_render(&$view) {
   if ($view->name == 'commons_bw_polls') {
     $group_id = $view->args[0];
     if (og_user_access('node', $group_id, 'create poll content')) {
-      $view->attachment_before = l('Create a poll', 'node/add/poll', array('query' => array('og_group_ref' => $group_id)));
+      $view->attachment_before = l(t('Create a poll'), 'node/add/poll', array('query' => array('og_group_ref' => $group_id)));
     }
   }
 }
diff --git a/profiles/commons/modules/contrib/commons_posts/commons_posts.info b/profiles/commons/modules/contrib/commons_posts/commons_posts.info
index 6d7ff3f..aa41400 100644
--- a/profiles/commons/modules/contrib/commons_posts/commons_posts.info
+++ b/profiles/commons/modules/contrib/commons_posts/commons_posts.info
@@ -44,9 +44,9 @@ features[variable][] = node_options_post
 features[variable][] = node_preview_post
 features[variable][] = node_submitted_post
 features[views_view][] = commons_bw_posts
-; Information added by drupal.org packaging script on 2013-02-25
-version = "7.x-3.0"
+; Information added by drupal.org packaging script on 2013-04-04
+version = "7.x-3.2"
 core = "7.x"
 project = "commons_posts"
-datestamp = "1361820343"
+datestamp = "1365037214"
 
diff --git a/profiles/commons/modules/contrib/commons_posts/commons_posts.module b/profiles/commons/modules/contrib/commons_posts/commons_posts.module
index 99af606..3a330a5 100644
--- a/profiles/commons/modules/contrib/commons_posts/commons_posts.module
+++ b/profiles/commons/modules/contrib/commons_posts/commons_posts.module
@@ -26,7 +26,7 @@ function commons_posts_commons_bw_group_widget() {
  */
 function commons_posts_commons_bw_create_all_widget($group) {
   if (og_user_access('node', $group->nid, 'create post content')) {
-    $link = l('Create a post','node/add/post',
+    $link = l(t('Create a post'),'node/add/post',
     array('attributes' => array('class' => 'commons-posts-create'), 'query' => array('og_group_ref' => $group->nid))
     );
     return array(
@@ -60,7 +60,7 @@ function commons_posts_views_pre_render(&$view) {
   if ($view->name == 'commons_bw_posts') {
     $group_id = $view->args[0];
     if (og_user_access('node', $group_id, 'create post content')) {
-      $view->attachment_before = l('Create a post', 'node/add/post', array('query' => array('og_group_ref' => $group_id)));
+      $view->attachment_before = l(t('Create a post'), 'node/add/post', array('query' => array('og_group_ref' => $group_id)));
     }
   }
 }
diff --git a/profiles/commons/modules/contrib/commons_profile_social/commons_profile_social.info b/profiles/commons/modules/contrib/commons_profile_social/commons_profile_social.info
index f6eaad3..3b1f69d 100644
--- a/profiles/commons/modules/contrib/commons_profile_social/commons_profile_social.info
+++ b/profiles/commons/modules/contrib/commons_profile_social/commons_profile_social.info
@@ -2,7 +2,6 @@ name = Commons Profile (Social fields)
 description = Provides a set of link fields to the user's profile for the user's Facebook, Linkedin and Twitter accounts.
 core = 7.x
 package = Commons - Building blocks
-version = 7.x-3.0-alpha1
 project = commons_profile_social
 dependencies[] = features
 dependencies[] = field_sql_storage
@@ -14,10 +13,9 @@ features[field_base][] = field_twitter_url
 features[field_instance][] = user-user-field_facebook_url
 features[field_instance][] = user-user-field_linkedin_url
 features[field_instance][] = user-user-field_twitter_url
-
-; Information added by drupal.org packaging script on 2013-02-02
-version = "7.x-3.x-dev"
+; Information added by drupal.org packaging script on 2013-04-04
+version = "7.x-3.2"
 core = "7.x"
 project = "commons_profile_social"
-datestamp = "1359766074"
+datestamp = "1365039011"
 
diff --git a/profiles/commons/modules/contrib/commons_q_a/commons-thumbs-up-down.css b/profiles/commons/modules/contrib/commons_q_a/commons-thumbs-up-down.css
index b488fc1..e16520b 100644
--- a/profiles/commons/modules/contrib/commons_q_a/commons-thumbs-up-down.css
+++ b/profiles/commons/modules/contrib/commons_q_a/commons-thumbs-up-down.css
@@ -1,49 +1,131 @@
 .rate-widget-commons_thumbs_up_down {
-  width: 68px;
-  height: 75px;
+  width: 4.5em;
+  margin: 1.7em 0;
+}
+
+.rate-info {
   position: relative;
+  width: 100%;
+  height: 3.5em;
+  -webkit-box-sizing: border-box;
+  -moz-box-sizing: border-box;
+  box-sizing: border-box;
+  margin-bottom: .4em;
+  padding: .1em .4em;
+  border: 1px solid #ccc;
+  -webkit-border-radius: 0.3em;
+  -moz-border-radius: 0.3em;
+  -ms-border-radius: 0.3em;
+  -o-border-radius: 0.3em;
+  border-radius: 0.3em;
+  font-size: .8em;
+  line-height: 1.2em;
+  text-align: center;
+  background: #fff;
+  color: #333;
+  z-index: 0;
 }
-.rate-widget-commons_thumbs_up_down ul {
-  margin: 0;
+.rate-info:before, .rate-info:after {
+  content: "";
+  display: block;
+  width: 0;
+  height: 0;
+  overflow: hidden;
   position: absolute;
-  bottom: 0;
-  width: 68px;
+  bottom: -0.85em;
+  left: 50%;
+  margin-left: -0.5em;
+  border: 0.5em solid transparent;
 }
-.rate-widget-commons_thumbs_up_down ul li {
-  margin: 0;
-  list-style-type: none;
+.rate-info:before {
+  border-top-color: #ccc;
+  margin-bottom: -1px;
+}
+.rate-info:after {
+  border-top-color: #fff;
 }
-.rate-widget-commons_thumbs_up_down ul li .rate-button {
+
+.rate-info-value {
   display: block;
-  width: 32px;
-  height: 30px;
-  background-image: url('images/updown.png?1361226127');
-  text-indent: -9999px;
+  font-size: 1.8em;
+  font-weight: bold;
+  line-height: 1em;
 }
-.rate-widget-commons_thumbs_up_down ul li .rate-number-up-down-btn-up {
-  background-position: left top;
-  float: left;
+
+.rate-info-label {
+  line-height: 1em;
+  color: #888;
 }
-.rate-widget-commons_thumbs_up_down ul li .rate-number-up-down-btn-down {
-  background-position: right top;
-  float: right;
+
+.commons-q-a-rate-buttons {
+  margin: 0;
+  line-height: 100%;
 }
-.rate-widget-commons_thumbs_up_down ul li span {
-  filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=60);
-  opacity: 0.6;
+
+.commons-q-a-rate-trigger {
+  margin: 0;
+  width: 50%;
+  height: 2em;
+  -webkit-box-sizing: border-box;
+  -moz-box-sizing: border-box;
+  box-sizing: border-box;
+  line-height: 2em;
 }
-.rate-widget-commons_thumbs_up_down .rate-info {
-  position: absolute;
-  top: 0;
-  width: 52px;
-  height: 36px;
-  padding: 4px 8px;
-  background: url('images/bkg_updown.png?1361226127');
-  text-align: center;
+.commons-q-a-rate-trigger .rate-button {
+  display: block;
+  height: 100%;
+  overflow: hidden;
+  -webkit-box-sizing: border-box;
+  -moz-box-sizing: border-box;
+  box-sizing: border-box;
+  border: 1px solid #ccc;
+  -webkit-border-radius: 0.3em;
+  -moz-border-radius: 0.3em;
+  -ms-border-radius: 0.3em;
+  -o-border-radius: 0.3em;
+  border-radius: 0.3em;
+  color: transparent;
+  background: #fefefe;
+  background: -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #fefefe), color-stop(100%, #e8e8e8));
+  background: -webkit-linear-gradient(top, #fefefe, #e8e8e8);
+  background: -moz-linear-gradient(top, #fefefe, #e8e8e8);
+  background: -o-linear-gradient(top, #fefefe, #e8e8e8);
+  background: linear-gradient(top, #fefefe, #e8e8e8);
 }
-.rate-widget-commons_thumbs_up_down .rate-info-value {
+.commons-q-a-rate-trigger .rate-button:before {
   display: block;
-  font-size: 18px;
+  margin: 0 auto;
+  text-align: center;
+  font-size: 2.4em;
+  color: #333;
   font-weight: bold;
-  line-height: 1em;
+  font-family: monospace;
+}
+.commons-q-a-rate-trigger .rate-button:hover {
+  text-decoration: none;
+}
+.commons-q-a-rate-trigger .rate-voted {
+  background: #f3f3f3;
+  border-color: #f3f3f3;
+  -webkit-box-shadow: inset 0.1em 0.1em 0.1em rgba(0, 0, 0, 0.4);
+  -moz-box-shadow: inset 0.1em 0.1em 0.1em rgba(0, 0, 0, 0.4);
+  box-shadow: inset 0.1em 0.1em 0.1em rgba(0, 0, 0, 0.4);
+}
+
+.commons-q-a-rate-up {
+  float: left;
+  padding-right: .2em;
+}
+
+.commons-q-a-rate-down {
+  float: right;
+  padding-left: .2em;
+}
+
+.rate-number-up-down-btn-up:before {
+  content: "+";
+}
+
+.rate-number-up-down-btn-down:before {
+  content: "-";
 }
diff --git a/profiles/commons/modules/contrib/commons_q_a/commons-thumbs-up-down.scss b/profiles/commons/modules/contrib/commons_q_a/commons-thumbs-up-down.scss
index a2afc60..723c676 100644
--- a/profiles/commons/modules/contrib/commons_q_a/commons-thumbs-up-down.scss
+++ b/profiles/commons/modules/contrib/commons_q_a/commons-thumbs-up-down.scss
@@ -1,51 +1,127 @@
 @import "compass";
 
+$arrow-width: 1em;
+
 .rate-widget-commons_thumbs_up_down {
-  width: 68px;
-  height: 75px;
+  width: 4.5em;
+  margin: 1.7em 0;
+}
+
+.rate-info {
   position: relative;
-  ul {
-    margin: 0;
+  width: 100%;
+  height: 3.5em;
+  @include box-sizing(border-box);
+  margin-bottom: .4em;
+  padding: .1em .4em;
+  border: 1px solid #ccc;
+  @include border-radius(.3em);
+  font-size: .8em;
+  line-height: 1.2em;
+  text-align: center;
+  background: #fff;
+  color: #333;
+  z-index: 0;
+
+  &:before,
+  &:after {
+    content: "";
+    display: block;
+    width: 0;
+    height: 0;
+    overflow: hidden;
     position: absolute;
-    bottom: 0;
-    width: 68px;
-    li {
-      margin: 0;
-      list-style-type:none;
-      .rate-button {
-        display:block;
-        width: 32px;
-        height: 30px;
-        background-image: image-url('updown.png');
-        text-indent: -9999px;
-      }
-      .rate-number-up-down-btn-up {
-        background-position: left top;
-        float:left;
-      }
-      .rate-number-up-down-btn-down {
-        background-position: right top;
-        float:right;
-      }
-      span {
-        @include opacity(.6);
-      }
-    }
+    bottom: -($arrow-width - .15);
+    left: 50%;
+    margin-left: -($arrow-width / 2);
+    border: ($arrow-width / 2) solid transparent;
   }
-  .rate-info {
-    position: absolute;
-    top: 0;
-    width: 52px;
-    height: 36px;
-    padding: 4px 8px;
-    background: image-url('bkg_updown.png');
-    text-align: center;
+
+  &:before {
+    border-top-color: #ccc;
+    margin-bottom: -1px;
   }
 
-  .rate-info-value {
+  &:after {
+    border-top-color: #fff;
+  }
+}
+
+.rate-info-value {
+  display: block;
+  font-size: 1.8em;
+  font-weight: bold;
+  line-height: 1em;
+}
+
+.rate-info-label {
+  line-height: 1em;
+  color: #888;
+}
+
+.commons-q-a-rate-buttons {
+  margin: 0;
+  line-height: 100%;
+}
+
+.commons-q-a-rate-trigger {
+  margin: 0;
+  width: 50%;
+  height: 2em;
+  @include box-sizing(border-box);
+  line-height: 2em;
+
+  .rate-button {
     display: block;
-    font-size: 18px;
-    font-weight: bold;
-    line-height: 1em;
+    height: 100%;
+    overflow: hidden;
+    @include box-sizing(border-box);
+    border: 1px solid #ccc;
+    @include border-radius(.3em);
+    color: transparent;
+    background: #fefefe;
+    @include background(linear-gradient(top, #fefefe, #e8e8e8));
+
+    &:before {
+      display: block;
+      margin: 0 auto;
+      text-align: center;
+      font-size: 2.4em;
+      color: #333;
+      font-weight: bold;
+      font-family: monospace;
+    }
+
+    &:hover {
+      text-decoration: none;
+    }
+  }
+
+  .rate-voted {
+    background: #f3f3f3;
+    border-color: #f3f3f3;
+    @include box-shadow(inset .1em .1em .1em rgba(0, 0, 0, .4));
+  }
+}
+
+.commons-q-a-rate-up {
+  float: left;
+  padding-right: .2em;
+}
+
+.commons-q-a-rate-down {
+  float: right;
+  padding-left: .2em;
+}
+
+.rate-number-up-down-btn-up {
+  &:before {
+    content: "+";
+  }
+}
+
+.rate-number-up-down-btn-down {
+  &:before {
+    content: "-";
   }
 }
diff --git a/profiles/commons/modules/contrib/commons_q_a/commons-thumbs-up-down.tpl.php b/profiles/commons/modules/contrib/commons_q_a/commons-thumbs-up-down.tpl.php
index 430b22d..17cdfa1 100644
--- a/profiles/commons/modules/contrib/commons_q_a/commons-thumbs-up-down.tpl.php
+++ b/profiles/commons/modules/contrib/commons_q_a/commons-thumbs-up-down.tpl.php
@@ -5,20 +5,21 @@
  */
 ?>
 
-<ul>
-  <li class="thumb-up">
-    <?php print $up_button; ?>
-  </li>
-  <li class="thumb-down">
-    <?php print $down_button; ?>
-  </li>
-</ul>
-<?php
+<div class="commons-q-a-rate-up-down clearfix">
+  <?php
+  print '<div class="rate-info"><span class="rate-info-value">' . $results['rating'] . '</span> <span class="rate-info-label">' . format_plural($results['rating'], 'point', 'points') . '</span></div>';
 
-if ($info) {
-  print '<div class="rate-info"><span class="rate-info-value">' . $score . '</span> <span class="rate-info-label">' . format_plural($score, t('point'), t('points')) . '</span></div>';
-}
+  if ($display_options['description']) {
+    print '<div class="rate-description">' . $display_options['description'] . '</div>';
+  }
+  ?>
 
-if ($display_options['description']) {
-  print '<div class="rate-description">' . $display_options['description'] . '</div>';
-}
+  <div class="commons-q-a-rate-buttons">
+    <div class="commons-q-a-rate-trigger commons-q-a-rate-up">
+      <?php print $up_button; ?>
+    </div>
+    <div class="commons-q-a-rate-trigger commons-q-a-rate-down">
+      <?php print $down_button; ?>
+    </div>
+  </div>
+</div>
diff --git a/profiles/commons/modules/contrib/commons_q_a/commons_q_a.info b/profiles/commons/modules/contrib/commons_q_a/commons_q_a.info
index cd2a057..1812144 100644
--- a/profiles/commons/modules/contrib/commons_q_a/commons_q_a.info
+++ b/profiles/commons/modules/contrib/commons_q_a/commons_q_a.info
@@ -88,9 +88,9 @@ features_exclude[field_instance][node-question-og_group_ref_other_groups] = node
 features_exclude[field_instance][og_group_ref] = og_group_ref
 features_exclude[field_instance][node-answer-og_group_ref] = node-answer-og_group_ref
 features_exclude[field_instance][node-question-og_group_ref] = node-question-og_group_ref
-; Information added by drupal.org packaging script on 2013-02-25
-version = "7.x-3.0"
+; Information added by drupal.org packaging script on 2013-04-04
+version = "7.x-3.2"
 core = "7.x"
 project = "commons_q_a"
-datestamp = "1361820346"
+datestamp = "1365036911"
 
diff --git a/profiles/commons/modules/contrib/commons_q_a/commons_q_a.install b/profiles/commons/modules/contrib/commons_q_a/commons_q_a.install
index dcc9dcf..7fa319b 100644
--- a/profiles/commons/modules/contrib/commons_q_a/commons_q_a.install
+++ b/profiles/commons/modules/contrib/commons_q_a/commons_q_a.install
@@ -32,4 +32,17 @@ function commons_q_a_update_3102() {
   );
   features_revert($revert);
   return array();
+}
+
+/**
+ * Update the Commons Q&A widget per http://drupal.org/node/1940644.
+ */
+function commons_q_a_update_3103() {
+  // The Commons Q&A widget is defined via a hook_strongarm_alter()
+  // implementation altering rate_widgets variable, defined by commons_like.
+    $revert = array(
+      'commons_like' => array('variable'),
+  );
+  features_revert($revert);
+  return array();
 }
\ No newline at end of file
diff --git a/profiles/commons/modules/contrib/commons_q_a/commons_q_a.module b/profiles/commons/modules/contrib/commons_q_a/commons_q_a.module
index b2573a0..dd606f9 100644
--- a/profiles/commons/modules/contrib/commons_q_a/commons_q_a.module
+++ b/profiles/commons/modules/contrib/commons_q_a/commons_q_a.module
@@ -88,33 +88,66 @@ function commons_q_a_views_pre_render(&$view) {
   if ($view->name == 'commons_question_answers' && !empty($view->args[0])) {
     // If the user has access to post into any of the groups associated
     // with the question, embed a simplified answer node form.
+    global $user;
+
     $question_nid = $view->args[0];
     $question = node_load($question_nid);
-    foreach ($question->og_group_ref[LANGUAGE_NONE] as $key => $value) {
-      if (og_user_access('node', $value['target_id'], 'create answer content')) {
-        module_load_include('inc', 'node', 'node.pages');
-        global $user;
-        $types = node_type_get_types();
-        $node = (object) array('uid' => $user->uid, 'name' => (isset($user->name) ? $user->name : ''), 'type' => 'answer', 'language' => LANGUAGE_NONE);
-        // Prepopulate the Related question field
-        // with Entityreference Prepopulate, which looks strictly at $_GET.
-        $_GET['field_related_question'] = $view->args[0];
-        $answer_form = drupal_get_form('answer_node_form', $node);
-        $answer_form['header'] = array(
-          '#markup' => '<h3 id="answer" name="answer">' . t('Add a new answer') . '</h3>',
-          '#weight' => -10,
-        );
-        // Hide any vertical tabs that might be present.
-        $answer_form['additional_settings']['#access'] = FALSE;
-        // Hide the Related question field.
-        $answer_form['field_related_question']['#access'] = FALSE;
-        // Add the form to the attachment_after part of the view,
-        $view->attachment_after .= drupal_render($answer_form);
-        // We only need to add the form once if the user has access to
-        // post questions into any of the groups associated with the parent.
-        return;
+    $group_ref = array();
+    $answer_access = FALSE;
+    if (!empty($question->og_group_ref[LANGUAGE_NONE])) {
+      foreach ($question->og_group_ref[LANGUAGE_NONE] as $key => $value) {
+        // Check to see the user has access to the group the question is in, only attach to those groups they have permission to post in.
+        if (og_user_access('node', $value['target_id'], 'create answer content')) {
+          $group_ref[] = $value['target_id'];
+          $answer_access = TRUE;
+        }
+      }
+    }
+    // If user belongs to no groups, or no groups are assigned to the Question, check node_access for user.
+    else {
+      if (node_access('create', $question, $user)) {
+        $answer_access = TRUE;
       }
     }
+
+    // Check global user access before showing the answer form.
+    if ($answer_access) {
+      module_load_include('inc', 'node', 'node.pages');
+      $types = node_type_get_types();
+      $node = (object) array('uid' => $user->uid, 'name' => (isset($user->name) ? $user->name : ''), 'type' => 'answer', 'language' => LANGUAGE_NONE);
+      // Prepopulate the Related question field
+      // with Entityreference Prepopulate, which looks strictly at $_GET.
+      $_GET['field_related_question'] = $view->args[0];
+      if (!empty($group_ref)) {
+        $_GET['og_group_ref'] = implode(',',$group_ref);
+      }
+      $answer_form = drupal_get_form('answer_node_form', $node);
+      $answer_form['header'] = array(
+        '#markup' => '<h3 id="answer" name="answer">' . t('Add a new answer') . '</h3>',
+        '#weight' => -10,
+      );
+      // Hide any vertical tabs that might be present.
+      $answer_form['additional_settings']['#access'] = FALSE;
+      // Hide the Related question field.
+      $answer_form['field_related_question']['#access'] = FALSE;
+      // Add the form to the attachment_after part of the view,
+      $view->attachment_after .= drupal_render($answer_form);
+      // We only need to add the form once if the user has access to
+      // post questions into any of the groups associated with the parent.
+      return;
+    }
+  }
+}
+
+/*
+ * Implements hook_module_implements_alter().
+ * Set commons_q_a form alter to happen after node so the title doesn't get reset.
+ */
+function commons_q_a_module_implements_alter(&$implementations, $hook) {
+  if ($hook == 'form_alter') {
+    $group = $implementations['commons_q_a'];
+    unset($implementations['commons_q_a']);
+    $implementations['commons_q_a'] = $group;
   }
 }
 
@@ -128,8 +161,8 @@ function commons_q_a_form_alter(&$form, &$form_state, $form_id) {
     $form['og_group_ref']['#access'] = FALSE;
     $form['actions']['submit']['#submit'][] = 'commons_q_a_answer_submit';
   }
-  if ($form_id == 'question_node_form' && empty($form['node']->nid)) {
-    drupal_set_title(t('Ask a question'));
+  if ($form_id == 'question_node_form' && empty($form['#node']->nid)) {
+    drupal_set_title('Ask a question');
   }
   if ($form_id == 'comment_node_question_form' || $form_id == 'comment_node_answer_form') {
     $form['container'] = array(
@@ -165,7 +198,7 @@ function commons_q_a_field_attach_submit($entity_type, &$entity, $form, &$form_s
  */
 function commons_q_a_commons_bw_create_all_widget($group) {
    if (og_user_access('node', $group->nid, 'create question content')) {
-      $link = l('Ask a question','node/add/question',
+      $link = l(t('Ask a question'),'node/add/question',
       array('attributes' => array('class' => 'commons-q-a-create'), 'query' => array('og_group_ref' => $group->nid))
     );
     return array(
@@ -331,7 +364,7 @@ function commons_q_a_rate_widget() {
     'allow_voting_by_author' => 1,
     'noperm_behaviour' => '3',
     'displayed' => '1',
-    'displayed_just_voted' => '2',
+    'displayed_just_voted' => '1',
     'description' => '',
     'description_in_compact' => TRUE,
     'delete_vote_on_second_click' => '1',
diff --git a/profiles/commons/modules/contrib/commons_q_a/config.rb b/profiles/commons/modules/contrib/commons_q_a/config.rb
index 1983ae6..ae8fc12 100644
--- a/profiles/commons/modules/contrib/commons_q_a/config.rb
+++ b/profiles/commons/modules/contrib/commons_q_a/config.rb
@@ -6,20 +6,15 @@ css_dir = "/"
 sass_dir = "/"
 images_dir = "images"
 
-
+# output_style = :expanded or :nested or :compact or :compressed
 output_style = :expanded
-environment = :production
 
-# To enable relative paths to assets via compass helper functions. Uncomment:
 relative_assets = true
 
-# To disable debugging comments that display the original location of your selectors. Uncomment:
-# line_comments = false
-color_output = false
-
+# line_comments and debug_info can be activated by setting the environment
+# flag to "development"
+line_comments = (environment == :development) ? true : false
 
-# If you prefer the indented syntax, you might want to regenerate this
-# project again passing --syntax sass, or you can uncomment this:
-# preferred_syntax = :sass
-# and then run:
-# sass-convert -R --from scss --to sass sass scss && rm -rf sass && mv scss sass
+sass_options = {
+  :debug_info => (environment == :development) ? true : false
+}
diff --git a/profiles/commons/modules/contrib/commons_q_a/modules/commons_q_a_pages/commons_q_a_pages.info b/profiles/commons/modules/contrib/commons_q_a/modules/commons_q_a_pages/commons_q_a_pages.info
index adf326e..034dff0 100644
--- a/profiles/commons/modules/contrib/commons_q_a/modules/commons_q_a_pages/commons_q_a_pages.info
+++ b/profiles/commons/modules/contrib/commons_q_a/modules/commons_q_a_pages/commons_q_a_pages.info
@@ -13,9 +13,9 @@ features[panelizer_defaults][] = node:question:default
 features[variable][] = panelizer_defaults_node_answer
 features[variable][] = panelizer_defaults_node_question
 
-; Information added by drupal.org packaging script on 2013-02-25
-version = "7.x-3.0"
+; Information added by drupal.org packaging script on 2013-04-04
+version = "7.x-3.2"
 core = "7.x"
 project = "commons_q_a"
-datestamp = "1361820346"
+datestamp = "1365036911"
 
diff --git a/profiles/commons/modules/contrib/commons_search/commons_search.info b/profiles/commons/modules/contrib/commons_search/commons_search.info
index 5856b1a..5d20fda 100644
--- a/profiles/commons/modules/contrib/commons_search/commons_search.info
+++ b/profiles/commons/modules/contrib/commons_search/commons_search.info
@@ -64,9 +64,9 @@ features[variable][] = custom_search_type_selector_all
 features[variable][] = custom_search_type_selector_label
 features[variable][] = custom_search_type_selector_label_visibility
 features[views_view][] = group_search
-; Information added by drupal.org packaging script on 2013-02-25
-version = "7.x-3.0"
+; Information added by drupal.org packaging script on 2013-03-27
+version = "7.x-3.1"
 core = "7.x"
 project = "commons_search"
-datestamp = "1361820350"
+datestamp = "1364416524"
 
diff --git a/profiles/commons/modules/contrib/commons_search/commons_search.module b/profiles/commons/modules/contrib/commons_search/commons_search.module
index a957f48..837a8fb 100644
--- a/profiles/commons/modules/contrib/commons_search/commons_search.module
+++ b/profiles/commons/modules/contrib/commons_search/commons_search.module
@@ -97,24 +97,21 @@ function commons_search_search_form_submit($form, &$form_state) {
 /**
  * Implements hook_preprocess_hook().
  */
-function commons_search_preprocess_search_results(&$variables) {
+function commons_search_process_search_results(&$variables) {
   $variables['result_count'] = count($variables['results']);
-  $title = t('Search results');
   if (isset($variables['response'])
     && isset($variables['response']->request)
     && preg_match('/sm_og_group_ref:"node:([0-9]+)"&/', urldecode($variables['response']->request), $match)) {
     $group = node_load($match[1]);
     $title = t('Search within !group', array('!group' => '<em>' . $group->title . '</em>'));
+    $variables['title'] = $title;
   }
-  $variables['search_title'] = $title;
 }
 
 /**
  * Implements hook_theme_registry_alter().
  */
 function commons_search_theme_registry_alter(&$theme_registry) {
-  $theme_registry['search_results']['path'] = drupal_get_path('module', 'commons_search') . '/theme';
-  $theme_registry['search_results']['template'] = 'commons_search__search_results';
   // Remove AT breadcrumb preprocess since it adds raw RDFa data into the title.
   $theme_registry['breadcrumb']['preprocess functions'] = array_flip($theme_registry['breadcrumb']['preprocess functions']);
   unset($theme_registry['breadcrumb']['preprocess functions']['adaptivetheme_preprocess_breadcrumb']);
diff --git a/profiles/commons/modules/contrib/commons_search/modules/commons_search_core/commons_search_core.info b/profiles/commons/modules/contrib/commons_search/modules/commons_search_core/commons_search_core.info
index a61a15f..3fe80c8 100644
--- a/profiles/commons/modules/contrib/commons_search/modules/commons_search_core/commons_search_core.info
+++ b/profiles/commons/modules/contrib/commons_search/modules/commons_search_core/commons_search_core.info
@@ -25,15 +25,16 @@ features[facetapi][] = search:block:created
 features[facetapi][] = search:block:field_topics
 features[features_api][] = api:1
 features[page_manager_handlers][] = search_search_facetapi_panel_context
+features[page_manager_handlers][] = search_search_facetapi_panel_context_2
 features[variable][] = page_manager_search_disabled_search_facetapi
 features[variable][] = custom_search_other
 features[variable][] = search_active_modules
 features[variable][] = search_default_module
 features_exclude[dependencies][ctools] = ctools
 
-; Information added by drupal.org packaging script on 2013-02-25
-version = "7.x-3.0"
+; Information added by drupal.org packaging script on 2013-03-27
+version = "7.x-3.1"
 core = "7.x"
 project = "commons_search"
-datestamp = "1361820350"
+datestamp = "1364416524"
 
diff --git a/profiles/commons/modules/contrib/commons_search/modules/commons_search_core/commons_search_core.install b/profiles/commons/modules/contrib/commons_search/modules/commons_search_core/commons_search_core.install
index ef19b68..48d0e50 100644
--- a/profiles/commons/modules/contrib/commons_search/modules/commons_search_core/commons_search_core.install
+++ b/profiles/commons/modules/contrib/commons_search/modules/commons_search_core/commons_search_core.install
@@ -26,3 +26,14 @@ function commons_search_core_enable() {
   variable_set('search_default_module', 'search_facetapi');
   cache_clear_all('*', 'cache_block', TRUE);
 }
+
+/**
+ * Revert the core search page to have a single column variant when no search
+ * has happened and the normal two column variant when a search has happened.
+ */
+function commons_search_core_update_7001() {
+  $revert = array(
+    'commons_search_core' => array('page_manager_handlers'),
+  );
+  features_revert($revert);
+}
diff --git a/profiles/commons/modules/contrib/commons_search/modules/commons_search_core/commons_search_core.pages_default.inc b/profiles/commons/modules/contrib/commons_search/modules/commons_search_core/commons_search_core.pages_default.inc
index 8fbd238..353731e 100644
--- a/profiles/commons/modules/contrib/commons_search/modules/commons_search_core/commons_search_core.pages_default.inc
+++ b/profiles/commons/modules/contrib/commons_search/modules/commons_search_core/commons_search_core.pages_default.inc
@@ -19,7 +19,7 @@ function commons_search_core_default_page_manager_handlers() {
   $handler->handler = 'panel_context';
   $handler->weight = 0;
   $handler->conf = array(
-    'title' => '',
+    'title' => 'Non-empty keywords, two column',
     'no_blocks' => 0,
     'pipeline' => 'ipe',
     'body_classes_to_remove' => '',
@@ -28,6 +28,20 @@ function commons_search_core_default_page_manager_handlers() {
     'css' => '',
     'contexts' => array(),
     'relationships' => array(),
+    'access' => array(
+      'plugins' => array(
+        0 => array(
+          'name' => 'string_length',
+          'settings' => array(
+            'operator' => '>',
+            'length' => '0',
+          ),
+          'context' => 'argument_string_1',
+          'not' => FALSE,
+        ),
+      ),
+      'logic' => 'and',
+    ),
   );
   $display = new panels_display();
   $display->layout = 'two_33_66';
@@ -215,5 +229,88 @@ function commons_search_core_default_page_manager_handlers() {
   $handler->conf['display'] = $display;
   $export['search_search_facetapi_panel_context'] = $handler;
 
+  $handler = new stdClass();
+  $handler->disabled = FALSE; /* Edit this to true to make a default handler disabled initially */
+  $handler->api_version = 1;
+  $handler->name = 'search_search_facetapi_panel_context_2';
+  $handler->task = 'search';
+  $handler->subtask = 'search_facetapi';
+  $handler->handler = 'panel_context';
+  $handler->weight = 1;
+  $handler->conf = array(
+    'title' => 'Empty keywords, single column',
+    'no_blocks' => 0,
+    'pipeline' => 'ipe',
+    'body_classes_to_remove' => '',
+    'body_classes_to_add' => '',
+    'css_id' => '',
+    'css' => '',
+    'contexts' => array(),
+    'relationships' => array(),
+    'access' => array(
+      'plugins' => array(
+        0 => array(
+          'name' => 'string_length',
+          'settings' => array(
+            'operator' => '=',
+            'length' => '0',
+          ),
+          'context' => 'argument_string_1',
+          'not' => FALSE,
+        ),
+      ),
+      'logic' => 'and',
+    ),
+  );
+  $display = new panels_display();
+  $display->layout = 'one';
+  $display->layout_settings = array();
+  $display->panel_settings = array(
+    'style_settings' => array(
+      'default' => NULL,
+      'two_33_66_top' => NULL,
+      'two_33_66_first' => NULL,
+      'two_33_66_second' => NULL,
+      'two_33_66_bottom' => NULL,
+      'one_main' => NULL,
+    ),
+  );
+  $display->cache = array();
+  $display->title = '';
+  $display->content = array();
+  $display->panels = array();
+    $pane = new stdClass();
+    $pane->pid = 'new-8';
+    $pane->panel = 'one_main';
+    $pane->type = 'search_form';
+    $pane->subtype = 'search_form';
+    $pane->shown = TRUE;
+    $pane->access = array();
+    $pane->configuration = array(
+      'type' => 'search_facetapi',
+      'form' => 'simple',
+      'path_type' => 'default',
+      'path' => '',
+      'override_prompt' => 0,
+      'prompt' => '',
+      'context' => 'argument_string_1',
+      'override_title' => 0,
+      'override_title_text' => '',
+    );
+    $pane->cache = array();
+    $pane->style = array(
+      'settings' => NULL,
+    );
+    $pane->css = array();
+    $pane->extras = array();
+    $pane->position = 0;
+    $pane->locks = array();
+    $display->content['new-8'] = $pane;
+    $display->panels['one_main'][0] = 'new-8';
+  $display->hide_title = PANELS_TITLE_PANE;
+  $display->title_pane = '0';
+  $handler->conf['display'] = $display;
+  $export['search_search_facetapi_panel_context_2'] = $handler;
+
   return $export;
 }
diff --git a/profiles/commons/modules/contrib/commons_search/modules/commons_search_solr/commons_search_solr.apachesolr_search_defaults.inc b/profiles/commons/modules/contrib/commons_search/modules/commons_search_solr/commons_search_solr.apachesolr_search_defaults.inc
index d3fe714..1bf367f 100644
--- a/profiles/commons/modules/contrib/commons_search/modules/commons_search_solr/commons_search_solr.apachesolr_search_defaults.inc
+++ b/profiles/commons/modules/contrib/commons_search/modules/commons_search_solr/commons_search_solr.apachesolr_search_defaults.inc
@@ -20,12 +20,15 @@ function commons_search_solr_apachesolr_search_default_searchers() {
   $searcher->page_title = 'Site';
   $searcher->env_id = apachesolr_default_environment();
   $searcher->settings = array(
+    'fq' => array(),
+    'apachesolr_search_custom_enable' => FALSE,
     'apachesolr_search_search_type' => 'custom',
+    'apachesolr_search_search_box' => TRUE,
     'apachesolr_search_per_page' => 10,
-    'apachesolr_search_browse' => 'browse',
+    'apachesolr_search_browse' => 'blocks',
     'apachesolr_search_spellcheck' => TRUE,
+    'apachesolr_search_allow_user_input' => FALSE,
     'apachesolr_search_not_removable' => TRUE,
-    'apachesolr_search_search_box' => TRUE,
   );
   $export['core_search'] = $searcher;
 
diff --git a/profiles/commons/modules/contrib/commons_search/modules/commons_search_solr/commons_search_solr.info b/profiles/commons/modules/contrib/commons_search/modules/commons_search_solr/commons_search_solr.info
index 6e76367..72a52cc 100644
--- a/profiles/commons/modules/contrib/commons_search/modules/commons_search_solr/commons_search_solr.info
+++ b/profiles/commons/modules/contrib/commons_search/modules/commons_search_solr/commons_search_solr.info
@@ -28,9 +28,9 @@ features[variable][] = custom_search_other
 features[variable][] = search_active_modules
 features[variable][] = search_default_module
 
-; Information added by drupal.org packaging script on 2013-02-25
-version = "7.x-3.0"
+; Information added by drupal.org packaging script on 2013-03-27
+version = "7.x-3.1"
 core = "7.x"
 project = "commons_search"
-datestamp = "1361820350"
+datestamp = "1364416524"
 
diff --git a/profiles/commons/modules/contrib/commons_search/modules/commons_search_solr/commons_search_solr.install b/profiles/commons/modules/contrib/commons_search/modules/commons_search_solr/commons_search_solr.install
index 1f1e7c4..36f29a9 100644
--- a/profiles/commons/modules/contrib/commons_search/modules/commons_search_solr/commons_search_solr.install
+++ b/profiles/commons/modules/contrib/commons_search/modules/commons_search_solr/commons_search_solr.install
@@ -26,3 +26,13 @@ function commons_search_solr_enable() {
   cache_clear_all();
   commons_search_solr_create_facets();
 }
+
+/**
+ * Set default environment to display facet blocks in configured regions.
+ */
+function commons_search_solr_update_7001() {
+  $revert = array(
+    'commons_search_solr' => array('apachesolr_search_page'),
+  );
+  features_revert($revert);
+}
diff --git a/profiles/commons/modules/contrib/commons_search/modules/commons_search_solr/commons_search_solr.module b/profiles/commons/modules/contrib/commons_search/modules/commons_search_solr/commons_search_solr.module
index 66b6eff..91de0e3 100644
--- a/profiles/commons/modules/contrib/commons_search/modules/commons_search_solr/commons_search_solr.module
+++ b/profiles/commons/modules/contrib/commons_search/modules/commons_search_solr/commons_search_solr.module
@@ -431,3 +431,14 @@ function commons_search_solr_environment_form_submit($form, $form_state) {
     cache_clear_all('*', 'cache_apachesolr', TRUE);
   }
 }
+
+/**
+ * Implements hook_modules_enabled().
+ */
+function commons_search_solr_modules_enabled($modules) {
+  if (in_array('acquia_search', $modules)) {
+    // If Acquia Search is enabled later, we need to force update our facets,
+    // otherwise our Events Solr page has no facets.
+    commons_search_solr_create_facets(ACQUIA_SEARCH_ENVIRONMENT_ID);
+  }
+}
diff --git a/profiles/commons/modules/contrib/commons_utility_links/commons_utility_links.info b/profiles/commons/modules/contrib/commons_utility_links/commons_utility_links.info
index 9e8b3c0..9b58dce 100644
--- a/profiles/commons/modules/contrib/commons_utility_links/commons_utility_links.info
+++ b/profiles/commons/modules/contrib/commons_utility_links/commons_utility_links.info
@@ -1,9 +1,9 @@
 core = 7.x
 name = Commons Utility links block
 package = "Commons - Building blocks"
-; Information added by drupal.org packaging script on 2013-02-25
-version = "7.x-3.0"
+; Information added by drupal.org packaging script on 2013-03-27
+version = "7.x-3.1"
 core = "7.x"
 project = "commons_utility_links"
-datestamp = "1361820357"
+datestamp = "1364416214"
 
diff --git a/profiles/commons/modules/contrib/commons_utility_links/commons_utility_links.module b/profiles/commons/modules/contrib/commons_utility_links/commons_utility_links.module
index 9a23b4f..3cff3fe 100644
--- a/profiles/commons/modules/contrib/commons_utility_links/commons_utility_links.module
+++ b/profiles/commons/modules/contrib/commons_utility_links/commons_utility_links.module
@@ -31,6 +31,18 @@ function commons_utility_links_block_view() {
       'title' => t('Logout'),
     );
   }
+  else {
+    if (variable_get('user_register', USER_REGISTER_VISITORS_ADMINISTRATIVE_APPROVAL)) {
+      $links['signup'] = array(
+        'href' => 'user/register',
+        'title' => t('Signup'),
+      );
+    }
+    $links['login'] = array(
+      'href' => 'user/login',
+      'title' => t('Login'),
+    );
+  }
   drupal_alter('commons_utility_links', $links);
   $block['content'] = theme('links', array('links' => $links, 'attributes' => array('class' => 'commons-utility-links')));
   return $block;
diff --git a/profiles/commons/modules/contrib/commons_wikis/commons_wikis.info b/profiles/commons/modules/contrib/commons_wikis/commons_wikis.info
index 4d70063..369b07a 100644
--- a/profiles/commons/modules/contrib/commons_wikis/commons_wikis.info
+++ b/profiles/commons/modules/contrib/commons_wikis/commons_wikis.info
@@ -64,9 +64,9 @@ features[variable][] = show_diff_inline_wiki
 features[variable][] = show_preview_changes_wiki
 features[views_view][] = commons_bw_wikis
 features[views_view][] = commons_wikis_contributor_list
-; Information added by drupal.org packaging script on 2013-02-25
-version = "7.x-3.0"
+; Information added by drupal.org packaging script on 2013-04-04
+version = "7.x-3.2"
 core = "7.x"
 project = "commons_wikis"
-datestamp = "1361820359"
+datestamp = "1365036913"
 
diff --git a/profiles/commons/modules/contrib/commons_wikis/commons_wikis.install b/profiles/commons/modules/contrib/commons_wikis/commons_wikis.install
index 1f90514..3d53788 100644
--- a/profiles/commons/modules/contrib/commons_wikis/commons_wikis.install
+++ b/profiles/commons/modules/contrib/commons_wikis/commons_wikis.install
@@ -4,9 +4,20 @@
  * Disable summary on Wiki nodes.
  */
 function commons_wikis_update_7000() {
-    $revert = array(
-      'commons_wikis' => array('field_instance'),
+  $revert = array(
+    'commons_wikis' => array('field_instance'),
   );
   features_revert($revert);
   return array();
-}
\ No newline at end of file
+}
+
+/**
+ * Update Wiki message type to remove error messages.
+ */
+function commons_wikis_update_7001() {
+  $revert = array(
+    'commons_wikis' => array('message_type', 'variable'),
+  );
+  features_revert($revert);
+  return array();
+}
diff --git a/profiles/commons/modules/contrib/commons_wikis/commons_wikis.module b/profiles/commons/modules/contrib/commons_wikis/commons_wikis.module
index 447097d..d481dea 100644
--- a/profiles/commons/modules/contrib/commons_wikis/commons_wikis.module
+++ b/profiles/commons/modules/contrib/commons_wikis/commons_wikis.module
@@ -24,7 +24,7 @@ function commons_wikis_module_implements_alter(&$implementations, $hook) {
  */
 function commons_wikis_commons_bw_create_all_widget($group) {
    if (og_user_access('node', $group->nid, 'create wiki content')) {
-      $link = l('Start a wiki','node/add/wiki',
+      $link = l(t('Start a wiki'), 'node/add/wiki',
       array('attributes' => array('class' => 'commons-wikis-create'), 'query' => array('og_group_ref' => $group->nid))
     );
     return array(
@@ -73,11 +73,12 @@ function commons_wikis_og_user_access_alter(&$temp_perm, $context) {
   // where the group node is public and content is public within the group.
   $commons_groups_entity_types = commons_groups_get_group_content_entity_types();
   $group_content_restricted = (bool) (isset($context['group']->group_content_access[LANGUAGE_NONE][0]['value']) && $context['group']->group_content_access[LANGUAGE_NONE][0]['value'] == 2);
-  // @TODO: Consider using a static here.
-  $user_is_member = (bool)og_is_member('node', $context['group']->nid, 'user', $context['account']);
-  if ($context['string'] == "update any wiki content" && (!$group_content_restricted || $user_is_member)) {
-      $temp_perm["update any wiki content"] = TRUE;
-  }
+  $user_is_member = (bool) og_is_member('node', $context['group']->nid, 'user', $context['account']);
+  if ($context['string'] == "update any wiki content"
+    && user_access('edit any wiki content', $context['account'])
+    && (!$group_content_restricted || $user_is_member)) {
+    $temp_perm["update any wiki content"] = TRUE;
+   }
 }
 
 
@@ -104,7 +105,7 @@ function commons_wikis_views_pre_render(&$view) {
   if ($view->name == 'commons_bw_wikis') {
     $group_id = $view->args[0];
     if (og_user_access('node', $group_id, 'create wiki content') && node_access('create', 'wiki')) {
-      $view->attachment_before = l('Create a wiki', 'node/add/wiki', array('query' => array('og_group_ref' => $group_id)));
+      $view->attachment_before = l(t('Create a wiki'), 'node/add/wiki', array('query' => array('og_group_ref' => $group_id)));
     }
   }
 }
diff --git a/profiles/commons/modules/contrib/commons_wikis/commons_wikis.strongarm.inc b/profiles/commons/modules/contrib/commons_wikis/commons_wikis.strongarm.inc
index eead02a..d76fb68 100644
--- a/profiles/commons/modules/contrib/commons_wikis/commons_wikis.strongarm.inc
+++ b/profiles/commons/modules/contrib/commons_wikis/commons_wikis.strongarm.inc
@@ -78,20 +78,7 @@ function commons_wikis_strongarm() {
   $strongarm->api_version = 1;
   $strongarm->name = 'field_bundle_settings_message__commons_wikis_wiki_updated';
   $strongarm->value = array(
-    'view_modes' => array(
-      'message_notify_email_subject' => array(
-        'custom_settings' => TRUE,
-      ),
-      'message_notify_email_body' => array(
-        'custom_settings' => TRUE,
-      ),
-      'full' => array(
-        'custom_settings' => FALSE,
-      ),
-      'token' => array(
-        'custom_settings' => FALSE,
-      ),
-    ),
+    'view_modes' => array(),
     'extra_fields' => array(
       'form' => array(),
       'display' => array(
@@ -104,10 +91,6 @@ function commons_wikis_strongarm() {
             'visible' => FALSE,
             'weight' => 0,
           ),
-          'default' => array(
-            'weight' => '2',
-            'visible' => FALSE,
-          ),
         ),
         'message__message_text__1' => array(
           'message_notify_email_subject' => array(
@@ -118,16 +101,6 @@ function commons_wikis_strongarm() {
             'visible' => TRUE,
             'weight' => 0,
           ),
-          'default' => array(
-            'weight' => '0',
-            'visible' => TRUE,
-          ),
-        ),
-        'message__message_text__2' => array(
-          'default' => array(
-            'weight' => '1',
-            'visible' => TRUE,
-          ),
         ),
       ),
     ),
diff --git a/profiles/commons/modules/contrib/commons_wikis/modules/commons_wikis_pages/commons_wikis_pages.info b/profiles/commons/modules/contrib/commons_wikis/modules/commons_wikis_pages/commons_wikis_pages.info
index 70ad18c..2466077 100644
--- a/profiles/commons/modules/contrib/commons_wikis/modules/commons_wikis_pages/commons_wikis_pages.info
+++ b/profiles/commons/modules/contrib/commons_wikis/modules/commons_wikis_pages/commons_wikis_pages.info
@@ -14,9 +14,9 @@ features[features_api][] = api:1
 features[panelizer_defaults][] = node:wiki:default
 features[variable][] = panelizer_defaults_node_wiki
 
-; Information added by drupal.org packaging script on 2013-02-25
-version = "7.x-3.0"
+; Information added by drupal.org packaging script on 2013-04-04
+version = "7.x-3.2"
 core = "7.x"
 project = "commons_wikis"
-datestamp = "1361820359"
+datestamp = "1365036913"
 
diff --git a/profiles/commons/modules/contrib/commons_wysiwyg/commons_wysiwyg.features.ckeditor_profile.inc b/profiles/commons/modules/contrib/commons_wysiwyg/commons_wysiwyg.features.ckeditor_profile.inc
index ac4c364..3b20ed1 100644
--- a/profiles/commons/modules/contrib/commons_wysiwyg/commons_wysiwyg.features.ckeditor_profile.inc
+++ b/profiles/commons/modules/contrib/commons_wysiwyg/commons_wysiwyg.features.ckeditor_profile.inc
@@ -18,7 +18,7 @@ function commons_wysiwyg_ckeditor_profile_defaults() {
         'uicolor' => 'default',
         'uicolor_user' => 'default',
         'toolbar' => '[
-    [\'Format\',\'Bold\',\'Italic\',\'-\',\'NumberedList\',\'BulletedList\',\'Strike\',\'Blockquote\',\'-\',\'Link\',\'Unlink\',\'Image\']
+    [\'Format\'],[\'Bold\',\'Italic\',\'Strike\'],[\'NumberedList\',\'BulletedList\',\'Indent\',\'Outdent\',\'Blockquote\'],[\'Link\',\'Unlink\',\'Image\']
 ]',
         'expand' => 't',
         'width' => '100%',
diff --git a/profiles/commons/modules/contrib/commons_wysiwyg/commons_wysiwyg.info b/profiles/commons/modules/contrib/commons_wysiwyg/commons_wysiwyg.info
index aa08fac..bb9439c 100644
--- a/profiles/commons/modules/contrib/commons_wysiwyg/commons_wysiwyg.info
+++ b/profiles/commons/modules/contrib/commons_wysiwyg/commons_wysiwyg.info
@@ -14,9 +14,9 @@ features[features_api][] = api:1
 features[filter][] = filtered_html
 features[filter][] = full_html
 features[user_permission][] = use text format filtered_html
-; Information added by drupal.org packaging script on 2013-02-25
-version = "7.x-3.0"
+; Information added by drupal.org packaging script on 2013-03-27
+version = "7.x-3.1"
 core = "7.x"
 project = "commons_wysiwyg"
-datestamp = "1361820361"
+datestamp = "1364416526"
 
diff --git a/profiles/commons/modules/contrib/commons_wysiwyg/commons_wysiwyg.install b/profiles/commons/modules/contrib/commons_wysiwyg/commons_wysiwyg.install
new file mode 100644
index 0000000..e9c5686
--- /dev/null
+++ b/profiles/commons/modules/contrib/commons_wysiwyg/commons_wysiwyg.install
@@ -0,0 +1,13 @@
+<?php
+
+/**
+ * Update CKEditor config to be more friendly on devices with smaller
+ * screen sizes per http://drupal.org/node/1948466.
+ */
+function commons_wysiwyg_update_3100() {
+  $revert = array(
+      'commons_wysiwyg' => array('ckeditor_profile'),
+  );
+  features_revert($revert);
+  return array();
+}
diff --git a/profiles/commons/modules/contrib/commons_wysiwyg/commons_wysiwyg.module b/profiles/commons/modules/contrib/commons_wysiwyg/commons_wysiwyg.module
index 44788b0..98f2347 100644
--- a/profiles/commons/modules/contrib/commons_wysiwyg/commons_wysiwyg.module
+++ b/profiles/commons/modules/contrib/commons_wysiwyg/commons_wysiwyg.module
@@ -1,5 +1,22 @@
 <?php
 /**
- * @file
- * Drupal needs this blank file.
+ * Implements hook_element_info_alter().
+ * Sets the default format if the user's default format is filtered_html.
  */
+function commons_wysiwyg_element_info_alter(&$type) {
+  $type['text_format']['#pre_render'][] = 'commons_wysiwyg_process_filter_format';
+}
+
+/**
+ * Callback function to process the filter format and remove the fieldset.
+ * More info:  http://drupal.org/node/1949552
+ */
+function commons_wysiwyg_process_filter_format($element) {
+  global $user;
+  $formats = filter_formats($user);
+  if (count($formats) <= 2 && array_key_exists('filtered_html', $formats)) {
+    unset($element['format']);
+    $element['#format'] = 'filtered_html';
+  }
+  return $element;
+}
\ No newline at end of file
diff --git a/profiles/commons/modules/contrib/connector/connector.info b/profiles/commons/modules/contrib/connector/connector.info
index f09a896..e085fbc 100644
--- a/profiles/commons/modules/contrib/connector/connector.info
+++ b/profiles/commons/modules/contrib/connector/connector.info
@@ -3,9 +3,9 @@ description = Provides base functionality for one-click login with eg. Facebook
 core = 7.x
 package = "Connector"
 
-; Information added by drupal.org packaging script on 2013-02-25
-version = "7.x-1.0-beta2+0-dev"
+; Information added by drupal.org packaging script on 2013-02-24
+version = "7.x-1.0-beta2"
 core = "7.x"
 project = "connector"
-datestamp = "1361753033"
+datestamp = "1361736072"
 
diff --git a/profiles/commons/modules/contrib/connector/modules/connector_action_default_register_form/connector_action_default_register_form.info b/profiles/commons/modules/contrib/connector/modules/connector_action_default_register_form/connector_action_default_register_form.info
index a585e68..2a75165 100644
--- a/profiles/commons/modules/contrib/connector/modules/connector_action_default_register_form/connector_action_default_register_form.info
+++ b/profiles/commons/modules/contrib/connector/modules/connector_action_default_register_form/connector_action_default_register_form.info
@@ -3,9 +3,9 @@ description = "Adepts the default action for new accounts."
 core = 7.x
 package = "Connector Action"
 dependencies[] = connector
-; Information added by drupal.org packaging script on 2013-02-25
-version = "7.x-1.0-beta2+0-dev"
+; Information added by drupal.org packaging script on 2013-02-24
+version = "7.x-1.0-beta2"
 core = "7.x"
 project = "connector"
-datestamp = "1361753033"
+datestamp = "1361736072"
 
diff --git a/profiles/commons/modules/contrib/ctools/API.txt b/profiles/commons/modules/contrib/ctools/API.txt
index 2df7e22..e0441d6 100644
--- a/profiles/commons/modules/contrib/ctools/API.txt
+++ b/profiles/commons/modules/contrib/ctools/API.txt
@@ -1,8 +1,12 @@
-Current API Version: 2.0.5
+Current API Version: 2.0.8
 
 Please note that the API version is an internal number and does not match release numbers. It is entirely possible that releases will not increase the API version number, and increasing this number too often would burden contrib module maintainers who need to keep up with API changes.
 
 This file contains a log of changes to the API.
+API Version 2.0.8
+  Introduce ctools_class_add().
+  Introduce ctools_class_remove().
+
 API Version 2.0.7
   All ctools object cache database functions can now accept session_id as an optional
   argument to facilitate using non-session id keys.
diff --git a/profiles/commons/modules/contrib/ctools/bulk_export/bulk_export.info b/profiles/commons/modules/contrib/ctools/bulk_export/bulk_export.info
index 6f57712..d27ea9a 100644
--- a/profiles/commons/modules/contrib/ctools/bulk_export/bulk_export.info
+++ b/profiles/commons/modules/contrib/ctools/bulk_export/bulk_export.info
@@ -4,9 +4,9 @@ core = 7.x
 dependencies[] = ctools
 package = Chaos tool suite
 
-; Information added by drupal.org packaging script on 2012-08-18
-version = "7.x-1.2"
+; Information added by drupal.org packaging script on 2013-04-03
+version = "7.x-1.3"
 core = "7.x"
 project = "ctools"
-datestamp = "1345319204"
+datestamp = "1365013512"
 
diff --git a/profiles/commons/modules/contrib/ctools/css/button.css b/profiles/commons/modules/contrib/ctools/css/button.css
index 91a6044..15e484b 100644
--- a/profiles/commons/modules/contrib/ctools/css/button.css
+++ b/profiles/commons/modules/contrib/ctools/css/button.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 .ctools-button-processed {
   border-style: solid;
@@ -29,4 +28,4 @@
 .ctools-button li a {
   padding-left: 12px;
   padding-right: 12px;
-}
\ No newline at end of file
+}
diff --git a/profiles/commons/modules/contrib/ctools/css/dropbutton.css b/profiles/commons/modules/contrib/ctools/css/dropbutton.css
index 7825111..5e3ea24 100644
--- a/profiles/commons/modules/contrib/ctools/css/dropbutton.css
+++ b/profiles/commons/modules/contrib/ctools/css/dropbutton.css
@@ -1,4 +1,3 @@
-/* $Id$ */
 
 .ctools-dropbutton-processed {
   padding-right: 18px;
diff --git a/profiles/commons/modules/contrib/ctools/ctools.api.php b/profiles/commons/modules/contrib/ctools/ctools.api.php
index 1aef57c..a7ab783 100644
--- a/profiles/commons/modules/contrib/ctools/ctools.api.php
+++ b/profiles/commons/modules/contrib/ctools/ctools.api.php
@@ -203,5 +203,66 @@ function hook_ctools_content_subtype_alter($subtype, $plugin) {
 }
 
 /**
+ * Alter the definition of an entity context plugin.
+ *
+ * @param array $plugin
+ *   An associative array defining a plugin.
+ * @param array $entity
+ *   The entity info array of a specific entity type.
+ * @param string $plugin_id
+ *   The plugin ID, in the format NAME:KEY.
+ */
+function hook_ctools_entity_context_alter(&$plugin, &$entity, $plugin_id) {
+  ctools_include('context');
+  switch ($plugin_id) {
+    case 'entity_id:taxonomy_term':
+      $plugin['no ui'] = TRUE;
+    case 'entity:user':
+      $plugin = ctools_get_context('user');
+      unset($plugin['no ui']);
+      unset($plugin['no required context ui']);
+      break;
+  }
+}
+
+/**
+ * Alter the definition of entity context plugins.
+ *
+ * @param array $plugins
+ *   An associative array of plugin definitions, keyed by plugin ID.
+ *
+ * @see hook_ctools_entity_context_alter()
+ */
+function hook_ctools_entity_contexts_alter(&$plugins) {
+  $plugins['entity_id:taxonomy_term']['no ui'] = TRUE;
+}
+
+/**
+ * Change cleanstring settings.
+ *
+ * @param array $settings
+ *   An associative array of cleanstring settings.
+ *
+ * @see ctools_cleanstring()
+ */
+function hook_ctools_cleanstring_alter(&$settings) {
+  // Convert all strings to lower case.
+  $settings['lower case'] = TRUE;
+}
+
+/**
+ * Change cleanstring settings for a specific clean ID.
+ *
+ * @param array $settings
+ *   An associative array of cleanstring settings.
+ *
+ * @see ctools_cleanstring()
+ */
+function hook_ctools_cleanstring_CLEAN_ID_alter(&$settings) {
+  // Convert all strings to lower case.
+  $settings['lower case'] = TRUE;
+}
+
+/**
  * @} End of "addtogroup hooks".
  */
diff --git a/profiles/commons/modules/contrib/ctools/ctools.info b/profiles/commons/modules/contrib/ctools/ctools.info
index c3e56fb..8a7b0b6 100644
--- a/profiles/commons/modules/contrib/ctools/ctools.info
+++ b/profiles/commons/modules/contrib/ctools/ctools.info
@@ -6,9 +6,9 @@ files[] = includes/context.inc
 files[] = includes/math-expr.inc
 files[] = includes/stylizer.inc
 
-; Information added by drupal.org packaging script on 2012-08-18
-version = "7.x-1.2"
+; Information added by drupal.org packaging script on 2013-04-03
+version = "7.x-1.3"
 core = "7.x"
 project = "ctools"
-datestamp = "1345319204"
+datestamp = "1365013512"
 
diff --git a/profiles/commons/modules/contrib/ctools/ctools.install b/profiles/commons/modules/contrib/ctools/ctools.install
index 4a6f55c..1f961f1 100644
--- a/profiles/commons/modules/contrib/ctools/ctools.install
+++ b/profiles/commons/modules/contrib/ctools/ctools.install
@@ -26,7 +26,7 @@ function ctools_requirements($phase) {
     }
 
     if (!function_exists('error_get_last')) {
-  	  $requirements['ctools_php_52']['title'] = t('CTools PHP requirements');
+      $requirements['ctools_php_52']['title'] = t('CTools PHP requirements');
       $requirements['ctools_php_52']['description'] = t('CTools requires certain features only available in PHP 5.2.0 or higher.');
       $requirements['ctools_php_52']['severity'] = REQUIREMENT_WARNING;
       $requirements['ctools_php_52']['value'] = t('PHP !version', array('!version' => phpversion()));
@@ -52,6 +52,14 @@ function ctools_schema_2() {
   // update the 'name' field to be 128 bytes long:
   $schema['ctools_object_cache']['fields']['name']['length'] = 128;
 
+  // Update the 'data' field to be type 'blob'.
+  $schema['ctools_object_cache']['fields']['data'] = array(
+    'type' => 'blob',
+    'size' => 'big',
+    'description' => 'Serialized data being stored.',
+    'serialize' => TRUE,
+  );
+
   // DO NOT MODIFY THIS TABLE -- this definition is used to create the table.
   // Changes to this table must be made in schema_3 or higher.
   $schema['ctools_css_cache'] = array(
@@ -194,4 +202,18 @@ function ctools_update_6007() {
   return $ret;
 }
 
-
+/**
+ * ctools_object_cache needs to be defined as a blob.
+ */
+function ctools_update_6008() {
+  db_delete('ctools_object_cache')
+    ->execute();
+
+  db_change_field('ctools_object_cache', 'data', 'data', array(
+      'type' => 'blob',
+      'size' => 'big',
+      'description' => 'Serialized data being stored.',
+      'serialize' => TRUE,
+    )
+  );
+}
diff --git a/profiles/commons/modules/contrib/ctools/ctools.module b/profiles/commons/modules/contrib/ctools/ctools.module
index 7dfc989..f014e74 100644
--- a/profiles/commons/modules/contrib/ctools/ctools.module
+++ b/profiles/commons/modules/contrib/ctools/ctools.module
@@ -367,6 +367,52 @@ function ctools_set_no_blocks($blocks = FALSE) {
   $status = $blocks;
 }
 
+/**
+ * Add an array of classes to the body.
+ *
+ * @param mixed $classes
+ *   A string or an array of class strings to add.
+ * @param string $hook
+ *   The theme hook to add the class to. The default is 'html' which will
+ *   affect the body tag.
+ */
+function ctools_class_add($classes, $hook = 'html') {
+  if (!is_array($classes)) {
+    $classes = array($classes);
+  }
+
+  $static = &drupal_static('ctools_process_classes', array());
+  if (!isset($static[$hook]['add'])) {
+    $static[$hook]['add'] = array();
+  }
+  foreach ($classes as $class) {
+    $static[$hook]['add'][] = $class;
+  }
+}
+
+/**
+ * Remove an array of classes from the body.
+ *
+ * @param mixed $classes
+ *   A string or an array of class strings to remove.
+ * @param string $hook
+ *   The theme hook to remove the class from. The default is 'html' which will
+ *   affect the body tag.
+ */
+function ctools_class_remove($classes, $hook = 'html') {
+  if (!is_array($classes)) {
+    $classes = array($classes);
+  }
+
+  $static = &drupal_static('ctools_process_classes', array());
+  if (!isset($static[$hook]['remove'])) {
+    $static[$hook]['remove'] = array();
+  }
+  foreach ($classes as $class) {
+    $static[$hook]['remove'][] = $class;
+  }
+}
+
 // -----------------------------------------------------------------------
 // Drupal core hooks
 
@@ -574,6 +620,36 @@ function ctools_page_token_processing($children, $elements) {
   return $children;
 }
 
+/**
+ * Implements hook_process().
+ *
+ * Add and remove CSS classes from the variables array. We use process so that
+ * we alter anything added in the preprocess hooks.
+ */
+function ctools_process(&$variables, $hook) {
+  if (!isset($variables['classes'])) {
+    return;
+  }
+
+  $classes = drupal_static('ctools_process_classes', array());
+
+  // Process the classses to add.
+  if (!empty($classes[$hook]['add'])) {
+    $add_classes = array_map('drupal_clean_css_identifier', $classes[$hook]['add']);
+    $variables['classes_array'] = array_unique(array_merge($variables['classes_array'], $add_classes));
+  }
+
+  // Process the classes to remove.
+  if (!empty($classes[$hook]['remove'])) {
+    $remove_classes = array_map('drupal_clean_css_identifier', $classes[$hook]['remove']);
+    $variables['classes_array'] = array_diff($variables['classes_array'], $remove_classes);
+  }
+
+  // Since this runs after template_process(), we need to re-implode the
+  // classes array.
+  $variables['classes'] = implode(' ', $variables['classes_array']);
+}
+
 // -----------------------------------------------------------------------
 // Menu callbacks that must be in the .module file.
 
@@ -699,22 +775,6 @@ function ctools_export_ui_task_access($plugin_name, $op, $item = NULL) {
 }
 
 /**
- * Cache callback on behalf of ctools_export_ui.
- */
-function ctools_export_ui_context_cache_get($plugin_name, $key) {
-  dsm('should not be called!');
-  return;
-}
-
-/**
- * Cache callback on behalf of ctools_export_ui.
- */
-function ctools_export_ui_context_cache_set($plugin_name, $key, $item) {
-  dsm('should not be called!');
-  return;
-}
-
-/**
  * Callback for access control ajax form on behalf of export ui.
  *
  * Returns the cached access config and contexts used.
@@ -815,6 +875,9 @@ function ctools_ajax_theme_callback() {
   }
 }
 
+/**
+ * Implements hook_ctools_entity_context_alter().
+ */
 function ctools_ctools_entity_context_alter(&$plugin, &$entity, $plugin_id) {
   ctools_include('context');
   switch ($plugin_id) {
diff --git a/profiles/commons/modules/contrib/ctools/ctools_access_ruleset/ctools_access_ruleset.info b/profiles/commons/modules/contrib/ctools/ctools_access_ruleset/ctools_access_ruleset.info
index 04c92c3..1019253 100644
--- a/profiles/commons/modules/contrib/ctools/ctools_access_ruleset/ctools_access_ruleset.info
+++ b/profiles/commons/modules/contrib/ctools/ctools_access_ruleset/ctools_access_ruleset.info
@@ -4,9 +4,9 @@ core = 7.x
 package = Chaos tool suite
 dependencies[] = ctools
 
-; Information added by drupal.org packaging script on 2012-08-18
-version = "7.x-1.2"
+; Information added by drupal.org packaging script on 2013-04-03
+version = "7.x-1.3"
 core = "7.x"
 project = "ctools"
-datestamp = "1345319204"
+datestamp = "1365013512"
 
diff --git a/profiles/commons/modules/contrib/ctools/ctools_access_ruleset/ctools_access_ruleset.install b/profiles/commons/modules/contrib/ctools/ctools_access_ruleset/ctools_access_ruleset.install
index b1613d8..3f00877 100644
--- a/profiles/commons/modules/contrib/ctools/ctools_access_ruleset/ctools_access_ruleset.install
+++ b/profiles/commons/modules/contrib/ctools/ctools_access_ruleset/ctools_access_ruleset.install
@@ -17,7 +17,7 @@ function ctools_access_ruleset_schema_1() {
       'bulk export' => TRUE,
       'primary key' => 'rsid',
       'api' => array(
-        'owner' => 'ctools',
+        'owner' => 'ctools_access_ruleset',
         'api' => 'ctools_rulesets',
         'minimum_version' => 1,
         'current_version' => 1,
diff --git a/profiles/commons/modules/contrib/ctools/ctools_ajax_sample/ctools_ajax_sample.info b/profiles/commons/modules/contrib/ctools/ctools_ajax_sample/ctools_ajax_sample.info
index bbf708c..03ccb34 100644
--- a/profiles/commons/modules/contrib/ctools/ctools_ajax_sample/ctools_ajax_sample.info
+++ b/profiles/commons/modules/contrib/ctools/ctools_ajax_sample/ctools_ajax_sample.info
@@ -4,9 +4,9 @@ package = Chaos tool suite
 dependencies[] = ctools
 core = 7.x
 
-; Information added by drupal.org packaging script on 2012-08-18
-version = "7.x-1.2"
+; Information added by drupal.org packaging script on 2013-04-03
+version = "7.x-1.3"
 core = "7.x"
 project = "ctools"
-datestamp = "1345319204"
+datestamp = "1365013512"
 
diff --git a/profiles/commons/modules/contrib/ctools/ctools_custom_content/ctools_custom_content.info b/profiles/commons/modules/contrib/ctools/ctools_custom_content/ctools_custom_content.info
index b56e3be..d9c4567 100644
--- a/profiles/commons/modules/contrib/ctools/ctools_custom_content/ctools_custom_content.info
+++ b/profiles/commons/modules/contrib/ctools/ctools_custom_content/ctools_custom_content.info
@@ -4,9 +4,9 @@ core = 7.x
 package = Chaos tool suite
 dependencies[] = ctools
 
-; Information added by drupal.org packaging script on 2012-08-18
-version = "7.x-1.2"
+; Information added by drupal.org packaging script on 2013-04-03
+version = "7.x-1.3"
 core = "7.x"
 project = "ctools"
-datestamp = "1345319204"
+datestamp = "1365013512"
 
diff --git a/profiles/commons/modules/contrib/ctools/ctools_plugin_example/ctools_plugin_example.info b/profiles/commons/modules/contrib/ctools/ctools_plugin_example/ctools_plugin_example.info
index c9f12e7..e4fa534 100644
--- a/profiles/commons/modules/contrib/ctools/ctools_plugin_example/ctools_plugin_example.info
+++ b/profiles/commons/modules/contrib/ctools/ctools_plugin_example/ctools_plugin_example.info
@@ -7,9 +7,9 @@ dependencies[] = page_manager
 dependencies[] = advanced_help
 core = 7.x
 
-; Information added by drupal.org packaging script on 2012-08-18
-version = "7.x-1.2"
+; Information added by drupal.org packaging script on 2013-04-03
+version = "7.x-1.3"
 core = "7.x"
 project = "ctools"
-datestamp = "1345319204"
+datestamp = "1365013512"
 
diff --git a/profiles/commons/modules/contrib/ctools/ctools_plugin_example/ctools_plugin_example.module b/profiles/commons/modules/contrib/ctools/ctools_plugin_example/ctools_plugin_example.module
index 442969d..01d5338 100644
--- a/profiles/commons/modules/contrib/ctools/ctools_plugin_example/ctools_plugin_example.module
+++ b/profiles/commons/modules/contrib/ctools/ctools_plugin_example/ctools_plugin_example.module
@@ -85,8 +85,8 @@ function ctools_plugin_example_explanation_page() {
     You can find it in %path.',
     array(
       '@demo_url' => url('ctools_plugin_example/xxxxx'),
-      '!ctools_plugin_example_help' => theme('advanced_help_topic', 'ctools_plugin_example', 'Chaos-Tools--CTools--Plugin-Examples', 'title'),
-      '!ctools_help' => theme('advanced_help_topic', 'ctools', 'plugins', 'title'),
+      '!ctools_plugin_example_help' => theme('advanced_help_topic', array('module' => 'ctools_plugin_example', 'topic' => 'Chaos-Tools--CTools--Plugin-Examples', 'type' => 'title')),
+      '!ctools_help' => theme('advanced_help_topic', array('module' => 'ctools', 'topic' => 'plugins', 'type' => 'title')),
       '%path' => drupal_get_path('module', 'ctools_plugin_example'),
     )) . '</p>';
 
diff --git a/profiles/commons/modules/contrib/ctools/ctools_plugin_example/plugins/content_types/no_context_content_type.inc b/profiles/commons/modules/contrib/ctools/ctools_plugin_example/plugins/content_types/no_context_content_type.inc
index 8b73408..3c02ab8 100644
--- a/profiles/commons/modules/contrib/ctools/ctools_plugin_example/plugins/content_types/no_context_content_type.inc
+++ b/profiles/commons/modules/contrib/ctools/ctools_plugin_example/plugins/content_types/no_context_content_type.inc
@@ -53,8 +53,8 @@ $plugin = array(
 function no_context_content_type_render($subtype, $conf, $args, $context) {
   $block = new stdClass();
 
-  $ctools_help = theme('advanced_help_topic', 'ctools', 'plugins', 'title');
-  $ctools_plugin_example_help = theme('advanced_help_topic', 'ctools_plugin_example', 'Chaos-Tools--CTools--Plugin-Examples', 'title');
+  $ctools_help = theme('advanced_help_topic', array('module' => 'ctools', 'topic' => 'plugins', 'type' => 'title'));
+  $ctools_plugin_example_help = theme('advanced_help_topic', array('module' => 'ctools_plugin_example', 'topic' => 'Chaos-Tools--CTools--Plugin-Examples', 'type' => 'title'));
 
   // The title actually used in rendering
   $block->title = check_plain("No-context content type");
diff --git a/profiles/commons/modules/contrib/ctools/drush/ctools.drush.inc b/profiles/commons/modules/contrib/ctools/drush/ctools.drush.inc
index bf1df1f..1862dbe 100644
--- a/profiles/commons/modules/contrib/ctools/drush/ctools.drush.inc
+++ b/profiles/commons/modules/contrib/ctools/drush/ctools.drush.inc
@@ -381,6 +381,7 @@ function ctools_drush_export_info() {
 
   // Get info on these tables, or all tables if none specified.
   $info = _ctools_drush_export_info($table_names, $load);
+  $schemas = $info['schemas'];
   $exportables = $info['exportables'];
 
   if (empty($exportables)) {
@@ -416,11 +417,12 @@ function ctools_drush_export_info() {
   }
   // Build a tabular output as default.
   else {
-    $header = $tables_only ? array() : array(dt('Base table'), dt('Exportables'));
+    $header = $tables_only ? array() : array(dt('Module'), dt('Base table'), dt('Exportables'));
     $rows = array();
     foreach ($exportables as $table => $info) {
       if (is_array($info)) {
         $row = array(
+          $schemas[$table]['module'],
           $table,
           // Machine name is better for this?
           shellColours::getColouredOutput(implode("\n", array_keys($info)), 'light_green') . "\n",
@@ -434,7 +436,7 @@ function ctools_drush_export_info() {
     if (!empty($rows)) {
       drush_print("\n");
       array_unshift($rows, $header);
-      drush_print_table($rows, TRUE, array(20));
+      drush_print_table($rows, TRUE, array(20, 20));
       drush_print(dt('Total exportables found: !total', array('!total' => $exportable_counts['total'])));
       foreach ($exportable_counts['exportables'] as $table_name => $count) {
         drush_print(dt('!table_name (!count)', array('!table_name' => $table_name, '!count' => $count)), 2);
diff --git a/profiles/commons/modules/contrib/ctools/help/plugins-implementing.html b/profiles/commons/modules/contrib/ctools/help/plugins-implementing.html
index 070f08d..c95e72d 100644
--- a/profiles/commons/modules/contrib/ctools/help/plugins-implementing.html
+++ b/profiles/commons/modules/contrib/ctools/help/plugins-implementing.html
@@ -1,6 +1,7 @@
-<p>To implement plugins, you need to implement a single hook in your module to tell the system where your plugins live, and then you need to implement one or more .inc files that contain the plugin data.</p>
+<p>There are two parts to implementing a plugin: telling the system where it is, and implementing one or more .inc files that contain the plugin data.</p>
 
-<h2>Telling it where your plugins live</h2>
+<h2>Telling the system where your plugins live</h2>
+<h3>How a module implements plugins</h3>
 <p>To implement any plugins at all, you must implement a single function for all plugins: <strong>hook_ctools_plugin_directory</strong>. Every time a module loads plugins, this hook will be called to see which modules implement those plugins and in what directory those plugins will live.</p>
 
 <pre>
@@ -30,13 +31,13 @@ plugins/
         my_content_type.inc
     layouts/
         my_layout.inc
-        my_laout.css
+        my_layout.css
         my_layout.tpl.php
         my_layout_image.png
 </pre>
 
-<h2>How a theme can implement plugins</h2>
-<p>Themes can implement plugins if the plugin owner specified that it's possible in its hook_ctools_api_TYPE() call. If so, it is generally exactly the same as modules, except for one important difference: themes don't get hook_ctools_plugin_directory(). Instead, themes add a line to their info file:</p>
+<h3>How a theme implements plugins</h3>
+<p>Themes can implement plugins if the plugin owner specified that it's possible in its hook_ctools_plugin_type() call. If so, it is generally exactly the same as modules, except for one important difference: themes don't get hook_ctools_plugin_directory(). Instead, themes add a line to their .info file:</p>
 
 <pre>
 plugins[module][type] = directory
@@ -54,7 +55,7 @@ $plugin = array(
 );
 </pre>
 
-<p>Several values will be filled in for you automatically, but you can override them if necessary. They include 'name', 'path', 'file' and 'module'. Additionally, the plugin can owner can provide other defaults as well.</p>
+<p>Several values will be filled in for you automatically, but you can override them if necessary. They include 'name', 'path', 'file' and 'module'. Additionally, the plugin owner can provide other defaults as well.</p>
 
 <p>There are no required keys by the plugin system itself. The only requirements in the $plugin array will be defined by the plugin type.</p>
 
diff --git a/profiles/commons/modules/contrib/ctools/help/plugins.html b/profiles/commons/modules/contrib/ctools/help/plugins.html
index b948411..1e64da0 100644
--- a/profiles/commons/modules/contrib/ctools/help/plugins.html
+++ b/profiles/commons/modules/contrib/ctools/help/plugins.html
@@ -1,5 +1,5 @@
 <p>The plugins tool allows a module to allow <b>other</b> modules (and themes!) to provide plugins which provide some kind of functionality or some kind of task. For example, in Panels there are several types of plugins: Content types (which are like blocks), layouts (which are page layouts) and styles (which can be used to style a panel). Each plugin is represented by a .inc file, and the functionality they offer can differ wildly.</p>
 
-<p>A module which uses plugins can implement a hook describing the plugin (which is not necessary, as defaults will be filled in) and then calls a ctools function which loads either all the known plugins (used for listing/choosing) or loads a specific plugin (used when its known which plugin is needed). From the perspective of the plugin system, a plugin is a packet of data, usually some printable info and a list of callbacks. It is up to the module implementing plugins to determine what that info means and what the callbacks do.</p>
+<p>A module which uses plugins can implement a hook describing the plugin (which is not necessary, as defaults will be filled in) and then calls a ctools function which loads either all the known plugins (used for listing/choosing) or a specific plugin (used when it's known which plugin is needed). From the perspective of the plugin system, a plugin is a packet of data, usually some printable info and a list of callbacks. It is up to the module implementing plugins to determine what that info means and what the callbacks do.</p>
 
-<p>A module which implements plugins must first implement the <strong>hook_ctools_plugin_directory</strong> function, which simply tells the system which plugins are supported and what directory to look in. Each plugin will then be in a .inc file in the directory supplied. The .inc file will contain a specially named hook which returns the data necessary to implement the plugin.</p>
\ No newline at end of file
+<p>A module which implements plugins must first implement the <strong>hook_ctools_plugin_directory</strong> function, which simply tells the system which plugins are supported and what directory to look in. Each plugin will then be in a separate .inc file in the directory supplied. The .inc file will contain a specially named hook which returns the data necessary to implement the plugin.</p>
diff --git a/profiles/commons/modules/contrib/ctools/includes/action-links.theme.inc b/profiles/commons/modules/contrib/ctools/includes/action-links.theme.inc
new file mode 100644
index 0000000..3a2398a
--- /dev/null
+++ b/profiles/commons/modules/contrib/ctools/includes/action-links.theme.inc
@@ -0,0 +1,33 @@
+<?php
+/**
+ * @file
+ * Theme function for wrapping menu local actions.
+ */
+
+/**
+ * Delegated implementation of hook_theme()
+ */
+function ctools_action_links_theme(&$items) {
+  $items['ctools_menu_local_actions_wrapper'] = array(
+    'render element' => 'links',
+    'file' => 'includes/action-links.theme.inc',
+  );
+}
+
+/**
+ * Render a menu local actions wrapper.
+ *
+ * @param $links
+ *   Local actions links.
+ * @param $attributes
+ *   An array of attributes to append to the wrapper.
+ */
+function theme_ctools_menu_local_actions_wrapper($variables) {
+  $links = drupal_render($variables['links']);
+
+  if (empty($links)) {
+    return;
+  }
+
+  return '<ul class="action-links">' . $links . '</ul>';
+}
\ No newline at end of file
diff --git a/profiles/commons/modules/contrib/ctools/includes/content.menu.inc b/profiles/commons/modules/contrib/ctools/includes/content.menu.inc
index 11a686a..93884fc 100644
--- a/profiles/commons/modules/contrib/ctools/includes/content.menu.inc
+++ b/profiles/commons/modules/contrib/ctools/includes/content.menu.inc
@@ -50,6 +50,21 @@ function ctools_content_autocomplete_entity($type, $string = '') {
 
     $matches = array();
     if ($type == 'node') {
+      if (!user_access('bypass node access')) {
+        // If the user is able to view their own unpublished nodes, allow them
+        // to see these in addition to published nodes.
+        if (user_access('view own unpublished content')) {
+          $query->condition(db_or()
+            ->condition('b.status', NODE_PUBLISHED)
+            ->condition('b.uid', $GLOBALS['user']->uid)
+          );
+        }
+        else {
+          // If not, restrict the query to published nodes.
+          $query->condition('b.status', NODE_PUBLISHED);
+        }
+      }
+
       $query->addTag('node_access');
       $query->join('users', 'u', 'b.uid = u.uid');
       $query->addField('u', 'name', 'name');
diff --git a/profiles/commons/modules/contrib/ctools/includes/content.plugin-type.inc b/profiles/commons/modules/contrib/ctools/includes/content.plugin-type.inc
index 4c767ae..a0debc3 100644
--- a/profiles/commons/modules/contrib/ctools/includes/content.plugin-type.inc
+++ b/profiles/commons/modules/contrib/ctools/includes/content.plugin-type.inc
@@ -10,7 +10,7 @@ function ctools_content_plugin_type(&$items) {
     'cache' => FALSE,
     'process' => array(
       'function' => 'ctools_content_process',
-      'file' => 'export-ui.inc',
+      'file' => 'content.inc',
       'path' => drupal_get_path('module', 'ctools') . '/includes',
     ),
   );
diff --git a/profiles/commons/modules/contrib/ctools/includes/context-task-handler.inc b/profiles/commons/modules/contrib/ctools/includes/context-task-handler.inc
index 617f20e..37aa6df 100644
--- a/profiles/commons/modules/contrib/ctools/includes/context-task-handler.inc
+++ b/profiles/commons/modules/contrib/ctools/includes/context-task-handler.inc
@@ -143,6 +143,10 @@ function ctools_context_handler_render_handler($task, $subtask, $handler, $conte
         return MENU_ACCESS_DENIED;
       case 404:
         return MENU_NOT_FOUND;
+      case 410:
+        drupal_add_http_header('Status', '410 Gone');
+        drupal_exit();
+        break;
       case 301:
       case 302:
       case 303:
@@ -451,7 +455,7 @@ function ctools_context_handler_edit_criteria($form, &$form_state) {
   ctools_include('ajax');
   ctools_modal_add_plugin_js(ctools_get_access_plugins());
   ctools_include('context-access-admin');
-  $form_state['module'] = 'page_manager_task_handler';
+  $form_state['module'] = (isset($form_state['module'])) ? $form_state['module'] : 'page_manager_task_handler';
   // Encode a bunch of info into the argument so we can get our cache later
   $form_state['callback argument'] = $form_state['task_name'] . '*' . $form_state['handler']->name;
   $form_state['access'] = $form_state['handler']->conf['access'];
diff --git a/profiles/commons/modules/contrib/ctools/includes/context.inc b/profiles/commons/modules/contrib/ctools/includes/context.inc
index 5c7a4ce..93be748 100644
--- a/profiles/commons/modules/contrib/ctools/includes/context.inc
+++ b/profiles/commons/modules/contrib/ctools/includes/context.inc
@@ -508,6 +508,17 @@ function ctools_context_get_all_converters() {
 
 /**
  * Let the context convert an argument based upon the converter that was given.
+ *
+ * @param $context
+ *   The context object
+ * @param $converter
+ *   The converter to use, which should be a string provided by the converter list.
+ * @param $converter_options
+ *   A n array of options to pass on to the generation function. For contexts
+ *   that use token module, of particular use is 'sanitize' => FALSE which can
+ *   get raw tokens. This should ONLY be used in values that will later be
+ *   treated as unsafe user input since these values are by themselves unsafe.
+ *   It is particularly useful to get raw values from Field API.
  */
 function ctools_context_convert_context($context, $converter, $converter_options = array()) {
   // Contexts without plugins might be optional placeholders.
@@ -633,7 +644,7 @@ function ctools_context_keyword_substitute($string, $keywords, $contexts, $conve
 
   // Look for context matches we we only have to convert known matches.
   $matches = array();
-  if (preg_match_all('/%(%|[a-zA-Z0-9_-]+(?:\:[a-zA-Z0-9_-]+)?)/us', $string, $matches)) {
+  if (preg_match_all('/%(%|[a-zA-Z0-9_-]+(?:\:[a-zA-Z0-9_-]+)*)/us', $string, $matches)) {
     foreach ($matches[1] as $keyword) {
       // Ignore anything it finds with %%.
       if ($keyword[0] == '%') {
diff --git a/profiles/commons/modules/contrib/ctools/includes/dropbutton.theme.inc b/profiles/commons/modules/contrib/ctools/includes/dropbutton.theme.inc
index 0848666..fcdd5a3 100644
--- a/profiles/commons/modules/contrib/ctools/includes/dropbutton.theme.inc
+++ b/profiles/commons/modules/contrib/ctools/includes/dropbutton.theme.inc
@@ -1,10 +1,11 @@
 <?php
-// $Id$
 
 /**
  * @file
  * Provide a javascript based dropbutton menu.
  *
+ * An example are the edit/disable/delete links on the views listing page.
+ *
  * The dropbutton menu will show up as a button with a clickable twisty pointer
  * to the right. When clicked the button will expand, showing the list of links.
  *
diff --git a/profiles/commons/modules/contrib/ctools/includes/dropdown.theme.inc b/profiles/commons/modules/contrib/ctools/includes/dropdown.theme.inc
index 2e21559..7e748f5 100644
--- a/profiles/commons/modules/contrib/ctools/includes/dropdown.theme.inc
+++ b/profiles/commons/modules/contrib/ctools/includes/dropdown.theme.inc
@@ -4,6 +4,9 @@
  * @file
  * Provide a javascript based dropdown menu.
  *
+ * An example are the dropdown settings in the panels ui, like for adding
+ * new panes.
+ *
  * The dropdown menu will show up as a clickable link; when clicked,
  * a small menu will slide down beneath it, showing the list of links.
  *
diff --git a/profiles/commons/modules/contrib/ctools/includes/fields.inc b/profiles/commons/modules/contrib/ctools/includes/fields.inc
index dcd6139..162262c 100644
--- a/profiles/commons/modules/contrib/ctools/includes/fields.inc
+++ b/profiles/commons/modules/contrib/ctools/includes/fields.inc
@@ -170,6 +170,8 @@ function ctools_field_label($field_name) {
  *
  * @param $field_name
  *   Either a field instance object or the name of the field.
+ *   If the 'field' key is populated it will be used as the field
+ *   settings.
  * @param $op
  *   Possible operations include:
  *   - form
@@ -222,6 +224,7 @@ function ctools_field_label($field_name) {
 function ctools_field_invoke_field($field_name, $op, $entity_type, $entity, &$a = NULL, &$b = NULL, $options = array()) {
   if (is_array($field_name)) {
     $instance = $field_name;
+    $field = empty($field_name['field']) ? field_info_field($instance['field_name']) : $field_name['field'];
     $field_name = $instance['field_name'];
   }
   else {
@@ -245,7 +248,6 @@ function ctools_field_invoke_field($field_name, $op, $entity_type, $entity, &$a
 
   // Everything from here is unmodified code from _field_invoke() formerly
   // inside a foreach loop over the instances.
-  $field = field_info_field($field_name);
   $function = $options['default'] ? 'field_default_' . $op : $field['module'] . '_field_' . $op;
   if (function_exists($function)) {
     // Determine the list of languages to iterate on.
diff --git a/profiles/commons/modules/contrib/ctools/includes/plugins.inc b/profiles/commons/modules/contrib/ctools/includes/plugins.inc
index 2dbdd48..0363fcb 100644
--- a/profiles/commons/modules/contrib/ctools/includes/plugins.inc
+++ b/profiles/commons/modules/contrib/ctools/includes/plugins.inc
@@ -440,7 +440,7 @@ function ctools_plugin_load_includes($info, $filename = NULL) {
       $all_files[$info['module']][$info['type']] = array();
       // Load all our plugins.
       $directories = ctools_plugin_get_directories($info);
-      $extension = empty($info['info file']) ? $info['extension'] : 'info';
+      $extension = (empty($info['info file']) || ($info['extension'] != 'inc')) ? $info['extension'] : 'info';
 
       foreach ($directories as $module => $path) {
         $all_files[$info['module']][$info['type']][$module] = file_scan_directory($path, '/\.' . $extension . '$/', array('key' => 'name'));
diff --git a/profiles/commons/modules/contrib/ctools/js/auto-submit.js b/profiles/commons/modules/contrib/ctools/js/auto-submit.js
index 890dd1f..a3e9aa4 100644
--- a/profiles/commons/modules/contrib/ctools/js/auto-submit.js
+++ b/profiles/commons/modules/contrib/ctools/js/auto-submit.js
@@ -45,11 +45,11 @@ Drupal.behaviors.CToolsAutoSubmit = {
     // the change event bubbles so we only need to bind it to the outer form
     $('form.ctools-auto-submit-full-form', context)
       .add('.ctools-auto-submit', context)
-      .filter('form, select, input:not(:text, :submit, .ctools-auto-submit-exclude)')
+      .filter('form, select, input:not(:text, :submit)')
       .once('ctools-auto-submit')
       .change(function (e) {
         // don't trigger on text change for full-form
-        if ($(e.target).is(':not(:text, :submit)')) {
+        if ($(e.target).is(':not(:text, :submit, .ctools-auto-submit-exclude)')) {
           triggerSubmit.call(e.target.form);
         }
       });
@@ -88,6 +88,11 @@ Drupal.behaviors.CToolsAutoSubmit = {
             if ($.inArray(e.keyCode, discardKeyCode) === -1) {
               timeoutID = setTimeout($.proxy(triggerSubmit, this.form), 500);
             }
+          })
+          .bind('change', function (e) {
+            if ($.inArray(e.keyCode, discardKeyCode) === -1) {
+              timeoutID = setTimeout($.proxy(triggerSubmit, this.form), 500);
+            }
           });
       });
   }
diff --git a/profiles/commons/modules/contrib/ctools/js/dropbutton.js b/profiles/commons/modules/contrib/ctools/js/dropbutton.js
index 49bc107..f505550 100644
--- a/profiles/commons/modules/contrib/ctools/js/dropbutton.js
+++ b/profiles/commons/modules/contrib/ctools/js/dropbutton.js
@@ -1,4 +1,3 @@
-// $Id$
 /**
  * @file
  * Implement a simple, clickable dropbutton menu.
diff --git a/profiles/commons/modules/contrib/ctools/js/modal.js b/profiles/commons/modules/contrib/ctools/js/modal.js
index 5b417d0..831649f 100644
--- a/profiles/commons/modules/contrib/ctools/js/modal.js
+++ b/profiles/commons/modules/contrib/ctools/js/modal.js
@@ -399,7 +399,7 @@
       }
 
       var parents = $(target).parents().get();
-      for (var i in $(target).parents().get()) {
+      for (var i = 0; i < parents.length; ++i) {
         var position = $(parents[i]).css('position');
         if (position == 'absolute' || position == 'fixed') {
           return true;
@@ -434,7 +434,7 @@
       }
     };
 
-    $(document).bind('keypress', modalEventEscapeCloseHandler);
+    $(document).bind('keydown', modalEventEscapeCloseHandler);
 
     // Close the open modal content and backdrop
     function close() {
diff --git a/profiles/commons/modules/contrib/ctools/page_manager/page_manager.admin.inc b/profiles/commons/modules/contrib/ctools/page_manager/page_manager.admin.inc
index c01961b..3dce041 100644
--- a/profiles/commons/modules/contrib/ctools/page_manager/page_manager.admin.inc
+++ b/profiles/commons/modules/contrib/ctools/page_manager/page_manager.admin.inc
@@ -158,7 +158,7 @@ function page_manager_get_pages($tasks, &$pages, $task_id = NULL) {
     $visible_path = '';
     if (!empty($task['admin path'])) {
       foreach (explode('/', $task['admin path']) as $bit) {
-        if ($bit[0] != '!') {
+        if (isset($bit[0]) && $bit[0] != '!') {
           $path[] = $bit;
         }
       }
@@ -1126,9 +1126,11 @@ function page_manager_render_operations(&$page, $operations, $active_trail, $att
     // We only render an li for things in the same nav tree.
     if (empty($operation['location']) || $operation['location'] == $location) {
       if (!is_array($attributes['class'])) {
-        dsm($attributes['class']);
+        $attributes['class'] = array($attributes['class']);
       }
+
       $class = empty($attributes['class']) || !is_array($attributes['class']) ? array() : $attributes['class'];
+
       if ($id == $first) {
         $class[] = 'operation-first';
       }
diff --git a/profiles/commons/modules/contrib/ctools/page_manager/page_manager.api.php b/profiles/commons/modules/contrib/ctools/page_manager/page_manager.api.php
new file mode 100644
index 0000000..03e2e75
--- /dev/null
+++ b/profiles/commons/modules/contrib/ctools/page_manager/page_manager.api.php
@@ -0,0 +1,39 @@
+<?php
+
+/**
+ * @file
+ * Describe hooks provided by the Page Manager module.
+ */
+
+/**
+ * @addtogroup hooks
+ * @{
+ */
+
+/**
+ * @todo.
+ *
+ * @param array $result
+ *   @todo.
+ * @param object $page
+ *   @todo.
+ */
+function hook_page_manager_operations_alter(&$result, &$page) {
+  // @todo.
+}
+
+/**
+ * @todo.
+ *
+ * @param array $operations
+ *   @todo.
+ * @param object $handler
+ *   @todo.
+ */
+function hook_page_manager_variant_operations_alter(&$operations, &$handler) {
+  // @todo.
+}
+
+/**
+ * @} End of "addtogroup hooks".
+ */
diff --git a/profiles/commons/modules/contrib/ctools/page_manager/page_manager.info b/profiles/commons/modules/contrib/ctools/page_manager/page_manager.info
index d3e3588..76095ff 100644
--- a/profiles/commons/modules/contrib/ctools/page_manager/page_manager.info
+++ b/profiles/commons/modules/contrib/ctools/page_manager/page_manager.info
@@ -4,9 +4,9 @@ core = 7.x
 dependencies[] = ctools
 package = Chaos tool suite
 
-; Information added by drupal.org packaging script on 2012-08-18
-version = "7.x-1.2"
+; Information added by drupal.org packaging script on 2013-04-03
+version = "7.x-1.3"
 core = "7.x"
 project = "ctools"
-datestamp = "1345319204"
+datestamp = "1365013512"
 
diff --git a/profiles/commons/modules/contrib/ctools/page_manager/page_manager.module b/profiles/commons/modules/contrib/ctools/page_manager/page_manager.module
index 62f6d27..da99a57 100644
--- a/profiles/commons/modules/contrib/ctools/page_manager/page_manager.module
+++ b/profiles/commons/modules/contrib/ctools/page_manager/page_manager.module
@@ -838,9 +838,6 @@ function page_manager_get_task_subtasks($task) {
     if (is_array($retval)) {
       return $retval;
     }
-    else {
-      dsm($retval);
-    }
   }
 
   return array();
diff --git a/profiles/commons/modules/contrib/ctools/page_manager/plugins/task_handlers/http_response.inc b/profiles/commons/modules/contrib/ctools/page_manager/plugins/task_handlers/http_response.inc
index c11dcd7..e5c0141 100644
--- a/profiles/commons/modules/contrib/ctools/page_manager/plugins/task_handlers/http_response.inc
+++ b/profiles/commons/modules/contrib/ctools/page_manager/plugins/task_handlers/http_response.inc
@@ -105,8 +105,9 @@ $plugin = array(
  */
 function page_manager_http_response_codes() {
   return array(
-    404 => t('404 Page not found'),
     403 => t('403 Access denied'),
+    404 => t('404 Page not found'),
+    410 => t('410 Gone'),
     301 => t('301 Redirect'),
   );
 }
@@ -282,4 +283,4 @@ function page_manager_http_response_render($handler, $base_contexts, $args, $tes
   }
 
   return $info;
-}
\ No newline at end of file
+}
diff --git a/profiles/commons/modules/contrib/ctools/page_manager/plugins/tasks/comment_reply.inc b/profiles/commons/modules/contrib/ctools/page_manager/plugins/tasks/comment_reply.inc
new file mode 100644
index 0000000..0fcf9e2
--- /dev/null
+++ b/profiles/commons/modules/contrib/ctools/page_manager/plugins/tasks/comment_reply.inc
@@ -0,0 +1,162 @@
+<?php
+/**
+ * Specialized implementation of hook_page_manager_task_tasks(). See api-task.html for
+ * more information.
+ */
+function page_manager_comment_reply_page_manager_tasks() {
+  if (!module_exists('comment')) {
+    return;
+  }
+
+  return array(
+    // This is a 'page' task and will fall under the page admin UI
+    'task type' => 'page',
+
+    'title' => t('Comment Reply page'),
+    'admin title' => t('Comment Reply page'),
+    'admin description' => t('When enabled, this overrides the default Drupal behavior for the site contact page at <em>/contact</em>. If no variant is selected, the default Drupal contact form will be used.'),
+    'admin path' => 'comment/reply/%node',
+
+    // Menu hooks so that we can alter the node/%node menu entry to point to us.
+    'hook menu alter' => 'page_manager_comment_reply_menu_alter',
+
+    // This is task uses 'context' handlers and must implement these to give the
+    // handler data it needs.
+    'handler type' => 'context',
+    'get arguments' => 'page_manager_comment_reply_get_arguments',
+    'get context placeholders' => 'page_manager_comment_reply_get_contexts',
+
+  // Allow this to be enabled or disabled:
+    'disabled' => variable_get('page_manager_comment_reply_disabled', TRUE),
+    'enable callback' => 'page_manager_comment_reply_enable',
+    'access callback' => 'page_manager_comment_reply_check',
+  );
+}
+
+/**
+ * Callback to enable/disable the page from the UI.
+ */
+function page_manager_comment_reply_enable($cache, $status) {
+  variable_set('page_manager_comment_reply_disabled', $status);
+  // Set a global flag so that the menu routine knows it needs
+  // to set a message if enabling cannot be done.
+  if (!$status) {
+    $GLOBALS['page_manager_enabling_comment_reply'] = TRUE;
+  }
+}
+
+
+/**
+ * Entry point for our overridden comment.
+ *
+ */
+function page_manager_comment_reply_page($node, $pid = NULL){
+    // Load my task plugin
+  $task = page_manager_get_task('comment_reply');
+
+  // Load the node into a context.
+  ctools_include('context');
+  ctools_include('context-task-handler');
+
+  $contexts = ctools_context_handler_get_task_contexts($task, '', array($node, $pid));
+
+  if (array_key_exists('argument_cid_3', $contexts) && $contexts['argument_cid_3']->data->nid != $node->nid) {
+    // Attempting to reply to a comment not belonging to the current nid.
+    drupal_set_message(t('The comment you are replying to does not exist.'), 'error');
+    drupal_goto("node/$node->nid");
+  }
+
+  $output = ctools_context_handler_render($task, '', $contexts, array($node, $pid));
+  if ($output != FALSE) {
+    return $output;
+  }
+
+  $function = 'comment_reply';
+  foreach (module_implements('page_manager_override') as $module) {
+    $call = $module . '_page_manager_override';
+    if (($rc = $call('comment_reply')) && function_exists($rc)) {
+      $function = $rc;
+      break;
+    }
+  }
+
+  module_load_include('inc', 'comment', 'comment.pages');
+  return $function($node, $pid);
+}
+
+/**
+ * Callback to get arguments provided by this task handler.
+ *
+ * Since this is the node view and there is no UI on the arguments, we
+ * create dummy arguments that contain the needed data.
+ */
+function page_manager_comment_reply_get_arguments($task, $subtask_id) {
+  return array(
+    array(
+      'keyword' => 'node',
+      'identifier' => t('Node being commented on'),
+      'id' => 2,
+      'name' => 'entity_id:node',
+      'settings' => array(),
+    ),
+    array(
+      'keyword' => 'comment',
+      'identifier' => t('Comment being replied to'),
+      'id' => 3,
+      'name' => 'entity_id:comment',
+      'settings' => array(),
+    ),
+  );
+}
+
+/**
+ * Callback to get context placeholders provided by this handler.
+ */
+function page_manager_comment_reply_get_contexts($task, $subtask_id) {
+  return ctools_context_get_placeholders_from_argument(page_manager_comment_reply_get_arguments($task, $subtask_id));
+}
+
+/**
+ * Callback defined by page_manager_node_view_page_manager_tasks().
+ *
+ * Alter the node view input so that node view comes to us rather than the
+ * normal node view process.
+ */
+function page_manager_comment_reply_menu_alter(&$items, $task) {
+  if (variable_get('page_manager_comment_reply_disabled', TRUE)) {
+    return;
+  }
+  // Override the node view handler for our purpose.
+  $callback = $items['comment/reply/%node']['page callback'];
+  if ($callback == 'comment_reply' || variable_get('page_manager_override_anyway', FALSE)) {
+    $items['comment/reply/%node']['page callback'] = 'page_manager_comment_reply_page';
+    $items['comment/reply/%node']['file path'] = $task['path'];
+    $items['comment/reply/%node']['file'] = $task['file'];
+  }
+  else {
+    // automatically disable this task if it cannot be enabled.
+    variable_set('page_manager_comment_reply_disabled', TRUE);
+    if (!empty($GLOBALS['page_manager_enabling_comment_reply'])) {
+      drupal_set_message(t('Page manager module is unable to enable comment/reply/%node because some other module already has overridden with %callback.', array('%callback' => $callback)), 'error');
+    }
+  }
+
+  // @todo override node revision handler as well?
+}
+
+/**
+ * Callback to determine if a page is accessible.
+ *
+ * @param $task
+ *   The task plugin.
+ * @param $subtask_id
+ *   The subtask id
+ * @param $contexts
+ *   The contexts loaded for the task.
+ * @return
+ *   TRUE if the current user can access the page.
+ */
+function page_manager_comment_reply_access_check($task, $subtask_id, $contexts) {
+  $context = reset($contexts);
+  return TRUE;
+}
diff --git a/profiles/commons/modules/contrib/ctools/page_manager/plugins/tasks/term_view.inc b/profiles/commons/modules/contrib/ctools/page_manager/plugins/tasks/term_view.inc
index 6933a54..e276570 100644
--- a/profiles/commons/modules/contrib/ctools/page_manager/plugins/tasks/term_view.inc
+++ b/profiles/commons/modules/contrib/ctools/page_manager/plugins/tasks/term_view.inc
@@ -106,44 +106,90 @@ function page_manager_term_view_menu_alter(&$items, $task) {
  * to run with it. If no one does, it passes through to Drupal core's
  * term view, which is term_page_view().
  */
-function page_manager_term_view_page($term) {
-  // Assign the term name as the page title, just as the original page
-  // callback did.
+function page_manager_term_view_page($term, $depth = NULL) {
+  // Prep the term to be displayed so all of the regular hooks are triggered.
+  // Rather than calling taxonomy_term_page() directly, as it that would
+  // potentially load nodes that were not necessary, execute some of the code
+  // prior to identifying the correct CTools or Page Manager task handler and
+  // only proceed with the rest of the code if necessary.
+
+  // Assign the term name as the page title.
   drupal_set_title($term->name);
 
-  // While we ordinarily should never actually get feeds through here,
-  // just in case
+  // If there is a menu link to this term, the link becomes the last part
+  // of the active trail, and the link name becomes the page title.
+  // Thus, we must explicitly set the page title to be the node title.
+  $uri = entity_uri('taxonomy_term', $term);
+
+  // Set the term path as the canonical URL to prevent duplicate content.
+  drupal_add_html_head_link(array('rel' => 'canonical', 'href' => url($uri['path'], $uri['options'])), TRUE);
+  // Set the non-aliased path as a default shortlink.
+  drupal_add_html_head_link(array('rel' => 'shortlink', 'href' => url($uri['path'], array_merge($uri['options'], array('alias' => TRUE)))), TRUE);
+
+  // Trigger the main
+  $build = taxonomy_term_show($term);
+
   // Load my task plugin
   $task = page_manager_get_task('term_view');
 
   // Load the term into a context.
   ctools_include('context');
   ctools_include('context-task-handler');
-  $contexts = ctools_context_handler_get_task_contexts($task, '', array($term));
+  $contexts = ctools_context_handler_get_task_contexts($task, '', array($term, $depth));
 
   if (empty($contexts)) {
     return drupal_not_found();
   }
 
+  // Build the full output using the configured CTools plugin.
   $output = ctools_context_handler_render($task, '', $contexts, array($term->tid));
   if ($output !== FALSE) {
     return $output;
   }
 
-  $function = 'taxonomy_term_page';
+  // Try loading an override plugin.
   foreach (module_implements('page_manager_override') as $module) {
     $call = $module . '_page_manager_override';
     if (($rc = $call('term_view')) && function_exists($rc)) {
-      $function = $rc;
-      break;
+      return $rc($node);
     }
   }
 
-  // Otherwise, fall back.
-  if ($function == 'taxonomy_term_page') {
-    module_load_include('inc', 'taxonomy', 'taxonomy.pages');
+  // Otherwise, fall back to replicating the output normally generated by
+  // taxonomy_term_page().
+
+  // Build breadcrumb based on the hierarchy of the term.
+  $current = (object) array(
+    'tid' => $term->tid,
+  );
+  // @todo This overrides any other possible breadcrumb and is a pure hard-coded
+  //   presumption. Make this behavior configurable per vocabulary or term.
+  $breadcrumb = array();
+  while ($parents = taxonomy_get_parents($current->tid)) {
+    $current = array_shift($parents);
+    $breadcrumb[] = l($current->name, 'taxonomy/term/' . $current->tid);
+  }
+  $breadcrumb[] = l(t('Home'), NULL);
+  $breadcrumb = array_reverse($breadcrumb);
+  drupal_set_breadcrumb($breadcrumb);
+  drupal_add_feed('taxonomy/term/' . $term->tid . '/feed', 'RSS - ' . $term->name);
+
+  if ($nids = taxonomy_select_nodes($term->tid, TRUE, variable_get('default_nodes_main', 10))) {
+    $nodes = node_load_multiple($nids);
+    $build += node_view_multiple($nodes);
+    $build['pager'] = array(
+      '#theme' => 'pager',
+      '#weight' => 5,
+    );
+  }
+  else {
+    $build['no_content'] = array(
+      '#prefix' => '<p>',
+      '#markup' => t('There is currently no content classified with this term.'),
+      '#suffix' => '</p>',
+    );
   }
-  return $function($term);
+  return $build;
 }
 
 /**
diff --git a/profiles/commons/modules/contrib/ctools/page_manager/plugins/tasks/user_edit.inc b/profiles/commons/modules/contrib/ctools/page_manager/plugins/tasks/user_edit.inc
index 3d98426..6d0135d 100644
--- a/profiles/commons/modules/contrib/ctools/page_manager/plugins/tasks/user_edit.inc
+++ b/profiles/commons/modules/contrib/ctools/page_manager/plugins/tasks/user_edit.inc
@@ -52,6 +52,17 @@ function page_manager_user_edit_menu_alter(&$items, $task) {
     $items['user/%user/edit']['page arguments'] = array(1);
     $items['user/%user/edit']['file path'] = $task['path'];
     $items['user/%user/edit']['file'] = $task['file'];
+    if (($categories = _user_categories()) && (count($categories) > 1)) {
+      foreach ($categories as $key => $category) {
+        // 'account' is already handled by the MENU_DEFAULT_LOCAL_TASK.
+        if ($category['name'] != 'account') {
+          $items['user/%user_category/edit/' . $category['name']]['page callback'] = 'page_manager_user_edit_page';
+          $items['user/%user_category/edit/' . $category['name']]['page arguments'] = array(1, 3);
+          $items['user/%user_category/edit/' . $category['name']]['file path'] = $task['path'];
+          $items['user/%user_category/edit/' . $category['name']]['file'] = $task['file'];
+        }
+      }
+    }
   }
   else {
     // automatically disable this task if it cannot be enabled.
@@ -69,7 +80,9 @@ function page_manager_user_edit_menu_alter(&$items, $task) {
  * to run with it. If no one does, it passes through to Drupal core's
  * user edit, which is drupal_get_form('user_profile_form',$account).
  */
-function page_manager_user_edit_page($account) {
+function page_manager_user_edit_page($account, $category = 'account') {
+  // Store the category on the user for later usage.
+  $account->user_category = $category;
 
   // Load my task plugin:
   $task = page_manager_get_task('user_edit');
diff --git a/profiles/commons/modules/contrib/ctools/plugins/access/entity_bundle.inc b/profiles/commons/modules/contrib/ctools/plugins/access/entity_bundle.inc
index ed68096..e07a048 100644
--- a/profiles/commons/modules/contrib/ctools/plugins/access/entity_bundle.inc
+++ b/profiles/commons/modules/contrib/ctools/plugins/access/entity_bundle.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
diff --git a/profiles/commons/modules/contrib/ctools/plugins/access/entity_field_value.inc b/profiles/commons/modules/contrib/ctools/plugins/access/entity_field_value.inc
index 59b01fb..e5857d8 100644
--- a/profiles/commons/modules/contrib/ctools/plugins/access/entity_field_value.inc
+++ b/profiles/commons/modules/contrib/ctools/plugins/access/entity_field_value.inc
@@ -98,6 +98,7 @@ function ctools_entity_field_value_ctools_access_settings($form, &$form_state, $
   foreach (element_children($form['settings']) as $element) {
     unset($form['settings'][$element]['#weight']);
   }
+
   // Need more logic here to handle compound fields.
   foreach ($columns as $column) {
     if (isset($conf[$column]) && is_array($conf[$column])) {
@@ -105,12 +106,13 @@ function ctools_entity_field_value_ctools_access_settings($form, &$form_state, $
         if (is_numeric($delta) && is_array($conf_value)) {
           $form['settings'][$field_name][LANGUAGE_NONE][$delta]['value']['#default_value'] = $conf_value['value'];
         }
-        else {
-          $form['settings'][$field_name][LANGUAGE_NONE]['#default_value'] = $conf[$column];
-        }
       }
     }
+    else {
+      $form['settings'][$field_name][LANGUAGE_NONE]['#default_value'] = $conf[$column];
+    }
   }
+
   return $form;
 }
 
@@ -148,29 +150,29 @@ function ctools_entity_field_value_ctools_access_check($conf, $context, $plugin)
     foreach ($field['columns'] as $column => $attributes) {
       $columns[$column] = _field_sql_storage_columnname($field_name, $column);
     }
-    foreach ($conf as $potential_field => $values) {
-      if ($field_name === $potential_field) {
 
-        $conf_value_array = _ctools_entity_field_value_ctools_access_get_conf_field_values($values, $langcode);
-        if (empty($conf_value_array)) {
-          return FALSE;
-        }
+    if (isset($conf[$field_name])) {
+      // We have settings for this field.
+      $conf_value_array = _ctools_entity_field_value_ctools_access_get_conf_field_values($conf[$field_name], $langcode);
+      if (empty($conf_value_array)) {
+        return FALSE;
+      }
 
-        // Check field value.
-        foreach ($field_items as $field_value) {
-          foreach ($field_value as $field_column => $value) {
-            // Iterate through config values.
-            foreach ($conf_value_array as $conf_value) {
-              //
-              if ($value == $conf_value[$field_column]) {
-                return TRUE;
-              }
+      // Check field value.
+      foreach ($field_items as $field_value) {
+        foreach ($field_value as $field_column => $value) {
+          // Iterate through config values.
+          foreach ($conf_value_array as $conf_value) {
+            // Check access only for stored in config column values.
+            if (isset($conf_value[$field_column]) && $value == $conf_value[$field_column]) {
+              return TRUE;
             }
           }
         }
       }
     }
   }
+
   return FALSE;
 }
 
@@ -221,15 +223,17 @@ function ctools_entity_field_value_ctools_access_summary($conf, $context, $plugi
   $options   = array('language' => LANGUAGE_NONE);
   ctools_include('fields');
   $display         = field_get_display($instance, $view_mode, $entity);
-  $display['type'] = 'list_default';
-  $function        = $display['module'] . '_field_formatter_view';
-  $items           = isset($entity->{$field_name}[LANGUAGE_NONE]) ? $entity->{$field_name}[LANGUAGE_NONE] : array();
-  if (function_exists($function)) {
-    $elements = $function($entity_type, $entity, $field, $instance, LANGUAGE_NONE, $items, $display);
-  }
-  $value_keys = array_keys($values);
-  foreach ($value_keys as $key => $value) {
-    $values[$value] = $elements[$key]['#markup'];
+  if (isset($display['module'])) {
+    $display['type'] = 'list_default';
+    $function        = $display['module'] . '_field_formatter_view';
+    $items           = isset($entity->{$field_name}[LANGUAGE_NONE]) ? $entity->{$field_name}[LANGUAGE_NONE] : array();
+    if (function_exists($function)) {
+      $elements = $function($entity_type, $entity, $field, $instance, LANGUAGE_NONE, $items, $display);
+    }
+    $value_keys = array_keys($values);
+    foreach ($value_keys as $key => $value) {
+      $values[$value] = isset($elements[$key]['#markup']) ? $elements[$key]['#markup'] : '';
+    }
   }
   $values = array_merge($keys, $values);
   return t($string, $values);
diff --git a/profiles/commons/modules/contrib/ctools/plugins/arguments/user_edit.inc b/profiles/commons/modules/contrib/ctools/plugins/arguments/user_edit.inc
index fc77f80..32b2b81 100644
--- a/profiles/commons/modules/contrib/ctools/plugins/arguments/user_edit.inc
+++ b/profiles/commons/modules/contrib/ctools/plugins/arguments/user_edit.inc
@@ -44,5 +44,4 @@ function ctools_user_edit_context($arg = NULL, $conf = NULL, $empty = FALSE) {
 
   // This will perform a node_access check, so we don't have to.
   return ctools_context_create('user_edit_form', $account);
-  return NULL;
 }
\ No newline at end of file
diff --git a/profiles/commons/modules/contrib/ctools/plugins/content_types/block/block.inc b/profiles/commons/modules/contrib/ctools/plugins/content_types/block/block.inc
index f5b0063..9d55e8a 100644
--- a/profiles/commons/modules/contrib/ctools/plugins/content_types/block/block.inc
+++ b/profiles/commons/modules/contrib/ctools/plugins/content_types/block/block.inc
@@ -85,6 +85,10 @@ function _ctools_block_content_type_content_type($module, $delta, $block) {
  * doesn't cache its results anyway.
  */
 function _ctools_block_load_blocks() {
+  if (!module_exists('block')) {
+    return array();
+  }
+
   $blocks = &drupal_static(__FUNCTION__, NULL);
   if (!isset($blocks)) {
     global $theme_key;
@@ -142,8 +146,8 @@ function ctools_block_content_type_render($subtype, $conf) {
     // Allow modules to modify the block before it is viewed, via either
     // hook_block_view_alter() or hook_block_view_MODULE_DELTA_alter().
     drupal_alter(array('block_view', "block_view_{$module}_{$delta}"), $block, $info);
-    $block = (object) $block;
   }
+  $block = (object) $block;
 
   if (empty($block)) {
     return;
@@ -152,7 +156,7 @@ function ctools_block_content_type_render($subtype, $conf) {
   $block->module = $module;
   $block->delta = $delta;
 
-  if ($module == 'block') {
+  if ($module == 'block' && !empty($info) && isset($info->title)) {
     $block->title = $info->title;
   }
   else if (isset($block->subject)) {
@@ -280,7 +284,7 @@ function ctools_block_content_type_admin_title($subtype, $conf) {
  */
 function ctools_block_content_type_admin_info($subtype, $conf) {
   list($module, $delta) = _ctools_block_get_module_delta($subtype, $conf);
-  $block = (object) module_invoke($module, 'block', 'view', $delta);
+  $block = (object) module_invoke($module, 'block_view', $delta);
 
   // Sanitize the block because <script> tags can hose javascript up:
   if (!empty($block->content)) {
@@ -493,11 +497,11 @@ function ctools_user_login_pane_render($subtype, $conf, $panel_args, $contexts)
   $info->module = $module;
   $info->delta = $delta;
 
-  $block = new stdClass;
-  $block->subject = t('User login');
+  $block = array();
+  $block['subject'] = t('User login');
   // Manually set the content (rather than invoking block_view) because the
   // block implementation won't render on certain URLs.
-  $block->content = drupal_get_form('user_login_block');
+  $block['content'] = drupal_get_form('user_login_block');
 
   // Allow modules to modify the block before it is viewed, via either
   // hook_block_view_alter() or hook_block_view_MODULE_DELTA_alter().
diff --git a/profiles/commons/modules/contrib/ctools/plugins/content_types/comment/comment_reply_form.inc b/profiles/commons/modules/contrib/ctools/plugins/content_types/comment/comment_reply_form.inc
new file mode 100644
index 0000000..f31a702
--- /dev/null
+++ b/profiles/commons/modules/contrib/ctools/plugins/content_types/comment/comment_reply_form.inc
@@ -0,0 +1,50 @@
+<?php
+
+/**
+ * @file
+ * Ctools content-type plugin to provide a comment-reply form (replying either
+ * to a node or to another comment).
+ */
+
+// Only provide the plugin in the comment module is enabled.
+if (module_exists('comment')) {
+  $plugin = array(
+    'single' => TRUE,
+    'title' => t('Comment Reply Form'),
+    'icon' => 'icon_comment.png',
+    'description' => t('A form to add a new comment reply.'),
+    'required context' => array(
+        new ctools_context_required(t('Node'), 'node'),
+        new ctools_context_optional(t('Comment'), 'comment'),
+        ),
+    'category' => t('Comment'),
+    'render callback'  => 'ctools_comment_reply_form_content_type_render',
+    'defaults' => array('anon_links' => false),
+  );
+}
+
+function ctools_comment_reply_form_content_type_render($subtype, $conf, $panel_args, $context) {
+
+  $comment = ($context[1]->identifier == 'No context') ? NULL : clone($context[1]->data);
+  $block = new stdClass();
+  $block->module = 'comments';
+  if ($comment) $block->delta  = $comment->cid;
+  $block->title = t('Add comment');
+  $node = $context[0]->data;
+
+  module_load_include('inc', 'comment', 'comment.pages');
+  $block->content = comment_reply($node, ($comment ? $comment->cid : NULL));
+
+  return $block;
+}
+
+function ctools_comment_reply_form_content_type_admin_title($subtype, $conf, $context) {
+  return t('"@s" comment form', array('@s' => $context[0]->identifier));
+}
+
+function ctools_comment_reply_form_content_type_edit_form($form, &$form_state) {
+  return $form;
+}
+
+function ctools_comment_reply_form_content_type_edit_form_submit($form, &$form_state) {
+}
diff --git a/profiles/commons/modules/contrib/ctools/plugins/content_types/form/entity_form_field.inc b/profiles/commons/modules/contrib/ctools/plugins/content_types/form/entity_form_field.inc
index 0183fc6..56fb76a 100644
--- a/profiles/commons/modules/contrib/ctools/plugins/content_types/form/entity_form_field.inc
+++ b/profiles/commons/modules/contrib/ctools/plugins/content_types/form/entity_form_field.inc
@@ -104,7 +104,12 @@ function ctools_entity_form_field_content_type_render($subtype, $conf, $panel_ar
 function ctools_entity_form_field_content_type_admin_title($subtype, $conf, $context) {
   list($entity_type, $field_name) = explode(':', $subtype, 2);
 
-  $field = field_info_instance($entity_type, $field_name, $context->restrictions['type'][0]);
+  if (!empty($context->restrictions)) {
+    $field = field_info_instance($entity_type, $field_name, $context->restrictions['type'][0]);
+  }
+  else {
+    $field = array('label' => $subtype);
+  }
 
   return t('"@s" @field form', array('@s' => $context->identifier, '@field' => $field['label']));
 }
diff --git a/profiles/commons/modules/contrib/ctools/plugins/content_types/node_context/node_title.inc b/profiles/commons/modules/contrib/ctools/plugins/content_types/node_context/node_title.inc
index 6a52306..bec8982 100644
--- a/profiles/commons/modules/contrib/ctools/plugins/content_types/node_context/node_title.inc
+++ b/profiles/commons/modules/contrib/ctools/plugins/content_types/node_context/node_title.inc
@@ -13,6 +13,9 @@ $plugin = array(
   'category' => t('Node'),
   'defaults' => array(
     'link' => TRUE,
+    'markup' => 'none',
+    'id' => '',
+    'class' => '',
   ),
 );
 
@@ -30,11 +33,27 @@ function ctools_node_title_content_type_render($subtype, $conf, $panel_args, $co
   // Load information about the node type.
   $type = node_type_get_type($node);
 
+  // Generate the title
+  $content = !empty($conf['link']) ? l($node->title, 'node/' . $node->nid) : check_plain($node->title);
+
+  // Build any surrounding markup if so configured
+  if (isset($conf['markup']) && $conf['markup'] != 'none') {
+    $markup = '<' . $conf['markup'];
+    if (!empty($conf['id'])) {
+      $markup .= ' id="' . $conf['id'] . '"';
+    }
+    if (!empty($conf['class'])) {
+      $markup .= ' class="' . $conf['class'] . '"';
+    }
+    $markup .= '>' . $content . '</' . $conf['markup'] . '>' . "\n";
+    $content = $markup;
+  }
+
   // Build the content type block.
   $block = new stdClass();
   $block->module  = 'node_title';
   $block->title   = $type->title_label;
-  $block->content = !empty($conf['link']) ? l($node->title, 'node/' . $node->nid) : check_plain($node->title);
+  $block->content = $content;
   $block->delta   = $node->nid;
 
   return $block;
@@ -46,6 +65,34 @@ function ctools_node_title_content_type_render($subtype, $conf, $panel_args, $co
 function ctools_node_title_content_type_edit_form($form, &$form_state) {
   $conf = $form_state['conf'];
 
+  $form['markup'] = array(
+    '#title' => t('Title tag'),
+    '#type' => 'select',
+    '#options' => array(
+      'none' => t('- No tag -'),
+      'h1' => t('h1'),
+      'h2' => t('h2'),
+      'h3' => t('h3'),
+      'h4' => t('h4'),
+      'h5' => t('h5'),
+      'h6' => t('h6'),
+      'div' => t('div'),
+    ),
+    '#default_value' => $conf['markup'],
+  );
+
+  $form['id'] = array(
+    '#title' => t('CSS id to use'),
+    '#type' => 'textfield',
+    '#default_value' => $conf['id'],
+  );
+
+  $form['class'] = array(
+    '#title' => t('CSS class to use'),
+    '#type' => 'textfield',
+    '#default_value' => $conf['class'],
+  );
+
   $form['link'] = array(
     '#title' => t('Link to node'),
     '#type' => 'checkbox',
diff --git a/profiles/commons/modules/contrib/ctools/plugins/content_types/node_form/node_form_language.inc b/profiles/commons/modules/contrib/ctools/plugins/content_types/node_form/node_form_language.inc
new file mode 100644
index 0000000..2043c1c
--- /dev/null
+++ b/profiles/commons/modules/contrib/ctools/plugins/content_types/node_form/node_form_language.inc
@@ -0,0 +1,41 @@
+<?php
+
+/**
+ * Plugins are described by creating a $plugin array which will be used
+ * by the system that includes this file.
+ */
+$plugin = array(
+  'single' => TRUE,
+  'icon' => 'icon_node_form.png',
+  'title' => t('Node form languages'),
+  'description' => t('The language selection form.'),
+  'required context' => new ctools_context_required(t('Form'), 'node_form'),
+  'category' => t('Form'),
+);
+
+function ctools_node_form_language_content_type_render($subtype, $conf, $panel_args, &$context) {
+  $block = new stdClass();
+  $block->module = t('node_form');
+
+  $block->delta = 'language-options';
+
+  if (isset($context->form)) {
+    if (!empty($context->form['language'])) {
+      $block->content['language'] = $context->form['language'];
+      unset($context->form['language']);
+    }
+  }
+  else {
+    $block->content = t('Node language form.');
+  }
+  return $block;
+}
+
+function ctools_node_form_language_content_type_admin_title($subtype, $conf, $context) {
+  return t('"@s" node form language field', array('@s' => $context->identifier));
+}
+
+function ctools_node_form_language_content_type_edit_form($form, &$form_state) {
+  // provide a blank form so we have a place to have context setting.
+  return $form;
+}
\ No newline at end of file
diff --git a/profiles/commons/modules/contrib/ctools/plugins/content_types/page/page_actions.inc b/profiles/commons/modules/contrib/ctools/plugins/content_types/page/page_actions.inc
index e8762d4..c20c408 100644
--- a/profiles/commons/modules/contrib/ctools/plugins/content_types/page/page_actions.inc
+++ b/profiles/commons/modules/contrib/ctools/plugins/content_types/page/page_actions.inc
@@ -26,7 +26,7 @@ $plugin = array(
  */
 function ctools_page_actions_content_type_render($subtype, $conf, $panel_args) {
   $block = new stdClass();
-  $block->content = menu_local_actions();
+  $block->content = theme('ctools_menu_local_actions_wrapper', array('links' => menu_local_actions()));
 
   return $block;
 }
diff --git a/profiles/commons/modules/contrib/ctools/plugins/content_types/term_context/term_list.inc b/profiles/commons/modules/contrib/ctools/plugins/content_types/term_context/term_list.inc
index 4585611..dc3124b 100644
--- a/profiles/commons/modules/contrib/ctools/plugins/content_types/term_context/term_list.inc
+++ b/profiles/commons/modules/contrib/ctools/plugins/content_types/term_context/term_list.inc
@@ -49,7 +49,7 @@ function ctools_term_list_content_type_render($subtype, $conf, $panel_args, $con
 
       case 'parent':
         $terms = taxonomy_get_parents($term->tid);
-        $block->title = format_plural(count($terms), 'Parent term', 'Parent terms');
+        $block->title = count($terms) == 1 ? t('Parent term') : t('Parent terms');
         break;
 
       case 'sibling':
diff --git a/profiles/commons/modules/contrib/ctools/plugins/content_types/user_context/user_profile.inc b/profiles/commons/modules/contrib/ctools/plugins/content_types/user_context/user_profile.inc
index 3e769d6..6c41882 100644
--- a/profiles/commons/modules/contrib/ctools/plugins/content_types/user_context/user_profile.inc
+++ b/profiles/commons/modules/contrib/ctools/plugins/content_types/user_context/user_profile.inc
@@ -21,7 +21,7 @@ $plugin = array(
  */
 function ctools_user_profile_content_type_render($subtype, $conf, $panel_args, $context) {
   $account = isset($context->data) ? clone($context->data) : NULL;
-  if (!$account || ($account->access == 0 && !user_access('administer users'))) {
+  if (!$account) {
     return NULL;
   }
 
diff --git a/profiles/commons/modules/contrib/ctools/plugins/contexts/string.inc b/profiles/commons/modules/contrib/ctools/plugins/contexts/string.inc
index c53acae..0ea5e52 100644
--- a/profiles/commons/modules/contrib/ctools/plugins/contexts/string.inc
+++ b/profiles/commons/modules/contrib/ctools/plugins/contexts/string.inc
@@ -15,7 +15,7 @@ $plugin = array(
   'description' => t('A context that is just a string.'),
   'context' => 'ctools_context_create_string',
   'keyword' => 'string',
-  'no ui' => TRUE,
+  'no ui' => FALSE,
   'context name' => 'string',
   'convert list' => array(
     'raw' => t('Raw string'),
@@ -45,7 +45,7 @@ function ctools_context_create_string($empty, $data = NULL, $conf = FALSE) {
 
   if ($data !== FALSE ) {
     $context->data = $data;
-    $context->title = check_plain($data);
+    $context->title = ($conf) ? check_plain($data['identifier']) : check_plain($data);
     return $context;
   }
 }
diff --git a/profiles/commons/modules/contrib/ctools/plugins/contexts/user_edit_form.inc b/profiles/commons/modules/contrib/ctools/plugins/contexts/user_edit_form.inc
index 89ee2b4..da0cca0 100644
--- a/profiles/commons/modules/contrib/ctools/plugins/contexts/user_edit_form.inc
+++ b/profiles/commons/modules/contrib/ctools/plugins/contexts/user_edit_form.inc
@@ -30,16 +30,29 @@ $plugin = array(
  * are not always created from the UI.
  */
 function ctools_context_create_user_edit_form($empty, $user = NULL, $conf = FALSE) {
-  static $created;
+  // Determine the user category.
+  $category = !empty($conf['category']) ? $conf['category'] : FALSE;
+  unset($conf['category']);
+
+  // Return previously created contexts, per category.
+  static $created = array();
+  if (!empty($created[$category])) {
+    return $created[$category];
+  }
+  // If no category was specified, use the default 'account'.
+  if (!$category) {
+    $category = 'account';
+  }
+
   $context = new ctools_context(array('form', 'user_edit', 'user_form', 'user_edit_form', 'user', 'entity:user'));
+  // Store this context for later.
+  $created[$category] = $context;
   $context->plugin = 'user_edit_form';
-
-  if ($empty || (isset($created) && $created)) {
+  if ($empty) {
     return $context;
   }
-  $created = TRUE;
 
-  if ($conf) {
+  if (!empty($conf)) {
     // In this case, $user is actually our $conf array.
     $uid = is_array($user) && isset($user['uid']) ? $user['uid'] : (is_object($user) ? $user->uid : 0);
 
@@ -58,7 +71,7 @@ function ctools_context_create_user_edit_form($empty, $user = NULL, $conf = FALS
   if (!empty($user)) {
     $form_id = 'user_profile_form';
 
-    $form_state = array('want form' => TRUE, 'build_info' => array('args' => array($user)));
+    $form_state = array('want form' => TRUE, 'build_info' => array('args' => array($user, $category)));
 
     $file = drupal_get_path('module', 'user') . '/user.pages.inc';
     require_once DRUPAL_ROOT . '/' . $file;
diff --git a/profiles/commons/modules/contrib/ctools/plugins/relationships/user_category_edit_form_from_user.inc b/profiles/commons/modules/contrib/ctools/plugins/relationships/user_category_edit_form_from_user.inc
new file mode 100644
index 0000000..28dac72
--- /dev/null
+++ b/profiles/commons/modules/contrib/ctools/plugins/relationships/user_category_edit_form_from_user.inc
@@ -0,0 +1,31 @@
+<?php
+
+/**
+ * @file
+ * Plugin to provide an relationship handler for term from node.
+ */
+
+/**
+ * Plugins are described by creating a $plugin array which will be used
+ * by the system that includes this file.
+ */
+$plugin = array(
+  'title' => t('User category edit form from user'),
+  'keyword' => 'user_category_form',
+  'description' => t('Adds user category edit form from a user context.'),
+  'required context' => new ctools_context_required(t('User'), 'user'),
+  'context' => 'ctools_user_category_edit_form_from_user_context',
+);
+
+/**
+ * Return a new context based on an existing context.
+ */
+function ctools_user_category_edit_form_from_user_context($context, $conf) {
+  if (empty($context->data)) {
+    return ctools_context_create_empty('user_edit_form', NULL);
+  }
+
+  if (isset($context->data->user_category)) {
+    return ctools_context_create('user_edit_form', $context->data, array('category' => $context->data->user_category));
+  }
+}
diff --git a/profiles/commons/modules/contrib/ctools/stylizer/stylizer.info b/profiles/commons/modules/contrib/ctools/stylizer/stylizer.info
index 9c7f117..888cc8e 100644
--- a/profiles/commons/modules/contrib/ctools/stylizer/stylizer.info
+++ b/profiles/commons/modules/contrib/ctools/stylizer/stylizer.info
@@ -5,9 +5,9 @@ package = Chaos tool suite
 dependencies[] = ctools
 dependencies[] = color
 
-; Information added by drupal.org packaging script on 2012-08-18
-version = "7.x-1.2"
+; Information added by drupal.org packaging script on 2013-04-03
+version = "7.x-1.3"
 core = "7.x"
 project = "ctools"
-datestamp = "1345319204"
+datestamp = "1365013512"
 
diff --git a/profiles/commons/modules/contrib/ctools/tests/context.test b/profiles/commons/modules/contrib/ctools/tests/context.test
index b5f6fb1..bdf14e3 100644
--- a/profiles/commons/modules/contrib/ctools/tests/context.test
+++ b/profiles/commons/modules/contrib/ctools/tests/context.test
@@ -23,6 +23,10 @@ class CtoolsContextKeywordsSubstitutionTestCase extends DrupalWebTestCase {
 
     // Run tests on some edge cases.
     $checks = array(
+      '%node:changed:raw:' => array(
+        "{$node->changed}:",
+        t('Multi-level token has been replaced. Colon left untouched.'),
+      ),
       '%node:title' => array(
         "{$node->title}",
         t('Keyword and converter have been replaced.'),
diff --git a/profiles/commons/modules/contrib/ctools/tests/ctools_export_test/ctools_export_test.info b/profiles/commons/modules/contrib/ctools/tests/ctools_export_test/ctools_export_test.info
index 2d975c3..669c4ae 100644
--- a/profiles/commons/modules/contrib/ctools/tests/ctools_export_test/ctools_export_test.info
+++ b/profiles/commons/modules/contrib/ctools/tests/ctools_export_test/ctools_export_test.info
@@ -7,9 +7,9 @@ hidden = TRUE
 
 files[] = ctools_export.test
 
-; Information added by drupal.org packaging script on 2012-08-18
-version = "7.x-1.2"
+; Information added by drupal.org packaging script on 2013-04-03
+version = "7.x-1.3"
 core = "7.x"
 project = "ctools"
-datestamp = "1345319204"
+datestamp = "1365013512"
 
diff --git a/profiles/commons/modules/contrib/ctools/tests/ctools_plugin_test.info b/profiles/commons/modules/contrib/ctools/tests/ctools_plugin_test.info
index 6d5e9cd..5bb61ed 100644
--- a/profiles/commons/modules/contrib/ctools/tests/ctools_plugin_test.info
+++ b/profiles/commons/modules/contrib/ctools/tests/ctools_plugin_test.info
@@ -7,11 +7,13 @@ files[] = ctools.plugins.test
 files[] = object_cache.test
 files[] = css.test
 files[] = context.test
+files[] = math_expression.test
+files[] = math_expression_stack.test
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-18
-version = "7.x-1.2"
+; Information added by drupal.org packaging script on 2013-04-03
+version = "7.x-1.3"
 core = "7.x"
 project = "ctools"
-datestamp = "1345319204"
+datestamp = "1365013512"
 
diff --git a/profiles/commons/modules/contrib/ctools/tests/math_expression.test b/profiles/commons/modules/contrib/ctools/tests/math_expression.test
new file mode 100644
index 0000000..730e079
--- /dev/null
+++ b/profiles/commons/modules/contrib/ctools/tests/math_expression.test
@@ -0,0 +1,129 @@
+<?php
+
+/**
+ * @file
+ * Contains \CtoolsMathExpressionTestCase.
+ */
+
+/**
+ * Tests the MathExpression library of ctools.
+ */
+class CtoolsMathExpressionTestCase extends DrupalWebTestCase {
+  public static function getInfo() {
+    return array(
+      'name' => 'CTools math expression tests',
+      'description' => 'Test the math expression library of ctools.',
+      'group' => 'Chaos Tools Suite',
+    );
+  }
+
+  public function setUp() {
+    parent::setUp('ctools', 'ctools_plugin_test');
+  }
+
+  /**
+   * Returns a random double between 0 and 1.
+   */
+  protected function rand01() {
+    return rand(0, PHP_INT_MAX) / PHP_INT_MAX;
+  }
+
+  /**
+   * A custom assertion with checks the values in a certain range.
+   */
+  protected function assertFloat($first, $second, $delta = 0.0000001, $message = '', $group = 'Other') {
+    return $this->assert(abs($first - $second) <= $delta, $message ? $message : t('Value @first is equal to value @second.', array('@first' => var_export($first, TRUE), '@second' => var_export($second, TRUE))), $group);
+  }
+
+  public function testArithmetic() {
+    $math_expression = new ctools_math_expr();
+
+    // Test constant expressions.
+    $this->assertEqual($math_expression->e('2'), 2);
+    $random_number = rand(0, 10);
+    $this->assertEqual($random_number, $math_expression->e((string) $random_number));
+
+    // Test simple arithmetic.
+    $random_number_a = rand(5, 10);
+    $random_number_b = rand(5, 10);
+    $this->assertEqual($random_number_a + $random_number_b, $math_expression->e("$random_number_a + $random_number_b"));
+    $this->assertEqual($random_number_a - $random_number_b, $math_expression->e("$random_number_a - $random_number_b"));
+    $this->assertEqual($random_number_a * $random_number_b, $math_expression->e("$random_number_a * $random_number_b"));
+    $this->assertEqual($random_number_a / $random_number_b, $math_expression->e("$random_number_a / $random_number_b"));
+
+    // Test Associative property.
+    $random_number_c = rand(5, 10);
+    $this->assertEqual($math_expression->e("$random_number_a + ($random_number_b + $random_number_c)"), $math_expression->e("($random_number_a + $random_number_b) + $random_number_c"));
+    $this->assertEqual($math_expression->e("$random_number_a * ($random_number_b * $random_number_c)"), $math_expression->e("($random_number_a * $random_number_b) * $random_number_c"));
+
+    // Test Commutative property.
+    $this->assertEqual($math_expression->e("$random_number_a + $random_number_b"), $math_expression->e("$random_number_b + $random_number_a"));
+    $this->assertEqual($math_expression->e("$random_number_a * $random_number_b"), $math_expression->e("$random_number_b * $random_number_a"));
+
+    // Test Distributive property.
+    $this->assertEqual($math_expression->e("($random_number_a + $random_number_b) * $random_number_c"), $math_expression->e("($random_number_a * $random_number_c + $random_number_b * $random_number_c)"));
+
+    $this->assertEqual(pow($random_number_a, $random_number_b), $math_expression->e("$random_number_a ^ $random_number_b"));
+  }
+
+  public function testBuildInFunctions() {
+    $math_expression = new ctools_math_expr();
+
+    // @todo: maybe run this code multiple times to test different values.
+    $random_double = $this->rand01();
+    $random_int = rand(5, 10);
+    $this->assertFloat(sin($random_double), $math_expression->e("sin($random_double)"));
+    $this->assertFloat(cos($random_double), $math_expression->e("cos($random_double)"));
+    $this->assertFloat(tan($random_double), $math_expression->e("tan($random_double)"));
+    $this->assertFloat(exp($random_double), $math_expression->e("exp($random_double)"));
+    $this->assertFloat(sqrt($random_double), $math_expression->e("sqrt($random_double)"));
+    $this->assertFloat(log($random_double), $math_expression->e("ln($random_double)"));
+    $this->assertFloat(round($random_double), $math_expression->e("round($random_double)"));
+    $this->assertFloat(abs($random_double + $random_int), $math_expression->e('abs(' . ($random_double + $random_int) . ')'));
+    $this->assertEqual(round($random_double + $random_int), $math_expression->e('round(' . ($random_double + $random_int) . ')'));
+    $this->assertEqual(ceil($random_double + $random_int), $math_expression->e('ceil(' . ($random_double + $random_int) . ')'));
+    $this->assertEqual(floor($random_double + $random_int), $math_expression->e('floor(' . ($random_double + $random_int) . ')'));
+
+    // @fixme: you can't run time without an argument.
+    $this->assertFloat(time(), $math_expression->e('time(1)'));
+
+    $random_double_a = $this->rand01();
+    $random_double_b = $this->rand01();
+    // @fixme: max/min don't work at the moment.
+//    $this->assertFloat(max($random_double_a, $random_double_b), $math_expression->e("max($random_double_a, $random_double_b)"));
+//    $this->assertFloat(min($random_double_a, $random_double_b), $math_expression->e("min($random_double_a, $random_double_b)"));
+  }
+
+  public function testVariables() {
+    $math_expression = new ctools_math_expr();
+
+    $random_number_a = rand(5, 10);
+    $random_number_b = rand(5, 10);
+
+    // Store the first random number and use it on calculations.
+    $math_expression->e("var = $random_number_a");
+    $this->assertEqual($random_number_a + $random_number_b, $math_expression->e("var + $random_number_b"));
+    $this->assertEqual($random_number_a * $random_number_b, $math_expression->e("var * $random_number_b"));
+    $this->assertEqual($random_number_a - $random_number_b, $math_expression->e("var - $random_number_b"));
+    $this->assertEqual($random_number_a / $random_number_b, $math_expression->e("var / $random_number_b"));
+  }
+
+  public function testCustomFunctions() {
+    $math_expression = new ctools_math_expr();
+
+    $random_number_a = rand(5, 10);
+    $random_number_b = rand(5, 10);
+
+    // Create a one-argument function.
+    $math_expression->e("f(x) = 2 * x");
+    $this->assertEqual($random_number_a * 2, $math_expression->e("f($random_number_a)"));
+    $this->assertEqual($random_number_b * 2, $math_expression->e("f($random_number_b)"));
+
+    // Create a two-argument function.
+    $math_expression->e("g(x, y) = 2 * x + y");
+    $this->assertEqual($random_number_a * 2 + $random_number_b, $math_expression->e("g($random_number_a, $random_number_b)"));
+
+    // Use a custom function in another function.
+    $this->assertEqual(($random_number_a * 2 + $random_number_b) * 2, $math_expression->e("f(g($random_number_a, $random_number_b))"));
+  }
+}
diff --git a/profiles/commons/modules/contrib/ctools/tests/math_expression_stack.test b/profiles/commons/modules/contrib/ctools/tests/math_expression_stack.test
new file mode 100644
index 0000000..8143a55
--- /dev/null
+++ b/profiles/commons/modules/contrib/ctools/tests/math_expression_stack.test
@@ -0,0 +1,63 @@
+<?php
+
+/**
+ * @file
+ * Contains \CtoolsMathExpressionStackTestCase
+ */
+
+/**
+ * Tests the simple MathExpressionStack class.
+ */
+class CtoolsMathExpressionStackTestCase extends DrupalWebTestCase {
+  public static function getInfo() {
+    return array(
+      'name' => 'CTools math expression stack tests',
+      'description' => 'Test the stack class of the math expression library.',
+      'group' => 'Chaos Tools Suite',
+    );
+  }
+
+  public function setUp() {
+    parent::setUp('ctools', 'ctools_plugin_test');
+  }
+
+  public function testStack() {
+    $stack = new ctools_math_expr_stack();
+
+    // Test the empty stack.
+    $this->assertNull($stack->last());
+    $this->assertNull($stack->pop());
+
+    // Add an element and see whether it's the right element.
+    $value = $this->randomName();
+    $stack->push($value);
+    $this->assertIdentical($value, $stack->last());
+    $this->assertIdentical($value, $stack->pop());
+    $this->assertNull($stack->pop());
+
+    // Add multiple elements and see whether they are returned in the right order.
+    $values = array($this->randomName(), $this->randomName(), $this->randomName());
+    foreach ($values as $value) {
+      $stack->push($value);
+    }
+
+    // Test the different elements at different positions with the last() method.
+    $count = count($values);
+    foreach ($values as $key => $value) {
+      $this->assertEqual($value, $stack->last($count - $key));
+    }
+
+    // Pass in a non-valid number to last.
+    $non_valid_number = rand(10, 20);
+    $this->assertNull($stack->last($non_valid_number));
+
+    // Test the order of the poping.
+    $values = array_reverse($values);
+    foreach ($values as $key => $value) {
+      $this->assertEqual($stack->last(), $value);
+      $this->assertEqual($stack->pop(), $value);
+    }
+    $this->assertNull($stack->pop());
+
+  }
+}
diff --git a/profiles/commons/modules/contrib/ctools/views_content/plugins/content_types/views.inc b/profiles/commons/modules/contrib/ctools/views_content/plugins/content_types/views.inc
index deea741..262d81d 100644
--- a/profiles/commons/modules/contrib/ctools/views_content/plugins/content_types/views.inc
+++ b/profiles/commons/modules/contrib/ctools/views_content/plugins/content_types/views.inc
@@ -144,7 +144,7 @@ function views_content_views_content_type_render($subtype, $conf, $panel_args, $
         list($cid, $converter) = explode('.', $context_info, 2);
       }
       if (!empty($contexts[$cid])) {
-        $arg = ctools_context_convert_context($contexts[$cid], $converter);
+        $arg = ctools_context_convert_context($contexts[$cid], $converter, array('sanitize' => FALSE));
         array_splice($args, $count, 0, array($arg));
       }
       else {
diff --git a/profiles/commons/modules/contrib/ctools/views_content/plugins/content_types/views_panes.inc b/profiles/commons/modules/contrib/ctools/views_content/plugins/content_types/views_panes.inc
index a27a26c..10a6a83 100644
--- a/profiles/commons/modules/contrib/ctools/views_content/plugins/content_types/views_panes.inc
+++ b/profiles/commons/modules/contrib/ctools/views_content/plugins/content_types/views_panes.inc
@@ -156,7 +156,7 @@ function views_content_views_panes_content_type_render($subtype, $conf, $panel_a
         if (isset($contexts[$key])) {
           if (strpos($argument['context'], '.')) {
             list($context, $converter) = explode('.', $argument['context'], 2);
-            $args[] = ctools_context_convert_context($contexts[$key], $converter);
+            $args[] = ctools_context_convert_context($contexts[$key], $converter, array('sanitize' => FALSE));
           }
           else {
             $args[] = $contexts[$key]->argument;
diff --git a/profiles/commons/modules/contrib/ctools/views_content/plugins/relationships/view_from_argument.inc b/profiles/commons/modules/contrib/ctools/views_content/plugins/relationships/view_from_argument.inc
index 4da5fe5..cefc6db 100644
--- a/profiles/commons/modules/contrib/ctools/views_content/plugins/relationships/view_from_argument.inc
+++ b/profiles/commons/modules/contrib/ctools/views_content/plugins/relationships/view_from_argument.inc
@@ -1,5 +1,4 @@
 <?php
-// $Id$
 
 /**
  * @file
@@ -77,7 +76,7 @@ function views_content_view_from_argument_context($contexts, $conf) {
         if (isset($contexts [$key])) {
           if (strpos($argument['context'], '.')) {
             list($context, $converter) = explode('.', $argument['context'], 2);
-            $args[] = ctools_context_convert_context($contexts[$key], $converter);
+            $args[] = ctools_context_convert_context($contexts[$key], $converter, array('sanitize' => FALSE));
           }
           else {
             $args[] = $contexts[$key]->argument;
diff --git a/profiles/commons/modules/contrib/ctools/views_content/views_content.info b/profiles/commons/modules/contrib/ctools/views_content/views_content.info
index cd7ce44..1782d37 100644
--- a/profiles/commons/modules/contrib/ctools/views_content/views_content.info
+++ b/profiles/commons/modules/contrib/ctools/views_content/views_content.info
@@ -9,9 +9,9 @@ files[] = plugins/views/views_content_plugin_display_ctools_context.inc
 files[] = plugins/views/views_content_plugin_display_panel_pane.inc
 files[] = plugins/views/views_content_plugin_style_ctools_context.inc
 
-; Information added by drupal.org packaging script on 2012-08-18
-version = "7.x-1.2"
+; Information added by drupal.org packaging script on 2013-04-03
+version = "7.x-1.3"
 core = "7.x"
 project = "ctools"
-datestamp = "1345319204"
+datestamp = "1365013512"
 
diff --git a/profiles/commons/modules/contrib/custom_search/custom_search.info b/profiles/commons/modules/contrib/custom_search/custom_search.info
index 11dd0f4..c205641 100644
--- a/profiles/commons/modules/contrib/custom_search/custom_search.info
+++ b/profiles/commons/modules/contrib/custom_search/custom_search.info
@@ -12,9 +12,10 @@ files[] = custom_search.module
 files[] = custom_search.install
 
 configure = admin/config/search/custom_search
-; Information added by drupal.org packaging script on 2013-02-22
-version = "7.x-1.11+8-dev"
+
+; Information added by drush on 2013-04-04
+version = "7.x-1.11+9-dev"
 core = "7.x"
 project = "custom_search"
-datestamp = "1361537316"
+datestamp = "1365041489"
 
diff --git a/profiles/commons/modules/contrib/custom_search/modules/custom_search_blocks/custom_search_blocks.info b/profiles/commons/modules/contrib/custom_search/modules/custom_search_blocks/custom_search_blocks.info
index 94d7c32..2b9ec5b 100644
--- a/profiles/commons/modules/contrib/custom_search/modules/custom_search_blocks/custom_search_blocks.info
+++ b/profiles/commons/modules/contrib/custom_search/modules/custom_search_blocks/custom_search_blocks.info
@@ -11,9 +11,10 @@ files[] = custom_search_blocks.module
 files[] = custom_search_blocks.install
 
 configure = admin/config/search/custom_search/blocks
-; Information added by drupal.org packaging script on 2013-02-22
-version = "7.x-1.11+8-dev"
+
+; Information added by drush on 2013-04-04
+version = "7.x-1.11+9-dev"
 core = "7.x"
 project = "custom_search"
-datestamp = "1361537316"
+datestamp = "1365041489"
 
diff --git a/profiles/commons/modules/contrib/custom_search/modules/custom_search_i18n/custom_search_i18n.info b/profiles/commons/modules/contrib/custom_search/modules/custom_search_i18n/custom_search_i18n.info
index ef95a50..5dbf405 100644
--- a/profiles/commons/modules/contrib/custom_search/modules/custom_search_i18n/custom_search_i18n.info
+++ b/profiles/commons/modules/contrib/custom_search/modules/custom_search_i18n/custom_search_i18n.info
@@ -9,9 +9,10 @@ dependencies[] = i18n_string
 files[] = custom_search_i18n.module
 files[] = custom_search_i18n.admin.inc
 files[] = custom_search_i18n.install
-; Information added by drupal.org packaging script on 2013-02-22
-version = "7.x-1.11+8-dev"
+
+; Information added by drush on 2013-04-04
+version = "7.x-1.11+9-dev"
 core = "7.x"
 project = "custom_search"
-datestamp = "1361537316"
+datestamp = "1365041489"
 
diff --git a/profiles/commons/modules/contrib/custom_search/modules/custom_search_taxonomy/custom_search_taxonomy.info b/profiles/commons/modules/contrib/custom_search/modules/custom_search_taxonomy/custom_search_taxonomy.info
index 26ca28c..2ba3af8 100644
--- a/profiles/commons/modules/contrib/custom_search/modules/custom_search_taxonomy/custom_search_taxonomy.info
+++ b/profiles/commons/modules/contrib/custom_search/modules/custom_search_taxonomy/custom_search_taxonomy.info
@@ -11,9 +11,10 @@ files[] = custom_search_taxonomy.module
 files[] = custom_search_taxonomy.install
 
 configure = admin/config/search/custom_search/taxonomy
-; Information added by drupal.org packaging script on 2013-02-22
-version = "7.x-1.11+8-dev"
+
+; Information added by drush on 2013-04-04
+version = "7.x-1.11+9-dev"
 core = "7.x"
 project = "custom_search"
-datestamp = "1361537316"
+datestamp = "1365041489"
 
diff --git a/profiles/commons/modules/contrib/custom_search/theme/custom_search.pages.inc b/profiles/commons/modules/contrib/custom_search/theme/custom_search.pages.inc
index 5735d74..e0209b5 100644
--- a/profiles/commons/modules/contrib/custom_search/theme/custom_search.pages.inc
+++ b/profiles/commons/modules/contrib/custom_search/theme/custom_search.pages.inc
@@ -41,6 +41,7 @@ function custom_search_preprocess_search_results(&$variables) {
       if (!isset($variables['filter-title'])) $variables['filter-title'] = variable_get('custom_search_filter_label', CUSTOM_SEARCH_FILTER_LABEL_DEFAULT);
       if (count($items) > 2) $variables['filter'] = theme('item_list', array('items' => $items, 'title' => $variables['filter-title']));
     }
+  $variables['theme_hook_suggestions'][] = 'custom_search_results';
   }
 }
 
@@ -61,4 +62,5 @@ function custom_search_preprocess_search_result(&$variables) {
     }
   }
   $variables['info'] = implode(' - ', $infos);
+  $variables['theme_hook_suggestions'][] = 'custom_search_result';
 }
\ No newline at end of file
diff --git a/profiles/commons/modules/contrib/devel/devel.info b/profiles/commons/modules/contrib/devel/devel.info
index 01a7acb..e716d18 100644
--- a/profiles/commons/modules/contrib/devel/devel.info
+++ b/profiles/commons/modules/contrib/devel/devel.info
@@ -7,9 +7,9 @@ tags[] = developer
 files[] = devel.test
 files[] = devel.mail.inc
 
-; Information added by drupal.org packaging script on 2013-02-24
-version = "7.x-1.3+41-dev"
+; Information added by drupal.org packaging script on 2013-04-03
+version = "7.x-1.3+45-dev"
 core = "7.x"
 project = "devel"
-datestamp = "1361668291"
+datestamp = "1364950099"
 
diff --git a/profiles/commons/modules/contrib/devel/devel.install b/profiles/commons/modules/contrib/devel/devel.install
index 03fc0ae..2247fa5 100644
--- a/profiles/commons/modules/contrib/devel/devel.install
+++ b/profiles/commons/modules/contrib/devel/devel.install
@@ -31,7 +31,6 @@ function devel_enable() {
  * Implements hook_uninstall().
  */
 function devel_uninstall() {
-  variable_del('devel_form_weights');
   variable_del('devel_execution');
   variable_del('dev_timer');
   variable_del('devel_query_display');
@@ -43,6 +42,16 @@ function devel_uninstall() {
   variable_del('devel_switch_user_list_size');
   variable_del('devel_switch_user_include_anon');
   variable_del('devel_switch_user_show_form');
+  variable_del('devel_krumo_skin');
+  variable_del('devel_page_alter');
+  variable_del('devel_query_sort');
+  variable_del('devel_rebuild_theme_registry');
+  variable_del('devel_use_uncompressed_jquery');
+  variable_del('devel_xhprof_directory');
+  variable_del('devel_xhprof_enabled');
+  variable_del('devel_xhprof_url');
+  variable_del('devel_debug_mail_file_format');
+  variable_del('devel_debug_mail_directory');
 
   // Delete the development menu.
   if (module_exists('menu')) {
@@ -106,3 +115,10 @@ function devel_update_7004() {
     variable_set('devel_error_handlers', drupal_map_assoc($error_handlers));
   }
 }
+
+/**
+ * Delete variable 'devel_form_weights' from database as it was removed from code.
+ */
+function devel_update_7005() {
+  variable_del('devel_form_weights');
+}
diff --git a/profiles/commons/modules/contrib/devel/devel_generate/devel_generate.info b/profiles/commons/modules/contrib/devel/devel_generate/devel_generate.info
index 91eb503..fe16908 100644
--- a/profiles/commons/modules/contrib/devel/devel_generate/devel_generate.info
+++ b/profiles/commons/modules/contrib/devel/devel_generate/devel_generate.info
@@ -7,9 +7,9 @@ tags[] = developer
 configure = admin/config/development/generate
 files[] = devel_generate.test
 
-; Information added by drupal.org packaging script on 2013-02-24
-version = "7.x-1.3+41-dev"
+; Information added by drupal.org packaging script on 2013-04-03
+version = "7.x-1.3+45-dev"
 core = "7.x"
 project = "devel"
-datestamp = "1361668291"
+datestamp = "1364950099"
 
diff --git a/profiles/commons/modules/contrib/devel/devel_generate/file.devel_generate.inc b/profiles/commons/modules/contrib/devel/devel_generate/file.devel_generate.inc
index 6577ef9..c4e76ea 100644
--- a/profiles/commons/modules/contrib/devel/devel_generate/file.devel_generate.inc
+++ b/profiles/commons/modules/contrib/devel/devel_generate/file.devel_generate.inc
@@ -18,8 +18,7 @@ function _file_devel_generate($object, $field, $instance, $bundle) {
       $source->uri = $path;
       $source->uid = 1; // TODO: randomize? use case specific.
       $source->filemime = 'text/plain';
-      $path_exploded = explode("//", $path);
-      $source->filename = array_pop($path_exploded);
+      $source->filename = basename($path);
       $destination_dir = $field['settings']['uri_scheme'] . '://' . $instance['settings']['file_directory'];
       file_prepare_directory($destination_dir, FILE_CREATE_DIRECTORY);
       $destination = $destination_dir . '/' . basename($path);
diff --git a/profiles/commons/modules/contrib/devel/devel_generate/image.devel_generate.inc b/profiles/commons/modules/contrib/devel/devel_generate/image.devel_generate.inc
index 772b016..ab6c00e 100644
--- a/profiles/commons/modules/contrib/devel/devel_generate/image.devel_generate.inc
+++ b/profiles/commons/modules/contrib/devel/devel_generate/image.devel_generate.inc
@@ -33,8 +33,7 @@ function _image_devel_generate($object, $field, $instance, $bundle) {
       $source->uri = $path;
       $source->uid = 1; // TODO: randomize? Use case specific.
       $source->filemime = 'image/' . pathinfo($path, PATHINFO_EXTENSION);
-      $filename = explode("//", $path);
-      $source->filename = array_pop($filename);
+      $source->filename = basename($path);
       $destination_dir = $field['settings']['uri_scheme'] . '://' . $instance['settings']['file_directory'];
       file_prepare_directory($destination_dir, FILE_CREATE_DIRECTORY);
       $destination = $destination_dir . '/' . basename($path);
diff --git a/profiles/commons/modules/contrib/devel/devel_krumo_path.js b/profiles/commons/modules/contrib/devel/devel_krumo_path.js
index fa01f77..cb17cff 100644
--- a/profiles/commons/modules/contrib/devel/devel_krumo_path.js
+++ b/profiles/commons/modules/contrib/devel/devel_krumo_path.js
@@ -7,7 +7,7 @@ Drupal.behaviors.devel = {
   attach: function (context, settings) {
 
     // Add hint to footnote
-    $('.krumo-footnote .krumo-call').before('<img style="vertical-align: middle;" title="Click to expand. Double-click to show path." src="' + Drupal.settings.basePath + 'misc/help.png"/>');
+    $('.krumo-footnote .krumo-call').once().before('<img style="vertical-align: middle;" title="Click to expand. Double-click to show path." src="' + Drupal.settings.basePath + 'misc/help.png"/>');
 
     var krumo_name = [];
     var krumo_type = [];
diff --git a/profiles/commons/modules/contrib/devel/devel_node_access.info b/profiles/commons/modules/contrib/devel/devel_node_access.info
index a94b6e8..00f2d5d 100644
--- a/profiles/commons/modules/contrib/devel/devel_node_access.info
+++ b/profiles/commons/modules/contrib/devel/devel_node_access.info
@@ -6,9 +6,9 @@ core = 7.x
 configure = admin/config/development/devel
 tags[] = developer
 
-; Information added by drupal.org packaging script on 2013-02-24
-version = "7.x-1.3+41-dev"
+; Information added by drupal.org packaging script on 2013-04-03
+version = "7.x-1.3+45-dev"
 core = "7.x"
 project = "devel"
-datestamp = "1361668291"
+datestamp = "1364950099"
 
diff --git a/profiles/commons/modules/contrib/entity/PATCHES.txt b/profiles/commons/modules/contrib/entity/PATCHES.txt
new file mode 100644
index 0000000..bf42cb1
--- /dev/null
+++ b/profiles/commons/modules/contrib/entity/PATCHES.txt
@@ -0,0 +1,4 @@
+The following patches have been applied to this project:
+- http://drupal.org/files/entity-translatable_fields_not_overriding_und_with_empty_values.patch
+
+This file was automatically generated by Drush Make (http://drupal.org/project/drush).
\ No newline at end of file
diff --git a/profiles/commons/modules/contrib/entity/modules/callbacks.inc b/profiles/commons/modules/contrib/entity/modules/callbacks.inc
index dca9e1d..654c067 100644
--- a/profiles/commons/modules/contrib/entity/modules/callbacks.inc
+++ b/profiles/commons/modules/contrib/entity/modules/callbacks.inc
@@ -519,6 +519,12 @@ function entity_metadata_field_get_language($entity_type, $entity, $field, $lang
 
   // Determine the right language to use.
   if ($default_langcode != LANGUAGE_NONE && field_is_translatable($entity_type, $field)) {
+    // If the field has a value under LANGUAGE_NONE and doesn't have a value
+    // under the default language, don't force the default language.
+    if (empty($entity->{$field['field_name']}[$default_langcode]) && !empty($entity->{$field['field_name']}[LANGUAGE_NONE])) {
+      return LANGUAGE_NONE;
+    }
+
     $langcode = ($langcode != LANGUAGE_NONE) ? field_valid_language($langcode, $default_langcode) : $default_langcode;
     if (!isset($entity->{$field['field_name']}[$langcode]) && $fallback) {
       $langcode = $default_langcode;
diff --git a/profiles/commons/modules/contrib/entityreference/entityreference.info b/profiles/commons/modules/contrib/entityreference/entityreference.info
index d0b109a..54ca820 100644
--- a/profiles/commons/modules/contrib/entityreference/entityreference.info
+++ b/profiles/commons/modules/contrib/entityreference/entityreference.info
@@ -23,9 +23,10 @@ files[] = tests/entityreference.taxonomy.test
 files[] = tests/entityreference.admin.test
 files[] = tests/entityreference.feeds.test
 
-; Information added by drupal.org packaging script on 2013-02-01
+
+; Information added by drush on 2013-04-04
 version = "7.x-1.0+4-dev"
 core = "7.x"
 project = "entityreference"
-datestamp = "1359680274"
+datestamp = "1365041476"
 
diff --git a/profiles/commons/modules/contrib/entityreference/examples/entityreference_behavior_example/entityreference_behavior_example.info b/profiles/commons/modules/contrib/entityreference/examples/entityreference_behavior_example/entityreference_behavior_example.info
index 4f4422e..6d1b460 100644
--- a/profiles/commons/modules/contrib/entityreference/examples/entityreference_behavior_example/entityreference_behavior_example.info
+++ b/profiles/commons/modules/contrib/entityreference/examples/entityreference_behavior_example/entityreference_behavior_example.info
@@ -4,9 +4,10 @@ core = 7.x
 package = Fields
 dependencies[] = entityreference
 
-; Information added by drupal.org packaging script on 2013-02-01
+
+; Information added by drush on 2013-04-04
 version = "7.x-1.0+4-dev"
 core = "7.x"
 project = "entityreference"
-datestamp = "1359680274"
+datestamp = "1365041476"
 
diff --git a/profiles/commons/modules/contrib/entityreference/tests/modules/entityreference_feeds_test/entityreference_feeds_test.info b/profiles/commons/modules/contrib/entityreference/tests/modules/entityreference_feeds_test/entityreference_feeds_test.info
index efbbbda..22b324e 100644
--- a/profiles/commons/modules/contrib/entityreference/tests/modules/entityreference_feeds_test/entityreference_feeds_test.info
+++ b/profiles/commons/modules/contrib/entityreference/tests/modules/entityreference_feeds_test/entityreference_feeds_test.info
@@ -8,9 +8,10 @@ dependencies[] = feeds
 dependencies[] = feeds_ui
 dependencies[] = entityreference
 
-; Information added by drupal.org packaging script on 2013-02-01
+
+; Information added by drush on 2013-04-04
 version = "7.x-1.0+4-dev"
 core = "7.x"
 project = "entityreference"
-datestamp = "1359680274"
+datestamp = "1365041476"
 
diff --git a/profiles/commons/modules/contrib/facetapi/contrib/current_search/current_search.block.inc b/profiles/commons/modules/contrib/facetapi/contrib/current_search/current_search.block.inc
index 1fe1151..0aa830a 100644
--- a/profiles/commons/modules/contrib/facetapi/contrib/current_search/current_search.block.inc
+++ b/profiles/commons/modules/contrib/facetapi/contrib/current_search/current_search.block.inc
@@ -75,6 +75,18 @@ function current_search_block_info() {
 }
 
 /**
+ * Implements hook_ctools_block_info().
+ *
+ * @see http://drupal.org/node/1669918
+ */
+function current_search_ctools_block_info($module, $delta, &$info) {
+  // Give the current search blocks it's own categories.
+  $info['category'] = t('Current Search Blocks');
+  // Allow blocks to be used before the search results in Panels.
+  $info['render last'] = TRUE;
+}
+
+/**
  * Returns the content for a facet based on the delta.
  */
 function current_search_block_view($delta = '') {
diff --git a/profiles/commons/modules/contrib/facetapi/contrib/current_search/current_search.info b/profiles/commons/modules/contrib/facetapi/contrib/current_search/current_search.info
index 7519197..d9bee5a 100644
--- a/profiles/commons/modules/contrib/facetapi/contrib/current_search/current_search.info
+++ b/profiles/commons/modules/contrib/facetapi/contrib/current_search/current_search.info
@@ -10,9 +10,9 @@ files[] = plugins/current_search/item_text.inc
 files[] = tests/current_search.test
 configure = admin/config/search/current_search
 
-; Information added by drupal.org packaging script on 2012-09-20
-version = "7.x-1.2"
+; Information added by drupal.org packaging script on 2013-04-02
+version = "7.x-1.3"
 core = "7.x"
 project = "facetapi"
-datestamp = "1348169693"
+datestamp = "1364861711"
 
diff --git a/profiles/commons/modules/contrib/facetapi/contrib/current_search/current_search.module b/profiles/commons/modules/contrib/facetapi/contrib/current_search/current_search.module
index 21fa39c..8ab1da5 100644
--- a/profiles/commons/modules/contrib/facetapi/contrib/current_search/current_search.module
+++ b/profiles/commons/modules/contrib/facetapi/contrib/current_search/current_search.module
@@ -103,7 +103,7 @@ function current_search_theme() {
     ),
     'current_search_sort_settings_table' => array(
       'render element' => 'element',
-      'file' => 'plugins/export_ui/current_search_export_ui.class.php',
+      'file' => 'current_search.theme.inc',
     ),
   );
 }
diff --git a/profiles/commons/modules/contrib/facetapi/contrib/current_search/current_search.theme.inc b/profiles/commons/modules/contrib/facetapi/contrib/current_search/current_search.theme.inc
index 0ec966d..3f11ac1 100644
--- a/profiles/commons/modules/contrib/facetapi/contrib/current_search/current_search.theme.inc
+++ b/profiles/commons/modules/contrib/facetapi/contrib/current_search/current_search.theme.inc
@@ -141,3 +141,39 @@ function theme_current_search_keys($variables) {
 function theme_current_search_deactivate_widget($variables) {
   return ' [X]';
 }
+
+/**
+ * Returns the sort table.
+ *
+ * @param $variables
+ *   An associative array containing:
+ *   - element: A render element representing the form.
+ *
+ * @ingroup themeable
+ */
+function theme_current_search_sort_settings_table($variables) {
+  $output = '';
+
+  // Builds table rows.
+  $rows = array();
+  foreach ($variables['element']['#current_search']['items'] as $name => $settings) {
+    $rows[$name] = array(
+      'class' => array('draggable'),
+      'data' => array(
+        drupal_render($variables['element'][$name]['item']),
+        drupal_render($variables['element'][$name]['weight']),
+        array(
+          'data' => drupal_render($variables['element'][$name]['remove']),
+          'class' => 'current-search-remove-link',
+        ),
+      ),
+    );
+  }
+
+  // Builds table with drabble rows, returns output.
+  $table_id = 'current-search-sort-settings';
+  drupal_add_tabledrag($table_id, 'order', 'sibling', 'current-search-sort-weight');
+  $output .= drupal_render_children($variables['element']);
+  $output .= theme('table', array('rows' => $rows, 'attributes' => array('id' => $table_id)));
+  return $output;
+}
diff --git a/profiles/commons/modules/contrib/facetapi/contrib/current_search/plugins/current_search/item_text.inc b/profiles/commons/modules/contrib/facetapi/contrib/current_search/plugins/current_search/item_text.inc
index 83748a4..a1c813e 100644
--- a/profiles/commons/modules/contrib/facetapi/contrib/current_search/plugins/current_search/item_text.inc
+++ b/profiles/commons/modules/contrib/facetapi/contrib/current_search/plugins/current_search/item_text.inc
@@ -19,7 +19,7 @@ class CurrentSearchItemText extends CurrentSearchItem {
    * Implements CurrentSearchItem::execute().
    */
   public function execute(FacetapiAdapter $adapter) {
-    $data = array('facetapi_adapter' => $adapter);
+    $data = array('facetapi_results' => array('facetapi_adapter' => $adapter));
 
     // Determines plurality of string.
     if ($this->settings['plural']) {
diff --git a/profiles/commons/modules/contrib/facetapi/contrib/current_search/plugins/export_ui/current_search_export_ui.class.php b/profiles/commons/modules/contrib/facetapi/contrib/current_search/plugins/export_ui/current_search_export_ui.class.php
index 7186605..2d65bd3 100644
--- a/profiles/commons/modules/contrib/facetapi/contrib/current_search/plugins/export_ui/current_search_export_ui.class.php
+++ b/profiles/commons/modules/contrib/facetapi/contrib/current_search/plugins/export_ui/current_search_export_ui.class.php
@@ -330,6 +330,13 @@ function current_search_settings_form(&$form, &$form_state) {
   ////
   ////
 
+  // Ensure the theme function is available after upgrading to 7.x-1.3. A cache
+  // clear is all that is needed to fix the broken sort table, however this hack
+  // ensures that the theme function is available without having to do so.
+  // @todo Remove this in later versions of the module.
+  // @see http://drupal.org/node/1795556
+  module_load_include('inc', 'current_search', 'current_search.theme');
+
   $form['plugin_sort'] = array(
     '#type' => 'item',
     '#access' => !empty($item->settings['items']),
@@ -447,41 +454,7 @@ function current_search_settings_form(&$form, &$form_state) {
 
 }
 
-/**
- * Returns the sort table.
- *
- * @param $variables
- *   An associative array containing:
- *   - element: A render element representing the form.
- *
- * @ingroup themeable
- */
-function theme_current_search_sort_settings_table($variables) {
-  $output = '';
-
-  // Builds table rows.
-  $rows = array();
-  foreach ($variables['element']['#current_search']['items'] as $name => $settings) {
-    $rows[$name] = array(
-      'class' => array('draggable'),
-      'data' => array(
-        drupal_render($variables['element'][$name]['item']),
-        drupal_render($variables['element'][$name]['weight']),
-        array(
-          'data' => drupal_render($variables['element'][$name]['remove']),
-          'class' => 'current-search-remove-link',
-        ),
-      ),
-    );
-  }
 
-  // Builds table with drabble rows, returns output.
-  $table_id = 'current-search-sort-settings';
-  drupal_add_tabledrag($table_id, 'order', 'sibling', 'current-search-sort-weight');
-  $output .= drupal_render_children($variables['element']);
-  $output .= theme('table', array('rows' => $rows, 'attributes' => array('id' => $table_id)));
-  return $output;
-}
 
 /**
  * Form validation handler for current_search_settings_form().
diff --git a/profiles/commons/modules/contrib/facetapi/facetapi.admin.inc b/profiles/commons/modules/contrib/facetapi/facetapi.admin.inc
index 4f2a43d..0d08dbd 100644
--- a/profiles/commons/modules/contrib/facetapi/facetapi.admin.inc
+++ b/profiles/commons/modules/contrib/facetapi/facetapi.admin.inc
@@ -384,7 +384,7 @@ function facetapi_facet_display_form($form, &$form_state, FacetapiAdapter $adapt
 
   // We have to set the title due to contextual link magic.
   // @see http://drupal.org/node/1147588#comment-4428940
-  drupal_set_title(t('Configure facet display'));
+  drupal_set_title(t('Configure facet display for @label', array('@label' => $facet['label'])));
 
   // Captures variables and settings for code readability.
   $searcher = $adapter->getSearcher();
@@ -807,14 +807,14 @@ function facetapi_facet_display_form_submit($form, &$form_state) {
  */
 function facetapi_facet_filters_form($form, &$form_state, FacetapiAdapter $adapter, array $realm, array $filters) {
 
-  // We have to set the title due to contextual link magic.
-  // @see http://drupal.org/node/1147588#comment-4428940
-  drupal_set_title(t('Configure facet filters'));
-
   // Loads variables for code readability.
   $facet = $filters['facet'];
   $settings = $adapter->getFacet($facet)->getSettings($realm);
 
+  // We have to set the title due to contextual link magic.
+  // @see http://drupal.org/node/1147588#comment-4428940
+  drupal_set_title(t('Configure facet filters for @label', array('@label' => $facet['label'])));
+
   // Adds Facet API settings, excluded values aren't saved.
   $form['#facetapi'] = array(
     'adapter' => $adapter,
@@ -1053,7 +1053,8 @@ function facetapi_facet_dependencies_form($form, &$form_state, FacetapiAdapter $
 
   // We have to set the title due to contextual link magic.
   // @see http://drupal.org/node/1147588#comment-4428940
-  drupal_set_title(t('Configure facet dependencies'));
+  $facet = facetapi_facet_load(arg(6), $adapter->getSearcher());
+  drupal_set_title(t('Configure facet dependencies for @label', array('@label' => $facet['label'])));
 
   // Adds Facet API settings, excluded values aren't saved.
   $form['#facetapi'] = array(
diff --git a/profiles/commons/modules/contrib/facetapi/facetapi.api.php b/profiles/commons/modules/contrib/facetapi/facetapi.api.php
index 1715251..a9a432f 100644
--- a/profiles/commons/modules/contrib/facetapi/facetapi.api.php
+++ b/profiles/commons/modules/contrib/facetapi/facetapi.api.php
@@ -447,9 +447,14 @@ function hook_facetapi_url_processors() {
  *   associative array keyed by "handler" containing:
  *   - label: The human readable name of the plugin displayed in the admin UI.
  *   - class: The name of the plugin class.
- *   - query types: An array of query-types that this widget is compatible with
+ *   - query types: An array of query-types that this widget is compatible with.
+ *   - requirements: An array of requirements that must pass in order for this
+ *     widget to be displayed. Requirements are associative arrays keyed by
+ *     function to requirement options. The value defaults to a requirement that
+ *     the "element type" realm property is equal to "links".
  *
  * @see FacetapiWidget
+ * @see facetapi_get_widgets()
  */
 function hook_facetapi_widgets() {
   return array(
@@ -458,6 +463,9 @@ function hook_facetapi_widgets() {
         'label' => t('Links'),
         'class' => 'FacetapiWidgetLinks',
         'query types' => array('term', 'date'),
+        'requirements' => array(
+          'facetapi_requirement_realm_property' => array('element type' => 'links')
+        ),
       ),
     ),
   );
diff --git a/profiles/commons/modules/contrib/facetapi/facetapi.block.inc b/profiles/commons/modules/contrib/facetapi/facetapi.block.inc
index 55a38be..21b11bf 100644
--- a/profiles/commons/modules/contrib/facetapi/facetapi.block.inc
+++ b/profiles/commons/modules/contrib/facetapi/facetapi.block.inc
@@ -195,7 +195,7 @@ function facetapi_check_block_visibility($delta) {
 function facetapi_get_delta_map() {
   $map = &drupal_static(__FUNCTION__);
   if (NULL === $map) {
-    if ($data = cache_get('facetapi:delta_map')) {
+    if ($data = cache_get('facetapi:delta_map') && !empty($data->data)) {
       $map = $data->data;
     }
     else {
diff --git a/profiles/commons/modules/contrib/facetapi/facetapi.info b/profiles/commons/modules/contrib/facetapi/facetapi.info
index 482aded..b17571a 100644
--- a/profiles/commons/modules/contrib/facetapi/facetapi.info
+++ b/profiles/commons/modules/contrib/facetapi/facetapi.info
@@ -18,9 +18,9 @@ files[] = plugins/facetapi/widget_links.inc
 files[] = tests/facetapi_test.plugins.inc
 files[] = tests/facetapi.test
 
-; Information added by drupal.org packaging script on 2012-09-20
-version = "7.x-1.2"
+; Information added by drupal.org packaging script on 2013-04-02
+version = "7.x-1.3"
 core = "7.x"
 project = "facetapi"
-datestamp = "1348169693"
+datestamp = "1364861711"
 
diff --git a/profiles/commons/modules/contrib/facetapi/facetapi.js b/profiles/commons/modules/contrib/facetapi/facetapi.js
index 1fed227..e2c5b69 100644
--- a/profiles/commons/modules/contrib/facetapi/facetapi.js
+++ b/profiles/commons/modules/contrib/facetapi/facetapi.js
@@ -88,17 +88,23 @@ Drupal.facetapi.makeCheckbox = function() {
       // Not a facet link.
       return;
     }
-    var checkbox = active ? $('<input type="checkbox" class="facetapi-checkbox" checked="true" />') : $('<input type="checkbox" class="facetapi-checkbox" />');
+    // Derive an ID and label for the checkbox based on the associated link.
+    // The label is required for accessibility, but it duplicates information
+    // in the link itself, so it should only be shown to screen reader users.
+    var id = this.id + '--checkbox';
+    var description = $link.find('.element-invisible').html();
+    var label = $('<label class="element-invisible" for="' + id + '">' + description + '</label>');
+    var checkbox = active ? $('<input type="checkbox" class="facetapi-checkbox" id="' + id + '" checked="true" />') : $('<input type="checkbox" class="facetapi-checkbox" id="' + id + '" />');
     // Get the href of the link that is this DOM object.
     var href = $link.attr('href');
     redirect = new Drupal.facetapi.Redirect(href);
     checkbox.click($.proxy(redirect, 'gotoHref'));
     if (active) {
-      // Add the checkbox, hide the link.
-      $link.before(checkbox).hide();
+      // Add the checkbox and label, hide the link.
+      $link.before(label).before(checkbox).hide();
     }
     else {
-      $link.before(checkbox);
+      $link.before(label).before(checkbox);
     }
     $link.removeClass('facetapi-checkbox').addClass('facetapi-checkbox-processed');
   }
diff --git a/profiles/commons/modules/contrib/facetapi/facetapi.theme.inc b/profiles/commons/modules/contrib/facetapi/facetapi.theme.inc
index 097a6fa..d392dcb 100644
--- a/profiles/commons/modules/contrib/facetapi/facetapi.theme.inc
+++ b/profiles/commons/modules/contrib/facetapi/facetapi.theme.inc
@@ -33,7 +33,7 @@ function theme_facetapi_title($variables) {
 }
 
 /**
- * Returns HTML for an active facet item.
+ * Returns HTML for an inactive facet item.
  *
  * @param $variables
  *   An associative array containing the keys 'text', 'path', 'options', and
@@ -68,7 +68,7 @@ function theme_facetapi_link_inactive($variables) {
 }
 
 /**
- * Returns HTML for the inactive facet item's count.
+ * Returns HTML for the active facet item's count.
  *
  * @param $variables
  *   An associative array containing:
@@ -146,5 +146,9 @@ function theme_facetapi_deactivate_widget($variables) {
 function theme_facetapi_accessible_markup($variables) {
   $vars = array('@text' => $variables['text']);
   $text = ($variables['active']) ? t('Remove @text filter', $vars) : t('Apply @text filter', $vars);
-  return '<span class="element-invisible">' . $text . '</span>';
+  // Add spaces before and after the text, since other content may be displayed
+  // inline with this and we don't want the words to run together. However, the
+  // spaces must be inside the <span> so as not to disrupt the layout for
+  // sighted users.
+  return '<span class="element-invisible"> ' . $text . ' </span>';
 }
diff --git a/profiles/commons/modules/contrib/facetapi/facetapi.tokens.inc b/profiles/commons/modules/contrib/facetapi/facetapi.tokens.inc
index 5d4534e..24cf072 100644
--- a/profiles/commons/modules/contrib/facetapi/facetapi.tokens.inc
+++ b/profiles/commons/modules/contrib/facetapi/facetapi.tokens.inc
@@ -124,9 +124,9 @@ function facetapi_token_info() {
 function facetapi_tokens($type, $tokens, array $data = array(), array $options = array()) {
   $replacements = array();
 
-  if ('facetapi_results' == $type && !empty($data['facetapi_adapter'])) {
+  if ('facetapi_results' == $type && !empty($data['facetapi_results']['facetapi_adapter'])) {
 
-    $adapter = $data['facetapi_adapter'];
+    $adapter = $data['facetapi_results']['facetapi_adapter'];
     foreach ($tokens as $name => $original) {
       switch ($name) {
 
diff --git a/profiles/commons/modules/contrib/facetapi/plugins/facetapi/adapter.inc b/profiles/commons/modules/contrib/facetapi/plugins/facetapi/adapter.inc
index 67adce5..0ace511 100644
--- a/profiles/commons/modules/contrib/facetapi/plugins/facetapi/adapter.inc
+++ b/profiles/commons/modules/contrib/facetapi/plugins/facetapi/adapter.inc
@@ -211,8 +211,19 @@ abstract class FacetapiAdapter {
     // Get the url processor plugin class. If the class for the passed plugin
     // cannot be retrieved, log the error and load the standard plugin.
     if (!$class = ctools_plugin_load_class('facetapi', 'url_processors', $id, 'handler')) {
-      watchdog('facetapi', 'Url processor plugin "@id" not valid, loading standard plugin.', array('@id' => $id), WATCHDOG_ERROR);
-      $class = ctools_plugin_load_class('facetapi', 'url_processors', 'standard', 'handler');
+      if ('standard' != $id) {
+        watchdog('facetapi', 'Url processor plugin "@id" not valid, loading standard plugin.', array('@id' => $id), WATCHDOG_ERROR);
+        $class = ctools_plugin_load_class('facetapi', 'url_processors', 'standard', 'handler');
+      }
+      else {
+        // The plugins are not registered, probably because CTools is weighted
+        // heavier than Facet API. It is still unclear why this even matters.
+        // Let's raise a call to action and explicitly set the class to prevent
+        // fatal errors.
+        // @see http://drupal.org/node/1816110
+        watchdog('facetapi', 'Url processor plugins are not yet registered, loading standard plugin. Please visit <a href="@url">@url</a> for more information.', array('@id' => $id, '@url' => 'http://drupal.org/node/1816110'), WATCHDOG_ERROR);
+        $class = 'FacetapiUrlProcessorStandard';
+      }
     }
 
     // Instantiates and initializes plugin.
@@ -1044,7 +1055,6 @@ abstract class FacetapiAdapter {
     $this->processFacets();
 
     // Add JavaScript, initializes the realm specific render array.
-    drupal_add_js(drupal_get_path('module', 'facetapi') . '/facetapi.js');
     $build = array(
       '#adapter' => $this,
       '#realm' => $realm,
@@ -1053,7 +1063,7 @@ abstract class FacetapiAdapter {
     // Iterate over the realm's enabled facets and build their render arrays.
     foreach ($this->getEnabledFacets($realm['name']) as $facet) {
       // Continue to the next facet if this one failed its dependencies.
-      if (!$this->dependenciesPassed[$facet['name']]) {
+      if (empty($this->dependenciesPassed[$facet['name']])) {
         continue;
       }
 
diff --git a/profiles/commons/modules/contrib/facetapi/plugins/facetapi/widget.inc b/profiles/commons/modules/contrib/facetapi/plugins/facetapi/widget.inc
index c84b2fa..e18c3db 100644
--- a/profiles/commons/modules/contrib/facetapi/plugins/facetapi/widget.inc
+++ b/profiles/commons/modules/contrib/facetapi/plugins/facetapi/widget.inc
@@ -143,6 +143,9 @@ abstract class FacetapiWidget {
         ),
         'id' => drupal_html_id("facetapi-facet-$searcher-{$this->realm['name']}-{$this->facet['name']}"),
       ),
+      '#attached' => array(
+        'js' => array(drupal_get_path('module', 'facetapi') . '/facetapi.js'),
+      ),
     );
 
     // Apply sorting algorithms to the render array.
diff --git a/profiles/commons/modules/contrib/facetapi/plugins/facetapi/widget_links.inc b/profiles/commons/modules/contrib/facetapi/plugins/facetapi/widget_links.inc
index fa4862c..81075b2 100644
--- a/profiles/commons/modules/contrib/facetapi/plugins/facetapi/widget_links.inc
+++ b/profiles/commons/modules/contrib/facetapi/plugins/facetapi/widget_links.inc
@@ -114,6 +114,9 @@ class FacetapiWidgetLinks extends FacetapiWidget {
         $variables['options']['attributes']['class'][] = 'facetapi-zero-results';
       }
 
+      // Add an ID to identify this link.
+      $variables['options']['attributes']['id'] = drupal_html_id('facetapi-link');
+
       // If the item has no children, it is a leaf.
       if (empty($item['#item_children'])) {
         $row['class'][] = 'leaf';
diff --git a/profiles/commons/modules/contrib/facetapi/tests/facetapi_test.info b/profiles/commons/modules/contrib/facetapi/tests/facetapi_test.info
index 9800599..3b8edd7 100644
--- a/profiles/commons/modules/contrib/facetapi/tests/facetapi_test.info
+++ b/profiles/commons/modules/contrib/facetapi/tests/facetapi_test.info
@@ -5,9 +5,9 @@ package = Testing
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-09-20
-version = "7.x-1.2"
+; Information added by drupal.org packaging script on 2013-04-02
+version = "7.x-1.3"
 core = "7.x"
 project = "facetapi"
-datestamp = "1348169693"
+datestamp = "1364861711"
 
diff --git a/profiles/commons/modules/contrib/facetapi/tests/facetapi_test.module b/profiles/commons/modules/contrib/facetapi/tests/facetapi_test.module
index 7fa49b6..c1ef37c 100644
--- a/profiles/commons/modules/contrib/facetapi/tests/facetapi_test.module
+++ b/profiles/commons/modules/contrib/facetapi/tests/facetapi_test.module
@@ -117,7 +117,7 @@ function facetapi_test_facetapi_facet_info($searcher_info) {
 
     $facets['colon:test'] = array(
       'label' => t('Colon test'),
-      'description' => t('Test facets names with colonss.'),
+      'description' => t('Test facets names with colons.'),
       'dependency plugins' => array('role'),
     );
 
@@ -134,8 +134,8 @@ function facetapi_test_facetapi_facet_info($searcher_info) {
     );
 
     $facets['hierarchical'] = array(
-      'label' => t('Colon test'),
-      'description' => t('Test facets names with colonss.'),
+      'label' => t('Hierarchical test'),
+      'description' => t('Test hierarchical facets.'),
       'dependency plugins' => array('role'),
       'hierarchy callback' => 'facetapi_test_process_hierarchy',
     );
diff --git a/profiles/commons/modules/contrib/facetapi/tests/facetapi_test.plugins.inc b/profiles/commons/modules/contrib/facetapi/tests/facetapi_test.plugins.inc
index 4570f4e..f480af8 100644
--- a/profiles/commons/modules/contrib/facetapi/tests/facetapi_test.plugins.inc
+++ b/profiles/commons/modules/contrib/facetapi/tests/facetapi_test.plugins.inc
@@ -34,6 +34,13 @@ class FacetapiTestAdapter extends FacetapiAdapter {
   }
 
   /**
+   * Overrides FacetapiAdapter::getSearchPath().
+   */
+  public function getSearchPath() {
+    return 'facetapi_test/search';
+  }
+
+  /**
    * Sets the result count.
    *
    * The test searcher does not use the core pager APIs, so we use this method
diff --git a/profiles/commons/modules/contrib/features/features.info b/profiles/commons/modules/contrib/features/features.info
index 915a612..d523039 100644
--- a/profiles/commons/modules/contrib/features/features.info
+++ b/profiles/commons/modules/contrib/features/features.info
@@ -4,9 +4,10 @@ core = 7.x
 package = "Features"
 files[] = tests/features.test
 
-; Information added by drupal.org packaging script on 2012-12-08
+
+; Information added by drush on 2013-04-04
 version = "7.x-2.0-beta1+5-dev"
 core = "7.x"
 project = "features"
-datestamp = "1354928180"
+datestamp = "1365041473"
 
diff --git a/profiles/commons/modules/contrib/features/tests/features_test.info b/profiles/commons/modules/contrib/features/tests/features_test.info
index 53be60f..033e0aa 100644
--- a/profiles/commons/modules/contrib/features/tests/features_test.info
+++ b/profiles/commons/modules/contrib/features/tests/features_test.info
@@ -20,9 +20,10 @@ features[user_permission][] = create features_test content
 features[views_view][] = features_test
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-12-08
+
+; Information added by drush on 2013-04-04
 version = "7.x-2.0-beta1+5-dev"
 core = "7.x"
 project = "features"
-datestamp = "1354928180"
+datestamp = "1365041473"
 
diff --git a/profiles/commons/modules/contrib/flag_abuse/flag_abuse.info b/profiles/commons/modules/contrib/flag_abuse/flag_abuse.info
index ffcd77b..8ed8f97 100644
--- a/profiles/commons/modules/contrib/flag_abuse/flag_abuse.info
+++ b/profiles/commons/modules/contrib/flag_abuse/flag_abuse.info
@@ -5,9 +5,9 @@ dependencies[] = flag
 dependencies[] = views
 core = 7.x
 
-; Information added by drupal.org packaging script on 2012-11-09
-version = "7.x-2.0-alpha1+0-dev"
+; Information added by drupal.org packaging script on 2012-11-08
+version = "7.x-2.0-alpha1"
 core = "7.x"
 project = "flag_abuse"
-datestamp = "1352422998"
+datestamp = "1352408207"
 
diff --git a/profiles/commons/modules/contrib/http_client/http_client.info b/profiles/commons/modules/contrib/http_client/http_client.info
index 7736ef2..84a8c56 100644
--- a/profiles/commons/modules/contrib/http_client/http_client.info
+++ b/profiles/commons/modules/contrib/http_client/http_client.info
@@ -8,9 +8,9 @@ files[] = includes/HttpClientCurlDelegate.inc
 package = Services - clients
 core = 7.x
 
-; Information added by drupal.org packaging script on 2012-08-23
-version = "7.x-2.4+0-dev"
+; Information added by drupal.org packaging script on 2012-08-22
+version = "7.x-2.4"
 core = "7.x"
 project = "http_client"
-datestamp = "1345681779"
+datestamp = "1345646840"
 
diff --git a/profiles/commons/modules/contrib/http_client/http_client_oauth.info b/profiles/commons/modules/contrib/http_client/http_client_oauth.info
index 5a0c019..90a30b5 100644
--- a/profiles/commons/modules/contrib/http_client/http_client_oauth.info
+++ b/profiles/commons/modules/contrib/http_client/http_client_oauth.info
@@ -8,9 +8,9 @@ files[] = includes/HttpClientOAuth.inc
 package = Services - clients
 core = 7.x
 
-; Information added by drupal.org packaging script on 2012-08-23
-version = "7.x-2.4+0-dev"
+; Information added by drupal.org packaging script on 2012-08-22
+version = "7.x-2.4"
 core = "7.x"
 project = "http_client"
-datestamp = "1345681779"
+datestamp = "1345646840"
 
diff --git a/profiles/commons/modules/contrib/libraries/CHANGELOG.txt b/profiles/commons/modules/contrib/libraries/CHANGELOG.txt
index 889664a..4738559 100644
--- a/profiles/commons/modules/contrib/libraries/CHANGELOG.txt
+++ b/profiles/commons/modules/contrib/libraries/CHANGELOG.txt
@@ -1,4 +1,11 @@
 
+Libraries 7.x-2.1, 2013-03-09
+-----------------------------
+#1937446 by Pol, tstoeckler: Add a 'pre-dependencies-load' callback group.
+#1775668 by tstoeckler: Fix bogus assertion message in assertLibraryFiles().
+#1773640 by tstoeckler: Use drupal_get_path() to find the profile directory.
+#1565426 by tstoeckler: Invoke hook_libraries_info() in enabled themes.
+
 Libraries 7.x-2.0, 2012-07-29
 -----------------------------
 #1606018 by chemical: Tests fail if the module is downloaded from Drupal.org.
diff --git a/profiles/commons/modules/contrib/libraries/libraries.api.php b/profiles/commons/modules/contrib/libraries/libraries.api.php
index ac09743..9ae1b32 100644
--- a/profiles/commons/modules/contrib/libraries/libraries.api.php
+++ b/profiles/commons/modules/contrib/libraries/libraries.api.php
@@ -162,10 +162,13 @@
  *         variant, a boolean indicating whether the variant is installed or
  *         not.
  *       Note that in this group the 'versions' property is no longer available.
- *     - pre-load: Callbacks registered in this group are applied directly
- *       before this library is loaded. At this point the library contains
- *       variant-specific information, if specified. Note that in this group the
- *       'variants' property is no longer available.
+ *     - pre-dependencies-load: Callbacks registered in this group are applied
+ *       directly before the library's dependencies are loaded. At this point
+ *       the library contains variant-specific information, if specified. Note
+ *       that in this group the 'variants' property is no longer available.
+ *     - pre-load: Callbacks registered in this group are applied directly after
+ *       the library's dependencies are loaded and before the library itself is
+ *       loaded.
  *     - post-load: Callbacks registered in this group are applied directly
  *       after this library is loaded. At this point, the library contains a
  *       'loaded' key, which contains the number of files that were loaded.
@@ -295,6 +298,10 @@ function hook_libraries_info() {
       'post-detect' => array(
         'mymodule_example_libraries_postdetect_callback',
       ),
+      // Called before the library's dependencies are loaded.
+      'pre-dependencie-load' => array(
+        'mymodule_example_libraries_pre_dependencies_load_callback',
+      ),
       // Called before the library is loaded.
       'pre-load' => array(
         'mymodule_example_libraries_preload_callback',
diff --git a/profiles/commons/modules/contrib/libraries/libraries.info b/profiles/commons/modules/contrib/libraries/libraries.info
index 4c98f77..d4b2af3 100644
--- a/profiles/commons/modules/contrib/libraries/libraries.info
+++ b/profiles/commons/modules/contrib/libraries/libraries.info
@@ -1,11 +1,11 @@
 name = Libraries
-description = Allows version dependent and shared usage of external libraries.
+description = Allows version-dependent and shared usage of external libraries.
 core = 7.x
 files[] = tests/libraries.test
 
-; Information added by drupal.org packaging script on 2012-07-29
-version = "7.x-2.0"
+; Information added by drupal.org packaging script on 2013-03-09
+version = "7.x-2.1"
 core = "7.x"
 project = "libraries"
-datestamp = "1343561873"
+datestamp = "1362848412"
 
diff --git a/profiles/commons/modules/contrib/libraries/libraries.module b/profiles/commons/modules/contrib/libraries/libraries.module
index 194e287..687fa29 100644
--- a/profiles/commons/modules/contrib/libraries/libraries.module
+++ b/profiles/commons/modules/contrib/libraries/libraries.module
@@ -65,34 +65,27 @@ function libraries_get_path($name, $base_path = FALSE) {
  * @ingroup libraries
  */
 function libraries_get_libraries() {
-  $directory = 'libraries';
   $searchdir = array();
-  $profile = drupal_get_profile();
+  $profile = drupal_get_path('profile', drupal_get_profile());
   $config = conf_path();
 
   // Similar to 'modules' and 'themes' directories in the root directory,
   // certain distributions may want to place libraries into a 'libraries'
   // directory in Drupal's root directory.
-  $searchdir[] = $directory;
-
-  // The 'profiles' directory contains pristine collections of modules and
-  // themes as organized by a distribution.  It is pristine in the same way
-  // that /modules is pristine for core; users should avoid changing anything
-  // there in favor of sites/all or sites/<domain> directories.
-  if (file_exists("profiles/$profile/$directory")) {
-    $searchdir[] = "profiles/$profile/$directory";
-  }
+  $searchdir[] = 'libraries';
+
+  // Similar to 'modules' and 'themes' directories inside an installation
+  // profile, installation profiles may want to place libraries into a
+  // 'libraries' directory.
+  $searchdir[] = "$profile/libraries";
 
-  // Always search sites/all/*.
-  $searchdir[] = 'sites/all/' . $directory;
+  // Always search sites/all/libraries.
+  $searchdir[] = 'sites/all/libraries';
 
   // Also search sites/<domain>/*.
-  if (file_exists("$config/$directory")) {
-    $searchdir[] = "$config/$directory";
-  }
+  $searchdir[] = "$config/libraries";
 
   // Retrieve list of directories.
-  // @todo Core: Allow to scan for directories.
   $directories = array();
   $nomask = array('CVS');
   foreach ($searchdir as $dir) {
@@ -126,13 +119,13 @@ function libraries_get_libraries() {
  *   the files.
  */
 function libraries_scan_info_files() {
-  $profile = drupal_get_profile();
+  $profile = drupal_get_path('profile', drupal_get_profile());
   $config = conf_path();
 
   // Build a list of directories.
   $directories = module_invoke_all('libraries_info_file_paths');
   $directories[] = 'libraries';
-  $directories[] = "profiles/$profile/libraries";
+  $directories[] = "$profile/libraries";
   $directories[] = 'sites/all/libraries';
   $directories[] = "$config/libraries";
 
@@ -347,6 +340,26 @@ function &libraries_info($name = NULL) {
         $libraries[$machine_name] = $properties;
       }
     }
+    // Gather information from hook_libraries_info() in enabled themes.
+    // @see drupal_alter()
+    global $theme, $base_theme_info;
+    if (isset($theme)) {
+      $theme_keys = array();
+      foreach ($base_theme_info as $base) {
+        $theme_keys[] = $base->name;
+      }
+      $theme_keys[] = $theme;
+      foreach ($theme_keys as $theme_key) {
+        $function = $theme_key . '_' . 'libraries_info';
+        if (function_exists($function)) {
+          foreach ($function() as $machine_name => $properties) {
+            $properties['theme'] = $theme_key;
+            $libraries[$machine_name] = $properties;
+          }
+        }
+      }
+    }
+
     // Gather information from .info files.
     // .info files override module definitions.
     foreach (libraries_scan_info_files() as $machine_name => $file) {
@@ -410,6 +423,7 @@ function libraries_info_defaults(&$library, $name) {
     'info' => array(),
     'pre-detect' => array(),
     'post-detect' => array(),
+    'pre-dependencies-load' => array(),
     'pre-load' => array(),
     'post-load' => array(),
   );
@@ -599,6 +613,9 @@ function libraries_load($name, $variant = NULL) {
     // only be one variant of a library within a single request.
     unset($library['variants']);
 
+    // Invoke callbacks in the 'pre-dependencies-load' group.
+    libraries_invoke('pre-dependencies-load', $library);
+
     // If the library (variant) is installed, load it.
     $library['loaded'] = FALSE;
     if ($library['installed']) {
diff --git a/profiles/commons/modules/contrib/libraries/tests/example/example_info_file.libraries.info b/profiles/commons/modules/contrib/libraries/tests/example/example_info_file.libraries.info
index 9840481..7853721 100644
--- a/profiles/commons/modules/contrib/libraries/tests/example/example_info_file.libraries.info
+++ b/profiles/commons/modules/contrib/libraries/tests/example/example_info_file.libraries.info
@@ -3,9 +3,9 @@
 name = Example info file
 
 
-; Information added by drupal.org packaging script on 2012-07-29
-version = "7.x-2.0"
+; Information added by drupal.org packaging script on 2013-03-09
+version = "7.x-2.1"
 core = "7.x"
 project = "libraries"
-datestamp = "1343561873"
+datestamp = "1362848412"
 
diff --git a/profiles/commons/modules/contrib/libraries/tests/libraries.test b/profiles/commons/modules/contrib/libraries/tests/libraries.test
index 6e8da0e..1770162 100644
--- a/profiles/commons/modules/contrib/libraries/tests/libraries.test
+++ b/profiles/commons/modules/contrib/libraries/tests/libraries.test
@@ -320,6 +320,7 @@ class LibrariesTestCase extends DrupalWebTestCase {
               'info callback' => 'not applied',
               'pre-detect callback' => 'not applied',
               'post-detect callback' => 'not applied',
+              'pre-dependencies-load callback' => 'not applied',
               'pre-load callback' => 'not applied',
               'post-load callback' => 'not applied',
             ),
@@ -327,6 +328,7 @@ class LibrariesTestCase extends DrupalWebTestCase {
           'info callback' => 'not applied',
           'pre-detect callback' => 'not applied',
           'post-detect callback' => 'not applied',
+          'pre-dependencies-load callback' => 'not applied',
           'pre-load callback' => 'not applied',
           'post-load callback' => 'not applied',
         ),
@@ -336,6 +338,7 @@ class LibrariesTestCase extends DrupalWebTestCase {
           'info callback' => 'not applied',
           'pre-detect callback' => 'not applied',
           'post-detect callback' => 'not applied',
+          'pre-dependencies-load callback' => 'not applied',
           'pre-load callback' => 'not applied',
           'post-load callback' => 'not applied',
         ),
@@ -344,12 +347,14 @@ class LibrariesTestCase extends DrupalWebTestCase {
         'info' => array('_libraries_test_info_callback'),
         'pre-detect' => array('_libraries_test_pre_detect_callback'),
         'post-detect' => array('_libraries_test_post_detect_callback'),
+        'pre-dependencies-load' => array('_libraries_test_pre_dependencies_load_callback'),
         'pre-load' => array('_libraries_test_pre_load_callback'),
         'post-load' => array('_libraries_test_post_load_callback'),
       ),
       'info callback' => 'not applied',
       'pre-detect callback' => 'not applied',
       'post-detect callback' => 'not applied',
+      'pre-dependencies-load callback' => 'not applied',
       'pre-load callback' => 'not applied',
       'post-load callback' => 'not applied',
       'module' => 'libraries_test',
@@ -387,11 +392,13 @@ class LibrariesTestCase extends DrupalWebTestCase {
     $this->verbose('Actual:<pre>' . var_export($library, TRUE) . '</pre>');
     $this->assertEqual($library, $expected, 'Detect callback was applied correctly.');
 
-    // Test a callback in the 'pre-load' and 'post-load' phases.
+    // Test a callback in the 'pre-dependencies-load', 'pre-load' and
+    // 'post-load' phases.
     // Successfully loaded libraries should only contain information about the
     // already loaded variant.
     unset($expected['variants']);
     $expected['loaded'] = 0;
+    $expected['pre-dependencies-load callback'] = 'applied (top-level)';
     $expected['pre-load callback'] = 'applied (top-level)';
     $expected['post-load callback'] = 'applied (top-level)';
     $library = libraries_load('example_callback');
@@ -520,7 +527,7 @@ class LibrariesTestCase extends DrupalWebTestCase {
           $this->assertRaw($raw, "$label$name.$extension found.");
         }
         else {
-          $this->assertNoRaw($raw, "$label$name.$extension found.");
+          $this->assertNoRaw($raw, "$label$name.$extension not found.");
         }
       }
     }
diff --git a/profiles/commons/modules/contrib/libraries/tests/libraries_test.info b/profiles/commons/modules/contrib/libraries/tests/libraries_test.info
index 7ec45cc..cc17f3a 100644
--- a/profiles/commons/modules/contrib/libraries/tests/libraries_test.info
+++ b/profiles/commons/modules/contrib/libraries/tests/libraries_test.info
@@ -4,9 +4,9 @@ core = 7.x
 dependencies[] = libraries
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-07-29
-version = "7.x-2.0"
+; Information added by drupal.org packaging script on 2013-03-09
+version = "7.x-2.1"
 core = "7.x"
 project = "libraries"
-datestamp = "1343561873"
+datestamp = "1362848412"
 
diff --git a/profiles/commons/modules/contrib/libraries/tests/libraries_test.module b/profiles/commons/modules/contrib/libraries/tests/libraries_test.module
index 67ed7f7..faae509 100644
--- a/profiles/commons/modules/contrib/libraries/tests/libraries_test.module
+++ b/profiles/commons/modules/contrib/libraries/tests/libraries_test.module
@@ -245,6 +245,7 @@ function libraries_test_libraries_info() {
             'info callback' => 'not applied',
             'pre-detect callback' => 'not applied',
             'post-detect callback' => 'not applied',
+            'pre-dependencies-load callback' => 'not applied',
             'pre-load callback' => 'not applied',
             'post-load callback' => 'not applied',
           ),
@@ -253,6 +254,7 @@ function libraries_test_libraries_info() {
         'info callback' => 'not applied',
         'pre-detect callback' => 'not applied',
         'post-detect callback' => 'not applied',
+        'pre-dependencies-load callback' => 'not applied',
         'pre-load callback' => 'not applied',
         'post-load callback' => 'not applied',
       ),
@@ -263,6 +265,7 @@ function libraries_test_libraries_info() {
         'info callback' => 'not applied',
         'pre-detect callback' => 'not applied',
         'post-detect callback' => 'not applied',
+        'pre-dependencies-load callback' => 'not applied',
         'pre-load callback' => 'not applied',
         'post-load callback' => 'not applied',
       ),
@@ -271,6 +274,7 @@ function libraries_test_libraries_info() {
       'info' => array('_libraries_test_info_callback'),
       'pre-detect' => array('_libraries_test_pre_detect_callback'),
       'post-detect' => array('_libraries_test_post_detect_callback'),
+      'pre-dependencies-load' => array('_libraries_test_pre_dependencies_load_callback'),
       'pre-load' => array('_libraries_test_pre_load_callback'),
       'post-load' => array('_libraries_test_post_load_callback'),
     ),
@@ -278,6 +282,7 @@ function libraries_test_libraries_info() {
     'info callback' => 'not applied',
     'pre-detect callback' => 'not applied',
     'post-detect callback' => 'not applied',
+    'pre-dependencies-load callback' => 'not applied',
     'pre-load callback' => 'not applied',
     'post-load callback' => 'not applied',
   );
@@ -397,6 +402,18 @@ function _libraries_test_post_detect_callback(&$library, $version, $variant) {
 }
 
 /**
+ * Sets the 'pre-dependencies-load callback' key.
+ *
+ * This function is used as a test callback for the 'pre-dependencies-load'
+ * callback group.
+ *
+ * @see _libraries_test_callback()
+ */
+function _libraries_test_pre_dependencies_load_callback(&$library, $version, $variant) {
+  _libraries_test_callback($library, $version, $variant, 'pre-dependencies-load');
+}
+
+/**
  * Sets the 'pre-load callback' key.
  *
  * This function is used as a test callback for the 'pre-load' callback group.
diff --git a/profiles/commons/modules/contrib/message/message.info b/profiles/commons/modules/contrib/message/message.info
index ea1a343..777522b 100644
--- a/profiles/commons/modules/contrib/message/message.info
+++ b/profiles/commons/modules/contrib/message/message.info
@@ -22,9 +22,10 @@ files[] = includes/views/handlers/message_handler_field_message_render.inc
 files[] = includes/views/handlers/message_handler_filter_message_type.inc
 files[] = includes/views/handlers/message_handler_filter_message_type_category.inc
 
-; Information added by drupal.org packaging script on 2013-01-30
+
+; Information added by drush on 2013-04-04
 version = "7.x-1.7+2-dev"
 core = "7.x"
 project = "message"
-datestamp = "1359509464"
+datestamp = "1365041475"
 
diff --git a/profiles/commons/modules/contrib/message/message_example/message_example.info b/profiles/commons/modules/contrib/message/message_example/message_example.info
index 8415da3..04933ee 100644
--- a/profiles/commons/modules/contrib/message/message_example/message_example.info
+++ b/profiles/commons/modules/contrib/message/message_example/message_example.info
@@ -24,9 +24,10 @@ features[message_type][] = "example_user_register"
 features[views_view][] = "message_example"
 stylesheets[all][] = "css/message_example.css"
 
-; Information added by drupal.org packaging script on 2013-01-30
+
+; Information added by drush on 2013-04-04
 version = "7.x-1.7+2-dev"
 core = "7.x"
 project = "message"
-datestamp = "1359509464"
+datestamp = "1365041475"
 
diff --git a/profiles/commons/modules/contrib/message/message_og_example/message_og_example.info b/profiles/commons/modules/contrib/message/message_og_example/message_og_example.info
index 290d46a..3518d75 100644
--- a/profiles/commons/modules/contrib/message/message_og_example/message_og_example.info
+++ b/profiles/commons/modules/contrib/message/message_og_example/message_og_example.info
@@ -20,9 +20,10 @@ name = "Message OG example"
 package = "Message"
 php = "5.2.4"
 
-; Information added by drupal.org packaging script on 2013-01-30
+
+; Information added by drush on 2013-04-04
 version = "7.x-1.7+2-dev"
 core = "7.x"
 project = "message"
-datestamp = "1359509464"
+datestamp = "1365041475"
 
diff --git a/profiles/commons/modules/contrib/message_notify/message_notify.info b/profiles/commons/modules/contrib/message_notify/message_notify.info
index 9bcafbf..34630ab 100644
--- a/profiles/commons/modules/contrib/message_notify/message_notify.info
+++ b/profiles/commons/modules/contrib/message_notify/message_notify.info
@@ -11,9 +11,10 @@ files[] = plugins/notifier/abstract.inc
 
 ; Tests
 files[] = message_notify.test
-; Information added by drupal.org packaging script on 2013-01-18
-version = "7.x-2.3+1-dev"
+
+; Information added by drush on 2013-04-04
+version = "7.x-2.3+3-dev"
 core = "7.x"
 project = "message_notify"
-datestamp = "1358477834"
+datestamp = "1365041465"
 
diff --git a/profiles/commons/modules/contrib/message_notify/message_notify.module b/profiles/commons/modules/contrib/message_notify/message_notify.module
index 41b04b7..987d5f0 100644
--- a/profiles/commons/modules/contrib/message_notify/message_notify.module
+++ b/profiles/commons/modules/contrib/message_notify/message_notify.module
@@ -70,9 +70,8 @@ function message_notify_plugin_process(&$plugin, $info) {
  * Add a the notifiers view modes.
  */
 function message_notify_entity_info_alter(&$entity_info) {
-  foreach (message_notify_get_notifiers() as $notifier_name => $plugin) {
-    $class = ctools_plugin_load_class('message_notify', 'notifier', $notifier_name, 'class');
-    $view_modes = call_user_func(array($class, 'viewModes'));
+  foreach (message_notify_get_notifiers() as $plugin) {
+    $view_modes = $plugin['view_modes'];
     // Set default values.
     foreach ($view_modes as &$view_mode) {
       $view_mode += array('custom settings' => TRUE);
diff --git a/profiles/commons/modules/contrib/message_notify/message_notify_example/message_notify_example.info b/profiles/commons/modules/contrib/message_notify/message_notify_example/message_notify_example.info
index 05dcef2..f3a0ec7 100644
--- a/profiles/commons/modules/contrib/message_notify/message_notify_example/message_notify_example.info
+++ b/profiles/commons/modules/contrib/message_notify/message_notify_example/message_notify_example.info
@@ -16,9 +16,10 @@ features[field][] = "message-comment_insert-field_message_rendered_subject"
 features[message_type][] = "comment_insert"
 features[views_view][] = "message_notify_example"
 
-; Information added by drupal.org packaging script on 2013-01-18
-version = "7.x-2.3+1-dev"
+
+; Information added by drush on 2013-04-04
+version = "7.x-2.3+3-dev"
 core = "7.x"
 project = "message_notify"
-datestamp = "1358477834"
+datestamp = "1365041465"
 
diff --git a/profiles/commons/modules/contrib/message_notify/plugins/notifier/abstract.inc b/profiles/commons/modules/contrib/message_notify/plugins/notifier/abstract.inc
index 1713ed4..4283e77 100644
--- a/profiles/commons/modules/contrib/message_notify/plugins/notifier/abstract.inc
+++ b/profiles/commons/modules/contrib/message_notify/plugins/notifier/abstract.inc
@@ -21,6 +21,9 @@ interface MessageNotifierInterface {
 
   /**
    * Entry point to send and process a message.
+   *
+   * @return
+   *   TRUE or FALSE based on delivery status.
    */
   public function send();
 
@@ -45,13 +48,6 @@ interface MessageNotifierInterface {
    * Determine if user can access notifier.
    */
   public function access();
-
-  /**
-   * Allow notifier to define its own view modes.
-   *
-   * Those view modes are later going to be rendered and sent.
-   */
-  public static function viewModes();
 }
 
 /**
@@ -77,12 +73,13 @@ abstract class MessageNotifierBase implements MessageNotifierInterface {
   public function send() {
     $message = $this->message;
     $output = array();
-    foreach ($this->viewModes() as $view_mode => $value) {
+    foreach ($this->plugin['view_modes'] as $view_mode => $value) {
       $content = $message->buildContent($view_mode);
       $output[$view_mode] = render($content);
     }
     $result = $this->deliver($output);
     $this->postSend($result, $output);
+    return $result;
   }
 
   public function deliver(array $output = array()) {}
@@ -113,7 +110,7 @@ abstract class MessageNotifierBase implements MessageNotifierInterface {
     if ($options['rendered fields']) {
       // Save the rendered output into matching fields.
       $wrapper = entity_metadata_wrapper('message', $message);
-      foreach ($this->viewModes() as $view_mode => $mode) {
+      foreach ($this->plugin['view_modes'] as $view_mode => $mode) {
         if (empty($options['rendered fields'][$view_mode])) {
           throw new MessageNotifyException(format_string('The rendered view mode @mode cannot be saved to field, as there is not a matching one.', array('@mode' => $mode['label'])));
         }
@@ -143,9 +140,4 @@ abstract class MessageNotifierBase implements MessageNotifierInterface {
   public function access() {
     return TRUE;
   }
-
-  public static function viewModes() {
-    return array();
-  }
-
 }
diff --git a/profiles/commons/modules/contrib/message_notify/plugins/notifier/email/MessageNotifierEmail.class.php b/profiles/commons/modules/contrib/message_notify/plugins/notifier/email/MessageNotifierEmail.class.php
index fc29444..b0e5da4 100644
--- a/profiles/commons/modules/contrib/message_notify/plugins/notifier/email/MessageNotifierEmail.class.php
+++ b/profiles/commons/modules/contrib/message_notify/plugins/notifier/email/MessageNotifierEmail.class.php
@@ -5,16 +5,6 @@
  */
 class MessageNotifierEmail extends MessageNotifierBase {
 
-  /**
-   * Add Message notify view mode.
-   */
-  public static function viewModes() {
-    return array(
-      'message_notify_email_subject' => array('label' => t('Notify - Email subject')),
-      'message_notify_email_body' => array('label' => t('Notify - Email body')),
-    );
-  }
-
   public function deliver(array $output = array()) {
     $plugin = $this->plugin;
     $message = $this->message;
@@ -38,7 +28,8 @@ class MessageNotifierEmail extends MessageNotifierBase {
     // Pass the message entity along to hook_drupal_mail().
     $output['message_entity'] = $message;
 
-    return drupal_mail('message_notify', $message->type, $mail, $lang, $output);
+    $result =  drupal_mail('message_notify', $message->type, $mail, $lang, $output);
+    return $result['result'];
   }
 
 }
diff --git a/profiles/commons/modules/contrib/message_notify/plugins/notifier/email/email.inc b/profiles/commons/modules/contrib/message_notify/plugins/notifier/email/email.inc
index 8ac91eb..f81d499 100644
--- a/profiles/commons/modules/contrib/message_notify/plugins/notifier/email/email.inc
+++ b/profiles/commons/modules/contrib/message_notify/plugins/notifier/email/email.inc
@@ -8,4 +8,10 @@ $plugin = array(
     // Override mail. Don't use the email that is assigned to the user.
     'mail' => FALSE,
   ),
+   // A notifier must define its own view modes.
+   // Those view modes are later going to be rendered and sent.
+  'view_modes' => array(
+    'message_notify_email_subject' => array('label' => t('Notify - Email subject')),
+    'message_notify_email_body' => array('label' => t('Notify - Email body')),
+  ),
 );
diff --git a/profiles/commons/modules/contrib/message_notify/tests/message_notify_test.info b/profiles/commons/modules/contrib/message_notify/tests/message_notify_test.info
index ab5eda9..21ad231 100644
--- a/profiles/commons/modules/contrib/message_notify/tests/message_notify_test.info
+++ b/profiles/commons/modules/contrib/message_notify/tests/message_notify_test.info
@@ -6,9 +6,10 @@ hidden = TRUE
 
 files[] = plugins/notifier/MessageNotifierTest.class.php
 
-; Information added by drupal.org packaging script on 2013-01-18
-version = "7.x-2.3+1-dev"
+
+; Information added by drush on 2013-04-04
+version = "7.x-2.3+3-dev"
 core = "7.x"
 project = "message_notify"
-datestamp = "1358477834"
+datestamp = "1365041465"
 
diff --git a/profiles/commons/modules/contrib/message_notify/tests/plugins/notifier/MessageNotifierTest.class.php b/profiles/commons/modules/contrib/message_notify/tests/plugins/notifier/MessageNotifierTest.class.php
index 3ed700b..1efc3e1 100644
--- a/profiles/commons/modules/contrib/message_notify/tests/plugins/notifier/MessageNotifierTest.class.php
+++ b/profiles/commons/modules/contrib/message_notify/tests/plugins/notifier/MessageNotifierTest.class.php
@@ -5,16 +5,6 @@
  */
 class MessageNotifierTest extends MessageNotifierBase {
 
-  /**
-   * Add Message notify view mode.
-   */
-  public static function viewModes() {
-    return array(
-      'foo' => array('label' => t('Foo')),
-      'bar' => array('label' => t('Bar')),
-    );
-  }
-
   public function deliver(array $output = array()) {
     $this->message->output = $output;
     // Return TRUE or FALSE as it was set on the Message.
diff --git a/profiles/commons/modules/contrib/message_notify/tests/plugins/notifier/test.inc b/profiles/commons/modules/contrib/message_notify/tests/plugins/notifier/test.inc
index 0de31d2..454ca25 100644
--- a/profiles/commons/modules/contrib/message_notify/tests/plugins/notifier/test.inc
+++ b/profiles/commons/modules/contrib/message_notify/tests/plugins/notifier/test.inc
@@ -4,4 +4,10 @@ $plugin = array(
   'title' => t('Test'),
   'description' => t('Notifier used for testing.'),
   'class' => 'MessageNotifierTest',
+  // A notifier must define its own view modes.
+  // Those view modes are later going to be rendered and sent.
+  'view_modes' => array(
+    'foo' => array('label' => t('Foo')),
+    'bar' => array('label' => t('Bar')),
+  ),
 );
diff --git a/profiles/commons/modules/contrib/message_subscribe/message_subscribe.info b/profiles/commons/modules/contrib/message_subscribe/message_subscribe.info
index e944180..306d30f 100644
--- a/profiles/commons/modules/contrib/message_subscribe/message_subscribe.info
+++ b/profiles/commons/modules/contrib/message_subscribe/message_subscribe.info
@@ -11,9 +11,10 @@ dependencies[] = message_notify
 
 files[] = message_subscribe.test
 
-; Information added by drupal.org packaging script on 2013-02-19
+
+; Information added by drush on 2013-04-04
 version = "7.x-1.0-alpha3+3-dev"
 core = "7.x"
 project = "message_subscribe"
-datestamp = "1361280744"
+datestamp = "1365041463"
 
diff --git a/profiles/commons/modules/contrib/message_subscribe/message_subscribe_email/message_subscribe_email.info b/profiles/commons/modules/contrib/message_subscribe/message_subscribe_email/message_subscribe_email.info
index 47fdeca..0a3b348 100644
--- a/profiles/commons/modules/contrib/message_subscribe/message_subscribe_email/message_subscribe_email.info
+++ b/profiles/commons/modules/contrib/message_subscribe/message_subscribe_email/message_subscribe_email.info
@@ -8,9 +8,10 @@ dependencies[] = list
 dependencies[] = message_subscribe_ui
 dependencies[] = views
 
-; Information added by drupal.org packaging script on 2013-02-19
+
+; Information added by drush on 2013-04-04
 version = "7.x-1.0-alpha3+3-dev"
 core = "7.x"
 project = "message_subscribe"
-datestamp = "1361280744"
+datestamp = "1365041463"
 
diff --git a/profiles/commons/modules/contrib/message_subscribe/message_subscribe_ui/message_subscribe_ui.info b/profiles/commons/modules/contrib/message_subscribe/message_subscribe_ui/message_subscribe_ui.info
index cd7fa32..284c3a4 100644
--- a/profiles/commons/modules/contrib/message_subscribe/message_subscribe_ui/message_subscribe_ui.info
+++ b/profiles/commons/modules/contrib/message_subscribe/message_subscribe_ui/message_subscribe_ui.info
@@ -14,9 +14,10 @@ features[views_view][] = subscribe_node
 features[views_view][] = subscribe_taxonomy_term
 features[views_view][] = subscribe_user
 
-; Information added by drupal.org packaging script on 2013-02-19
+
+; Information added by drush on 2013-04-04
 version = "7.x-1.0-alpha3+3-dev"
 core = "7.x"
 project = "message_subscribe"
-datestamp = "1361280744"
+datestamp = "1365041463"
 
diff --git a/profiles/commons/modules/contrib/metatag/CHANGELOG.txt b/profiles/commons/modules/contrib/metatag/CHANGELOG.txt
index 9618d80..aeba62f 100644
--- a/profiles/commons/modules/contrib/metatag/CHANGELOG.txt
+++ b/profiles/commons/modules/contrib/metatag/CHANGELOG.txt
@@ -1,3 +1,113 @@
+Metatag 7.x-1.0-beta5, 2013-03-23
+---------------------------------
+#1844638 by DamienMcKenna: Updated help messages around update 7004, when ran
+  via Drush it will no longer used Batch API.
+#1844764 by Devin Carlson, DamienMcKenna: Fix arg placeholders in t() calls.
+#1846516 by Staratel: Incorrect arguments for watchdog().
+#1846516 by DamienMcKenna: Further incorrect arguments for watchdog().
+#1844638 by DamienMcKenna: Correctly used drupal_is_cli() instead of just
+  php_sapi_name().
+#1846978 by edulterado: Corrected the theme function name used with the
+  Twitter Cards submodule.
+#1307804 by juampy: Support for Select_or_Other for use with the OpenGraph
+  'type' field.
+#1854522 by DamienMcKenna: Redundant return statements in the MetaTag classes.
+#1852600 by DamienMcKenna: Only use the first page argument in the Views and
+  Panels preprocessors if it is numerical.
+#1850014 by plopesc: Not all contexts that may be shown on the admin page will
+  have a path condition defined.
+#1846080 by DamienMcKenna: Only support entities that have the 'metatags'
+  option specifically enabled.
+#1857116 by DamienMcKenna: Purge {metatag} records for a few known unsupported
+  entities that old versions would have saved.
+#1857116 by DamienMcKenna: Don't purge 'file' {metatag} records until #1857334
+  is decided.
+#1857360 by DamienMcKenna: Purge {metatag} records for nodes, taxonomy terms
+  and users that were purged but where the APIs of older versions failed to
+  remove them.
+#1857116 by DamienMcKenna: Purge {metatag} records for Profile2.
+#1852600 by helmo: Typo in Views integration function.
+#1852022 by DamienMcKenna: Don't export the {metatag_config}.cid field.
+#1862570 by DamienMcKenna: Purge any empty values that may have been added by
+  very early releases.
+#1862570 by DamienMcKenna: Follow-up to correctly handle the serialized empty
+  array.
+#1864340 by cdoyle, DamienMcKenna: Incorrect output for certain Twitter Card
+  tags.
+#1865170 by DamienMcKenna: Fix metatag_requirements() return array when the
+  Page Title module is also installed.
+#1722564 by DamienMcKenna: Provide a hook_requirements() message and README.txt
+  note about a possible conflict with the Exclude Node Title module.
+#1284756 by damiankloip, sylus, alanburke, lancee: Migrate module integration.
+#1865228 by greggles, DamienMcKenna: Added the rel=author link meta tag.
+#1866122 by DamienMcKenna: Added the twitter:site:id and twitter:creator:id
+  meta tags.
+#1866980 by makangus: Corrected metatag_features_revert().
+#1862818 by DYdave, DamienMcKenna: Added documentation for
+  hook_metatag_config_default().
+#1778534 by DamienMcKenna: Added the original-source meta tag.
+#1886170 by DamienMcKenna: Typo in the API docs regarding enabling metatag
+  support in custom entities.
+#1871020 by DamienMcKenna: Compatibility problem with Workbench_Moderation.
+#1773926 by Dave Reid: Fixed token validation fails on config edit if the
+  instance context is not an entity type.
+#1814736 by plach, Dave Reid: metatag_page_build() did not check if the
+  global:frontpage metatag configuration is disabled.
+#1871852: Fixed metatag_update_7005() did not check if the watchdog table
+  exists.
+#1891082 by bago, Dave Reid: Fixed metatag_config_instance_label() failed to
+  recurse properly.
+#1915284: Fixed metatag_html_head_alter() stopped removing duplicate tags too
+  soon. Fixed duplicate canonical links when global redirect is enabled.
+#1845326 by DamienMcKenna, Peacog: Resolved language handling problems to
+  correctly identify the langcode to properly work with or without
+  Entity_Translation.
+#1876042 by DamienMcKenna: Rename variables to use $entity_id instead of $id
+  and $entity_type instead of $type.
+#1859136 by splatio, DamienMcKenna, multpix: Feeds integration - allow meta tag
+  fields to be the target for data imported using the Feeds module.
+#1880302 by olli, DamienMcKenna: Resolve problems with Features integration.
+#1923030 by krlucas, DamienMcKenna: Only run metatag_entity_update() on
+  supported entities.
+#1844638 by DamienMcKenna, mikeytown2: Remove unnecessary duplicate {metatag}
+  records, fix language values for all entities.
+#1935084 by DamienMcKenna: Remove unnecessary items from metatag_hook_info()
+  that was causing problems with PHP 5.4.
+#1791720 by kbasarab: Added the news_keywords meta tag.
+#1934492 by juampy, DamienMcKenna: Added a page for reverting meta tags for
+  specific entity or bundle.
+#1386320: Note a known issue of using custom template files that do not output
+  the $page['content'] variable.
+#1917902 by DamienMcKenna: Ensure strings returned from token replacement of
+  text fields ([node:summary]) is passed through the appropriate text filters.
+#1919070 by DamienMcKenna: Fix any records that may have been corrupted by e.g.
+  #1871020.
+#1861656 by DamienMcKenna, torrance123: Optionally load the global meta tags on
+  all pages, enabled by default.
+#1871798 by mstrelan: Clear the Context plugin cache when metatag_context is
+  enabled so that the new plugin becomes available.
+#1932192 by DamienMcKenna: Only run metatag_entity_view() once per page view.
+#1900434 by Dustin Currie, j0rd, DamienMcKenna: Added several new OpenGraph meta
+  tags, including ones for videos, location and contact information.
+#1883118 by DamienMcKenna: Improve the help message on Metatag:Context's Path
+  field as neither relative nor absolute URLs will work.
+#1945114 by SergO, DamienMcKenna: A query from #1919070 was missing the
+  preproccess wrapper around the table name.
+#1908586 by DamienMcKenna: Added a line to README.txt explaining how to
+  customize the tokens used to generate the meta tags.
+#1350610 by DamienMcKenna: metatag_update_7001 needed to drop the primary key
+  before customizing it.
+#1859136 by DamienMcKenna: Fixed scenarios when updating an entity there are two
+  copies of the data submitted, e.g. Feeds integration.
+#1308790 by DamienMcKenna: Documented that [current-user] tokens should not be
+  used.
+#1318294 by DamienMcKenna: Documented how to use Imagecache Token to resize
+  images that are being used as tokens for meta tags.
+#1871534 by DamienMcKenna: Documented how some browser plugins can make the page
+  title appear to be wrapped with doublequotes though the output doesn't
+  actually show them.
+
+
 Metatag 7.x-1.0-beta4, 2012-11-17
 ---------------------------------
 #1842764 by DamienMcKenna: Work around problems in metatag_entity_load()
diff --git a/profiles/commons/modules/contrib/metatag/README.txt b/profiles/commons/modules/contrib/metatag/README.txt
index 6ff0df6..5e2f5a7 100644
--- a/profiles/commons/modules/contrib/metatag/README.txt
+++ b/profiles/commons/modules/contrib/metatag/README.txt
@@ -10,7 +10,7 @@ results. Additionally, using meta tags can help control the summary content
 that is used within social networks when visitors link to your site,
 particularly the Open Graph submodule for use with Facebook (see below).
 
-This version of the module only works with Drupal 7.x.
+This version of the module only works with Drupal 7.15 and newer.
 
 
 Features
@@ -61,24 +61,85 @@ Configuration
     values that are not overridden per object will automatically update should
     the defaults be updated.
 
+ 4. As the meta tags are output using Tokens, it may be necessary to customize
+    the token display for the site's entities (content types, vocabularies,
+    etc). To do this go to e.g. admin/structure/types/manage/article/display, in
+    the "Custom Display Settings" section ensure that "Tokens" is checked (save
+    the form if necessary), then to customize the tokens go to:
+    admin/structure/types/manage/article/display/token
 
-Known Issues
+
+Fine Tuning
+------------------------------------------------------------------------------
+* By default Metatag will load the global default values for all pages that do
+  not have meta tags assigned via the normal entity display or via Metatag
+  Context. This may be disabled by setting the variable 'metatag_load_all_pages'
+  to FALSE through one of the following methods:
+  * Use Drush to set the value:
+    drush vset metatag_load_all_pages FALSE
+  * Hardcode the value in the site's settings.php file:
+    $conf['metatag_load_all_pages'] = FALSE;
+  To re-enable this option simply set the value to TRUE.
+
+
+Developers
+------------------------------------------------------------------------------
+Full API documentation is available in metatag.api.php.
+
+To enable Metatag support in custom entities, add 'metatag' => TRUE to either
+the entity or bundle definition in hook_entity_info(); see metatag.api.php for
+further details and example code.
+
+
+Troubleshooting / Known Issues
 ------------------------------------------------------------------------------
+* When using custom page template files, e.g. page--front.tpl.php, it is
+  important to ensure that the following code is present in the template file:
+    <?php render($page['content']); ?>
+  or
+    <?php render($page['content']['metatags']); ?>
+  Without one of these being present the meta tags will not be displayed.
 * Versions of Drupal older than v7.17 were missing necessary functionality for
   taxonomy term pages to work correctly.
 * Using Metatag with values assigned for the page title and the Page Title
   module simultaneously can cause conflicts and unexpected results.
+* Using the Exclude Node Title module will cause the [node:title] token to be
+  empty on node pages, so using [current-page:title] will work around the
+  issue. Note: it isn't possible to "fix" this as it's a by-product of what
+  Exclude Node Title does - it removes the node title from display.
+* When customizing the meta tags for user pages, it is strongly recommended to
+  not use the [current-user] tokens, these pertain to the person *viewing* the
+  page and not e.g. the person who authored a page.
+* If images being displayed in image tags need to be resized to fit a specific
+  requirements, use the Imagecache Token module to customize the value.
+* Certain browser plugins, e.g. on Chrome, can cause the page title so be
+  displayed with additional doublequotes, e.g. instead of:
+    <title>The page title | My cool site</title>
+  it will show:
+    <title>"The page title | My cool site"</title>
+  The solution is to remove the browser plugin - the page's actual output is not
+  affected, it is just a problem in the browser.
 
 
 Related modules
 ------------------------------------------------------------------------------
-Some modules are available that extend Nodewords with additional functionality:
+Some modules are available that extend Metatag with additional functionality:
 
 * Domain Meta Tags
   http://drupal.org/project/domain_meta
   Integrates with the Domain Access module, so each site of a multi-domain
   install can separately control their meta tags.
 
+* Select or Other
+  http://drupal.org/project/select_or_other
+  Enhances the user experience of the metatag_opengraph submodule by allowing
+  the creation of custom Open Graph types.
+
+* Imagecache Token
+  http://drupal.org/project/imagecache_token
+  Provide tokens to load fields using an image style preset, for when meta tags
+  need to fix exact requirements.
+
 
 Credits / Contact
 ------------------------------------------------------------------------------
diff --git a/profiles/commons/modules/contrib/metatag/metatag.admin.inc b/profiles/commons/modules/contrib/metatag/metatag.admin.inc
index 17c5911..0b4278a 100644
--- a/profiles/commons/modules/contrib/metatag/metatag.admin.inc
+++ b/profiles/commons/modules/contrib/metatag/metatag.admin.inc
@@ -273,7 +273,14 @@ function metatag_config_edit_form($form, &$form_state, $config) {
   $contexts = explode(':', $config->instance);
   $options['context'] = $contexts[0];
   if ($contexts[0] != 'global') {
-    $options['token types'] = array(token_get_entity_mapping('entity', $contexts[0]));
+    // The context part of the instance may not map to an entity type, so allow
+    // the token_get_entity_mapping() function to fallback to the provided type.
+    if ($token_type = token_get_entity_mapping('entity', $contexts[0], TRUE)) {
+      $options['token types'] = array($token_type);
+    }
+    else {
+      $options['token types'] = array($contexts[0]);
+    }
   }
 
   // Ensure that this configuration is properly compared to its parent 'default'
@@ -385,3 +392,141 @@ function metatag_config_export_form($config) {
   ctools_include('export');
   return drupal_get_form('ctools_export_form', ctools_export_crud_export('metatag_config', $config), t('Export'));
 }
+
+/**
+ * Form constructor to revert nodes to their default metatags.
+ *
+ * @see metatag_bulk_revert_form_submit()
+ * @ingroup forms
+ */
+function metatag_bulk_revert_form() {
+  // Get the list of entity:bundle options
+  $options = array();
+  foreach (entity_get_info() as $entity_type => $entity_info) {
+    foreach (array_keys($entity_info['bundles']) as $bundle) {
+      if (metatag_entity_supports_metatags($entity_type, $bundle)) {
+        $options[$entity_type . ':' . $bundle] =
+          $entity_info['label'] . ': ' . $entity_info['bundles'][$bundle]['label'];
+      }
+    }
+  }
+
+  $form['update'] = array(
+    '#type' => 'checkboxes',
+    '#required' => TRUE,
+    '#title' => t('Select the entities to revert'),
+    '#options' => $options,
+    '#default_value' => array(),
+    '#description' => t('All meta tags will be removed for all content of the selected entities.'),
+  );
+
+  $form['submit'] = array(
+    '#type' => 'submit',
+    '#value' => t('Revert'),
+  );
+
+  return $form;
+}
+
+/**
+ * Form submit handler for metatag reset bulk revert form.
+ *
+ * @see metatag_batch_revert_form()
+ * @see metatag_bulk_revert_batch_finished()
+ */
+function metatag_bulk_revert_form_submit($form, &$form_state) {
+  $batch = array(
+    'title' => t('Bulk updating metatags'),
+    'operations' => array(),
+    'finished' => 'metatag_bulk_revert_batch_finished',
+    'file' => drupal_get_path('module', 'metatag') . '/metatag.admin.inc',
+  );
+
+  // Set a batch operation per entity:bundle.
+  foreach (array_filter($form_state['values']['update']) as $option) {
+    list($entity_type, $bundle) = explode(':', $option);
+    $batch['operations'][] = array('metatag_bulk_revert_batch_operation', array($entity_type, $bundle));
+  }
+
+  batch_set($batch);
+}
+
+/**
+ * Batch callback: delete custom metatags for selected bundles.
+ */
+function metatag_bulk_revert_batch_operation($entity_type, $bundle, &$context) {
+  if (!isset($context['sandbox']['current'])) {
+    $context['sandbox']['count'] = 0;
+    $context['sandbox']['current'] = 0;
+  }
+
+  // Query the selected entity table.
+  $entity_info = entity_get_info($entity_type);
+  $query = new EntityFieldQuery();
+  $query->entityCondition('entity_type', $entity_type)
+    ->propertyCondition($entity_info['entity keys']['id'], $context['sandbox']['current'], '>')
+    ->propertyOrderBy($entity_info['entity keys']['id']);
+  if ($entity_type != 'user') {
+    /**
+     * Entities which do not define a bundle such as User fail returning no results.
+     * @see http://drupal.org/node/1054168#comment-5266208
+     */
+    $query->entityCondition('bundle', $bundle);
+  }
+  // Get the total amount of entities to process.
+  if (!isset($context['sandbox']['total'])) {
+    $context['sandbox']['total'] = $query->count()->execute();
+    $query->count = FALSE;
+
+    // If there are no bundles to revert, stop immediately.
+    if (!$context['sandbox']['total']) {
+      $context['finished'] = 1;
+      return;
+    }
+  }
+
+  // Process 25 entities per iteration.
+  $query->range(0, 25);
+  $result = $query->execute();
+  $ids = !empty($result[$entity_type]) ? array_keys($result[$entity_type]) : array();
+  foreach ($ids as $id) {
+    $metatags = metatag_metatags_load($entity_type, $id);
+    if (!empty($metatags)) {
+      db_delete('metatag')->condition('entity_type', $entity_type)
+        ->condition('entity_id', $id)
+        ->execute();
+      metatag_metatags_cache_clear($entity_type, $id);
+      $context['results'][] = t('Reverted metatags for @bundle with id @id.', array(
+        '@bundle' => $entity_type . ': ' . $bundle,
+        '@id' => $id,
+      ));
+    }
+  }
+
+  $context['sandbox']['count'] += count($ids);
+  $context['sandbox']['current'] = max($ids);
+
+  if ($context['sandbox']['count'] != $context['sandbox']['total']) {
+    $context['finished'] = $context['sandbox']['count'] / $context['sandbox']['total'];
+  }
+}
+
+/**
+ * Batch finished callback.
+ */
+function metatag_bulk_revert_batch_finished($success, $results, $operations) {
+  if ($success) {
+    if (!count($results)) {
+      drupal_set_message(t('No metatags were reverted.'));
+    }
+    else {
+      $message = theme('item_list', array('items' => $results));
+      drupal_set_message($message);
+    }
+  }
+  else {
+    $error_operation = reset($operations);
+    drupal_set_message(t('An error occurred while processing @operation with arguments : @args',
+      array('@operation' => $error_operation[0], '@args' => print_r($error_operation[0], TRUE))));
+  }
+}
diff --git a/profiles/commons/modules/contrib/metatag/metatag.api.php b/profiles/commons/modules/contrib/metatag/metatag.api.php
index 217469b..b2d97dd 100644
--- a/profiles/commons/modules/contrib/metatag/metatag.api.php
+++ b/profiles/commons/modules/contrib/metatag/metatag.api.php
@@ -5,10 +5,113 @@
  */
 
 /**
+ * To enable Metatag support in custom entities, add 'metatags' => TRUE to the
+ * entity definition in hook_entity_info(), e.g.:
  * 
+ * /**
+ *  * Implements hook_entity_info().
+ *  *
+ *  * Taken from the Examples module.
+ *  * /
+ * function entity_example_entity_info() {
+ *   $info['entity_example_basic'] = array(
+ *     'label' => t('Example Basic Entity'),
+ *     'controller class' => 'EntityExampleBasicController',
+ *     'base table' => 'entity_example_basic',
+ *     'uri callback' => 'entity_example_basic_uri',
+ *     'fieldable' => TRUE,
+ *     'metatags' => TRUE,
+ *     'entity keys' => array(
+ *       'id' => 'basic_id' , // The 'id' (basic_id here) is the unique id.
+ *       'bundle' => 'bundle_type' // Bundle will be determined by the 'bundle_type' field
+ *     ),
+ *     'bundle keys' => array(
+ *       'bundle' => 'bundle_type',
+ *     ),
+ *     'static cache' => TRUE,
+ *     'bundles' => array(
+ *       'first_example_bundle' => array(
+ *         'label' => 'First example bundle',
+ *         'admin' => array(
+ *           'path' => 'admin/structure/entity_example_basic/manage',
+ *           'access arguments' => array('administer entity_example_basic entities'),
+ *         ),
+ *       ),
+ *     ),
+ *     'view modes' => array(
+ *       'tweaky' => array(
+ *         'label' => t('Tweaky'),
+ *         'custom settings' =>  FALSE,
+ *       ),
+ *     )
+ *   );
+ * 
+ *   return $info;
+ * }
+ *
+ * The definition of each bundle may be handled separately, thus support may be
+ * disabled for the entity as a whole but enabled for individual bundles. This
+ * is handled via the 'metatags' value on the bundle definition, e.g.:
+ *
+ *     'bundles' => array(
+ *       'first_example_bundle' => array(
+ *         'label' => 'First example bundle',
+ *         'metatags' => TRUE,
+ *         'admin' => array(
+ *           'path' => 'admin/structure/entity_example_basic/manage',
+ *           'access arguments' => array('administer entity_example_basic entities'),
+ *         ),
+ *       ),
+ *     ),
+ */
+
+/**
+ * Provides a default configuration for Metatag intances.
+ *
+ * This hook allows modules to provide their own Metatag instances which can
+ * either be used as-is or as a "starter" for users to build from.
+ *
+ * This hook should be placed in MODULENAME.metatag.inc and it will be auto-
+ * loaded. MODULENAME.metatag.inc *must* be in the same directory as the
+ * .module file which *must* also contain an implementation of
+ * hook_ctools_plugin_api, preferably with the same code as found in
+ * metatag_ctools_plugin_api().
+ *
+ * The $config->disabled boolean attribute indicates whether the Metatag
+ * instance should be enabled (FALSE) or disabled (TRUE) by default.
+ *
+ * @return
+ *   An associative array containing the structures of Metatag instances, as
+ *   generated from the Export tab, keyed by the Metatag config name.
+ *
+ * @see metatag_metatag_config_default()
+ * @see metatag_ctools_plugin_api()
  */
 function hook_metatag_config_default() {
-  return array();
+  $configs = array();
+
+  $config = new stdClass();
+  $config->instance = 'config1';
+  $config->api_version = 1;
+  $config->disabled = FALSE;
+  $config->config = array(
+    'title' => array('value' => '[current-page:title] | [site:name]'),
+    'generator' => array('value' => 'Drupal 7 (http://drupal.org)'),
+    'canonical' => array('value' => '[current-page:url:absolute]'),
+    'shortlink' => array('value' => '[current-page:url:unaliased]'),
+  );
+  $configs[$config->instance] = $config;
+
+  $config = new stdClass();
+  $config->instance = 'config2';
+  $config->api_version = 1;
+  $config->disabled = FALSE;
+  $config->config = array(
+    'title' => array('value' => '[user:name] | [site:name]'),
+  );
+  $configs[$config->instance] = $config;
+
+  return $configs;
 }
 
 /**
@@ -20,7 +123,7 @@ function hook_metatag_config_default_alter(&$config) {
 /**
  * 
  */
-function hook_metatag_config_delete($type, $ids) {
+function hook_metatag_config_delete($entity_type, $entity_ids) {
 }
 
 /**
@@ -112,5 +215,5 @@ function hook_metatag_page_cache_cid_parts_alter(&$cid_parts) {
 /**
  * 
  */
-function hook_metatag_presave(&$metatags, $type, $id) {
+function hook_metatag_presave(&$metatags, $entity_type, $entity_id) {
 }
diff --git a/profiles/commons/modules/contrib/metatag/metatag.features.inc b/profiles/commons/modules/contrib/metatag/metatag.features.inc
index b40ab1e..5f8ab54 100644
--- a/profiles/commons/modules/contrib/metatag/metatag.features.inc
+++ b/profiles/commons/modules/contrib/metatag/metatag.features.inc
@@ -11,7 +11,9 @@ function metatag_features_export($data, &$export, $module_name = '', $type = 'me
   $pipe = array();
 
   foreach ($data as $name) {
-    $export['features'][$type][$name] = metatag_config_load($name);
+    if (metatag_config_load($name)) {
+      $export['features'][$type][$name] = $name;
+    }
   }
 
   $export['dependencies']['metatag'] = 'metatag';
@@ -51,18 +53,18 @@ function metatag_features_export_render($module_name, $data, $export = NULL) {
  * Implements hook_features_revert().
  */
 function metatag_features_revert($module) {
-  $function = "{$module}_metatag_export_default";
-  $feature_conf = $function();
-  foreach (array_keys($feature_conf) as $config) {
-    if ($conf = metatag_config_load($config)) {
-      db_delete('metatag_config')->condition('instance', $config)->execute();
+  if ($feature_conf = features_get_default('metatag', $module)) {
+    foreach (array_keys($feature_conf) as $config) {
+      if ($conf = metatag_config_load($config)) {
+        db_delete('metatag_config')->condition('instance', $config)->execute();
+      }
+      unset($feature_conf[$config]['cid']);
+      $object = new stdClass();
+      $object->cid = NULL;
+      $object->instance = $config;
+      $object->config = $feature_conf[$config]['config'];
+      metatag_config_save($object);
     }
-    unset($feature_conf[$config]['cid']);
-    $object = new stdClass();
-    $object->cid = NULL;
-    $object->instance = $config;
-    $object->config = $feature_conf[$config]['config'];
-    metatag_config_save($object);
   }
 }
 
@@ -76,3 +78,10 @@ function metatag_features_export_options() {
   };
   return $options;
 }
+
+/**
+ * Implements hook_features_rebuild().
+ */
+function metatag_features_rebuild($module) {
+  metatag_features_revert($module);
+}
diff --git a/profiles/commons/modules/contrib/metatag/metatag.feeds.inc b/profiles/commons/modules/contrib/metatag/metatag.feeds.inc
new file mode 100644
index 0000000..3ee0acf
--- /dev/null
+++ b/profiles/commons/modules/contrib/metatag/metatag.feeds.inc
@@ -0,0 +1,37 @@
+<?php
+/**
+ * @file
+ * Feeds mapping implementation for the Metatag module.
+ */
+
+/**
+ * Implements hook_feeds_processor_targets_alter().
+ */
+function metatag_feeds_processor_targets_alter(&$targets, $entity_type, $bundle) {
+  if (metatag_entity_supports_metatags($entity_type)) {
+    $info = metatag_get_info();
+    foreach ($info['tags'] as $name => $tag) {
+      $targets['meta_' . $name] = array(
+        'name' => 'Meta tag: ' . check_plain($tag['label']),
+        'callback' => 'metatag_feeds_set_target',
+        'description' => $tag['description'],
+      );
+    }
+  }
+}
+
+/**
+ * Callback function to set value of a metatag tag.
+ */
+function metatag_feeds_set_target($source, $entity, $target, $value) {
+  // Don't do anything if we weren't given any data.
+  if (empty($value)) {
+    return;
+  }
+
+  // Strip the prefix that was added above. 
+  $name = str_replace('meta_', '', $target);
+
+  // Assign the value.
+  $entity->metatags[$name]['value'] = $value;
+}
diff --git a/profiles/commons/modules/contrib/metatag/metatag.inc b/profiles/commons/modules/contrib/metatag/metatag.inc
index 0f0d0a1..d2f9aac 100644
--- a/profiles/commons/modules/contrib/metatag/metatag.inc
+++ b/profiles/commons/modules/contrib/metatag/metatag.inc
@@ -65,7 +65,6 @@ class DrupalDefaultMetaTag implements DrupalMetaTagInterface {
     return array(
       '#attached' => array('drupal_add_html_head' => array(array($element, $element['#id']))),
     );
-    return $element;
   }
 }
 
@@ -98,7 +97,7 @@ class DrupalTextMetaTag extends DrupalDefaultMetaTag {
     $options += array(
       'token data' => array(),
       'clear' => TRUE,
-      'sanitize' => FALSE,
+      'sanitize' => TRUE,
       'raw' => FALSE,
     );
 
@@ -142,7 +141,6 @@ class DrupalLinkMetaTag extends DrupalTextMetaTag {
     return array(
       '#attached' => array('drupal_add_html_head' => array(array($element, $element['#id']))),
     );
-    return $element;
   }
 }
 
diff --git a/profiles/commons/modules/contrib/metatag/metatag.info b/profiles/commons/modules/contrib/metatag/metatag.info
index 254e319..4a61acd 100644
--- a/profiles/commons/modules/contrib/metatag/metatag.info
+++ b/profiles/commons/modules/contrib/metatag/metatag.info
@@ -2,16 +2,23 @@ name = Meta tags
 description = "Adds support and an API to implement meta tags."
 package = Meta tags
 core = 7.x
-dependencies[] = token
+
+# This requires Drupal 7.15 or newer.
+dependencies[] = system (>=7.15)
+
+# CTools and Token are also required.
 dependencies[] = ctools
+dependencies[] = token
+
 configure = admin/config/search/metatags
 
 files[] = metatag.inc
+files[] = metatag.migrate.inc
 files[] = metatag.test
 
-; Information added by drupal.org packaging script on 2012-11-18
-version = "7.x-1.0-beta4"
+; Information added by drupal.org packaging script on 2013-03-24
+version = "7.x-1.0-beta5"
 core = "7.x"
 project = "metatag"
-datestamp = "1353209208"
+datestamp = "1364088611"
 
diff --git a/profiles/commons/modules/contrib/metatag/metatag.install b/profiles/commons/modules/contrib/metatag/metatag.install
index b1174c8..f1ee370 100644
--- a/profiles/commons/modules/contrib/metatag/metatag.install
+++ b/profiles/commons/modules/contrib/metatag/metatag.install
@@ -32,6 +32,7 @@ function metatag_schema() {
         'unsigned' => TRUE,
         'not null' => TRUE,
         'description' => 'The primary identifier for a metatag configuration set.',
+        'no export' => TRUE,
       ),
       'instance' => array(
         'type' => 'varchar',
@@ -111,9 +112,19 @@ function metatag_requirements($phase) {
       list($minor, $suffix) = explode('-', $minor);
     }
 
+    // Releases of Drupal older than 7.15 did not have entity_language(), which
+    // is now required.
+    if ($minor < 15) {
+      $requirements['metatag'] = array(
+        'severity' => REQUIREMENT_WARNING,
+        'title' => 'Metatag',
+        'value' => $t('Upgrade Drupal core to v7.15 or newer'),
+        'description' => $t("This older version of Drupal core is missing functionality necessary for the module's multilingual support, it must be upgraded to at least version 7.15."),
+      );
+    }
     // Releases of Drupal older than 7.17 did not trigger hook_entity_view on
     // term pages, so recommend updating.
-    if ($minor < 17) {
+    elseif ($minor < 17) {
       $requirements['metatag'] = array(
         'severity' => REQUIREMENT_WARNING,
         'title' => 'Metatag',
@@ -121,6 +132,7 @@ function metatag_requirements($phase) {
         'description' => $t('Your older version of Drupal core is missing functionality necessary for taxonomy term pages to work correctly, it is strongly recommended to upgrade to the latest release.'),
       );
     }
+    // Everything's OK.
     else {
       $requirements['metatag'] = array(
         'severity' => REQUIREMENT_OK,
@@ -132,13 +144,23 @@ function metatag_requirements($phase) {
 
     // Add a note if Page Title is also installed.
     if (module_exists('page_title')) {
-      $requirements['metatag'] = array(
+      $requirements['metatag_page_title'] = array(
         'severity' => REQUIREMENT_INFO,
         'title' => 'Metatag',
         'value' => $t('Possible conflicts with Page Title module'),
         'description' => $t('The Metatag module is able to customize page titles so running the Page Title module simultaneously can lead to complications.'),
       );
     }
+
+    // Add a note if Page Title is also installed.
+    if (module_exists('exclude_node_title')) {
+      $requirements['metatag_exclude_node_title'] = array(
+        'severity' => REQUIREMENT_INFO,
+        'title' => 'Metatag',
+        'value' => $t('Possible conflicts with Exclude Node Title module'),
+        'description' => $t('The Metatag module\'s default setitngs for content types (nodes) uses [node:title] for the page title. Unfortunately, Exclude Node Title hides this so the page title ends up blank. It is recommended to <a href="!config">change the "title" field\'s default value</a> to "[current-page:title]" instead of "[node:title]" for any content types affected by Exclude Node Title.', array('!config' => 'admin/config/search/metatags')),
+      );
+    }
   }
 
   return $requirements;
@@ -182,16 +204,24 @@ function metatag_update_7000() {
 }
 
 /**
- * Fix the {metatag_config}.cid column cannot be NULL.
+ * Fix the "{metatag_config}.cid column cannot be NULL" error.
  */
 function metatag_update_7001() {
-  $field = array(
+  $table_name = 'metatag_config';
+  $field_name = 'cid';
+  $field_spec = array(
     'type' => 'serial',
     'unsigned' => TRUE,
     'not null' => TRUE,
     'description' => 'The primary identifier for a metatag configuration set.',
   );
-  db_change_field('metatag_config', 'cid', 'cid', $field);
+  $keys = array('primary key' => array($field_name));
+
+  // Before making any changes, drop the existing primary key.
+  db_drop_primary_key($table_name);
+
+  // Rejig the field, and turn on the primary key again.
+  db_change_field($table_name, $field_name, $field_name, $field_spec, $keys);
 }
 
 /**
@@ -217,7 +247,7 @@ function metatag_update_7003() {
   // Don't add the new field if it already exists.
   if (!db_field_exists($table_name, $field_name)) {
     // Describe the new field.
-    $field_definition = array(
+    $field_spec = array(
       'type' => 'varchar',
       'length' => 32,
       'not null' => TRUE,
@@ -226,17 +256,197 @@ function metatag_update_7003() {
     );
 
     // Add it and update the primary key.
-    db_add_field($table_name, $field_name, $field_definition);
+    db_add_field($table_name, $field_name, $field_spec);
     db_drop_primary_key($table_name);
     db_add_primary_key($table_name, array('entity_type', 'entity_id', 'language'));
   }
 }
 
 /**
- * Update all language values in the metatag table, will also resolve problems
- * created during the release of beta3.
+ * Replaced by updates 7009, 7010, 7011, 7012 and 7013.
+ */
+function metatag_update_7004() {
+  // Do nothing.
+}
+
+/**
+ * Removing wrong metatag watchdog entries that break the admin/reports/dblog
+ * page.
+ */
+function metatag_update_7005() {
+  if (db_table_exists('watchdog')) {
+    db_delete('watchdog')
+      ->condition('type', 'metatag')
+      ->condition('variables', serialize('info'))
+      ->execute();
+  }
+}
+
+/**
+ * Remove {metatag} records that were added by old versions of the module for
+ * entities that don't actually support meta tags. A more complete version of
+ * this will be added later on after it's (hopefully) guaranteed that all
+ * modules have updated to the correct API usage.
+ */
+function metatag_update_7006() {
+  $entity_types = array(
+    // Core.
+    'comment',
+    'menu_link',
+    'taxonomy_vocabulary',
+    // Some contrib entities.
+    'mailchimp_list',
+    'profile2',
+    'profile2_type',
+    'redirect',
+    'rules_config',
+    'wysiwyg_profile',
+  );
+  foreach ($entity_types as $entity_type) {
+    $num_deleted = db_delete('metatag')
+      ->condition('entity_type', $entity_type)
+      ->execute();
+    if ($num_deleted > 0) {
+      drupal_set_message(t('Removed @count meta tag record(s) for the @type entity type, it does not support meta tags.', array('@count' => $num_deleted, '@type' => $entity_type)));
+    }
+  }
+}
+
+/**
+ * Remove {metatag} records for objects that have been deleted; older versions
+ * of Metatag may have failed to purge these.
+ */
+function metatag_update_7007() {
+  $result = db_query("DELETE m
+    FROM {metatag} m
+    LEFT OUTER JOIN {node} n
+    	ON m.entity_id=n.nid
+    WHERE m.entity_type='node'
+    	AND n.nid IS NULL");
+  if ($result->rowCount() > 0) {
+    drupal_set_message(t('Removed @count meta tag record(s) for nodes that had been purged.', array('@count' => $result->rowCount())));
+  }
+
+  $result = db_query("DELETE m
+    FROM {metatag} m
+    LEFT OUTER JOIN {users} u
+    	ON m.entity_id=u.uid
+    WHERE m.entity_type='user'
+    	AND u.uid IS NULL");
+  if ($result->rowCount() > 0) {
+    drupal_set_message(t('Removed @count meta tag record(s) for users that had been purged.', array('@count' => $result->rowCount())));
+  }
+
+  $result = db_query("DELETE m
+    FROM {metatag} m
+    LEFT OUTER JOIN {taxonomy_term_data} t
+    	ON m.entity_id=t.tid
+    WHERE m.entity_type='taxonomy_term'
+    	AND t.tid IS NULL");
+  if ($result->rowCount() > 0) {
+    drupal_set_message(t('Removed @count meta tag record(s) for taxonomy terms that had been purged.', array('@count' => $result->rowCount())));
+  }
+}
+
+/**
+ * Remove any empty records that may be hanging around from old releases.
+ */
+function metatag_update_7008() {
+  $result = db_query("DELETE m FROM {metatag} m WHERE m.data IS NULL or m.data = '' OR m.data = :empty", array(':empty' => serialize(array())));
+  if ($result->rowCount() > 0) {
+    drupal_set_message(t('Purged @count empty meta tag record(s).', array('@count' => $result->rowCount())));
+  }
+}
+
+/**
+ * Fix {metatag} records for taxonomy terms.
+ */
+function metatag_update_7009() {
+  // Remove duplicates.
+  _metatag_remove_dupes('taxonomy_term');
+
+  // The taxonomy term entity doesn't support a 'language' option, so reset it
+  // to LANGUAGE_NONE.
+  $result = db_query("UPDATE {metatag} SET language = :language WHERE entity_type='taxonomy_term'", array(':language' => LANGUAGE_NONE));
+  if ($result->rowCount() > 0) {
+    drupal_set_message(t('Fixed language values for @count taxonomy terms.', array('@count' => $result->rowCount())));
+  }
+}
+
+/**
+ * Fix {metatag} records for users.
+ */
+function metatag_update_7010() {
+  // Remove duplicates.
+  _metatag_remove_dupes('user');
+
+  // Update User values.
+  $result = db_query("UPDATE {metatag} SET language = :language WHERE entity_type='user'", array(':language' => LANGUAGE_NONE));
+  if ($result->rowCount() > 0) {
+    drupal_set_message(t('Fixed language values for @count user records.', array('@count' => $result->rowCount())));
+  }
+}
+
+/**
+ * Fix {metatag} records for nodes.
+ */
+function metatag_update_7011() {
+  // Only proceed if Entity_Translation is not enabled as it allows each node
+  // record to have multiple languages available.
+  if (module_exists('entity_translation')) {
+    drupal_set_message(t("Entity Translation is enabled, so node meta tags will not be updated, to avoid accidental dataloss."));
+    return;
+  }
+
+  // Remove duplicates.
+  _metatag_remove_dupes('node');
+
+  // Update Node values.
+  $result = db_query("UPDATE {metatag} AS m INNER JOIN {node} n ON m.entity_id=n.nid AND m.entity_type='node' SET m.language = n.language");
+  if ($result->rowCount() > 0) {
+    drupal_set_message(t('Fixed language values for @count nodes.', array('@count' => $result->rowCount())));
+  }
+}
+
+/**
+ * Remove duplicate {metatag} records for non-core entities.
  */
-function metatag_update_7004(&$sandbox) {
+function metatag_update_7012() {
+  if (module_exists('entity_translation')) {
+    drupal_set_message(t("Entity Translation is enabled, duplicate meta tags will not be removed for custom entities, to avoid accidental dataloss."));
+    return;
+  }
+
+  $records = db_select('metatag', 'm')
+    ->fields('m', array('entity_type'))
+    ->condition('m.entity_type', array('node', 'taxonomy_term', 'user'), 'NOT IN')
+    ->orderBy('m.entity_type', 'ASC')
+    ->orderBy('m.entity_id', 'ASC')
+    ->distinct()
+    ->execute();
+
+  $entity_types = array();
+  foreach ($records as $record) {
+    $entity_types[] = $record->entity_type;
+    // Remove duplicates.
+    _metatag_remove_dupes($record->entity_type);
+  }
+
+  if (empty($entity_types)) {
+    drupal_set_message(t('There were no other records to fix.'));
+  }
+}
+
+/**
+ * Fix the {metatag} language value for all non-core entity records. This might
+ * take a while, depending on how much data needs to be converted.
+ */
+function metatag_update_7013(&$sandbox) {
+  if (module_exists('entity_translation')) {
+    drupal_set_message(t("Entity Translation is enabled, meta tags will not be updated for custom entities, to avoid accidental dataloss."));
+    return;
+  }
+
   // Use the sandbox at your convenience to store the information needed
   // to track progression between successive calls to the function.
   if (!isset($sandbox['progress'])) {
@@ -247,123 +457,275 @@ function metatag_update_7004(&$sandbox) {
     // way to do this, so we're going to cache all record keys and manually
     // step through them.
     $records = db_select('metatag', 'm')
-      ->fields('m', array('entity_type', 'entity_id', 'language'))
-      ->orderBy('entity_type', 'ASC')
-      ->orderBy('entity_id', 'ASC')
+      ->fields('m', array('entity_type', 'entity_id'))
+      ->condition('m.entity_type', array('node', 'taxonomy_term', 'user'), 'NOT IN')
+      ->orderBy('m.entity_type', 'ASC')
+      ->orderBy('m.entity_id', 'ASC')
       ->execute();
     $sandbox['records'] = array();
     foreach ($records as $record) {
       $sandbox['records'][] = $record;
     }
+
+    // If there's no data, don't bother with the extra work.
+    if (empty($sandbox['records'])) {
+      watchdog('metatag', 'Update 7013: No meta tag records need updating.', array(), WATCHDOG_INFO);
+      if (drupal_is_cli()) {
+        drupal_set_message(t('Update 7013: No meta tag records need updating.'));
+      }
+      return t('No meta tag records need updating.');
+    }
+
     // Total records that must be visited.
     $sandbox['max'] = count($sandbox['records']);
 
     // A place to store messages during the run.
     $sandbox['messages'] = array();
 
+    // An initial record of the number of records to be updated.
+    watchdog('metatag', 'Update 7013: !count records to update.', array('!count' => $sandbox['max']), WATCHDOG_INFO);
+    if (drupal_is_cli()) {
+      drupal_set_message(t('Update 7013: !count records to update.', array('!count' => $sandbox['max'])));
+    }
+
     // Last record processed.
     $sandbox['current_record'] = -1;
   }
 
-  // If there's no data, don't bother with the extra work.
-  if (empty($sandbox['max'])) {
-    return t('No records needed to be updated.');
+  // Process records by groups of 10 (arbitrary value).
+  // When a group is processed, the batch update engine determines whether it
+  // should continue processing in the same request or provide progress
+  // feedback to the user and wait for the next request.
+  $limit = 10;
+
+  // The for loop will run as normal when ran via update.php, but when ran via
+  // Drush it'll just run 'til it's finished.
+  $increment = 1;
+  if (drupal_is_cli()) {
+    $increment = 0;
   }
 
-  // Proceed as normal.
-  else {
-    // Process records by groups of 10 (arbitrary value).
-    // When a group is processed, the batch update engine determines
-    // whether it should continue processing in the same request or provide
-    // progress feedback to the user and wait for the next request.
-    $limit = 10;
-
-    // Set default values.
-    for ($x = 0; $x < $limit; $x++) {
-      $sandbox['current_record']++;
-      if (empty($sandbox['records'][$sandbox['current_record']])) {
-        break;
+  // Set default values.
+  for ($ctr = 0; $ctr < $limit; $ctr += $increment) {
+    $sandbox['current_record']++;
+    if (empty($sandbox['records'][$sandbox['current_record']])) {
+      break;
+    }
+
+    // Shortcuts for later.
+    $entity_type = $sandbox['records'][$sandbox['current_record']]->entity_type;
+    $entity_id = $sandbox['records'][$sandbox['current_record']]->entity_id;
+
+    // Load the entity.
+    $entities = entity_load($entity_type, array($entity_id));
+    if (!empty($entities)) {
+      $entity = array_pop($entities);
+
+      // Make sure that the entity has a language set.
+      if (!empty($entity)) {
+        // If there's a (non-empty) language value, use it.
+        $new_language = entity_language($entity_type, $entity);
+        if (empty($new_language)) {
+          $new_language = LANGUAGE_NONE;
+        }
+        // Update the 'language' value.
+        db_update('metatag')
+          ->fields(array('language' => $new_language))
+          ->condition('entity_type', $entity_type)
+          ->condition('entity_id', $entity_id)
+          ->execute();
+      }
+    }
+
+    // Update our progress information.
+    $sandbox['progress']++;
+  }
+
+  // Set the "finished" status, to tell batch engine whether this function
+  // needs to run again. If you set a float, this will indicate the progress of
+  // the batch so the progress bar will update.
+  $sandbox['#finished'] = ($sandbox['progress'] >= $sandbox['max']) ? TRUE : ($sandbox['progress'] / $sandbox['max']);
+
+  if ($sandbox['#finished']) {
+    // Clear all caches so the fixed data will be reloaded.
+    cache_clear_all('*', 'cache_metatag', TRUE);
+
+    // A final log of the number of records that were converted.
+    watchdog('metatag', 'Update 7013: !count records were updated in total.', array('!count' => $sandbox['progress']), WATCHDOG_INFO);
+    if (drupal_is_cli()) {
+      drupal_set_message(t('Update 7013: !count records were updated.', array('!count' => $sandbox['progress'])));
+    }
+
+    // hook_update_N() may optionally return a string which will be displayed
+    // to the user.
+    return t('!count records were updated in total.', array('!count' => $sandbox['progress']));
+  }
+}
+
+/**
+ * Remove duplicate records for a given entity.
+ *
+ * It should be OK to run this without doing a separate batch process as there
+ * shouldn't be many records that have this problem. Hopefully.
+ *
+ * @param $entity_type
+ *   The name of an entity type to check for.
+ */
+function _metatag_remove_dupes($entity_type) {
+  $purge_count = 0;
+
+  // First step: fix the records. There should not be multiple records for the
+  // same entity_id with different languages.
+  $dupe_records = db_query("SELECT m.entity_id, count(m.language) AS the_count
+    FROM {metatag} m
+    WHERE
+      m.entity_type = :type
+    GROUP BY m.entity_id
+    HAVING the_count > 1", array(':type' => $entity_type));
+
+  if (!empty($dupe_records)) {
+    foreach ($dupe_records as $record) {
+      $entity_id = $record->entity_id;
+      $langs = db_query("SELECT m.entity_id, m.language, m.data FROM {metatag} m WHERE m.entity_type = :type AND m.entity_id = :id", array(':type' => $entity_type, ':id' => $entity_id))->fetchAll();
+
+      // Work out which language record to remove. Will need to store this as
+      // an array incase there are multiple records to purge.
+      $langs_to_remove = array();
+
+      // Check for duplicate records.
+      // Outer loop starts from the beginning.
+      for ($outer = 0; $outer < count($langs); $outer++) {
+        // This record may have been removed already.
+        if (isset($langs[$outer])) {
+          // Inner loop starts from the end.
+          for ($inner = count($langs) - 1; $inner > 0; $inner--) {
+            // Work out if the outer loop's data is the same as the inner
+            // loop's.
+            if (isset($langs[$inner]) && $langs[$outer]->data == $langs[$inner]->data) {
+              // Remove the second record.
+              $langs_to_remove[] = $langs[$inner]->language;
+              unset($langs[$inner]);
+            }
+          }
+        }
+      }
+
+      // Only one record left.
+      if (count($langs) == 1) {
+        // This is how it should be, this record is fine.
       }
+      // More than one record, work out which one to keep.
+      elseif (count($langs) > 1) {
+        // Work out the entity's language.
+        $entity = entity_load($entity_type, $entity_id);
+        $entity_language = entity_language($entity_type, $entity);
+        if (empty($language)) {
+          $entity_language = LANGUAGE_NONE;
+        }
 
-      // Shortcuts for later.
-      $entity_type = $sandbox['records'][$sandbox['current_record']]->entity_type;
-      $entity_id = $sandbox['records'][$sandbox['current_record']]->entity_id;
-      $language = $sandbox['records'][$sandbox['current_record']]->language;
-
-      // Load the entity.
-      $entities = entity_load($entity_type, array($entity_id));
-      if (!empty($entities)) {
-        $entity = array_pop($entities);
-
-        // Make sure that the entity has a language set and that it isn't the
-        // same as the meta tag record's language.
-        if (!empty($entity)) {
-          // If the record has multiple values already, i.e. someone saved a
-          // new record because they thought the records were missing.
-          try {
-            // If there's a (non-empty) language value, use it.
-            if (!empty($entity->language)) {
-              // The language values are different.
-              if ($entity->language != $language) {
-                // Update the record with the entity's language value.
-                db_update('metatag')
-                  ->fields(array('language' => $entity->language))
-                  ->condition('entity_type', $entity_type)
-                  ->condition('entity_id', $entity_id)
-                  ->condition('language', $language)
-                  ->execute();
+        // Work out if the entity's language record exists.
+        $lang_pos = NULL;
+        foreach ($langs as $key => $record) {
+          if ($record->language == $entity_language) {
+            $lang_pos = $key;
+            break;
+          }
+        }
+        // If the language record exists, delete the others.
+        if (isset($lang_pos)) {
+          foreach ($langs as $key => $record) {
+            if ($record->language != $entity_language) {
+              $langs_to_remove[] = $record->language;
+            }
+          }
+        }
+        // Otherwise look for a record for the site's default language.
+        else {
+          foreach ($langs as $key => $record) {
+            if ($record->language == $GLOBALS['language']->language) {
+              $lang_pos = $key;
+              break;
+            }
+          }
+          if (isset($lang_pos)) {
+            foreach ($langs as $key => $record) {
+              if ($record->language != $GLOBALS['language']->language) {
+                $langs_to_remove[] = $record->language;
               }
-              // The language values are the same.
-              else {
-                // Do nothing.
+            }
+          }
+          // Finally check for LANGUAGE_NONE.
+          else {
+            foreach ($langs as $key => $record) {
+              if ($record->language == LANGUAGE_NONE) {
+                $lang_pos = $key;
+                break;
               }
             }
-            // There's no language value.
-            else {
-              // Assign the global 'no language' value.
-              db_update('metatag')
-                ->fields(array('language' => LANGUAGE_NONE))
-                ->condition('entity_type', $entity_type)
-                ->condition('entity_id', $entity_id)
-                ->condition('language', $language)
-                ->execute();
+            if (isset($lang_pos)) {
+              foreach ($langs as $key => $record) {
+                if ($record->language != LANGUAGE_NONE) {
+                  $langs_to_remove[] = $record->language;
+                }
+              }
             }
           }
-          catch (Exception $e) {
-            // Delete the newer record.
-            db_delete('metatag')
-              ->condition('language', $entity->language)
-              ->condition('entity_type', $entity_type)
-              ->condition('entity_id', $entity_id)
-              ->execute();
-            // Update the old one again.
-            db_update('metatag')
-              ->fields(array('language' => $entity->language))
-              ->condition('entity_type', $entity_type)
-              ->condition('entity_id', $entity_id)
-              ->condition('language', $language)
-              ->execute();
-            $sandbox['messages'][] = t('The duplicate record for :type record #:id has been removed, leaving the older record in place.', array(':type' => $entity_type, ':id' => $entity_id));
-          }
         }
       }
 
-      // Update our progress information.
-      $sandbox['progress']++;
+      // Purge the redundant records.
+      if (!empty($langs_to_remove)) {
+        $purge_count += db_delete('metatag')
+          ->condition('entity_type', $entity_type)
+          ->condition('entity_id', $entity_id)
+          ->condition('language', $langs_to_remove)
+          ->execute();
+      }
     }
+  }
+
+  if (empty($purge_count)) {
+    drupal_set_message(t('No duplicate :entity_type records were found (this is a good thing).', array(':entity_type' => $entity_type)));
+    watchdog('metatag', 'No duplicate :entity_type records were found (this is a good thing).', array(':entity_type' => $entity_type));
+  }
+  else {
+    drupal_set_message(t('Purged :count duplicate :entity_type record(s).', array(':count' => $purge_count, ':entity_type' => $entity_type)));
+    watchdog('metatag', 'Purged :count duplicate :entity_type record(s).', array(':count' => $purge_count, ':entity_type' => $entity_type));
+    return;
+  }
+}
 
-    // Set the "finished" status, to tell batch engine whether this function
-    // needs to run again. If you set a float, this will indicate the progress
-    // of the batch so the progress bar will update.
-    $sandbox['#finished'] = ($sandbox['progress'] >= $sandbox['max']) ? TRUE : ($sandbox['progress'] / $sandbox['max']);
+/**
+ * Fix {metatag} records that may have been corrupted by #1871020.
+ */
+function metatag_update_7014() {
+  $records = db_query("SELECT *
+  FROM {metatag} m
+  WHERE
+       m.`data` LIKE :nolang
+    OR m.`data` LIKE :lang
+    OR m.`data` LIKE :und",
+    array(
+      ':nolang' => 'a:1:{s:0:"";a:%:{s:%;a:%:{%;}}}',
+      ':lang' => 'a:1:{s:2:"__";a:%:{s:%;a:%:{%;}}}',
+      ':und' => 'a:1:{s:3:"___";a:%:{s:%;a:%:{%;}}}',
+    ));
+
+  // Nothing to fix.
+  if ($records->rowCount() == 0) {
+    drupal_set_message(t('No corrupt records to fix, this is good news :-)'));
+  }
 
-    if ($sandbox['#finished']) {
-      // Clear all caches so the fixed data will be reloaded.
-      cache_clear_all('*', 'cache_metatag', TRUE);
+  // Fix the faulty records.
+  else {
+    foreach ($records as $record) {
+      // Extract the data and get the first element of the array, this should be
+      // valid data.
+      $record->data = reset(unserialize($record->data));
 
-      // hook_update_N() may optionally return a string which will be displayed
-      // to the user.
-      return t('%count records were updated.', array('%count' => $sandbox['progress']));
+      // Update the record.
+      drupal_write_record('metatag', $record, array('entity_type', 'entity_id', 'language'));
     }
+    drupal_set_message(t('Fixed @count corrupt meta tag record(s).', array('@count' => $records->rowCount())));
   }
 }
diff --git a/profiles/commons/modules/contrib/metatag/metatag.metatag.inc b/profiles/commons/modules/contrib/metatag/metatag.metatag.inc
index ffb6b62..0c699fb 100644
--- a/profiles/commons/modules/contrib/metatag/metatag.metatag.inc
+++ b/profiles/commons/modules/contrib/metatag/metatag.metatag.inc
@@ -158,6 +158,13 @@ function metatag_metatag_info() {
     'group' => 'advanced',
   );
 
+  $info['tags']['news_keywords'] = array(
+    'label' => t('Google News Keywords'),
+    'description' => t('A comma-separated list of keywords about the page. This meta tag is used as an indicator in <a href="@google_news">Google News</a>.', array('@google_news' => 'http://support.google.com/news/publisher/bin/answer.py?hl=en&answer=68297')),
+    'class' => 'DrupalTextMetaTag',
+    'group' => 'advanced',
+  );
+
   $info['tags']['generator'] = array(
     'label' => t('Generator'),
     'description' => t("Describes the name and version number of the software or publishing tool used to create the page."),
@@ -204,6 +211,21 @@ function metatag_metatag_info() {
 
   $info['tags']['author'] = array(
     'label' => t('Author URL'),
+    'description' => "Used by some search engines to confirm authorship of the content on a page. Should be either the full URL for the author's Google+ profile page or a local page with information about the author.",
+    'class' => 'DrupalLinkMetaTag',
+    'group' => 'advanced',
+  );
+
+  $info['tags']['original-source'] = array(
+    'label' => t('Original Source'),
+    'description' => '',
+    'class' => 'DrupalTextMetaTag',
+    'group' => 'advanced',
+    'description' => "Used to indicate the URL that broke the story, and can link to either an internal URL or an external source. If the full URL is not known it is acceptable to use a partial URL or just the domain name.",
+  );
+
+  $info['tags']['author'] = array(
+    'label' => t('Author URL'),
     'description' => 'Used by some search engines to aid confirm authorship of the content on a page. Should be either the full URL for the author\'s Google+ profile page or a local page with information about the author.',
     'class' => 'DrupalLinkMetaTag',
     'group' => 'advanced',
diff --git a/profiles/commons/modules/contrib/metatag/metatag.migrate.inc b/profiles/commons/modules/contrib/metatag/metatag.migrate.inc
new file mode 100644
index 0000000..b189ef0
--- /dev/null
+++ b/profiles/commons/modules/contrib/metatag/metatag.migrate.inc
@@ -0,0 +1,53 @@
+<?php
+
+/**
+ * @file
+ * Metatag support for migrate.
+ */
+
+/**
+ * Implements hook_migrate_api().
+ */
+function metatag_migrate_api() {
+  return array('api' => 2);
+}
+
+/**
+ * Metatags destination handler.
+ */
+class MigrateMetatagHandler extends MigrateDestinationHandler {
+
+  public function __construct() {
+    $this->registerTypes(array('node', 'user', 'taxonomy_term'));
+  }
+
+  /**
+   * Implements MigrateDestinationHandler::fields().
+   */
+  public function fields() {
+    $fields = array();
+    $elements = metatag_get_info();
+
+    foreach ($elements['tags'] as $value) {
+      $metatag_field = 'metatag_' . $value['name'];
+      $fields[$metatag_field] = $value['description'];
+    }
+
+    return $fields;
+  }
+
+  /**
+   * Implements MigrateDestinationHandler::prepare().
+   */
+  public function prepare($entity, stdClass $row) {
+    $elements = metatag_get_info();
+
+    foreach ($elements['tags'] as $value) {
+      $metatag_field = 'metatag_' . $value['name'];
+      if (isset($entity->$metatag_field)) {
+        $entity->metatags[$value['name']]['value'] = $entity->$metatag_field;
+        unset($entity->$metatag_field);
+      }
+    }
+  }
+}
diff --git a/profiles/commons/modules/contrib/metatag/metatag.module b/profiles/commons/modules/contrib/metatag/metatag.module
index 0774385..6f0a493 100644
--- a/profiles/commons/modules/contrib/metatag/metatag.module
+++ b/profiles/commons/modules/contrib/metatag/metatag.module
@@ -4,11 +4,6 @@
  * @todo Add revisionable support for metatag data.
  */
 
-// Load the translation functionality when appropriate.
-if (module_exists('entity_translation')) {
-  include_once dirname(__FILE__) . '/metatag.entity_translation.inc';
-}
-
 /**
  * Implements hook_help().
  */
@@ -19,6 +14,10 @@ function metatag_help($path, $arg) {
   elseif ($path == 'admin/help#metatag') {
     return '<p>' . t('The Meta tags module provides a options to let each page have customized meta data added to the "meta" tags in the HEAD section of the document.') . '</p>';
   }
+  elseif ($path == 'admin/config/search/metatags/bulk-revert') {
+    return '<p>' . t('This form <strong>will wipe out</strong> all custom meta tags for the selected entities, reverting them to the default configuration assigned at the <a href="@url">Defaults tab</a>. For example, if the meta tags are changed for an article they will be removed if the "Node: Article" checkbox is selected.', array('@url' => url('admin/config/search/metatags'))) . '</p>';
+  }
+
 }
 
 /**
@@ -58,7 +57,7 @@ function metatag_ctools_plugin_api($owner, $api) {
  * Implements hook_hook_info().
  */
 function metatag_hook_info() {
-  $hooks_metatag = array(
+  $hooks = array(
     'metatag_config_default',
     'metatag_config_default_alter',
     'metatag_config_delete',
@@ -71,16 +70,8 @@ function metatag_hook_info() {
     'metatag_info',
     'metatag_info_alter',
   );
-  $hooks_metatag = array_fill_keys($hooks_metatag, array('group' => 'metatag'));
 
-  $hooks_entity_translation = array(
-    'entity_translation_insert',
-    'entity_translation_update',
-    'entity_translation_delete',
-  );
-  $hooks_entity_translation = array_fill_keys($hooks_entity_translation, array('group' => 'entity_translation'));
-
-  return $hooks_metatag + $hooks_entity_translation;
+  return array_fill_keys($hooks, array('group' => 'metatag'));
 }
 
 /**
@@ -178,6 +169,15 @@ function metatag_menu() {
     'type' => MENU_LOCAL_TASK,
     'weight' => 10,
   );
+  $items['admin/config/search/metatags/bulk-revert'] = array(
+    'title' => 'Bulk revert',
+    'page callback' => 'drupal_get_form',
+    'page arguments' => array('metatag_bulk_revert_form'),
+    'access arguments' => array('administer meta tags'),
+    'type' => MENU_LOCAL_TASK,
+    'weight' => 30,
+    'file' => 'metatag.admin.inc',
+  );
 
   return $items;
 }
@@ -303,32 +303,32 @@ function metatag_config_cache_clear() {
 /**
  * Load an entity's tags.
  *
- * @param $type
+ * @param $entity_type
  *   The entity type to load
- * @param $id
+ * @param $entity_id
  *   The ID of the entity to load
  * @return
  *   An array of tag data keyed by language.
  */
-function metatag_metatags_load($type, $id) {
-  $metatags = metatag_metatags_load_multiple($type, array($id));
+function metatag_metatags_load($entity_type, $entity_id) {
+  $metatags = metatag_metatags_load_multiple($entity_type, array($entity_id));
   return !empty($metatags) ? reset($metatags) : array();
 }
 
 /**
  * Load tags for multiple entities.
  *
- * @param $type
+ * @param $entity_type
  *   The entity type to load
- * @param $ids
+ * @param $entity_ids
  *   The list of entity IDs
  * @return
  *   An array of tag data, keyed by ID.
  */
-function metatag_metatags_load_multiple($type, array $ids) {
+function metatag_metatags_load_multiple($entity_type, array $entity_ids) {
   // Double check entity IDs are numeric thanks to Entity API module.
-  $ids = array_filter($ids, 'is_numeric');
-  if (empty($ids)) {
+  $entity_ids = array_filter($entity_ids, 'is_numeric');
+  if (empty($entity_ids)) {
     return array();
   }
 
@@ -346,8 +346,8 @@ function metatag_metatags_load_multiple($type, array $ids) {
 
   // Get all translations of tag data for this entity.
   $result = db_query("SELECT entity_id, data, language FROM {metatag} WHERE (entity_type = :type) AND (entity_id IN (:ids))", array(
-    ':type' => $type,
-    ':ids' => $ids,
+    ':type' => $entity_type,
+    ':ids' => $entity_ids,
   ));
 
   // Marshal it into an array keyed by entity ID. Each value is an array of
@@ -363,40 +363,55 @@ function metatag_metatags_load_multiple($type, array $ids) {
 /**
  * Save an entity's tags.
  *
- * @param $type
+ * @param $entity_type
  *   The entity type to load
- * @param $id
+ * @param $entity_id
  *   The entity's ID
  * @param $metatags
  *   All of the tag information
  * @param $language
  *   The language of the translation set
  */
-function metatag_metatags_save($type, $id, $metatags, $language) {
-  // Use the default content language if the entity doesn't have language
-  // support.
+function metatag_metatags_save($entity_type, $entity_id, $metatags, $language) {
+  // If no language assigned, use the has-no-language language.
   if (!$language) {
-    $language = $GLOBALS['language_content']->language;
+    $language = LANGUAGE_NONE;
   }
 
-  // Check that $id is numeric because of Entity API and string IDs.
-  if (!is_numeric($id)) {
+  // Check that $entity_id is numeric because of Entity API and string IDs.
+  if (!is_numeric($entity_id)) {
     return;
   }
 
+  // Certain modules, e.g. Workbench Moderation, will cause the data to be in
+  // an unsupported format; the problem needs to be resolved elsewhere so this
+  // can only be considered a temporary fix.
+  // TODO: Solve the core problem, which will probably entail something
+  // similar to http://drupal.org/node/1876034.
+  if (isset($metatags[$language])) {
+    // There are certain occasions when the old data and the new data are
+    // *both* added to the $metatags array, in this case throw away the language
+    // data.
+    $lang_data = $metatags[$language];
+    unset($metatags[$language]);
+    if (empty($metatags)) {
+      $metatags = $lang_data;
+    }
+  }
+
   // Allow other modules to alter the meta tags prior to saving using
   // hook_metatag_presave().
   foreach (module_implements('metatag_presave') as $module) {
     $function = "{$module}_metatag_presave";
-    $function($metatags, $type, $id, $language);
+    $function($metatags, $entity_type, $entity_id, $language);
   }
 
   if (empty($metatags)) {
     // If the data array is empty, there is no data to actually save, so
     // just delete the record from the database.
     db_delete('metatag')
-      ->condition('entity_type', $type)
-      ->condition('entity_id', $id)
+      ->condition('entity_type', $entity_type)
+      ->condition('entity_id', $entity_id)
       ->condition('language', $language)
       ->execute();
   }
@@ -404,8 +419,8 @@ function metatag_metatags_save($type, $id, $metatags, $language) {
     // Otherwise save the data for this entity.
     db_merge('metatag')
       ->key(array(
-        'entity_type' => $type,
-        'entity_id' => $id,
+        'entity_type' => $entity_type,
+        'entity_id' => $entity_id,
         'language' => $language,
       ))
       ->fields(array(
@@ -415,50 +430,50 @@ function metatag_metatags_save($type, $id, $metatags, $language) {
   }
 
   // Clear cached data.
-  metatag_metatags_cache_clear($type, $id);
+  metatag_metatags_cache_clear($entity_type, $entity_id);
 }
 
 /**
  * Delete an entity's tags.
  *
- * @param $type
+ * @param $entity_type
  *   The entity type
- * @param $id
+ * @param $entity_id
  *   The entity's ID
  * @param $langcode
  *   The language ID of the entry to delete.  If left blank, all language
  *   entries for this entity will be deleted.
  */
-function metatag_metatags_delete($type, $id, $langcode = NULL) {
-  return metatag_metatags_delete_multiple($type, array($id), $langcode);
+function metatag_metatags_delete($entity_type, $entity_id, $langcode = NULL) {
+  return metatag_metatags_delete_multiple($entity_type, array($entity_id), $langcode);
 }
 
 /**
  * Delete multiple entities' tags.
  *
- * @param $type
+ * @param $entity_type
  *   The entity type
- * @param $ids
+ * @param $entity_ids
  *   The list of IDs
  * @param $langcode
  *   The language ID of the entities to delete.  If left blank, all language
  *   entries for the enities will be deleted.
  */
-function metatag_metatags_delete_multiple($type, array $ids, $langcode = NULL) {
+function metatag_metatags_delete_multiple($entity_type, array $entity_ids, $langcode = NULL) {
   // Double check entity IDs are numeric thanks to Entity API module.
-  $ids = array_filter($ids, 'is_numeric');
+  $entity_ids = array_filter($entity_ids, 'is_numeric');
 
-  if ($metatags = metatag_metatags_load_multiple($type, $ids)) {
+  if ($metatags = metatag_metatags_load_multiple($entity_type, $entity_ids)) {
     $transaction = db_transaction();
     try {
       // Let other modules know about the records being deleted using
       // hook_metatag_metatags_delete().
-      module_invoke_all('metatag_metatags_delete', $type, $ids, $langcode);
+      module_invoke_all('metatag_metatags_delete', $entity_type, $entity_ids, $langcode);
 
       // Set the entity to delete.
       $query = db_delete('metatag')
-        ->condition('entity_type', $type)
-        ->condition('entity_id', $ids, 'IN');
+        ->condition('entity_type', $entity_type)
+        ->condition('entity_id', $entity_ids, 'IN');
 
       // Specify a language if there is one.
       if ($langcode) {
@@ -469,7 +484,7 @@ function metatag_metatags_delete_multiple($type, array $ids, $langcode = NULL) {
       $query->execute();
 
       // Clear cached data.
-      metatag_metatags_cache_clear($type, $ids);
+      metatag_metatags_cache_clear($entity_type, $entity_ids);
     }
     catch (Exception $e) {
       $transaction->rollback();
@@ -479,14 +494,14 @@ function metatag_metatags_delete_multiple($type, array $ids, $langcode = NULL) {
   }
 }
 
-function metatag_metatags_cache_clear($type, $id = NULL) {
-  if (empty($id)) {
-    cache_clear_all("output:$type", 'cache_metatag', TRUE);
+function metatag_metatags_cache_clear($entity_type, $entity_id = NULL) {
+  if (empty($entity_id)) {
+    cache_clear_all("output:$entity_type", 'cache_metatag', TRUE);
   }
   else {
-    $ids = (array) $id;
-    foreach ($ids as $id) {
-      cache_clear_all("output:$type:$id", 'cache_metatag', TRUE);
+    $entity_ids = (array) $entity_id;
+    foreach ($entity_ids as $entity_id) {
+      cache_clear_all("output:$entity_type:$entity_id", 'cache_metatag', TRUE);
     }
   }
 }
@@ -494,22 +509,22 @@ function metatag_metatags_cache_clear($type, $id = NULL) {
 /**
  * Implements hook_entity_load().
  */
-function metatag_entity_load($entities, $type) {
+function metatag_entity_load($entities, $entity_type) {
   // Wrap this in a try-catch block to work around occasions when the schema
   // hasn't been updated yet.
   try {
-    if (metatag_entity_supports_metatags($type)) {
-      $metatags = metatag_metatags_load_multiple($type, array_keys($entities));
-      foreach ($entities as $id => $entity) {
-        $entities[$id]->metatags = isset($metatags[$id]) ? $metatags[$id] : array();
+    if (metatag_entity_supports_metatags($entity_type)) {
+      $metatags = metatag_metatags_load_multiple($entity_type, array_keys($entities));
+      foreach ($entities as $entity_id => $entity) {
+        $entities[$entity_id]->metatags = isset($metatags[$entity_id]) ? $metatags[$entity_id] : array();
       }
     }
   }
   catch (Exception $e) {
-    watchdog('metatag', 'Error loading meta tag data, do the database updates need to be ran? do the <a href=":url:">database updates</a> need to be ran? The error occurred when loading record(s) :ids for the :type entity type. The error message was: :error', array(':ids' => implode(', ', array_keys($entities)), ':type' => $type, ':error' => $e->getMessage()), WATCHDOG_CRITICAL);
+    watchdog('metatag', 'Error loading meta tag data, do the <a href="@update">database updates</a> need to be run? The error occurred when loading record(s) %ids for the %type entity type. The error message was: %error', array('@update' => base_path() . 'update.php', '%ids' => implode(', ', array_keys($entities)), '%type' => $entity_type, '%error' => $e->getMessage()), WATCHDOG_CRITICAL);
     // Don't display the same message twice for Drush.
     if (php_sapi_name() != 'cli') {
-      drupal_set_message(t('Error loading meta tag data, do the <a href=":url">database updates</a> need to be ran?', array('url' => url('update.php'))), 'error');
+      drupal_set_message(t('Error loading meta tag data, do the <a href="@update">database updates</a> need to be run?', array('@update' => base_path() . 'update.php')), 'error');
     }
   }
 }
@@ -519,13 +534,12 @@ function metatag_entity_load($entities, $type) {
  */
 function metatag_entity_insert($entity, $entity_type) {
   if (isset($entity->metatags)) {
-    list($id) = entity_extract_ids($entity_type, $entity);
+    list($entity_id) = entity_extract_ids($entity_type, $entity);
 
-    // Determine the language as per http://drupal.org/node/1626346.
-    $language = function_exists('entity_language') ?
-      entity_language($entity_type, $entity) : $entity->language;
+    // Determine the entity's language.
+    $language = metatag_entity_get_language($entity_type, $entity);
 
-    metatag_metatags_save($entity_type, $id, $entity->metatags, $language);
+    metatag_metatags_save($entity_type, $entity_id, $entity->metatags, $language);
   }
 }
 
@@ -533,19 +547,38 @@ function metatag_entity_insert($entity, $entity_type) {
  * Implements hook_entity_update().
  */
 function metatag_entity_update($entity, $entity_type) {
-  list($id) = entity_extract_ids($entity_type, $entity);
+  if (!metatag_entity_supports_metatags($entity_type)) {
+    return;
+  }
 
-  if (isset($entity->metatags)) {
+  list($entity_id) = entity_extract_ids($entity_type, $entity);
 
-    // Determine the language as per http://drupal.org/node/1626346.
-    $language = function_exists('entity_language') ?
-      entity_language($entity_type, $entity) : $entity->language;
+  if (isset($entity->metatags)) {
+    // Determine the entity's language.
+    $new_language = metatag_entity_get_language($entity_type, $entity);
+
+    // Determine the language for this entity object.
+    if (isset($entity->original)) {
+      $old_language = metatag_entity_get_language($entity_type, $entity->original);
+
+      // If the language has changed then remove the old one. When a new
+      // translation is being saved using Entity Translation both values will
+      // be the same, so this is safe to do.
+      if ($old_language != $new_language) {
+        db_delete('metatag')
+          ->condition('entity_type', $entity_type)
+          ->condition('entity_id', $entity_id)
+          ->condition('language', $old_language)
+          ->execute();
+      }
+    }
 
-    metatag_metatags_save($entity_type, $id, $entity->metatags, $language);
+    // Save the record.
+    metatag_metatags_save($entity_type, $entity_id, $entity->metatags, $new_language);
   }
   else {
     // Still ensure the meta tag output is cached.
-    metatag_metatags_cache_clear($entity_type, $id);
+    metatag_metatags_cache_clear($entity_type, $entity_id);
   }
 }
 
@@ -553,8 +586,8 @@ function metatag_entity_update($entity, $entity_type) {
  * Implements hook_entity_delete().
  */
 function metatag_entity_delete($entity, $entity_type) {
-  list($id) = entity_extract_ids($entity_type, $entity);
-  metatag_metatags_delete($entity_type, $id);
+  list($entity_id) = entity_extract_ids($entity_type, $entity);
+  metatag_metatags_delete($entity_type, $entity_id);
 }
 
 /**
@@ -567,12 +600,12 @@ function metatag_field_attach_delete_revision($entity_type, $entity) {
 /**
  * Implements hook_taxonomy_term_view_alter().
  */
-function metatag_taxonomy_term_view_alter(&$build, &$type) {
+function metatag_taxonomy_term_view_alter(&$build, &$entity_type) {
   // This is only needed if hook_entity_view has not been added to core.
   // @see http://drupal.org/node/1067120
   if (isset($build['#term']) && !function_exists('taxonomy_term_view_multiple')) {
     $entity = taxonomy_term_load($build['#term']->tid);
-    metatag_entity_view($entity, $type, 'full', NULL);
+    metatag_entity_view($entity, $entity_type, 'full', NULL);
   }
 }
 
@@ -580,16 +613,47 @@ function metatag_taxonomy_term_view_alter(&$build, &$type) {
  * Implements hook_entity_view().
  */
 function metatag_entity_view($entity, $entity_type, $view_mode, $langcode) {
+  // Only run this function once per page load.
+  static $i_will_say_this_only_once = FALSE;
+
   // Only proceed if this entity object is the page being viewed.
   if (_metatag_entity_is_page($entity_type, $entity)) {
+    // Only run this function once per page load.
+    if ($i_will_say_this_only_once) {
+      return;
+    }
+    $i_will_say_this_only_once = TRUE;
+
     // If this entity object isn't allowed meta tags, skip it.
     if (!metatag_entity_has_metatags($entity_type, $entity)) {
       return;
     }
 
+    // Obbtain some details of the entity that are needed elsewhere.
     list($entity_id, $revision_id, $bundle) = entity_extract_ids($entity_type, $entity);
     $instance = "{$entity_type}:{$bundle}";
 
+    // Determine the language this entity actually uses.
+    $entity_language = metatag_entity_get_language($entity_type, $entity);
+
+    // The requested language is different to the entity's language, look for
+    // a language elsewhere.
+    if ($entity_language != $langcode) {
+      // If no language was defined for the entity then use that for the 
+      if ($entity_language == LANGUAGE_NONE) {
+        $langcode = LANGUAGE_NONE;
+      }
+      else {
+        $enabled_languages = field_content_languages();
+        foreach (field_language($entity_type, $entity) as $field => $lang) {
+          // Only accept actual language values that are properly enabled.
+          if ($lang != LANGUAGE_NONE && in_array($lang, $enabled_languages)) {
+            $langcode = $lang;
+          }
+        }
+      }
+    }
+
     // All applicable pieces for this current page.
     $cid_parts = array(
       'entity_type' => $entity_type,
@@ -609,12 +673,13 @@ function metatag_entity_view($entity, $entity_type, $view_mode, $langcode) {
     // hook_metatag_page_cache_cid_parts_alter().
     drupal_alter('metatag_page_cache_cid_parts', $cid_parts);
 
-    $cid = "output:{$entity_type}:{$entity_id}:" . hash('sha256', serialize($cid_parts));
+    $cid = "output:{$entity_type}:{$entity_id}:{$langcode}:" . hash('sha256', serialize($cid_parts));
 
     if ($cache = cache_get($cid, 'cache_metatag')) {
-      $entity->content['metatags'] = $cache->data;
+      $output = $cache->data;
     }
     else {
+      // Separate the meta tags.
       $metatags = isset($entity->metatags) ? $entity->metatags : array();
 
       // Build options for meta tag rendering.
@@ -626,7 +691,7 @@ function metatag_entity_view($entity, $entity_type, $view_mode, $langcode) {
 
       // Ensure we actually pass a language object rather than language code.
       $languages = language_list();
-      if (isset($langcode) && isset($languages[$langcode])) {
+      if (isset($languages[$langcode])) {
         $options['language'] = $languages[$langcode];
       }
 
@@ -637,13 +702,13 @@ function metatag_entity_view($entity, $entity_type, $view_mode, $langcode) {
       $options['entity'] = $entities[$entity_id];
 
       // Render the metatags and save to the cache.
-      $entity->content['metatags'] = metatag_metatags_view($instance, $metatags, $options);
-      cache_set($cid, $entity->content['metatags'], 'cache_metatag');
+      $output = metatag_metatags_view($instance, $metatags, $options);
+      cache_set($cid, $output, 'cache_metatag');
     }
 
     // We need to register the term's metatags, so we can later fetch them.
     // @see metatag_page_build().
-    metatag_page_set_metatags($instance, $entity->content['metatags']);
+    metatag_page_set_metatags($instance, $output);
   }
 }
 
@@ -672,25 +737,11 @@ function metatag_metatags_view($instance, array $metatags = array(), array $opti
 
   // If there are any tags, determine the translation to display.
   if (!empty($metatags)) {
-    // Get the display language.
-    if (isset($options['language']->language)) {
-      // Use the passed-in option.
-      $translation = $options['language']->language;
-    }
-    elseif (isset($metatags[$GLOBALS['language_content']->language])) {
-      // We weren't given a language; use the global content one.
-      $translation = $GLOBALS['language_content']->language;
-    }
-    else {
-      // The language is not defined.
-      $translation = LANGUAGE_NONE;
-    }
-
-    // Choose the derived translation, fail over to the language-agnostic
-    // values if applicable.
-    if (!empty($metatags[$translation])) {
-      $metatags = $metatags[$translation];
+    // Get the display language; default to the entity's language.
+    if (isset($options['language']) && isset($options['language']->language) && isset($metatags[$options['language']->language])) {
+      $metatags = $metatags[$options['language']->language];
     }
+    // If no language requested, use the no-language value.
     elseif (!empty($metatags[LANGUAGE_NONE])) {
       $metatags = $metatags[LANGUAGE_NONE];
     }
@@ -909,69 +960,67 @@ function metatag_entity_has_metatags($entity_type, $entity) {
   }
   $instance = "{$entity_type}:{$bundle}";
   if (!isset($config_exists[$instance])) {
-    $config_exists[$instance] = NULL;
-    $instances = metatag_config_get_parent_instances($instance, FALSE);
-    $configs = metatag_config_load_multiple($instances);
-    foreach ($instances as $key) {
-      if (!empty($configs[$key]) && empty($configs[$key]->disabled)) {
-        $config_exists[$instance] = TRUE;
-      }
-    }
+    // Check if the intstance or its parents (excluding global) are enabled.
+    $config_exists[$instance] = metatag_config_is_enabled($instance, TRUE, FALSE);
   }
 
   return isset($config_exists[$instance]);
 }
 
+/**
+ * Check whether the requested entity type (and bundle) support metatag.
+ *
+ * By default this will be FALSE, support has to be specifically enabled by
+ * assigning 'metatag' => TRUE within the hook_entity_info() definition for the
+ * entity.
+ */
 function metatag_entity_supports_metatags($entity_type = NULL, $bundle = NULL) {
-  $types = &drupal_static(__FUNCTION__);
+  $entity_types = &drupal_static(__FUNCTION__);
 
-  if (!isset($types)) {
-    $types = array();
+  if (!isset($entity_types)) {
+    $entity_types = array();
     foreach (entity_get_info() as $entity_type_key => $entity_info) {
-      if (!isset($entity_info['metatags'])) {
-        // By default allow entities that have fields or have paths and are not
-        // configuration entities (Entity API setting).
-        $entity_info['metatags'] = (!empty($entity_info['uri callback']) || !empty($entity_info['fieldable'])) && empty($entity_info['configuration']);
-      }
       if (empty($entity_info['metatags'])) {
-        $types[$entity_type_key] = FALSE;
+        $entity_types[$entity_type_key] = FALSE;
         continue;
       }
-      $types[$entity_type_key] = array();
+      $entity_types[$entity_type_key] = array();
       foreach ($entity_info['bundles'] as $bundle_key => $bundle_info) {
-        $types[$entity_type_key][$bundle_key] = !isset($bundle_info['metatags']) || !empty($bundle_info['metatags']);
+        $entity_types[$entity_type_key][$bundle_key] = !isset($bundle_info['metatags']) || !empty($bundle_info['metatags']);
       }
     }
   }
 
   if (isset($entity_type) && isset($bundle)) {
-    return isset($types[$entity_type][$bundle]) ? $types[$entity_type][$bundle] : FALSE;
+    return isset($entity_types[$entity_type][$bundle]) ? $entity_types[$entity_type][$bundle] : FALSE;
   }
   elseif (isset($entity_type)) {
-    return isset($types[$entity_type]) ? ($types[$entity_type] !== FALSE) : FALSE;
+    return isset($entity_types[$entity_type]) ? ($entity_types[$entity_type] !== FALSE) : FALSE;
   }
 
-  return $types;
+  return $entity_types;
 }
 
 /**
  * Implements hook_entity_info_alter().
+ *
+ * Enables Metatag support for the core entities.
  */
 function metatag_entity_info_alter(&$info) {
   $defaults['node'] = array(
     'path' => 'node/%node',
+    'metatags' => TRUE,
   );
   $defaults['taxonomy_term'] = array(
     'path' => 'taxonomy/term/%taxonomy_term',
+    'metatags' => TRUE,
   );
   if (module_exists('forum') && ($vid = variable_get('forum_nav_vocabulary', 0)) && $vocabulary = taxonomy_vocabulary_load($vid)) {
     $defaults['taxonomy_term']['bundles'][$vocabulary->machine_name]['path'] = 'forum/%taxonomy_term';
   }
   $defaults['user'] = array(
     'path' => 'user/%user',
-  );
-  $defaults['comment'] = array(
-    'metatags' => FALSE,
+    'metatags' => TRUE,
   );
 
   foreach ($defaults as $key => $entity_defaults) {
@@ -1055,7 +1104,8 @@ function metatag_page_build(&$page) {
   }
 
   // The front page has special consideration.
-  if (drupal_is_front_page()) {
+  $instance = 'global:frontpage';
+  if (drupal_is_front_page() && metatag_config_is_enabled($instance)) {
     $instance = 'global:frontpage';
 
     // These two parts are sufficient given that the homepage is unique.
@@ -1074,7 +1124,7 @@ function metatag_page_build(&$page) {
     drupal_alter('metatag_page_cache_cid_parts', $cid_parts);
 
     $cid = "output:{$instance}:" . hash('sha256', serialize($cid_parts));
-    
+
     if ($cache = cache_get($cid, 'cache_metatag')) {
       $metatags = $cache->data;
     }
@@ -1082,7 +1132,7 @@ function metatag_page_build(&$page) {
       $metatags = metatag_metatags_view($instance, array());
       cache_set($cid, $metatags, 'cache_metatag');
     }
-    
+
     $page['content']['metatags'][$instance] = $metatags;
   }
 
@@ -1091,12 +1141,44 @@ function metatag_page_build(&$page) {
   else {
     $page['content']['metatags'] += metatag_page_get_metatags();
   }
+
+  // If no meta tags were loaded, and this is not an admin path, at least load
+  // the global defaults. This may be disabled, see README.txt for details.
+  if (empty($page['content']['metatags']) && variable_get('metatag_load_all_pages', TRUE) && !path_is_admin(current_path())) {
+    $instance = 'global';
+
+    // These two parts are sufficient given that the homepage is unique.
+    $cid_parts = array(
+      'langcode' => $GLOBALS['language_content']->language,
+      'url' => $GLOBALS['base_url'] . $_SERVER['REQUEST_URI'],
+    );
+
+    // Allow each page in a sequence to have different values.
+    if (isset($_GET['page'])) {
+      $cid_parts['page'] = $_GET['page'];
+    }
+
+    // Allow other modules to customize the data using
+    // hook_metatag_page_cache_cid_parts_alter().
+    drupal_alter('metatag_page_cache_cid_parts', $cid_parts);
+
+    $cid = "output:{$instance}:" . hash('sha256', serialize($cid_parts));
+
+    if ($cache = cache_get($cid, 'cache_metatag')) {
+      $metatags = $cache->data;
+    }
+    else {
+      $metatags = metatag_metatags_view($instance, array());
+      cache_set($cid, $metatags, 'cache_metatag');
+    }
+    $page['content']['metatags'][$instance] = $metatags;
+  }
 }
 
 /**
  * Returns whether the current page is the page of the passed in entity.
  *
- * @param $type
+ * @param $entity_type
  *    The entity type; e.g. 'node' or 'user'.
  * @param $entity
  *    The entity object.
@@ -1105,8 +1187,8 @@ function metatag_page_build(&$page) {
  *   TRUE if the current page is the page of the specified entity, or FALSE
  *   otherwise.
  */
-function _metatag_entity_is_page($type, $entity) {
-  $uri = entity_uri($type, $entity);
+function _metatag_entity_is_page($entity_type, $entity) {
+  $uri = entity_uri($entity_type, $entity);
   return !empty($uri['path']) && current_path() == $uri['path'];
 }
 
@@ -1138,45 +1220,41 @@ function metatag_field_attach_form($entity_type, $entity, &$form, &$form_state,
   if (!metatag_entity_has_metatags($entity_type, $entity)) {
     return;
   }
+  // Entity_Translation will trigger this hook again, skip it.
+  if (!empty($form_state['entity_translation']['is_translation'])) {
+    return;
+  }
 
   list($entity_id, $revision_id, $bundle) = entity_extract_ids($entity_type, $entity);
   $instance = "{$entity_type}:{$bundle}";
 
   // Grab the meta tags for display in the form if there are any.
-  if (isset($entity->metatags)) {
-
-    // Determine the entity language as per http://drupal.org/node/1626346.
-    $entity_language = function_exists('entity_language') ?
-      entity_language($entity_type, $entity) : $entity->language;
-
-    // Determine from where we should get the tags.
-    if (!(isset($entity->metatags[$langcode]) || isset($entity->metatags[$entity_language]))) {
+  if (!empty($entity->metatags)) {
+    // Identify the language to use with this entity.
+    $entity_language = metatag_entity_get_language($entity_type, $entity);
 
-      // This is a preview so set the tags to the raw submission data.  No
-      // language has been set.
-      $metatags = $entity->metatags;
+    // If this is a new translation using Entity Translation, load the meta
+    // tags from the entity's original language.
+    if (module_exists('entity_translation') && empty($form['#entity_translation_source_form']) && ($handler = entity_translation_entity_form_get_handler($form, $form_state)) && isset($entity->metatags[$handler->getSourceLanguage()])) {
+      $metatags = $entity->metatags[$handler->getSourceLanguage()];
     }
+    // Determine from where we should get the tags.
     elseif (isset($entity->metatags[$langcode])) {
       // Set the tags to the translation set matching that of the form.
       $metatags = $entity->metatags[$langcode];
-
-      // For tags that aren't set in the current form language, fill them in
-      // with default data from the original translation, the entity language.
-      if (isset($entity->metatags[$entity_language])) {
-        foreach ($entity->metatags[$entity_language] as $tag_id => $tag_data) {
-          if (!isset($metatags[$tag_id])) {
-            $metatags[$tag_id] = $tag_data;
-          }
-        }
-      }
     }
     // There is no translation for this entity's tags in the current
     // language. Instead, display tags in the language of the entity, the
     // source language of translations. The will provide translators with the
     // original text to translate.
-    else {
+    elseif (isset($entity->metatags[$entity_language])) {
       $metatags = $entity->metatags[$entity_language];
     }
+    // This is a preview so set the tags to the raw submission data.  No
+    // language has been set.
+    else {
+      $metatags = $entity->metatags;
+    }
   }
   else {
     $metatags = array();
@@ -1226,7 +1304,7 @@ function metatag_get_info($type = NULL, $name = NULL) {
   if (!isset($info)) {
     // hook_metatag_info() includes translated strings, so each language is cached
     // separately.
-    $cid = 'info:' . $GLOBALS['language']->language;
+    $cid = 'info:' . LANGUAGE_NONE;
 
     if ($cache = cache_get($cid, 'cache_metatag')) {
       $info = $cache->data;
@@ -1352,7 +1430,6 @@ function metatag_html_head_alter(&$elements) {
     foreach (array_keys($elements) as $key) {
       if (strpos($key, 'drupal_add_html_head_link:' . $name . ':') === 0) {
         unset($elements[$key]);
-        break;
       }
     }
   }
@@ -1457,12 +1534,20 @@ function metatag_config_instance_label($instance) {
   $labels = &drupal_static(__FUNCTION__, array());
 
   if (!isset($labels[$instance])) {
-    $context = metatag_config_instance_info($instance);
-    $labels[$instance] = isset($context['label']) ? $context['label'] : t('Unknown');
-    $parents = metatag_config_get_parent_instances($instance, FALSE);
-    array_shift($parents);
-    if (!empty($parents)) {
-      $labels[$instance] = metatag_config_instance_label(implode(':', $parents)) . ': ' . $labels[$instance];
+    $instance_parts = explode(':', $instance);
+    $instance_part = array_pop($instance_parts);
+    if ($context = metatag_config_instance_info($instance)) {
+      $labels[$instance] = $context['label'];
+    }
+    else {
+      $labels[$instance] = t('Unknown (@instance)', array('@instance' => $instance_part));
+    }
+    // Normally the following would use metatag_config_get_parent_instances()
+    // but since we already sliced the instance by separator and removed the
+    // last segment, putting the array back together gives us this instance's
+    // parent.
+    if (!empty($instance_parts)) {
+      $labels[$instance] = metatag_config_instance_label(implode(':', $instance_parts)) . ': ' . $labels[$instance];
     }
   }
 
@@ -1501,13 +1586,60 @@ function metatag_config_access($op, $config = NULL) {
 }
 
 /**
+ * Checks if a metatag configuration record is enabled.
+ *
+ * @param string $instance
+ *   The configuration instance machine name.
+ *
+ * @return bool
+ *   TRUE if the configuration is enabled, or FALSE otherwise.
+ */
+function metatag_config_is_enabled($instance, $include_defaults = FALSE, $include_global = TRUE) {
+  if ($include_defaults) {
+    return (bool) metatag_config_load_with_defaults($instance, $include_global);
+  }
+  else {
+    $config = metatag_config_load($instance);
+    return !empty($config) && empty($config->disabled);
+  }
+}
+
+/**
+ * Wrapper around entity_language() to use LANGUAGE_NONE if the entity does not
+ * have a language assigned.
+ *
+ * @param $entity_type
+ *   An entity type's machine name.
+ * @param $entity
+ *   The entity to review;
+ *
+ * @return
+ *   A string indicating the language code to be used.
+ */
+function metatag_entity_get_language($entity_type, $entity) {
+  // Determine the entity's language.
+  $langcode = entity_language($entity_type, $entity);
+
+  // If no matching language was found, which will happen for e.g. terms and
+  // users, it is normally recommended to use the system default language.
+  // However, as the system default language can change, this could potentially
+  // cause data loss / confusion problems; as a result use the system "no
+  // language" value to avoid any potential problems.
+  if (empty($langcode)) {
+    $langcode = LANGUAGE_NONE;
+  }
+
+  return $langcode;
+}
+
+/**
  * Implements of hook_features_api().
  */
 function metatag_features_api() {
   $components = array(
     'metatag' => array(
       'name' => t('Meta tags'),
-      'features_source' => TRUE,
+      'feature_source' => TRUE,
       'default_hook' => 'metatag_export_default',
       'default_file' => FEATURES_DEFAULTS_INCLUDED,
       'file' => drupal_get_path('module', 'metatag') . '/metatag.features.inc',
@@ -1534,9 +1666,14 @@ function metatag_views_post_render(&$view, &$output, &$cache) {
       if (isset($entity_type['path']) && ($display->display_options['path'] . $entity_name) == $entity_type['path']) {
         // Only proceed if this entity type supports meta tags.
         if (metatag_entity_supports_metatags($entity_name)) {
-          $entities = entity_load($entity_name, $view->args);
-          $entity = array_pop($entities);
-          metatag_entity_view($entity, $entity_name, 'full', NULL);
+          // There must be at least one argument and the first argument must be
+          // numerical.
+          if (!empty($view->args) && is_numeric($view->args[0])) {
+            // Only the first argument is used.
+            $entities = entity_load($entity_name, array($view->args[0]));
+            $entity = array_pop($entities);
+            metatag_entity_view($entity, $entity_name, 'full', NULL);
+          }
         }
       }
     }
@@ -1561,11 +1698,31 @@ function metatag_ctools_render_alter(&$info, $page, $context) {
       if (isset($entity_type['path']) && $context['task']['admin path'] == $entity_type['path']) {
         // Only proceed if this entity type supports meta tags.
         if (metatag_entity_supports_metatags($entity_name)) {
-          $entities = entity_load($entity_name, $context['args']);
-          $entity = array_pop($entities);
-          metatag_entity_view($entity, $entity_name, 'full', NULL);
+          // There must be at least one argument and the first argument must be
+          // numerical.
+          if (!empty($context['args']) && is_numeric($context['args'][0])) {
+            // Only the first argument is used.
+            $entities = entity_load($entity_name, array($context['args'][0]));
+            $entity = array_pop($entities);
+            metatag_entity_view($entity, $entity_name, 'full', NULL);
+          }
         }
       }
     }
   }
 }
+
+/**
+ * Implements hook_entity_translation_delete().
+ *
+ * Required for content translations being handled via Entity_Translation to
+ * remove the appropriate record when a translation is removed without the
+ * corresponding entity record also being removed.
+ */
+function metatag_entity_translation_delete($entity_type, $entity, $langcode) {
+  // Get the entity's ID.
+  list($entity_id) = entity_extract_ids($entity_type, $entity);
+  
+  // Delete the translation.
+  metatag_metatags_delete($entity_type, $entity_id, $langcode);
+}
diff --git a/profiles/commons/modules/contrib/metatag/metatag.test b/profiles/commons/modules/contrib/metatag/metatag.test
index 49f6743..ad5076e 100644
--- a/profiles/commons/modules/contrib/metatag/metatag.test
+++ b/profiles/commons/modules/contrib/metatag/metatag.test
@@ -58,17 +58,39 @@ class MetaTagsUnitTest extends MetaTagsTestHelper {
     }
   }
 
-  function assertMetatagEntityHasMetatags($type, $bundle, $expected) {
-    $entity = entity_create_stub_entity($type, array(0, NULL, $bundle));
+  function assertMetatagEntityHasMetatags($entity_type, $bundle, $expected) {
+    $entity = entity_create_stub_entity($entity_type, array(0, NULL, $bundle));
     return $this->assertEqual(
-      metatag_entity_has_metatags($type, $entity),
+      metatag_entity_has_metatags($entity_type, $entity),
       $expected,
       t("metatag_entity_has_metatags(:type, :entity) is :expected", array(
-        ':type' => var_export($type, TRUE),
+        ':type' => var_export($entity_type, TRUE),
         ':entity' => var_export($entity, TRUE),
         ':expected' => var_export($expected, TRUE),
       ))
     );
   }
 
+  /**
+   * Test the metatag_config_instance_label() function.
+   */
+  public function testConfigLabels() {
+    $test_cases = array(
+      'node' => 'Node',
+      'node:article' => 'Node: Article',
+      'node:article:c' => 'Node: Article: Unknown (c)',
+      'node:b' => 'Node: Unknown (b)',
+      'node:b:c' => 'Node: Unknown (b): Unknown (c)',
+      'a' => 'Unknown (a)',
+      'a:b' => 'Unknown (a): Unknown (b)',
+      'a:b:c' => 'Unknown (a): Unknown (b): Unknown (c)',
+      'a:b:c:d' => 'Unknown (a): Unknown (b): Unknown (c): Unknown (d)',
+    );
+
+    foreach ($test_cases as $input => $expected_output) {
+      drupal_static_reset('metatag_config_instance_label');
+      $actual_output = metatag_config_instance_label($input);
+      $this->assertEqual($actual_output, $expected_output);
+    }
+  }
 }
diff --git a/profiles/commons/modules/contrib/metatag/metatag_context/metatag_context.admin.inc b/profiles/commons/modules/contrib/metatag/metatag_context/metatag_context.admin.inc
index a09c8ff..d776cb2 100644
--- a/profiles/commons/modules/contrib/metatag/metatag_context/metatag_context.admin.inc
+++ b/profiles/commons/modules/contrib/metatag/metatag_context/metatag_context.admin.inc
@@ -23,9 +23,9 @@ function metatag_context_context_overview() {
         l('Delete', 'admin/config/search/metatags/context/' . $context->name . '/delete', array('query' => array('destination' => 'admin/config/search/metatags/context'))),
       );
       $rows[] = array(
-          $context->name,
-          implode(', ', $context->conditions['path']['values']),
-          implode(' | ', $ops),
+        $context->name,
+        isset($context->conditions['path']) ? implode(', ', $context->conditions['path']['values']) : t('No path condition.'),
+        implode(' | ', $ops),
       );
     }
   }
@@ -94,7 +94,7 @@ function metatag_context_config_edit_form($form, &$form_state, $context) {
 
   $form['paths'] = array(
     '#title' => 'Path',
-    '#description' => 'Set this metatag context when any of the paths above match the page path. Put each path on a separate line. You can use the <code>*</code> character (asterisk) as a wildcard and the <code>~</code> character (tilde) to exclude one or more paths. Use <code>&lt;front&gt;</code> for the site front page.',
+    '#description' => t('Set this metatag context when any of the paths above match the page path. Put each path on a separate line. You can use the <code>*</code> character (asterisk) as a wildcard and the <code>~</code> character (tilde) to exclude one or more paths. Use <code>&lt;front&gt;</code> for the site front page. Only local paths (e.g. "example/page") will work, do not use relative URLs ("/example/page") or absolute URLs ("http://example.com/example/page").'),
     '#type' => 'textarea',
     '#default_value' => isset($context->conditions['path']['values']) ? html_entity_decode(implode('&#13;&#10;', $context->conditions['path']['values'])) : '',
     '#required' => 1,
diff --git a/profiles/commons/modules/contrib/metatag/metatag_context/metatag_context.info b/profiles/commons/modules/contrib/metatag/metatag_context/metatag_context.info
index de417fc..14d32b9 100644
--- a/profiles/commons/modules/contrib/metatag/metatag_context/metatag_context.info
+++ b/profiles/commons/modules/contrib/metatag/metatag_context/metatag_context.info
@@ -5,9 +5,9 @@ core = 7.x
 dependencies[] = context
 dependencies[] = metatag
 
-; Information added by drupal.org packaging script on 2012-11-18
-version = "7.x-1.0-beta4"
+; Information added by drupal.org packaging script on 2013-03-24
+version = "7.x-1.0-beta5"
 core = "7.x"
 project = "metatag"
-datestamp = "1353209208"
+datestamp = "1364088611"
 
diff --git a/profiles/commons/modules/contrib/metatag/metatag_context/metatag_context.install b/profiles/commons/modules/contrib/metatag/metatag_context/metatag_context.install
new file mode 100644
index 0000000..78415ce
--- /dev/null
+++ b/profiles/commons/modules/contrib/metatag/metatag_context/metatag_context.install
@@ -0,0 +1,13 @@
+<?php
+/**
+ * @file
+ * Installation and update hooks for Metatag:Context.
+ */
+
+/**
+ * Implements hook_enable().
+ */
+function metatag_context_enable() {
+  // Clear the cache so Context and CTools know about this plugin.
+  cache_clear_all('plugins:context:plugins', 'cache');
+}
diff --git a/profiles/commons/modules/contrib/metatag/metatag_dc/metatag_dc.info b/profiles/commons/modules/contrib/metatag/metatag_dc/metatag_dc.info
index 8adf2b3..7e05d4e 100644
--- a/profiles/commons/modules/contrib/metatag/metatag_dc/metatag_dc.info
+++ b/profiles/commons/modules/contrib/metatag/metatag_dc/metatag_dc.info
@@ -4,9 +4,9 @@ package = Meta tags
 core = 7.x
 dependencies[] = metatag
 
-; Information added by drupal.org packaging script on 2012-11-18
-version = "7.x-1.0-beta4"
+; Information added by drupal.org packaging script on 2013-03-24
+version = "7.x-1.0-beta5"
 core = "7.x"
 project = "metatag"
-datestamp = "1353209208"
+datestamp = "1364088611"
 
diff --git a/profiles/commons/modules/contrib/metatag/metatag_opengraph/metatag_opengraph.info b/profiles/commons/modules/contrib/metatag/metatag_opengraph/metatag_opengraph.info
index 39e2652..6b32cfd 100644
--- a/profiles/commons/modules/contrib/metatag/metatag_opengraph/metatag_opengraph.info
+++ b/profiles/commons/modules/contrib/metatag/metatag_opengraph/metatag_opengraph.info
@@ -4,9 +4,9 @@ package = Meta tags
 core = 7.x
 dependencies[] = metatag
 
-; Information added by drupal.org packaging script on 2012-11-18
-version = "7.x-1.0-beta4"
+; Information added by drupal.org packaging script on 2013-03-24
+version = "7.x-1.0-beta5"
 core = "7.x"
 project = "metatag"
-datestamp = "1353209208"
+datestamp = "1364088611"
 
diff --git a/profiles/commons/modules/contrib/metatag/metatag_opengraph/metatag_opengraph.metatag.inc b/profiles/commons/modules/contrib/metatag/metatag_opengraph/metatag_opengraph.metatag.inc
index e987554..f6c6a1b 100644
--- a/profiles/commons/modules/contrib/metatag/metatag_opengraph/metatag_opengraph.metatag.inc
+++ b/profiles/commons/modules/contrib/metatag/metatag_opengraph/metatag_opengraph.metatag.inc
@@ -65,6 +65,25 @@ function metatag_opengraph_metatag_info() {
     ),
   );
 
+  $info['tags']['fb:admins'] = array(
+    'label' => t('Facebook Admins'),
+    'description' => t('A comma-separated list of Facebook user IDs of people who are considered administrators or moderators of this page. Most sites will only need to assign this on the global settings page.'),
+    'class' => 'DrupalTextMetaTag',
+    'group' => 'open-graph',
+    'element' => array(
+      '#theme' => 'metatag_opengraph',
+    ),
+  );
+  $info['tags']['fb:app_id'] = array(
+    'label' => t('Facebook Application ID'),
+    'description' => t('A comma-separated list of Facebook Platform Application IDs applicable for this site. Most sites will only need to assign this on the global settings page.'),
+    'class' => 'DrupalTextMetaTag',
+    'group' => 'open-graph',
+    'element' => array(
+      '#theme' => 'metatag_opengraph',
+    ),
+  );
+
   $info['tags']['og:site_name'] = array(
     'label' => t('Open Graph site name'),
     'description' => t('A human-readable name for your site, e.g., <em>IMDb</em>.'),
@@ -89,8 +108,8 @@ function metatag_opengraph_metatag_info() {
   $info['tags']['og:description'] = array(
     'label' => t('Open Graph description'),
     'description' => t('A one to two sentence description of your page.'),
-    'group' => 'open-graph',
     'class' => 'DrupalTextMetaTag',
+    'group' => 'open-graph',
     'element' => array(
       '#theme' => 'metatag_opengraph',
     ),
@@ -101,16 +120,25 @@ function metatag_opengraph_metatag_info() {
     'description' => t('The type of your object, e.g., <em>movie</em>.'),
     'class' => 'DrupalTextMetaTag',
     'group' => 'open-graph',
+    'element' => array(
+      '#theme' => 'metatag_opengraph',
+    ),
     'form' => array(
       '#type' => 'select',
       '#options' => _metatag_opengraph_type_options(),
       '#empty_option' => t('- None -'),
     ),
-    'element' => array(
-      '#theme' => 'metatag_opengraph',
-    ),
   );
 
+  if (module_exists('select_or_other')) {
+    // Enhance the og:type field to support custom types.
+    $info['tags']['og:type']['form']['#type'] = 'select_or_other';
+    $info['tags']['og:type']['form']['#other'] = t('Other (please type a value)');
+    $info['tags']['og:type']['form']['#other_unknown_defaults'] = 'other';
+    $info['tags']['og:type']['form']['#theme'] = 'select_or_other';
+    $info['tags']['og:type']['form']['#element_validate'] = array('select_or_other_element_validate');
+  }
+
   $info['tags']['og:image'] = array(
     'label' => t('Open Graph image'),
     'description' => t('An image URL which should represent your object within the graph. The image must be at least 50px by 50px and have a maximum aspect ratio of 3:1. We support PNG, JPEG and GIF formats.'),
@@ -131,9 +159,18 @@ function metatag_opengraph_metatag_info() {
     ),
   );
 
-  $info['tags']['fb:admins'] = array(
-    'label' => t('Facebook Admins'),
-    'description' => t('A comma-separated list of Facebook user IDs of people who are considered administrators or moderators of this page. Most sites will only need to assign this on the global settings page.'),
+  $info['tags']['og:latitude'] = array(
+    'label' => t('Open Graph Latitude'),
+    'description' => '',
+    'class' => 'DrupalTextMetaTag',
+    'group' => 'open-graph',
+    'element' => array(
+      '#theme' => 'metatag_opengraph',
+    ),
+  );
+  $info['tags']['og:longitude'] = array(
+    'label' => t('Open Graph Longitude'),
+    'description' => '',
     'class' => 'DrupalTextMetaTag',
     'group' => 'open-graph',
     'element' => array(
@@ -141,15 +178,133 @@ function metatag_opengraph_metatag_info() {
     ),
   );
 
-  $info['tags']['fb:app_id'] = array(
-    'label' => t('Facebook Application ID'),
-    'description' => t('A comma-separated list of Facebook Platform Application IDs applicable for this site. Most sites will only need to assign this on the global settings page.'),
+  $info['tags']['og:street-address'] = array(
+    'label' => t('Open Graph Street Address'),
+    'description' => '',
+    'class' => 'DrupalTextMetaTag',
+    'group' => 'open-graph',
+    'element' => array(
+      '#theme' => 'metatag_opengraph',
+    ),
+  );
+  $info['tags']['og:locality'] = array(
+    'label' => t('Open Graph Locality'),
+    'description' => '',
+    'class' => 'DrupalTextMetaTag',
+    'group' => 'open-graph',
+    'element' => array(
+      '#theme' => 'metatag_opengraph',
+    ),
+  );
+  $info['tags']['og:region'] = array(
+    'label' => t('Open Graph Region'),
+    'description' => '',
     'class' => 'DrupalTextMetaTag',
     'group' => 'open-graph',
     'element' => array(
       '#theme' => 'metatag_opengraph',
     ),
   );
+  $info['tags']['og:postal-code'] = array(
+    'label' => t('Open Graph Postal Code'),
+    'description' => '',
+    'class' => 'DrupalTextMetaTag',
+    'group' => 'open-graph',
+    'element' => array(
+      '#theme' => 'metatag_opengraph',
+    ),
+  );
+  $info['tags']['og:country-name'] = array(
+    'label' => t('Open Graph Country Name'),
+    'description' => '',
+    'class' => 'DrupalTextMetaTag',
+    'group' => 'open-graph',
+    'element' => array(
+      '#theme' => 'metatag_opengraph',
+    ),
+  );
+
+  $info['tags']['og:email'] = array(
+    'label' => t('Open Graph Email'),
+    'description' => '',
+    'class' => 'DrupalTextMetaTag',
+    'group' => 'open-graph',
+    'element' => array(
+      '#theme' => 'metatag_opengraph',
+    ),
+  );
+  $info['tags']['og:phone_number'] = array(
+    'label' => t('Open Graph Phone Number'),
+    'description' => '',
+    'class' => 'DrupalTextMetaTag',
+    'group' => 'open-graph',
+    'element' => array(
+      '#theme' => 'metatag_opengraph',
+    ),
+  );
+  $info['tags']['og:fax_number'] = array(
+    'label' => t('Open Graph Fax Number'),
+    'description' => '',
+    'class' => 'DrupalTextMetaTag',
+    'group' => 'open-graph',
+    'element' => array(
+      '#theme' => 'metatag_opengraph',
+    ),
+  );
+
+  $info['tags']['og:video'] = array(
+    'label' => t('Open Graph Video (URL)'),
+    'description' => t('A URL to a video file that complements this object.'),
+    'class' => 'DrupalTextMetaTag',
+    'group' => 'open-graph',
+    'element' => array(
+      '#theme' => 'metatag_opengraph',
+    ),
+  );
+  $info['tags']['og:video:secure_url'] = array(
+    'label' => t('Open Graph Video Secure'),
+    'description' => t('A URL to a video file that complements this object using the HTTPS protocol.'),
+    'class' => 'DrupalTextMetaTag',
+    'group' => 'open-graph',
+    'element' => array(
+      '#theme' => 'metatag_opengraph',
+    ),
+  );
+  $info['tags']['og:video:width'] = array(
+    'label' => t('Open Graph Video Width'),
+    'description' => t('The width of the video.'),
+    'class' => 'DrupalTextMetaTag',
+    'group' => 'open-graph',
+    'element' => array(
+      '#theme' => 'metatag_opengraph',
+    ),
+  );
+  $info['tags']['og:video:height'] = array(
+    'label' => t('Open Graph Video Height'),
+    'description' => t('The height of the video.'),
+    'class' => 'DrupalTextMetaTag',
+    'group' => 'open-graph',
+    'element' => array(
+      '#theme' => 'metatag_opengraph',
+    ),
+  );
+  $info['tags']['og:video:type'] = array(
+    'label' => t('Open Graph Video Type'),
+    'description' => t('The type of the video file.'),
+    'class' => 'DrupalTextMetaTag',
+    'group' => 'open-graph',
+    'element' => array(
+      '#theme' => 'metatag_opengraph',
+    ),
+    'form' => array(
+      '#type' => 'select',
+      '#options' => array(
+        'application/x-shockwave-flash' => 'Flash - playable directly from the feed',
+        'text/html' => 'Separate HTML page',
+      ),
+      '#empty_option' => t('- None -'),
+    ),
+  );
 
   return $info;
 }
diff --git a/profiles/commons/modules/contrib/metatag/metatag_twitter_cards/metatag_twitter_cards.info b/profiles/commons/modules/contrib/metatag/metatag_twitter_cards/metatag_twitter_cards.info
index 453784f..6700946 100644
--- a/profiles/commons/modules/contrib/metatag/metatag_twitter_cards/metatag_twitter_cards.info
+++ b/profiles/commons/modules/contrib/metatag/metatag_twitter_cards/metatag_twitter_cards.info
@@ -3,9 +3,9 @@ description = "Provides support for Twitter's Card meta tags. NOTE: Only use if
 package = Meta tags
 core = 7.x
 dependencies[] = metatag
-; Information added by drupal.org packaging script on 2012-11-18
-version = "7.x-1.0-beta4"
+; Information added by drupal.org packaging script on 2013-03-24
+version = "7.x-1.0-beta5"
 core = "7.x"
 project = "metatag"
-datestamp = "1353209208"
+datestamp = "1364088611"
 
diff --git a/profiles/commons/modules/contrib/metatag/metatag_twitter_cards/metatag_twitter_cards.metatag.inc b/profiles/commons/modules/contrib/metatag/metatag_twitter_cards/metatag_twitter_cards.metatag.inc
index 69022f0..3d705a6 100644
--- a/profiles/commons/modules/contrib/metatag/metatag_twitter_cards/metatag_twitter_cards.metatag.inc
+++ b/profiles/commons/modules/contrib/metatag/metatag_twitter_cards/metatag_twitter_cards.metatag.inc
@@ -83,22 +83,41 @@ function metatag_twitter_cards_metatag_info() {
       '#theme' => 'metatag_twitter_cards',
     ),
   );
+  $info['tags']['twitter:site:id'] = array(
+    'label' => t('Site\'s Twitter account ID'),
+    'description' => t('The numerical Twitter account ID for the website, which will be displayed in the Card\'s footer.'),
+    'class' => 'DrupalTextMetaTag',
+    'group' => 'twitter-cards',
+    'context' => array('global'),
+    'element' => array(
+      '#theme' => 'metatag_twitter_cards',
+    ),
+  );
   $info['tags']['twitter:creator'] = array(
     'label' => t('Creator\'s Twitter account'),
     'description' => t('The @username for the content creator / author for this page, including the @ symbol.'),
     'class' => 'DrupalTextMetaTag',
     'group' => 'twitter-cards',
     'element' => array(
-      '#theme' => 'metatag_twittercard',
+      '#theme' => 'metatag_twitter_cards',
+    ),
+  );
+  $info['tags']['twitter:creator:id'] = array(
+    'label' => t('Creator\'s Twitter account ID'),
+    'description' => t('The numerical Twitter account ID for the content creator / author for this page.'),
+    'class' => 'DrupalTextMetaTag',
+    'group' => 'twitter-cards',
+    'element' => array(
+      '#theme' => 'metatag_twitter_cards',
     ),
   );
   $info['tags']['twitter:url'] = array(
     'label' => t('Page URL'),
     'description' => t('The permalink / canonical URL of the current page.'),
-    'class' => 'DrupalLinkMetaTag',
+    'class' => 'DrupalTextMetaTag',
     'group' => 'twitter-cards',
     'element' => array(
-      '#theme' => 'metatag_twittercard',
+      '#theme' => 'metatag_twitter_cards',
     ),
   );
   $info['tags']['twitter:title'] = array(
@@ -107,7 +126,7 @@ function metatag_twitter_cards_metatag_info() {
     'class' => 'DrupalTextMetaTag',
     'group' => 'twitter-cards',
     'element' => array(
-      '#theme' => 'metatag_twittercard',
+      '#theme' => 'metatag_twitter_cards',
     ),
   );
   $info['tags']['twitter:description'] = array(
@@ -122,7 +141,7 @@ function metatag_twitter_cards_metatag_info() {
   $info['tags']['twitter:image'] = array(
     'label' => t('Image URL'),
     'description' => t('The URL to a unique image representing the content of the page. Do not use a generic image such as your website logo, author photo, or other image that spans multiple pages. Images larger than 120x120px will be resized and cropped square based on longest dimension. Images smaller than 60x60px will not be shown. If the \'type\' is set to <em>Photo</em> then the image must be at least 280x150px.'),
-    'class' => 'DrupalLinkMetaTag',
+    'class' => 'DrupalTextMetaTag',
     'group' => 'twitter-cards',
     'element' => array(
       '#theme' => 'metatag_twitter_cards',
@@ -149,7 +168,7 @@ function metatag_twitter_cards_metatag_info() {
   $info['tags']['twitter:player'] = array(
     'label' => t('Media player URL'),
     'description' => t('The full URL for loading a media player. Required when using a <em>Media player</em> card.'),
-    'class' => 'DrupalLinkMetaTag',
+    'class' => 'DrupalTextMetaTag',
     'group' => 'twitter-cards',
     'element' => array(
       '#theme' => 'metatag_twitter_cards',
@@ -176,7 +195,7 @@ function metatag_twitter_cards_metatag_info() {
   $info['tags']['twitter:player:stream'] = array(
     'label' => t('MP4 media stream URL'),
     'description' => t('The full URL for an MP4 video (h.264) or audio (AAC) stream, takes precidence over the other media player field.'),
-    'class' => 'DrupalLinkMetaTag',
+    'class' => 'DrupalTextMetaTag',
     'group' => 'twitter-cards',
     'element' => array(
       '#theme' => 'metatag_twitter_cards',
diff --git a/profiles/commons/modules/contrib/metatag/metatag_twitter_cards/metatag_twitter_cards.module b/profiles/commons/modules/contrib/metatag/metatag_twitter_cards/metatag_twitter_cards.module
index 63bc1e3..2f835c4 100644
--- a/profiles/commons/modules/contrib/metatag/metatag_twitter_cards/metatag_twitter_cards.module
+++ b/profiles/commons/modules/contrib/metatag/metatag_twitter_cards/metatag_twitter_cards.module
@@ -17,7 +17,7 @@ function metatag_twitter_cards_ctools_plugin_api($owner, $api) {
  * Implements hook_theme().
  */
 function metatag_twitter_cards_theme() {
-  $info['metatag_twittercard'] = array(
+  $info['metatag_twitter_cards'] = array(
     'render element' => 'element',
   );
 
diff --git a/profiles/commons/modules/contrib/metatag/metatag_ui/metatag_ui.info b/profiles/commons/modules/contrib/metatag/metatag_ui/metatag_ui.info
index 3c78474..30fcb4b 100644
--- a/profiles/commons/modules/contrib/metatag/metatag_ui/metatag_ui.info
+++ b/profiles/commons/modules/contrib/metatag/metatag_ui/metatag_ui.info
@@ -6,9 +6,9 @@ dependencies[] = metatag
 dependencies[] = ctools
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-11-18
-version = "7.x-1.0-beta4"
+; Information added by drupal.org packaging script on 2013-03-24
+version = "7.x-1.0-beta5"
 core = "7.x"
 project = "metatag"
-datestamp = "1353209208"
+datestamp = "1364088611"
 
diff --git a/profiles/commons/modules/contrib/metatag/tests/metatag_test.info b/profiles/commons/modules/contrib/metatag/tests/metatag_test.info
index 100d70e..57114e4 100644
--- a/profiles/commons/modules/contrib/metatag/tests/metatag_test.info
+++ b/profiles/commons/modules/contrib/metatag/tests/metatag_test.info
@@ -4,9 +4,9 @@ core = 7.x
 dependencies[] = metatag
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-11-18
-version = "7.x-1.0-beta4"
+; Information added by drupal.org packaging script on 2013-03-24
+version = "7.x-1.0-beta5"
 core = "7.x"
 project = "metatag"
-datestamp = "1353209208"
+datestamp = "1364088611"
 
diff --git a/profiles/commons/modules/contrib/oauth/CHANGELOG b/profiles/commons/modules/contrib/oauth/CHANGELOG
index 6c4c674..d6787b3 100644
--- a/profiles/commons/modules/contrib/oauth/CHANGELOG
+++ b/profiles/commons/modules/contrib/oauth/CHANGELOG
@@ -1,6 +1,3 @@
-OAuth 7.x-3.x, 2013--
-------------------------------
-
 OAuth 7.x-3.1, 2013-2-3
 ------------------------------
 #1529166 by barraponto: implement hook_requirements() to check that cURL library is available.
diff --git a/profiles/commons/modules/contrib/oauth/oauth_common.info b/profiles/commons/modules/contrib/oauth/oauth_common.info
index a004de7..be16227 100644
--- a/profiles/commons/modules/contrib/oauth/oauth_common.info
+++ b/profiles/commons/modules/contrib/oauth/oauth_common.info
@@ -18,8 +18,8 @@ files[] = includes/DrupalOAuthClient.inc
 files[] = includes/OAuthSignatureMethod_HMAC.inc
 
 ; Information added by drupal.org packaging script on 2013-02-04
-version = "7.x-3.1+1-dev"
+version = "7.x-3.1"
 core = "7.x"
 project = "oauth"
-datestamp = "1359940850"
+datestamp = "1359936562"
 
diff --git a/profiles/commons/modules/contrib/oauth/oauth_common_providerui.info b/profiles/commons/modules/contrib/oauth/oauth_common_providerui.info
index 8d889da..cd5ca1a 100644
--- a/profiles/commons/modules/contrib/oauth/oauth_common_providerui.info
+++ b/profiles/commons/modules/contrib/oauth/oauth_common_providerui.info
@@ -7,8 +7,8 @@ dependencies[] = oauth_common
 core = 7.x
 
 ; Information added by drupal.org packaging script on 2013-02-04
-version = "7.x-3.1+1-dev"
+version = "7.x-3.1"
 core = "7.x"
 project = "oauth"
-datestamp = "1359940850"
+datestamp = "1359936562"
 
diff --git a/profiles/commons/modules/contrib/oauthconnector/modules/oauth2/oauth2_common.info b/profiles/commons/modules/contrib/oauthconnector/modules/oauth2/oauth2_common.info
index fdd752a..9631c55 100644
--- a/profiles/commons/modules/contrib/oauthconnector/modules/oauth2/oauth2_common.info
+++ b/profiles/commons/modules/contrib/oauthconnector/modules/oauth2/oauth2_common.info
@@ -6,9 +6,10 @@ core = 7.x
 files[] = lib/DrupalOAuth2Client.inc
 
 
-; Information added by drupal.org packaging script on 2012-04-01
+
+; Information added by drush on 2013-04-04
 version = "7.x-1.0-beta1+6-dev"
 core = "7.x"
 project = "oauthconnector"
-datestamp = "1333242145"
+datestamp = "1365041456"
 
diff --git a/profiles/commons/modules/contrib/oauthconnector/oauthconnector.info b/profiles/commons/modules/contrib/oauthconnector/oauthconnector.info
index b5fc34e..d5205dd 100644
--- a/profiles/commons/modules/contrib/oauthconnector/oauthconnector.info
+++ b/profiles/commons/modules/contrib/oauthconnector/oauthconnector.info
@@ -9,9 +9,10 @@ dependencies[] = http_client
 dependencies[] = http_client_oauth
 dependencies[] = ctools
 
-; Information added by drupal.org packaging script on 2012-04-01
+
+; Information added by drush on 2013-04-04
 version = "7.x-1.0-beta1+6-dev"
 core = "7.x"
 project = "oauthconnector"
-datestamp = "1333242145"
+datestamp = "1365041456"
 
diff --git a/profiles/commons/modules/contrib/og/PATCHES.txt b/profiles/commons/modules/contrib/og/PATCHES.txt
index 37ee047..8a87892 100644
--- a/profiles/commons/modules/contrib/og/PATCHES.txt
+++ b/profiles/commons/modules/contrib/og/PATCHES.txt
@@ -1,5 +1,4 @@
 The following patches have been applied to this project:
-- http://drupal.org/files/og-add-group-message.patch
 - http://drupal.org/files/1902086-og-ref-respect-og-user-access-3.patch
 
 This file was automatically generated by Drush Make (http://drupal.org/project/drush).
\ No newline at end of file
diff --git a/profiles/commons/modules/contrib/og/README.txt b/profiles/commons/modules/contrib/og/README.txt
index fb54ccb..94f3e6d 100644
--- a/profiles/commons/modules/contrib/og/README.txt
+++ b/profiles/commons/modules/contrib/og/README.txt
@@ -112,6 +112,15 @@ DEVELOPERS & SITE BUILDERS
   http://drupal.org/project/entityreference_prepopulate
   and configuring the correct settings in the field UI. Read more about
   it in Entity reference prepopulate's README file.
+  Further more, when Entity reference prepopulate module is enabled the node
+  "create" permissions will be enabled even for non-members. In order to allow
+  a non member to create a node to a group they don't belong to, you should
+  craft the URL in the same way. OG will recognize this situation and add the
+  group as a valid option under the "My groups" widget.
+- When deleting groups, it is possible to delete orphan group-content, or move
+  it under another group. In order to do it in a scalable way, enable the
+  "Use queue" option, and process it using for example:
+  drush queue-run og_membership_orphans
 
 FAQ
 ----
diff --git a/profiles/commons/modules/contrib/og/includes/migrate/7200/og_og_membership.migrate.inc b/profiles/commons/modules/contrib/og/includes/migrate/7200/og_og_membership.migrate.inc
index b940d43..6137ba5 100644
--- a/profiles/commons/modules/contrib/og/includes/migrate/7200/og_og_membership.migrate.inc
+++ b/profiles/commons/modules/contrib/og/includes/migrate/7200/og_og_membership.migrate.inc
@@ -48,7 +48,10 @@ class OgMigrateMembership extends OgEntityMigration {
     }
   }
 
-  public function prepare($entity, $row) {
+  /**
+   * Reject the source row if the group or group content are missing.
+   */
+  public function prepareRow($row) {
     $entity_type = $row->entity_type;
     $etid = $row->etid;
     $group_type = $row->group_type;
@@ -57,27 +60,46 @@ class OgMigrateMembership extends OgEntityMigration {
     if (!$group_content = entity_load_single($entity_type, $etid)) {
       // The OG membership was somehow not deleted when the entity
       // was deleted.
-      return;
+      return FALSE;
     }
 
     if (!$group = entity_load_single($group_type, $gid)) {
-      return;
+      return FALSE;
     }
+    return parent::prepareRow($row);
+  }
+
+  public function prepare($entity, $row) {
+    $entity_type = $row->entity_type;
+    $etid = $row->etid;
+    $group_type = $row->group_type;
+    $gid = $row->gid;
+
+    $group_content = entity_load_single($entity_type, $etid);
+    $group = entity_load_single($group_type, $gid);
 
     list(,, $group_bundle) = entity_extract_ids($group_type, $group);
     if (!$field_name = og_get_best_group_audience_field($entity_type, $group_content, $group_type, $group_bundle)) {
-      // Create a new field. Pick an unused name.
-      $field_name = substr("og_$group_type", 0, 32);
+      // Create a new field. Pick an unused name, if the settings don't match.
+      // To maintain some backwards compatibility, if the group type is a node,
+      // we try to set its name to OG_AUDIENCE FIELD.
+      $field_name = $group_type == 'node' ? OG_AUDIENCE_FIELD : substr("og_$group_type", 0, 32);
       $i = 1;
-      while (field_info_field($field_name)) {
-        $field_name = substr("og_$group_type", 0, 32 - strlen($i)) . $i;
-        ++$i;
-      }
 
       $og_field = og_fields_info(OG_AUDIENCE_FIELD);
       $og_field['field']['settings']['target_type'] = $group_type;
-
       list(,, $bundle) = entity_extract_ids($entity_type, $group_content);
+
+      while ($field = field_info_field($field_name)) {
+        if ($field['settings']['target_type'] == $group_type && empty($field['settings']['handler_settings']['target_bundles']) || in_array($bundle, $field['settings']['handler_settings']['target_bundles'])) {
+          // An existing field.
+          $field_name = $field['field_name'];
+          break;
+        }
+        $field_name = substr("og_$group_type", 0, 32 - strlen($i)) . $i;
+        ++$i;
+      }
+
       og_create_field($field_name, $entity_type, $bundle, $og_field);
     }
     $entity->field_name = $field_name;
@@ -86,8 +108,7 @@ class OgMigrateMembership extends OgEntityMigration {
   /**
    * Override Migration::postImport().
    *
-   * Remove OG-memberships that should hae been deleted.
-   *
+   * Remove OG-memberships that should have been deleted.
    */
   protected function postImport() {
     if (!$this->isComplete()) {
diff --git a/profiles/commons/modules/contrib/og/includes/migrate/7200/og_roles.migrate.inc b/profiles/commons/modules/contrib/og/includes/migrate/7200/og_roles.migrate.inc
index 7a08e5f..fae9b32 100644
--- a/profiles/commons/modules/contrib/og/includes/migrate/7200/og_roles.migrate.inc
+++ b/profiles/commons/modules/contrib/og/includes/migrate/7200/og_roles.migrate.inc
@@ -15,8 +15,6 @@ class OgMigrateRoles extends OgEntityMigration {
 
   public $keyName = 'rid';
 
-  protected $dependencies = array('OgMigrateMembership');
-
   /**
    * Indicate we are updating existing data.
    */
diff --git a/profiles/commons/modules/contrib/og/includes/migrate/plugins/destinations/og_membership.inc b/profiles/commons/modules/contrib/og/includes/migrate/plugins/destinations/og_membership.inc
index 869946d..e216f79 100644
--- a/profiles/commons/modules/contrib/og/includes/migrate/plugins/destinations/og_membership.inc
+++ b/profiles/commons/modules/contrib/og/includes/migrate/plugins/destinations/og_membership.inc
@@ -78,15 +78,13 @@ class MigrateDestinationOGMembership extends MigrateDestination {
     else {
       $state = OG_STATE_ACTIVE;
     }
-
-    $values = array(
-      'entity_type' => $entity->entity_type,
-      'entity' => $entity->etid,
-      'state' => $state,
-      'created' => isset($entity->created) ? $entity->created : REQUEST_TIME,
-    );
-
     $this->prepare($entity, $row);
+    // Allow passing OG-membership fields via og_group().
+    $values = (array) $entity;
+    $values['entity'] = $entity->etid;
+    $values['state'] = $state;
+    $values['created'] = isset($entity->created) ? $entity->created : REQUEST_TIME;
+
     $og_membership = og_group($entity->group_type, $entity->gid, $values);
 
     if ($entity->entity_type == 'user') {
diff --git a/profiles/commons/modules/contrib/og/includes/og.field.inc b/profiles/commons/modules/contrib/og/includes/og.field.inc
index 1b11fb1..7f419de 100644
--- a/profiles/commons/modules/contrib/og/includes/og.field.inc
+++ b/profiles/commons/modules/contrib/og/includes/og.field.inc
@@ -31,7 +31,7 @@ function og_field_widget_form(&$form, &$form_state, $field, $instance, $langcode
     return;
   }
 
-  if ($field['settings']['handler'] != 'og') {
+  if ($field['settings']['handler'] != 'og' && strpos($field['settings']['handler'], 'og_') !== 0) {
     $params = array('%label' => $instance['label']);
     form_error($form, t('Field %label is a group-audience but its Entity selection mode is not defined as "Organic groups" in the field settings page.', $params));
     return;
diff --git a/profiles/commons/modules/contrib/og/includes/og.membership.inc b/profiles/commons/modules/contrib/og/includes/og.membership.inc
index 2d4d105..23464e5 100644
--- a/profiles/commons/modules/contrib/og/includes/og.membership.inc
+++ b/profiles/commons/modules/contrib/og/includes/og.membership.inc
@@ -18,6 +18,11 @@ class OgMembership extends Entity {
   public function save() {
     $entity_type = $this->entity_type;
     $etid = $this->etid;
+
+    if ($entity_type == 'user' && !$etid) {
+      throw new OgException('OG membership can not be created for anonymous user.');
+    }
+
     $wrapper = entity_metadata_wrapper($entity_type, $etid);
     $bundle = $wrapper->getBundle();
 
@@ -27,7 +32,6 @@ class OgMembership extends Entity {
     list(,,$group_bundle) = entity_extract_ids($group_type, $group);
 
     $field_name = $this->field_name;
-    $state = !empty($this->state) ? $this->state : OG_STATE_ACTIVE;
 
     // Placeholder for exceptions, in case we need to throw one.
     $params = array(
diff --git a/profiles/commons/modules/contrib/og/includes/views/handlers/og_handler_field_og_membership_link_edit.inc b/profiles/commons/modules/contrib/og/includes/views/handlers/og_handler_field_og_membership_link_edit.inc
new file mode 100644
index 0000000..6b93a66
--- /dev/null
+++ b/profiles/commons/modules/contrib/og/includes/views/handlers/og_handler_field_og_membership_link_edit.inc
@@ -0,0 +1,75 @@
+<?php
+
+/**
+ * @file
+ * Definition of og_handler_field_og_membership_link_edit.
+ */
+
+/**
+ * Field handler to present a link to edit membership.
+ *
+ * @ingroup views_field_handlers
+ */
+class og_handler_field_og_membership_link_edit extends views_handler_field_entity {
+
+  function construct() {
+    parent::construct();
+  }
+
+  function option_definition() {
+    $options = parent::option_definition();
+    $options['text'] = array('default' => '', 'translatable' => TRUE);
+    $options['destination'] = array('default' => FALSE, 'bool' => TRUE);
+    return $options;
+  }
+
+  function options_form(&$form, &$form_state) {
+    $form['text'] = array(
+      '#type' => 'textfield',
+      '#title' => t('Text to display'),
+      '#default_value' => $this->options['text'],
+    );
+    $form['destination'] = array(
+      '#type' => 'checkbox',
+      '#title' => t('Use destination'),
+      '#description' => t('Add destination to the link'),
+      '#default_value' => $this->options['destination'],
+      '#fieldset' => 'more',
+    );
+    parent::options_form($form, $form_state);
+  }
+
+  function query() {
+    $this->ensure_my_table();
+    $this->add_additional_fields();
+  }
+
+  function render($values) {
+    $value = $this->get_value($values, 'id');
+    return $this->render_link($this->sanitize_value($value), $values);
+  }
+
+  function render_link($data, $values) {
+    $this->options['alter']['make_link'] = TRUE;
+    $this->options['alter']['html'] = TRUE;
+
+    // Ensure user has access to edit this membership.
+    $og_membership = $this->get_value($values);
+    $group_type = $og_membership->group_type;
+    $gid = $og_membership->gid;
+    if (!og_ui_user_access_group('manage members', $group_type, $gid)) {
+      return;
+    }
+
+    $text = !empty($this->options['text']) ? $this->options['text'] : t('edit');
+    unset($this->options['alter']['fragment']);
+
+    if (!empty($this->options['destination'])) {
+      $this->options['alter']['query'] = drupal_get_destination();
+    }
+
+    $this->options['alter']['path'] = "group/" . $group_type . "/" . $gid  . "/admin/people/edit-membership/" . $og_membership->id;
+
+    return $text;
+  }
+}
diff --git a/profiles/commons/modules/contrib/og/includes/views/handlers/og_plugin_argument_default_user_groups.inc b/profiles/commons/modules/contrib/og/includes/views/handlers/og_plugin_argument_default_user_groups.inc
index 6c73ca7..85c6360 100644
--- a/profiles/commons/modules/contrib/og/includes/views/handlers/og_plugin_argument_default_user_groups.inc
+++ b/profiles/commons/modules/contrib/og/includes/views/handlers/og_plugin_argument_default_user_groups.inc
@@ -33,7 +33,7 @@ class og_plugin_argument_default_user_groups extends views_plugin_argument_defau
       '#description' => t('Select the group type.'),
       '#options' => og_get_all_group_entity(),
       '#default_value' => $this->options['group_type'],
-      '#required' => TRUE,
+      '#required' => og_get_all_group_entity(),
     );
     $form['glue'] = array(
       '#type' => 'select',
diff --git a/profiles/commons/modules/contrib/og/includes/views/handlers/og_plugin_argument_validate_group.inc b/profiles/commons/modules/contrib/og/includes/views/handlers/og_plugin_argument_validate_group.inc
index 6eb027d..a987e8b 100644
--- a/profiles/commons/modules/contrib/og/includes/views/handlers/og_plugin_argument_validate_group.inc
+++ b/profiles/commons/modules/contrib/og/includes/views/handlers/og_plugin_argument_validate_group.inc
@@ -30,7 +30,7 @@ class og_plugin_argument_validate_group extends views_plugin_argument_validate {
       '#description' => t('Select the group type.'),
       '#options' => og_get_all_group_entity(),
       '#default_value' => $this->options['group_type'],
-      '#required' => TRUE,
+      '#required' => og_get_all_group_entity(),
     );
   }
 
diff --git a/profiles/commons/modules/contrib/og/includes/views/og.views.inc b/profiles/commons/modules/contrib/og/includes/views/og.views.inc
index d2a2d4a..0def1f5 100644
--- a/profiles/commons/modules/contrib/og/includes/views/og.views.inc
+++ b/profiles/commons/modules/contrib/og/includes/views/og.views.inc
@@ -86,6 +86,15 @@ class OgMembershipViewsController extends EntityDefaultViewsController {
       ),
     );
 
+    // Link to edit membership
+    $data['og_membership']['edit_membership'] = array(
+      'field' => array(
+        'title' => t('Edit link'),
+        'help' => t('Provide a simple link to edit the membership.'),
+        'handler' => 'og_handler_field_og_membership_link_edit',
+      ),
+    );
+
     return $data;
   }
 }
diff --git a/profiles/commons/modules/contrib/og/og.api.php b/profiles/commons/modules/contrib/og/og.api.php
index 9a7ba62..d6d73fd 100644
--- a/profiles/commons/modules/contrib/og/og.api.php
+++ b/profiles/commons/modules/contrib/og/og.api.php
@@ -19,7 +19,12 @@ function hook_og_permission() {
     'subscribe' => array(
       'title' => t('Subscribe user to group'),
       'description' => t("Allow user to be a member of a group (approval required)."),
+      // Determine to which role to limit the permission. For example the
+      // "subscribe" can't be assigned only to a non-member, as a member doesn't
+      // need it.
       'roles' => array(OG_ANONYMOUS_ROLE),
+      // Determine to which roles the permissions will be enabled by default.
+      'default role' => array(OG_ANONYMOUS_ROLE),
     ),
   );
 }
diff --git a/profiles/commons/modules/contrib/og/og.info b/profiles/commons/modules/contrib/og/og.info
index fada5d5..2db9149 100644
--- a/profiles/commons/modules/contrib/og/og.info
+++ b/profiles/commons/modules/contrib/og/og.info
@@ -29,6 +29,7 @@ files[] = includes/views/handlers/og_handler_field_group_audience_state.inc
 files[] = includes/views/handlers/og_handler_field_prerender_list.inc
 files[] = includes/views/handlers/og_handler_field_user_roles.inc
 files[] = includes/views/handlers/og_handler_field_group_permissions.inc
+files[] = includes/views/handlers/og_handler_field_og_membership_link_edit.inc
 
 ; Views filters
 files[] = includes/views/handlers/og_handler_filter_group_audience_state.inc
@@ -54,9 +55,9 @@ files[] = includes/migrate/7200/og_user_roles.migrate.inc
 
 
 
-; Information added by drupal.org packaging script on 2013-02-18
-version = "7.x-2.0"
+; Information added by drupal.org packaging script on 2013-03-27
+version = "7.x-2.1"
 core = "7.x"
 project = "og"
-datestamp = "1361203341"
+datestamp = "1364376614"
 
diff --git a/profiles/commons/modules/contrib/og/og.install b/profiles/commons/modules/contrib/og/og.install
index 87375c5..d956d92 100644
--- a/profiles/commons/modules/contrib/og/og.install
+++ b/profiles/commons/modules/contrib/og/og.install
@@ -73,7 +73,7 @@ function og_uninstall() {
         }
         else {
           $field = field_info_field($instance['field_name']);
-          if ($field['type'] == 'entityreference' && $field['settings']['handler'] == 'og') {
+          if ($field['type'] == 'entityreference' && ($field['settings']['handler'] == 'og' || strpos($field['settings']['handler'], 'og_') === 0)) {
             // Last instance will take care also of deleting the field itself.
             field_delete_instance($instance);
           }
diff --git a/profiles/commons/modules/contrib/og/og.module b/profiles/commons/modules/contrib/og/og.module
index b124339..e42cf6d 100644
--- a/profiles/commons/modules/contrib/og/og.module
+++ b/profiles/commons/modules/contrib/og/og.module
@@ -674,7 +674,13 @@ function og_field_create_instance($instance) {
   $og_field = og_fields_info(OG_AUDIENCE_FIELD);
   $og_field['field']['settings']['target_type'] = $entity_type;
   $og_field['instance']['label'] = t('Group membership');
-  og_create_field($field_name, 'user', 'user', $og_field);
+
+  // If the user entity type has multiple bundles, make sure to attach a field
+  // instance to all of them.
+  $entity_info = entity_get_info('user');
+  foreach (array_keys($entity_info['bundles']) as $user_bundle) {
+    og_create_field($field_name, 'user', $user_bundle, $og_field);
+  }
 }
 
 /**
@@ -1187,12 +1193,16 @@ function og_membership_invalidate_cache() {
  *
  * If a group membership already exists, an exception will be thrown.
  *
+ * @param $group_type
+ *   The entity type of the group.
  * @param $gid
- *   The group ID
+ *   The group ID.
  * @param $entity_type
  *   The entity type of the group content.
  * @param $etid
  *   The entity ID of the group content.
+ * @param $field_name
+ *   The group audience field name.
  * @param $values
  *   Optional; Array of fields values to be attached to the OG membership, that
  *   will be processed using entity-metadata wrapper.
@@ -1531,26 +1541,23 @@ function og_membership_delete_multiple($ids = array()) {
 }
 
 /**
- * Implements hook_advanced_queue_info().
+ * Implements hook_cron_queue_info().
  */
-function og_advanced_queue_info() {
+function og_cron_queue_info() {
   $items['og_membership_orphans'] = array(
+    'title' => t('OG orphans'),
     'worker callback' => 'og_membership_orphans_worker',
-    // Message-subscribe will deal itself with deleting claimed items.
-    'delete when completed' => FALSE,
+    'time' => 60,
   );
   return $items;
 }
 
 /**
- * Advanced queue worker; Process a queue item.
+ * Queue worker; Process a queue item.
  *
  * Delete memberships, and if needed all related group-content.
  */
-function og_membership_orphans_worker($item, $end_time = FALSE) {
-  $queue = DrupalQueue::get('og_membership_orphans');
-  $data = $item->data;
-
+function og_membership_orphans_worker($data) {
   $group_type = $data['group_type'];
   $gid = $data['gid'];
 
@@ -1564,23 +1571,21 @@ function og_membership_orphans_worker($item, $end_time = FALSE) {
     ->execute();
 
   if (empty($result['og_membership'])) {
-    // We can delete the item.
-    $queue->deleteItem($item);
-    return TRUE;
+    return;
   }
 
   $ids = array_keys($result['og_membership']);
   if ($data['orphans']['move']) {
     _og_orphans_move($ids, $data['orphans']['move']['group_type'], $data['orphans']['move']['gid']);
-    // Delete the item.
-    $queue->deleteItem($item);
+    $queue = DrupalQueue::get('og_membership_orphans');
+    return $queue->createItem($data);
   }
   elseif ($data['orphans']['delete']) {
     _og_orphans_delete($ids);
-    // Release the item.
-    $queue->releaseItem($item);
+    // Create a new item.
+    $queue = DrupalQueue::get('og_membership_orphans');
+    return $queue->createItem($data);
   }
-  return TRUE;
 }
 
 /**
@@ -1673,10 +1678,21 @@ function og_membership_delete_by_group($entity_type, $entity) {
   }
 
   list($gid) = entity_extract_ids($entity_type, $entity);
-  if (variable_get('og_use_queue', FALSE) && module_exists('advancedqueue')) {
+  $query = new EntityFieldQuery();
+  $result = $query
+    ->entityCondition('entity_type', 'og_membership')
+    ->propertyCondition('group_type', $entity_type, '=')
+    ->propertyCondition('gid', $gid, '=')
+    ->execute();
+
+  if (empty($result['og_membership'])) {
+    return;
+  }
+
+  if (variable_get('og_use_queue', FALSE)) {
     $queue = DrupalQueue::get('og_membership_orphans');
     // Add item to the queue.
-    $task = array(
+    $data = array(
       'group_type' => $entity_type,
       'gid' => $gid,
       // Allow implementing modules to determine the disposition (e.g. delete
@@ -1687,21 +1703,12 @@ function og_membership_delete_by_group($entity_type, $entity) {
       ),
     );
 
-    // Exit now, as the task will be processed via advanced-queue.
-    return $queue->createItem($task);
+    // Exit now, as the task will be processed via queue.
+    return $queue->createItem($data);
   }
 
   // No scalable solution was chosen, so just delete OG memberships.
-  $query = new EntityFieldQuery();
-  $result = $query
-    ->entityCondition('entity_type', 'og_membership')
-    ->propertyCondition('group_type', $entity_type, '=')
-    ->propertyCondition('gid', $gid, '=')
-    ->execute();
-
-  if (!empty($result['og_membership'])) {
-    og_membership_delete_multiple(array_keys($result['og_membership']));
-  }
+  og_membership_delete_multiple(array_keys($result['og_membership']));
 }
 
 /**
@@ -1834,7 +1841,7 @@ function og_get_best_group_audience_field($entity_type, $entity, $group_type, $g
 }
 
 /**
- * Return TRUE if a field can be used and has not reached maxium values.
+ * Return TRUE if a field can be used and has not reached maximum values.
  *
  * @param $entity_type
  *   The entity type.
@@ -2244,7 +2251,7 @@ function og_get_entity_groups($entity_type = 'user', $entity = NULL, $states = a
  */
 function og_is_group_audience_field($field_name) {
   $field = field_info_field($field_name);
-  return $field['type'] == 'entityreference' && $field['settings']['handler'] == 'og';
+  return $field['type'] == 'entityreference' && ($field['settings']['handler'] == 'og' || strpos($field['settings']['handler'], 'og_') === 0);
 }
 
 /**
@@ -2509,6 +2516,9 @@ function og_role_permissions($roles = array()) {
  *   The group might be set to "Default access" but infact there are inactive
  *   group roles. Thus, we are forcing the function to return the overriden
  *   roles. see og_delete_user_roles_by_group().
+ * @param $include_all
+ *   Optional; If TRUE then the anonymous and authenticated default roles will
+ *   be included.
  *
  * @return
  *   An associative array with the role id as the key and the role name as
@@ -3191,10 +3201,7 @@ function og_list_permissions($type) {
     $perms += array(
       "create $type content" => array(
         'title' => t('Create %type_name content', array('%type_name' => $info->name)),
-        // We allow the create permission only on members, as otherwise we would
-        // have to iterate over every single group to decide if the user has
-        // permissions for it.
-        'roles' => array(OG_AUTHENTICATED_ROLE),
+
       ),
       "update own $type content" => array(
         'title' => t('Edit own %type_name content', array('%type_name' => $info->name)),
@@ -3210,6 +3217,13 @@ function og_list_permissions($type) {
       ),
     );
 
+    if (!module_exists('entityreference_prepopulate')) {
+      // We allow the create permission only on members, as otherwise we would
+      // have to iterate over every single group to decide if the user has
+      // permissions for it.
+      $perms["create $type content"]['roles'] = array(OG_AUTHENTICATED_ROLE);
+    }
+
     // Add default permissions.
     foreach ($perms as $key => $value) {
       $perms[$key]['default role'] = array(OG_AUTHENTICATED_ROLE);
@@ -3446,3 +3460,14 @@ function og_migrate_api() {
   );
   return $api;
 }
+
+/**
+ * Implements hook_flush_caches().
+ */
+function og_flush_caches() {
+  $bins = array(
+    'cache_entity_og_membership',
+    'cache_entity_og_membership_type',
+  );
+  return $bins;
+}
diff --git a/profiles/commons/modules/contrib/og/og.test b/profiles/commons/modules/contrib/og/og.test
index 9f78b23..6f31dfa 100644
--- a/profiles/commons/modules/contrib/og/og.test
+++ b/profiles/commons/modules/contrib/og/og.test
@@ -458,6 +458,15 @@ class OgGroupAndUngroup extends DrupalWebTestCase {
     $settings['uid'] = $user2->uid;
     $node = $this->drupalCreateNode($settings);
 
+    // Exception on OG membership for anonymous user.
+    try {
+      og_membership_create('entity_test', $entity1->pid, 'user', 0, OG_AUDIENCE_FIELD)->save();
+      $this->fail('OG membership can be created for anonymous user.');
+    }
+    catch (OgException $e) {
+      $this->pass('OG membership can not be created for anonymous user.');
+    }
+
     $this->assertFalse(og_is_member('entity_test', $entity1->pid, 'node', $node), t('Node is not assigned to group1.'));
     $values = array('entity_type' => 'node', 'entity' => $node);
     og_group('entity_test', $entity1->pid, $values);
@@ -1632,12 +1641,11 @@ class OgDeleteOrphansTestCase extends DrupalWebTestCase {
       'name' => 'OG orphan delete',
       'description' => 'Verifying for deleting orphan group content.',
       'group' => 'Organic groups',
-      'dependencies' => array('advancedqueue'),
     );
   }
 
   function setUp() {
-    parent::setUp('og_test', 'advancedqueue');
+    parent::setUp('og_test');
 
     // Create a group content type.
     $group = $this->drupalCreateContentType();
@@ -1682,7 +1690,7 @@ class OgDeleteOrphansTestCase extends DrupalWebTestCase {
     // Execute manually the queue worker.
     $queue = DrupalQueue::get('og_membership_orphans');
     $item = $queue->claimItem();
-    og_membership_orphans_worker($item);
+    og_membership_orphans_worker($item->data);
 
     // Load the nodes we used during the test.
     $first_node = node_load($first_node->nid);
@@ -1712,7 +1720,7 @@ class OgDeleteOrphansTestCase extends DrupalWebTestCase {
     // Execute manually the queue worker.
     $queue = DrupalQueue::get('og_membership_orphans');
     $item = $queue->claimItem();
-    og_membership_orphans_worker($item);
+    og_membership_orphans_worker($item->data);
 
     // Load the node into a wrapper and verify we moved him to another group.
     $wrapper = entity_metadata_wrapper('node', $first_node->nid);
diff --git a/profiles/commons/modules/contrib/og/og_access/og_access.info b/profiles/commons/modules/contrib/og/og_access/og_access.info
index 011d917..7b2cd33 100644
--- a/profiles/commons/modules/contrib/og/og_access/og_access.info
+++ b/profiles/commons/modules/contrib/og/og_access/og_access.info
@@ -9,9 +9,9 @@ files[] = og_access.install
 
 ; Tests
 files[] = og_access.test
-; Information added by drupal.org packaging script on 2013-02-18
-version = "7.x-2.0"
+; Information added by drupal.org packaging script on 2013-03-27
+version = "7.x-2.1"
 core = "7.x"
 project = "og"
-datestamp = "1361203341"
+datestamp = "1364376614"
 
diff --git a/profiles/commons/modules/contrib/og/og_context/og_context.info b/profiles/commons/modules/contrib/og/og_context/og_context.info
index 7bf2e17..5f56a7e 100644
--- a/profiles/commons/modules/contrib/og/og_context/og_context.info
+++ b/profiles/commons/modules/contrib/og/og_context/og_context.info
@@ -12,9 +12,9 @@ files[] = includes/views/handlers/og_context_plugin_argument_default_group_conte
 ; Views access plugin
 files[] = includes/views/handlers/og_context_plugin_access_og_perm.inc
 
-; Information added by drupal.org packaging script on 2013-02-18
-version = "7.x-2.0"
+; Information added by drupal.org packaging script on 2013-03-27
+version = "7.x-2.1"
 core = "7.x"
 project = "og"
-datestamp = "1361203341"
+datestamp = "1364376614"
 
diff --git a/profiles/commons/modules/contrib/og/og_example/og_example.info b/profiles/commons/modules/contrib/og/og_example/og_example.info
index ff885ea..56d0d0f 100644
--- a/profiles/commons/modules/contrib/og/og_example/og_example.info
+++ b/profiles/commons/modules/contrib/og/og_example/og_example.info
@@ -27,9 +27,9 @@ name = "OG example"
 package = "Features"
 php = "5.2.4"
 
-; Information added by drupal.org packaging script on 2013-02-18
-version = "7.x-2.0"
+; Information added by drupal.org packaging script on 2013-03-27
+version = "7.x-2.1"
 core = "7.x"
 project = "og"
-datestamp = "1361203341"
+datestamp = "1364376614"
 
diff --git a/profiles/commons/modules/contrib/og/og_example/og_example.module b/profiles/commons/modules/contrib/og/og_example/og_example.module
index c6d58f6..1fd3024 100644
--- a/profiles/commons/modules/contrib/og/og_example/og_example.module
+++ b/profiles/commons/modules/contrib/og/og_example/og_example.module
@@ -1,3 +1,12 @@
 <?php
 
 include_once('og_example.features.inc');
+
+/**
+ * Implements hook_ctools_plugin_directory().
+ */
+function og_example_ctools_plugin_directory($module, $plugin) {
+  if ($module == 'entityreference') {
+    return "plugins/entityreference/$plugin";
+  }
+}
diff --git a/profiles/commons/modules/contrib/og/og_example/plugins/entityreference/selection/OgExampleSelectionHandler.class.php b/profiles/commons/modules/contrib/og/og_example/plugins/entityreference/selection/OgExampleSelectionHandler.class.php
new file mode 100644
index 0000000..52ac0dd
--- /dev/null
+++ b/profiles/commons/modules/contrib/og/og_example/plugins/entityreference/selection/OgExampleSelectionHandler.class.php
@@ -0,0 +1,62 @@
+<?php
+
+
+/**
+ * @file
+ * OG example selection handler.
+ */
+
+class OgExampleSelectionHandler extends OgSelectionHandler {
+
+  /**
+   * Overrides OgSelectionHandler::getInstance().
+   */
+  public static function getInstance($field, $instance = NULL, $entity_type = NULL, $entity = NULL) {
+    return new OgExampleSelectionHandler($field, $instance, $entity_type, $entity);
+  }
+
+  /**
+   * Overrides OgSelectionHandler::buildEntityFieldQuery().
+   *
+   * This is an example of "subgroups" (but without getting into the logic of
+   * sub-grouping).
+   * The idea here is to show we can set "My groups" and "Other groups" to
+   * reference different groups by different
+   * logic. In this example, all group nodes below node ID 5, will appear under
+   * "My groups", and the rest will appear under "Other groups",
+   * for administrators.
+   */
+  public function buildEntityFieldQuery($match = NULL, $match_operator = 'CONTAINS') {
+    $group_type = $this->field['settings']['target_type'];
+
+
+    if (empty($this->instance['field_mode']) || $group_type != 'node') {
+      return parent::buildEntityFieldQuery($match, $match_operator);
+    }
+
+    $field_mode = $this->instance['field_mode'];
+    $handler = EntityReference_SelectionHandler_Generic::getInstance($this->field, $this->instance, $this->entity_type, $this->entity);
+    $query = $handler->buildEntityFieldQuery($match, $match_operator);
+
+    // Show only the entities that are active groups.
+    $query->fieldCondition(OG_GROUP_FIELD, 'value', 1, '=');
+
+    if ($field_mode == 'default') {
+      $query->propertyCondition('nid', '5', '<=');
+    }
+    else {
+      $query->propertyCondition('nid', '5', '>');
+    }
+
+    // FIXME: http://drupal.org/node/1325628
+    unset($query->tags['node_access']);
+
+    // FIXME: drupal.org/node/1413108
+    unset($query->tags['entityreference']);
+
+    $query->addTag('entity_field_access');
+    $query->addTag('og');
+
+    return $query;
+  }
+}
diff --git a/profiles/commons/modules/contrib/og/og_example/plugins/entityreference/selection/og_example.inc b/profiles/commons/modules/contrib/og/og_example/plugins/entityreference/selection/og_example.inc
new file mode 100644
index 0000000..5f6e37c
--- /dev/null
+++ b/profiles/commons/modules/contrib/og/og_example/plugins/entityreference/selection/og_example.inc
@@ -0,0 +1,7 @@
+<?php
+
+$plugin = array(
+  'title' => t('Organic groups example'),
+  'class' => 'OgExampleSelectionHandler',
+);
+
diff --git a/profiles/commons/modules/contrib/og/og_field_access/og_field_access.info b/profiles/commons/modules/contrib/og/og_field_access/og_field_access.info
index 2aa8f5c..5aec3b2 100644
--- a/profiles/commons/modules/contrib/og/og_field_access/og_field_access.info
+++ b/profiles/commons/modules/contrib/og/og_field_access/og_field_access.info
@@ -8,9 +8,9 @@ files[] = og_field_access.module
 ; Tests
 files[] = og_field_access.test
 
-; Information added by drupal.org packaging script on 2013-02-18
-version = "7.x-2.0"
+; Information added by drupal.org packaging script on 2013-03-27
+version = "7.x-2.1"
 core = "7.x"
 project = "og"
-datestamp = "1361203341"
+datestamp = "1364376614"
 
diff --git a/profiles/commons/modules/contrib/og/og_register/og_register.info b/profiles/commons/modules/contrib/og/og_register/og_register.info
index 1d04f1e..fdd55d1 100644
--- a/profiles/commons/modules/contrib/og/og_register/og_register.info
+++ b/profiles/commons/modules/contrib/og/og_register/og_register.info
@@ -6,9 +6,9 @@ dependencies[] = og
 core = 7.x
 files[] = og_register.module
 files[] = og_register.install
-; Information added by drupal.org packaging script on 2013-02-18
-version = "7.x-2.0"
+; Information added by drupal.org packaging script on 2013-03-27
+version = "7.x-2.1"
 core = "7.x"
 project = "og"
-datestamp = "1361203341"
+datestamp = "1364376614"
 
diff --git a/profiles/commons/modules/contrib/og/og_ui/includes/views/og_ui.views_default.inc b/profiles/commons/modules/contrib/og/og_ui/includes/views/og_ui.views_default.inc
index bb6cc3a..fbf56f4 100644
--- a/profiles/commons/modules/contrib/og/og_ui/includes/views/og_ui.views_default.inc
+++ b/profiles/commons/modules/contrib/og/og_ui/includes/views/og_ui.views_default.inc
@@ -209,6 +209,14 @@ function og_ui_views_default_views() {
   $handler->display->display_options['fields']['og_membership_request']['table'] = 'field_data_og_membership_request';
   $handler->display->display_options['fields']['og_membership_request']['field'] = 'og_membership_request';
   $handler->display->display_options['fields']['og_membership_request']['relationship'] = 'og_membership_rel';
+  /* Field: OG membership: Edit link */
+  $handler->display->display_options['fields']['edit_membership']['id'] = 'edit_membership';
+  $handler->display->display_options['fields']['edit_membership']['table'] = 'og_membership';
+  $handler->display->display_options['fields']['edit_membership']['field'] = 'edit_membership';
+  $handler->display->display_options['fields']['edit_membership']['relationship'] = 'og_membership_rel';
+  $handler->display->display_options['fields']['edit_membership']['label'] = '';
+  $handler->display->display_options['fields']['edit_membership']['element_label_colon'] = FALSE;
+  $handler->display->display_options['fields']['edit_membership']['destination'] = TRUE;
   /* Sort criterion: User: Name */
   $handler->display->display_options['sorts']['name']['id'] = 'name';
   $handler->display->display_options['sorts']['name']['table'] = 'users';
@@ -265,4 +273,4 @@ function og_ui_views_default_views() {
   $views[$view->name] = $view;
 
   return $views;
-}
\ No newline at end of file
+}
diff --git a/profiles/commons/modules/contrib/og/og_ui/og_ui.admin.inc b/profiles/commons/modules/contrib/og/og_ui/og_ui.admin.inc
index 8657b82..52bc0e7 100644
--- a/profiles/commons/modules/contrib/og/og_ui/og_ui.admin.inc
+++ b/profiles/commons/modules/contrib/og/og_ui/og_ui.admin.inc
@@ -76,9 +76,8 @@ function og_ui_admin_settings($form_state) {
   $form['og_use_queue'] = array(
     '#type' => 'checkbox',
     '#title' => t('Use queue'),
-    '#description' => t('Use <a href="@url">Advanced queue</a> module to process operations such as deleting memberships when groups are deleted.', array('@url' => 'http://drupal.org/project/advancedqueue')),
+    '#description' => t("Use the core's queue process to operations such as deleting memberships when groups are deleted."),
     '#default_value' => variable_get('og_use_queue', FALSE),
-    '#disabled' => !module_exists('advancedqueue'),
   );
 
   $form['og_orphans_delete'] = array(
@@ -86,7 +85,6 @@ function og_ui_admin_settings($form_state) {
     '#title' => t('Delete orphans'),
     '#description' => t('Delete "Orphan" group-content (not including useres), when the group is deleted.'),
     '#default_value' => variable_get('og_orphans_delete', FALSE),
-    '#disabled' => !module_exists('advancedqueue'),
     '#states' => array(
       'visible' => array(
         ':input[name="og_use_queue"]' => array('checked' => TRUE),
@@ -134,6 +132,7 @@ function og_ui_add_users($form, &$form_state, $group_type, $gid) {
   og_set_breadcrumb($group_type, $gid, array(l(t('Group'), "$group_type/$gid/group")));
   $group = entity_load_single($group_type, $gid);
   $label = entity_label($group_type, $group);
+  list(,, $bundle) = entity_extract_ids($group_type, $group);
 
   $form['group_type'] = array('#type' => 'value', '#value' => $group_type);
   $form['gid'] = array('#type' => 'value', '#value' => $gid);
@@ -154,6 +153,15 @@ function og_ui_add_users($form, &$form_state, $group_type, $gid) {
     '#value' => OG_STATE_ACTIVE,
   );
 
+  // Get all the non-default roles.
+  if ($og_roles = og_roles($group_type, $bundle, $gid, FALSE, FALSE)) {
+    $form['og_user']['roles'] = array(
+      '#type' => 'checkboxes',
+      '#options' => $og_roles,
+      '#title' => t('Roles'),
+    );
+  }
+
   $field_names = og_get_group_audience_fields();
   $field_name = !empty($form_state['values']['field_name']) ? $form_state['values']['field_name'] : key($field_names);
 
@@ -254,11 +262,107 @@ function og_ui_add_users_submit($form, &$form_state) {
   $og_membership->etid = $account->uid;
   $og_membership->state = $state;
   $og_membership->save();
-  $group = node_load($gid);
-  drupal_set_message(t('%user has been added to the group %group-title.', array('%user' => format_username($account), '%group-title' => $group->title)));
+  // Assign roles.
+  if (!empty($form_state['values']['roles'])) {
+    foreach ($form_state['values']['roles'] as $rid) {
+      og_role_grant($group_type, $gid, $og_membership->etid, $rid);
+    }
+  }
+
+  $group = entity_load_single($group_type, $gid);
+  drupal_set_message(t('%user has been added to the group %group-title.', array('%user' => format_username($account), '%group-title' => entity_label($group_type, $group))));
 }
 
 /**
+ * Add Edit membership form.
+ */
+function og_ui_edit_membership($form, &$form_state, $group_type, $gid, $og_membership) {
+  og_set_breadcrumb($group_type, $gid, array(l(t('Group'), "$group_type/$gid/group")));
+  $group = entity_load_single($group_type, $gid);
+  $label = entity_label($group_type, $group);
+  $account = user_load($og_membership->etid);
+  list(,, $bundle) = entity_extract_ids($group_type, $group);
+  // Get all the non-default roles.
+  $og_roles = og_roles($group_type, $bundle, $gid, FALSE, FALSE);
+
+  $form['group_type'] = array('#type' => 'value', '#value' => $group_type);
+  $form['gid'] = array('#type' => 'value', '#value' => $gid);
+  $form['id'] = array('#type' => 'value', '#value' => $og_membership->id);
+
+  $form['og_user'] = array(
+    '#type' => 'fieldset',
+    '#title' => t('Edit a group membership in %group', array('%group' => $label)),
+  );
+  $form['og_user']['name'] = array(
+    '#type' => 'markup',
+    '#title' => t('User name'),
+    '#markup' => $account->name,
+  );
+  if ($og_roles) {
+    $form['og_user']['roles'] = array(
+      '#type' => 'checkboxes',
+      '#options' => $og_roles,
+      '#title' => t('Roles'),
+      '#default_value' => array_keys(og_get_user_roles($group_type, $gid, $account->uid)),
+    );
+  }
+
+ // Add group membership form.
+  $values = array();
+
+  // Add group membership form. We still don't have the user or state.
+  $form_state['og_membership'] = $og_membership;
+
+  $form['membership_fields'] = array(
+    '#prefix' => '<div id="og-ui-field-name">',
+    '#suffix' => '</div>',
+    '#tree' => TRUE,
+    '#parents' => array('membership_fields'),
+  );
+  field_attach_form('og_membership', $og_membership, $form['membership_fields'], $form_state);
+
+  $form['actions'] = array('#type' => 'actions');
+  $form['actions']['submit'] = array('#type' => 'submit', '#value' => t('Update membership'));
+
+  return $form;
+}
+
+/**
+ * Validate handler; Edit membership in group.
+ */
+function og_ui_edit_membership_validate($form, &$form_state) {
+  $og_membership = $form_state['og_membership'];
+  field_attach_form_validate('og_membership', $og_membership, $form['membership_fields'], $form_state);
+}
+
+/**
+ * Submit handler; Edit membership in group.
+ */
+function og_ui_edit_membership_submit($form, &$form_state) {
+  $group_type = $form_state['values']['group_type'];
+  $gid = $form_state['values']['gid'];
+  $og_membership = $form_state['og_membership'];
+  field_attach_submit('og_membership', $og_membership, $form['membership_fields'], $form_state);
+  $og_membership->save();
+  $account = user_load($og_membership->etid);
+  // Assign roles.
+  $og_roles = og_get_user_roles($group_type, $gid, $account->uid);
+  foreach (array_keys($og_roles) as $rid) {
+    if (!in_array($rid, $form_state['values']['roles'])) {
+      og_role_revoke($group_type, $gid, $account->uid, $rid);
+    }
+  }
+  if (!empty($form_state['values']['roles'])) {
+    foreach ($form_state['values']['roles'] as $rid) {
+      og_role_grant($group_type, $gid, $og_membership->etid, $rid);
+    }
+  }
+  drupal_set_message(t('The membership has been updated.'));
+}
+
+
+
+/**
  * Form builder; OG user administration page.
  */
 function og_ui_admin_account($group_type, $gid) {
diff --git a/profiles/commons/modules/contrib/og/og_ui/og_ui.info b/profiles/commons/modules/contrib/og/og_ui/og_ui.info
index e8667f5..5d25be6 100644
--- a/profiles/commons/modules/contrib/og/og_ui/og_ui.info
+++ b/profiles/commons/modules/contrib/og/og_ui/og_ui.info
@@ -16,9 +16,9 @@ files[] = includes/migrate/7000/add_field.inc
 files[] = includes/migrate/7000/populate_field.inc
 files[] = includes/migrate/7000/set_roles.inc
 
-; Information added by drupal.org packaging script on 2013-02-18
-version = "7.x-2.0"
+; Information added by drupal.org packaging script on 2013-03-27
+version = "7.x-2.1"
 core = "7.x"
 project = "og"
-datestamp = "1361203341"
+datestamp = "1364376614"
 
diff --git a/profiles/commons/modules/contrib/og/og_ui/og_ui.module b/profiles/commons/modules/contrib/og/og_ui/og_ui.module
index 98cf98a..6fda0ef 100644
--- a/profiles/commons/modules/contrib/og/og_ui/og_ui.module
+++ b/profiles/commons/modules/contrib/og/og_ui/og_ui.module
@@ -58,6 +58,18 @@ function og_ui_menu() {
     'file' => 'og_ui.admin.inc',
   );
 
+  // User listing pages.
+  $items['group/%/%/admin/people/edit-membership/%og_membership'] = array(
+    'title callback' => 'og_ui_menu_title_callback',
+    'title arguments' => array('Edit membership in group @group', 1, 2),
+    'type' => MENU_CALLBACK,
+    'page callback' => 'drupal_get_form',
+    'page arguments' => array('og_ui_edit_membership', 1, 2, 6),
+    'access callback' => 'og_ui_user_access_group',
+    'access arguments' => array('manage members', 1, 2),
+    'file' => 'og_ui.admin.inc',
+  );
+
   // Permission administration pages.
   $items['group/%/%/admin/roles'] = array(
     'title callback' => 'og_ui_menu_title_callback',
@@ -574,7 +586,7 @@ function og_ui_field_formatter_view($entity_type, $entity, $field, $instance, $l
         return;
       }
 
-      if (!empty($entity->uid) && ($entity->uid == $user->uid)) {
+      if (!empty($entity->uid) && ($entity->uid == $account->uid)) {
         // User is the group manager.
         $element[0] = array('#markup' => t('You are the group manager'));
         return $element;
@@ -595,7 +607,7 @@ function og_ui_field_formatter_view($entity_type, $entity, $field, $instance, $l
         }
 
         // Check if user can subscribe to the field.
-        if (empty($settings['field_name']) && $audience_field_name = og_get_best_group_audience_field('user', $user->uid, $entity_type, $bundle)) {
+        if (empty($settings['field_name']) && $audience_field_name = og_get_best_group_audience_field('user', $account, $entity_type, $bundle)) {
           $settings['field_name'] = $audience_field_name;
         }
         if (!$settings['field_name']) {
@@ -614,7 +626,7 @@ function og_ui_field_formatter_view($entity_type, $entity, $field, $instance, $l
           return;
         }
 
-        if (!og_check_field_cardinality('user', $user->uid, $settings['field_name'])) {
+        if (!og_check_field_cardinality('user', $account, $settings['field_name'])) {
           $element[0] = array('#markup' => format_plural($field_info['cardinality'], 'You are already registered to another group', 'You are already registered to @count groups'));
           return $element;
         }
diff --git a/profiles/commons/modules/contrib/og/og_ui/og_ui.pages.inc b/profiles/commons/modules/contrib/og/og_ui/og_ui.pages.inc
index ee600cd..db30d4f 100644
--- a/profiles/commons/modules/contrib/og/og_ui/og_ui.pages.inc
+++ b/profiles/commons/modules/contrib/og/og_ui/og_ui.pages.inc
@@ -114,6 +114,7 @@ function og_ui_subscribe($entity_type, $etid, $field_name = NULL) {
     // Show the user a subscription confirmation.
     return drupal_get_form('og_ui_confirm_subscribe', $entity_type, $id, $user, $field_name);
   }
+  drupal_access_denied();
 }
 
 /**
diff --git a/profiles/commons/modules/contrib/og/plugins/entityreference/behavior/OgBehaviorHandler.class.php b/profiles/commons/modules/contrib/og/plugins/entityreference/behavior/OgBehaviorHandler.class.php
index 68f0247..4d67801 100644
--- a/profiles/commons/modules/contrib/og/plugins/entityreference/behavior/OgBehaviorHandler.class.php
+++ b/profiles/commons/modules/contrib/og/plugins/entityreference/behavior/OgBehaviorHandler.class.php
@@ -9,7 +9,7 @@ class OgBehaviorHandler extends EntityReference_BehaviorHandler_Abstract {
    * Implements EntityReference_BehaviorHandler_Abstract::access().
    */
   public function access($field, $instance) {
-    return $field['settings']['handler'] == 'og';
+    return $field['settings']['handler'] == 'og' || strpos($field['settings']['handler'], 'og_') === 0;
   }
 
   /**
diff --git a/profiles/commons/modules/contrib/og/plugins/entityreference/behavior/OgWidgetHandler.class.php b/profiles/commons/modules/contrib/og/plugins/entityreference/behavior/OgWidgetHandler.class.php
index dcd04c3..85c2659 100644
--- a/profiles/commons/modules/contrib/og/plugins/entityreference/behavior/OgWidgetHandler.class.php
+++ b/profiles/commons/modules/contrib/og/plugins/entityreference/behavior/OgWidgetHandler.class.php
@@ -6,7 +6,7 @@
 class OgWidgetHandler extends EntityReference_BehaviorHandler_Abstract {
 
   public function access($field, $instance) {
-    return $field['settings']['handler'] == 'og' && $instance['widget']['type'] == 'og_complex';
+    return ($field['settings']['handler'] == 'og' || strpos($field['settings']['handler'], 'og_') === 0) && $instance['widget']['type'] == 'og_complex';
   }
 
   /**
diff --git a/profiles/commons/modules/contrib/og/plugins/entityreference/selection/OgSelectionHandler.class.php b/profiles/commons/modules/contrib/og/plugins/entityreference/selection/OgSelectionHandler.class.php
index 54e6c1a..801d4d4 100644
--- a/profiles/commons/modules/contrib/og/plugins/entityreference/selection/OgSelectionHandler.class.php
+++ b/profiles/commons/modules/contrib/og/plugins/entityreference/selection/OgSelectionHandler.class.php
@@ -147,6 +147,10 @@ class OgSelectionHandler extends EntityReference_SelectionHandler_Generic {
 
     $field_mode = $this->instance['field_mode'];
     $user_groups = og_get_groups_by_user(NULL, $group_type);
+    $user_groups = $user_groups ? $user_groups : array();
+    $user_groups = array_merge($user_groups, $this->getGidsForCreate());
+
+
     // Show the user only the groups they belong to.
     if ($field_mode == 'admin' && $user_groups) {
       // Show only groups the user doesn't belong to.
@@ -172,4 +176,32 @@ class OgSelectionHandler extends EntityReference_SelectionHandler_Generic {
     // FIXME: Allow altering, after fixing http://drupal.org/node/1413108
     // $handler->entityFieldQueryAlter($query);
   }
+
+  /**
+   * Get group IDs from URL or OG-context, with access to create group-content.
+   *
+   * @return
+   *   Array with group IDs a user (member or non-member) is allowed to
+   * create, or empty array.
+   */
+  private function getGidsForCreate() {
+    if ($this->instance['entity_type'] != 'node') {
+      return array();
+    }
+
+    if (!module_exists('entityreference_prepopulate') || empty($this->instance['settings']['behaviors']['prepopulate'])) {
+      return array();
+    }
+    // Don't try to validate the IDs.
+    if (!$ids = entityreference_prepopulate_get_values($this->field, $this->instance, TRUE, FALSE)) {
+      return array();
+    }
+    $node_type = $this->instance['bundle'];
+    foreach ($ids as $delta => $id) {
+      if (!is_numeric($id) || !$id || !og_user_access('node', $id, "create $node_type content")) {
+        unset($ids[$delta]);
+      }
+    }
+    return $ids;
+  }
 }
diff --git a/profiles/commons/modules/contrib/og/tests/og_test.info b/profiles/commons/modules/contrib/og/tests/og_test.info
index a67e9f4..91bea9f 100644
--- a/profiles/commons/modules/contrib/og/tests/og_test.info
+++ b/profiles/commons/modules/contrib/og/tests/og_test.info
@@ -4,9 +4,9 @@ core = 7.x
 dependencies[] = og
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-18
-version = "7.x-2.0"
+; Information added by drupal.org packaging script on 2013-03-27
+version = "7.x-2.1"
 core = "7.x"
 project = "og"
-datestamp = "1361203341"
+datestamp = "1364376614"
 
diff --git a/profiles/commons/modules/contrib/quicktabs/quicktabs.info b/profiles/commons/modules/contrib/quicktabs/quicktabs.info
index 35ec7fc..eb69d2d 100644
--- a/profiles/commons/modules/contrib/quicktabs/quicktabs.info
+++ b/profiles/commons/modules/contrib/quicktabs/quicktabs.info
@@ -8,9 +8,10 @@ files[] = tests/quicktabs.test
 configure = admin/structure/quicktabs
 dependencies[] = "ctools"
 
-; Information added by drupal.org packaging script on 2012-11-23
+
+; Information added by drush on 2013-04-04
 version = "7.x-3.4+2-dev"
 core = "7.x"
 project = "quicktabs"
-datestamp = "1353633326"
+datestamp = "1365041448"
 
diff --git a/profiles/commons/modules/contrib/quicktabs/quicktabs_tabstyles/quicktabs_tabstyles.info b/profiles/commons/modules/contrib/quicktabs/quicktabs_tabstyles/quicktabs_tabstyles.info
index f001347..80b744c 100644
--- a/profiles/commons/modules/contrib/quicktabs/quicktabs_tabstyles/quicktabs_tabstyles.info
+++ b/profiles/commons/modules/contrib/quicktabs/quicktabs_tabstyles/quicktabs_tabstyles.info
@@ -3,9 +3,10 @@ description = Adds predefined tab styles to choose from per Quicktabs instance.
 core = 7.x
 configure=admin/structure/quicktabs/styles
 dependencies[] = "quicktabs"
-; Information added by drupal.org packaging script on 2012-11-23
+
+; Information added by drush on 2013-04-04
 version = "7.x-3.4+2-dev"
 core = "7.x"
 project = "quicktabs"
-datestamp = "1353633326"
+datestamp = "1365041448"
 
diff --git a/profiles/commons/modules/contrib/radioactivity/features/radioactivitydefaults/radioactivitydefaults.info b/profiles/commons/modules/contrib/radioactivity/features/radioactivitydefaults/radioactivitydefaults.info
index 7963624..35e6119 100644
--- a/profiles/commons/modules/contrib/radioactivity/features/radioactivitydefaults/radioactivitydefaults.info
+++ b/profiles/commons/modules/contrib/radioactivity/features/radioactivitydefaults/radioactivitydefaults.info
@@ -11,9 +11,10 @@ features[radioactivity_decay_profile][] = default_daily
 features[radioactivity_decay_profile][] = default_now
 features[radioactivity_decay_profile][] = default_weekly
 
-; Information added by drupal.org packaging script on 2013-02-07
+
+; Information added by drush on 2013-04-04
 version = "7.x-2.8+1-dev"
 core = "7.x"
 project = "radioactivity"
-datestamp = "1360243991"
+datestamp = "1365041453"
 
diff --git a/profiles/commons/modules/contrib/radioactivity/radioactivity.info b/profiles/commons/modules/contrib/radioactivity/radioactivity.info
index 664e651..2d6b8ef 100644
--- a/profiles/commons/modules/contrib/radioactivity/radioactivity.info
+++ b/profiles/commons/modules/contrib/radioactivity/radioactivity.info
@@ -12,9 +12,10 @@ files[] = includes/RadioactivityFileIncidentStorage.inc
 files[] = includes/RadioactivityMemcachedIncidentStorage.inc
 files[] = includes/RadioactivityIncident.inc
 
-; Information added by drupal.org packaging script on 2013-02-07
+
+; Information added by drush on 2013-04-04
 version = "7.x-2.8+1-dev"
 core = "7.x"
 project = "radioactivity"
-datestamp = "1360243991"
+datestamp = "1365041453"
 
diff --git a/profiles/commons/modules/contrib/registration/modules/registration_entity_access/registration_entity_access.info b/profiles/commons/modules/contrib/registration/modules/registration_entity_access/registration_entity_access.info
index d780cbf..6f93664 100644
--- a/profiles/commons/modules/contrib/registration/modules/registration_entity_access/registration_entity_access.info
+++ b/profiles/commons/modules/contrib/registration/modules/registration_entity_access/registration_entity_access.info
@@ -6,9 +6,9 @@ core = 7.x
 dependencies[] = registration
 
 
-; Information added by drush on 2013-02-25
+; Information added by drush on 2013-04-04
 version = "7.x-1.0+3-dev"
 core = "7.x"
 project = "registration"
-datestamp = "1361827561"
+datestamp = "1365041453"
 
diff --git a/profiles/commons/modules/contrib/registration/modules/registration_views/registration_views.info b/profiles/commons/modules/contrib/registration/modules/registration_views/registration_views.info
index ccd11bc..629731f 100644
--- a/profiles/commons/modules/contrib/registration/modules/registration_views/registration_views.info
+++ b/profiles/commons/modules/contrib/registration/modules/registration_views/registration_views.info
@@ -19,9 +19,9 @@ files[] = includes/registration_handler_field_entity_settings_link.inc
 files[] = includes/registration_handler_field_entity_registration_status.inc
 
 
-; Information added by drush on 2013-02-25
+; Information added by drush on 2013-04-04
 version = "7.x-1.0+3-dev"
 core = "7.x"
 project = "registration"
-datestamp = "1361827561"
+datestamp = "1365041453"
 
diff --git a/profiles/commons/modules/contrib/registration/modules/registration_waitlist/registration_waitlist.info b/profiles/commons/modules/contrib/registration/modules/registration_waitlist/registration_waitlist.info
index 8922702..3d4f187 100644
--- a/profiles/commons/modules/contrib/registration/modules/registration_waitlist/registration_waitlist.info
+++ b/profiles/commons/modules/contrib/registration/modules/registration_waitlist/registration_waitlist.info
@@ -8,9 +8,9 @@ dependencies[] = registration
 files[] = registration_waitlist.test
 
 
-; Information added by drush on 2013-02-25
+; Information added by drush on 2013-04-04
 version = "7.x-1.0+3-dev"
 core = "7.x"
 project = "registration"
-datestamp = "1361827561"
+datestamp = "1365041453"
 
diff --git a/profiles/commons/modules/contrib/registration/registration.info b/profiles/commons/modules/contrib/registration/registration.info
index 5a82334..8002ab7 100644
--- a/profiles/commons/modules/contrib/registration/registration.info
+++ b/profiles/commons/modules/contrib/registration/registration.info
@@ -16,9 +16,9 @@ files[] = lib/registration_type.ui_controller.inc
 
 
 
-; Information added by drush on 2013-02-25
+; Information added by drush on 2013-04-04
 version = "7.x-1.0+3-dev"
 core = "7.x"
 project = "registration"
-datestamp = "1361827561"
+datestamp = "1365041453"
 
diff --git a/profiles/commons/modules/contrib/registration/tests/registration_test_api/registration_test_api.info b/profiles/commons/modules/contrib/registration/tests/registration_test_api/registration_test_api.info
index cb26071..1277ea5 100644
--- a/profiles/commons/modules/contrib/registration/tests/registration_test_api/registration_test_api.info
+++ b/profiles/commons/modules/contrib/registration/tests/registration_test_api/registration_test_api.info
@@ -6,9 +6,9 @@ core = 7.x
 dependencies[] = registration
 hidden = TRUE
 
-; Information added by drush on 2013-02-25
+; Information added by drush on 2013-04-04
 version = "7.x-1.0+3-dev"
 core = "7.x"
 project = "registration"
-datestamp = "1361827561"
+datestamp = "1365041453"
 
diff --git a/profiles/commons/modules/contrib/rules/includes/rules.upgrade.inc b/profiles/commons/modules/contrib/rules/includes/rules.upgrade.inc
index 863f53e..e70d3ec 100644
--- a/profiles/commons/modules/contrib/rules/includes/rules.upgrade.inc
+++ b/profiles/commons/modules/contrib/rules/includes/rules.upgrade.inc
@@ -190,8 +190,8 @@ function rules_upgrade_convert_rule_set($name, $cfg_old) {
   $config = rules_plugin_factory('rule set');
   $config->name = $name;
   foreach (array('label', 'weight') as $key) {
-    if (isset($element[$key])) {
-      $target->$key = $element[$key];
+    if (isset($cfg_old[$key])) {
+      $config->$key = $cfg_old[$key];
     }
   }
   if (isset($cfg_old['arguments'])) {
diff --git a/profiles/commons/modules/contrib/rules/modules/data.eval.inc b/profiles/commons/modules/contrib/rules/modules/data.eval.inc
index 341f0d3..5370e70 100644
--- a/profiles/commons/modules/contrib/rules/modules/data.eval.inc
+++ b/profiles/commons/modules/contrib/rules/modules/data.eval.inc
@@ -74,7 +74,8 @@ function rules_action_data_calc($input1, $op, $input2, $settings, $state, $eleme
   }
   if (isset($result)) {
     // Ensure results are valid integer values if necessary.
-    $var_info = rules_array_key($element->providesVariables());
+    $variables = $element->providesVariables();
+    $var_info = reset($variables);
     if ($var_info['type'] == 'integer') {
       $result = (int) $result;
     }
diff --git a/profiles/commons/modules/contrib/rules/modules/entity.eval.inc b/profiles/commons/modules/contrib/rules/modules/entity.eval.inc
index 6ae5331..0f4c36a 100644
--- a/profiles/commons/modules/contrib/rules/modules/entity.eval.inc
+++ b/profiles/commons/modules/contrib/rules/modules/entity.eval.inc
@@ -141,14 +141,14 @@ function rules_action_entity_delete($wrapper, $settings, $state, $element) {
  * Condition: Entity is new.
  */
 function rules_condition_entity_is_new($wrapper, $settings, $state, $element) {
-  return !$wrapper->getIdentifier() || !empty($entity->is_new);
+  return !$wrapper->getIdentifier() || !empty($wrapper->value()->is_new);
 }
 
 /**
  * Condition: Entity has field.
  */
 function rules_condition_entity_has_field($wrapper, $field_name, $settings, $state) {
-  return isset($wrapper->$field_name) || isset($entity->$field_name);
+  return isset($wrapper->$field_name) || isset($wrapper->value()->$field_name);
 }
 
 /**
@@ -157,3 +157,18 @@ function rules_condition_entity_has_field($wrapper, $field_name, $settings, $sta
 function rules_condition_entity_is_of_type($wrapper, $type) {
   return $wrapper->type() == $type;
 }
+
+/**
+ * Condition: Entity is of type and bundle.
+ */
+function rules_condition_entity_is_of_bundle($wrapper, $type, $bundles) {
+  return $wrapper->type() == $type && in_array($wrapper->getBundle(), $bundles);
+}
+
+/**
+ * Condition: User has access to field.
+ */
+function rules_condition_entity_field_access(EntityDrupalWrapper $wrapper, $field_name, $op, $account = NULL) {
+  $field = field_info_field($field_name);
+  return !empty($field) && field_access($op, $field, $wrapper->type(), $wrapper->value(), $account = NULL);
+}
diff --git a/profiles/commons/modules/contrib/rules/modules/entity.rules.inc b/profiles/commons/modules/contrib/rules/modules/entity.rules.inc
index 4d16907..76ec4ee 100644
--- a/profiles/commons/modules/contrib/rules/modules/entity.rules.inc
+++ b/profiles/commons/modules/contrib/rules/modules/entity.rules.inc
@@ -269,6 +269,23 @@ function rules_entity_type_options($key = NULL) {
 }
 
 /**
+ * Options list callback for getting a list of possible entity bundles.
+ *
+ * @param $element
+ *   The element to return options for.
+ */
+function rules_entity_bundle_options(RulesAbstractPlugin $element) {
+  $bundles = array();
+  if (isset($element->settings['type'])) {
+    $entity_info = entity_get_info($element->settings['type']);
+    foreach ($entity_info['bundles'] as $bundle_name => $bundle_info) {
+      $bundles[$bundle_name] = $bundle_info['label'];
+    }
+  }
+  return $bundles;
+}
+
+/**
  * Entity actions access callback.
  *
  * Returns TRUE if at least one type is available for configuring the action.
@@ -348,6 +365,69 @@ function rules_entity_condition_info() {
       'group' => t('Entities'),
       'base' => 'rules_condition_entity_is_of_type',
     ),
+    'entity_is_of_bundle' => array(
+      'label' => t('Entity is of bundle'),
+      'parameter' => array(
+        'entity' => array(
+          'type' => 'entity',
+          'label' => t('Entity'),
+          'description' => t('Specifies the entity for which to evaluate the condition.'),
+        ),
+        'type' => array(
+          'type' => 'token',
+          'label' => t('Entity type'),
+          'description' => t('The type of the checked entity.'),
+          'options list' => 'rules_entity_action_type_options',
+          'restriction' => 'input',
+        ),
+        'bundle' => array(
+          'type' => 'list<text>',
+          'label' => t('Entity bundle'),
+          'description' => t('The condition is met if the entity is of one of the selected bundles.'),
+          'options list' => 'rules_entity_bundle_options',
+          'restriction' => 'input',
+        ),
+      ),
+      'group' => t('Entities'),
+      'base' => 'rules_condition_entity_is_of_bundle',
+    ),
+    'entity_field_access' => array(
+      'label' => t('User has field access'),
+      'parameter' => array(
+        'entity' => array(
+          'type' => 'entity',
+          'label' => t('Entity'),
+          'description' => t('Specifies the entity for which to evaluate the condition.'),
+          'restriction' => 'selector',
+          'wrapped' => TRUE,
+        ),
+        'field' => array(
+          'type' => 'token',
+          'label' => t('Field name'),
+          'description' => t('The name of the field to check for.'),
+          'options list' => 'rules_condition_entity_has_field_options',
+          'restriction' => 'input',
+        ),
+        'op' => array(
+          'type' => 'text',
+          'label' => t('Access operation'),
+          'options list' => 'rules_condition_entity_field_access_op_options',
+          'restriction' => 'input',
+          'optional' => TRUE,
+          'default value' => 'view',
+        ),
+        'account' => array(
+          'type' => 'user',
+          'label' => t('User account'),
+          'description' => t('Specifies the user account for which to check access. If left empty, the currently logged in user will be used.'),
+          'restriction' => 'selector',
+          'optional' => TRUE,
+          'default value' => NULL,
+        ),
+      ),
+      'group' => t('Entities'),
+      'base' => 'rules_condition_entity_field_access',
+    ),
   );
 }
 
@@ -370,6 +450,16 @@ function rules_condition_entity_has_field_options(RulesAbstractPlugin $element)
 }
 
 /**
+ * Returns options for choosing a field_access() operation.
+ */
+function rules_condition_entity_field_access_op_options(RulesAbstractPlugin $element) {
+  return array(
+    'view' => t('View'),
+    'edit' => t('Edit'),
+  );
+}
+
+/**
  * Assert that the entity has the field, if there is metadata for the field.
  */
 function rules_condition_entity_has_field_assertions($element) {
@@ -397,5 +487,80 @@ function rules_condition_entity_is_of_type_assertions($element) {
 }
 
 /**
+ * Assert the selected entity type and bundle.
+ */
+function rules_condition_entity_is_of_bundle_assertions($element) {
+  if ($bundle = $element->settings['bundle']) {
+    $assertions = array();
+    $assertions['entity']['type'] = $element->settings['type'];
+    $assertions['entity']['bundle'] = $bundle;
+    return $assertions;
+  }
+}
+
+/**
+ * Process callback for the condition entity_is_of_bundle.
+ */
+function rules_condition_entity_is_of_bundle_process(RulesAbstractPlugin $element) {
+  // If we know the entity type, auto-populate it.
+  if (($info = $element->getArgumentInfo('entity')) && $info['type'] != 'entity') {
+    $element->settings['type'] = $info['type'];
+  }
+}
+
+/**
+ * Form alter callback for the condition entity_is_of_bundle.
+ *
+ * Use multiple steps to configure the condition as the needed bundle field list
+ * depends on the selected entity type.
+ */
+function rules_condition_entity_is_of_bundle_form_alter(&$form, &$form_state, $options, RulesAbstractPlugin $element) {
+  if (empty($element->settings['entity:select'])) {
+    $step = 1;
+  }
+  elseif (empty($element->settings['type'])) {
+    $step = 2;
+  }
+  else {
+    $step = 3;
+  }
+
+  $form['reload'] = array(
+    '#weight' => $form['submit']['#weight'] + 1,
+    '#type' => 'submit',
+    '#name' => 'reload',
+    '#value' => $step != 3 ? t('Continue') : t('Reload form'),
+    '#limit_validation_errors' => array(array('parameter', 'entity'), array('parameter', 'type')),
+    '#submit' => array('rules_form_submit_rebuild'),
+    '#ajax' => rules_ui_form_default_ajax('fade'),
+    '#attributes' => array('class' => array('rules-hide-js')),
+  );
+  // Use ajax and trigger as the reload button.
+  $form['parameter']['type']['settings']['type']['#ajax'] = $form['reload']['#ajax'] + array(
+    'event' => 'change',
+    'trigger_as' => array('name' => 'reload'),
+  );
+
+  switch ($step) {
+    case 1:
+      $form['reload']['#limit_validation_errors'] = array(array('parameter', 'entity'));
+      unset($form['parameter']['type']);
+      unset($form['reload']['#attributes']['class']);
+      // NO break;
+    case 2:
+      $form['negate']['#access'] = FALSE;
+      unset($form['parameter']['bundle']);
+      unset($form['submit']);
+      break;
+    case 3:
+      if (($info = $element->getArgumentInfo('entity')) && $info['type'] != 'entity') {
+        // Hide the entity type parameter if not needed.
+        unset($form['parameter']['type']);
+      }
+      break;
+  }
+}
+
+/**
  * @}
  */
diff --git a/profiles/commons/modules/contrib/rules/modules/rules_core.rules.inc b/profiles/commons/modules/contrib/rules/modules/rules_core.rules.inc
index 81c0d0d..9edf446 100644
--- a/profiles/commons/modules/contrib/rules/modules/rules_core.rules.inc
+++ b/profiles/commons/modules/contrib/rules/modules/rules_core.rules.inc
@@ -27,11 +27,13 @@ function rules_rules_core_data_info() {
     'text' => array(
       'label' => t('text'),
       'ui class' => 'RulesDataUIText',
+      'token type' => 'rules_text',
     ),
-   'token' => array(
+    'token' => array(
       'label' => t('text token'),
       'parent' => 'text',
       'ui class' => 'RulesDataUITextToken',
+      'token type' => 'rules_token',
     ),
     // A formatted text as used by entity metadata.
     'text_formatted' => array(
@@ -40,49 +42,55 @@ function rules_rules_core_data_info() {
       'wrap' => TRUE,
       'property info' => entity_property_text_formatted_info(),
     ),
-   'decimal' => array(
+    'decimal' => array(
       'label' => t('decimal number'),
       'parent' => 'text',
       'ui class' => 'RulesDataUIDecimal',
+      'token type' => 'rules_decimal',
     ),
-   'integer' => array(
+    'integer' => array(
       'label' => t('integer'),
       'class' => 'RulesIntegerWrapper',
       'parent' => 'decimal',
       'ui class' => 'RulesDataUIInteger',
+      'token type' => 'rules_integer',
     ),
-   'date' => array(
+    'date' => array(
       'label' => t('date'),
       'ui class' => 'RulesDataUIDate',
+      'token type' => 'rules_date',
     ),
-   'duration' => array(
+    'duration' => array(
       'label' => t('duration'),
       'parent' => 'integer',
       'ui class' => 'RulesDataUIDuration',
+      'token type' => 'rules_duration',
     ),
-   'boolean' => array(
+    'boolean' => array(
       'label' => t('truth value'),
       'ui class' => 'RulesDataUIBoolean',
+      'token type' => 'rules_boolean',
     ),
-   'uri' => array(
+    'uri' => array(
       'label' => t('URI'),
       'parent' => 'text',
       // Clean inserted tokens with "rawurlencode".
       'cleaning callback' => 'rawurlencode',
       'ui class' => 'RulesDataUIURI',
+      'token type' => 'rules_uri',
     ),
-   'list' => array(
+    'list' => array(
       'label' => t('list', array(), array('context' => 'data_types')),
       'wrap' => TRUE,
       'group' => t('List', array(), array('context' => 'data_types')),
     ),
-   'list<text>' => array(
+    'list<text>' => array(
       'label' => t('list of text'),
       'ui class' => 'RulesDataUIListText',
       'wrap' => TRUE,
       'group' => t('List', array(), array('context' => 'data_types')),
     ),
-   'list<integer>' => array(
+    'list<integer>' => array(
       'label' => t('list of integer'),
       'ui class' => 'RulesDataUIListInteger',
       'wrap' => TRUE,
@@ -94,7 +102,7 @@ function rules_rules_core_data_info() {
       'wrap' => TRUE,
       'group' => t('List', array(), array('context' => 'data_types')),
     ),
-   'entity' => array(
+    'entity' => array(
       'label' => t('any entity'),
       'group' => t('Entity'),
       'is wrapped' => TRUE,
diff --git a/profiles/commons/modules/contrib/rules/modules/system.eval.inc b/profiles/commons/modules/contrib/rules/modules/system.eval.inc
index a56bbe9..a15f217 100644
--- a/profiles/commons/modules/contrib/rules/modules/system.eval.inc
+++ b/profiles/commons/modules/contrib/rules/modules/system.eval.inc
@@ -180,6 +180,9 @@ class RulesTokenEvaluator extends RulesDataInputEvaluator {
       else {
         $replacements += token_generate($var_name, $tokens, array(), $options);
       }
+      // Remove tokens if no replacement value is found. As token_replace() does
+      // if 'clear' is set.
+      $replacements += array_fill_keys($tokens, '');
     }
 
     // Optionally clean the list of replacement values.
@@ -200,6 +203,15 @@ class RulesTokenEvaluator extends RulesDataInputEvaluator {
     return str_replace($tokens, $values, $text);
   }
 
+  /**
+   * Create documentation about the available replacement patterns.
+   *
+   * @param array $var_info
+   *   Array with the available variables.
+   *
+   * @return array
+   *   Renderable array with the replacement pattern documentation.
+   */
   public static function help($var_info) {
     $render = array(
       '#type' => 'fieldset',
@@ -223,7 +235,11 @@ class RulesTokenEvaluator extends RulesDataInputEvaluator {
         );
         foreach ($token_info['tokens'][$token_type] as $token => $info) {
           $token = '[' . str_replace('_', '-', $name) . ':' . $token . ']';
-          $render[$name]['#rows'][$token] = array(check_plain($token), check_plain($info['name']), check_plain($info['description']));
+          $render[$name]['#rows'][$token] = array(
+            check_plain($token),
+            check_plain($info['name']),
+            check_plain($info['description']),
+          );
         }
       }
     }
diff --git a/profiles/commons/modules/contrib/rules/rules.api.php b/profiles/commons/modules/contrib/rules/rules.api.php
index c797fc2..86b670c 100644
--- a/profiles/commons/modules/contrib/rules/rules.api.php
+++ b/profiles/commons/modules/contrib/rules/rules.api.php
@@ -414,8 +414,9 @@ function hook_rules_data_info() {
  *     components (see below).
  *   - class: The implementation class. Has to extend the RulesPlugin class.
  *   - embeddable: A container class in which elements of those plugin may be
- *     embedded or FALSE to disallow embedding. Common classes that are used
- *     here are RulesConditionContainer and RulesActionContainer.
+ *     embedded via the UI or FALSE to disallow embedding it via the UI. This
+ *     has no implications on the API level though. Common classes that are
+ *     used here are RulesConditionContainer and RulesActionContainer.
  *   - component: If set to TRUE, the rules admin UI will list elements of those
  *     plugin in the components UI and allows the creation of new components
  *     based upon this plugin. Optional.
diff --git a/profiles/commons/modules/contrib/rules/rules.info b/profiles/commons/modules/contrib/rules/rules.info
index 524783e..e8e3a59 100644
--- a/profiles/commons/modules/contrib/rules/rules.info
+++ b/profiles/commons/modules/contrib/rules/rules.info
@@ -19,9 +19,9 @@ files[] = ui/ui.plugins.inc
 dependencies[] = entity_token
 dependencies[] = entity
 
-; Information added by drupal.org packaging script on 2012-08-03
-version = "7.x-2.2"
+; Information added by drupal.org packaging script on 2013-03-27
+version = "7.x-2.3"
 core = "7.x"
 project = "rules"
-datestamp = "1343980733"
+datestamp = "1364401818"
 
diff --git a/profiles/commons/modules/contrib/rules/rules.install b/profiles/commons/modules/contrib/rules/rules.install
index ce72c81..f49c78e 100644
--- a/profiles/commons/modules/contrib/rules/rules.install
+++ b/profiles/commons/modules/contrib/rules/rules.install
@@ -128,7 +128,8 @@ function rules_schema() {
     ),
     'primary key' => array('id', 'event'),
     'foreign keys' => array(
-      'id' => array('rules_config' => 'id'),
+      'table' => 'rules_config',
+      'columns' => array('id' => 'id'),
     ),
   );
   $schema['rules_tags'] = array(
@@ -148,7 +149,8 @@ function rules_schema() {
     ),
     'primary key' => array('id', 'tag'),
     'foreign keys' => array(
-      'id' => array('rules_config' => 'id'),
+      'table' => 'rules_config',
+      'columns' => array('id' => 'id'),
     ),
   );
   $schema['rules_dependencies'] = array(
@@ -171,7 +173,8 @@ function rules_schema() {
       'module' => array('module'),
     ),
     'foreign keys' => array(
-      'id' => array('rules_config' => 'id'),
+      'table' => 'rules_config',
+      'columns' => array('id' => 'id'),
     ),
   );
   $schema['cache_rules'] = drupal_get_schema_unprocessed('system', 'cache');
@@ -269,7 +272,8 @@ function rules_update_7200() {
     ),
     'primary key' => array('id', 'event'),
     'foreign keys' => array(
-      'id' => array('rules_config' => 'id'),
+      'table' => 'rules_config',
+      'columns' => array('id' => 'id'),
     ),
   );
   db_create_table('rules_config', $schema['rules_config']);
@@ -353,7 +357,8 @@ function rules_update_7204() {
       ),
       'primary key' => array('id', 'tag'),
       'foreign keys' => array(
-        'id' => array('rules_config' => 'id'),
+        'table' => 'rules_config',
+        'columns' => array('id' => 'id'),
       ),
     );
     db_create_table('rules_tags', $schema['rules_tags']);
@@ -385,7 +390,8 @@ function rules_update_7205() {
         'module' => array('module'),
       ),
       'foreign keys' => array(
-        'id' => array('rules_config' => 'id'),
+        'table' => 'rules_config',
+        'columns' => array('id' => 'id'),
       ),
     );
     db_create_table('rules_dependencies', $schema['rules_dependencies']);
diff --git a/profiles/commons/modules/contrib/rules/rules.module b/profiles/commons/modules/contrib/rules/rules.module
index 3a983aa..daa0faa 100644
--- a/profiles/commons/modules/contrib/rules/rules.module
+++ b/profiles/commons/modules/contrib/rules/rules.module
@@ -1406,3 +1406,45 @@ function rules_help($path, $arg) {
     return render($output);
   }
 }
+
+/**
+ * Implements hook_token_info().
+ */
+function rules_token_info() {
+  $cache = rules_get_cache();
+  $data_info = $cache['data_info'];
+
+  $types = array('text', 'integer', 'uri', 'token', 'decimal', 'date', 'duration');
+
+  foreach ($types as $type) {
+    $token_type = $data_info[$type]['token type'];
+
+    $token_info['types'][$token_type] = array(
+      'name' => $data_info[$type]['label'],
+      'description' => t('Tokens related to %label Rules variables.', array('%label' => $data_info[$type]['label'])),
+      'needs-data' => $token_type,
+    );
+    $token_info['tokens'][$token_type]['value'] = array(
+      'name' => t("Value"),
+      'description' => t('The value of the variable.'),
+    );
+  }
+  return $token_info;
+}
+
+/**
+ * Implements hook_tokens().
+ */
+function rules_tokens($type, $tokens, $data, $options = array()) {
+  // Handle replacements of primitive variable types.
+  if (substr($type, 0, 6) == 'rules_' && !empty($data[$type])) {
+    // Leverage entity tokens token processor by passing on as struct.
+    $info['property info']['value'] = array(
+      'type' => substr($type, 6),
+      'label' => '',
+    );
+    // Entity tokens uses metadata wrappers as values for 'struct' types.
+    $wrapper = entity_metadata_wrapper('struct', array('value' => $data[$type]), $info);
+    return entity_token_tokens('struct', $tokens, array('struct' => $wrapper), $options);
+  }
+}
diff --git a/profiles/commons/modules/contrib/rules/rules_admin/rules_admin.info b/profiles/commons/modules/contrib/rules/rules_admin/rules_admin.info
index c16e8a9..90ecfe6 100644
--- a/profiles/commons/modules/contrib/rules/rules_admin/rules_admin.info
+++ b/profiles/commons/modules/contrib/rules/rules_admin/rules_admin.info
@@ -6,9 +6,9 @@ files[] = rules_admin.module
 files[] = rules_admin.inc
 dependencies[] = rules
 
-; Information added by drupal.org packaging script on 2012-08-03
-version = "7.x-2.2"
+; Information added by drupal.org packaging script on 2013-03-27
+version = "7.x-2.3"
 core = "7.x"
 project = "rules"
-datestamp = "1343980733"
+datestamp = "1364401818"
 
diff --git a/profiles/commons/modules/contrib/rules/rules_i18n/rules_i18n.info b/profiles/commons/modules/contrib/rules/rules_i18n/rules_i18n.info
index e2c34df..41014df 100644
--- a/profiles/commons/modules/contrib/rules/rules_i18n/rules_i18n.info
+++ b/profiles/commons/modules/contrib/rules/rules_i18n/rules_i18n.info
@@ -7,9 +7,9 @@ core = 7.x
 files[] = rules_i18n.i18n.inc
 files[] = rules_i18n.rules.inc
 files[] = rules_i18n.test
-; Information added by drupal.org packaging script on 2012-08-03
-version = "7.x-2.2"
+; Information added by drupal.org packaging script on 2013-03-27
+version = "7.x-2.3"
 core = "7.x"
 project = "rules"
-datestamp = "1343980733"
+datestamp = "1364401818"
 
diff --git a/profiles/commons/modules/contrib/rules/rules_scheduler/rules_scheduler.info b/profiles/commons/modules/contrib/rules/rules_scheduler/rules_scheduler.info
index fb83852..cfdfbfb 100644
--- a/profiles/commons/modules/contrib/rules/rules_scheduler/rules_scheduler.info
+++ b/profiles/commons/modules/contrib/rules/rules_scheduler/rules_scheduler.info
@@ -12,9 +12,9 @@ files[] = includes/rules_scheduler.views_default.inc
 files[] = includes/rules_scheduler.views.inc
 files[] = includes/rules_scheduler_views_filter.inc
 
-; Information added by drupal.org packaging script on 2012-08-03
-version = "7.x-2.2"
+; Information added by drupal.org packaging script on 2013-03-27
+version = "7.x-2.3"
 core = "7.x"
 project = "rules"
-datestamp = "1343980733"
+datestamp = "1364401818"
 
diff --git a/profiles/commons/modules/contrib/rules/tests/rules.test b/profiles/commons/modules/contrib/rules/tests/rules.test
index 1b3246c..0bddc2e 100644
--- a/profiles/commons/modules/contrib/rules/tests/rules.test
+++ b/profiles/commons/modules/contrib/rules/tests/rules.test
@@ -1455,6 +1455,57 @@ class RulesIntegrationTestCase extends DrupalWebTestCase {
   function testEntityIntegration() {
     global $user;
 
+    $page = $this->drupalCreateNode(array('type' => 'page'));
+    $article = $this->drupalCreateNode(array('type' => 'article'));
+
+    $result = rules_condition('entity_field_access')
+      ->execute(entity_metadata_wrapper('node', $article), 'field_tags');
+    $this->assertTrue($result);
+
+    // Test entiy_is_of_bundle condition.
+    $result = rules_condition('entity_is_of_bundle', array(
+      'type' => 'node',
+      'bundle' => array('article'),
+    ))->execute(entity_metadata_wrapper('node', $page));
+    $this->assertFalse($result, 'Entity is of bundle condition has not been met.');
+    $result = rules_condition('entity_is_of_bundle', array(
+      'type' => 'node',
+      'bundle' => array('article'),
+    ))->execute(entity_metadata_wrapper('node', $article));
+    $this->assertTrue($result, 'Entity is of bundle condition has been met.');
+
+    // Also test a full rule so the integrity check must work.
+    $term_wrapped = entity_property_values_create_entity('taxonomy_term', array(
+      'name' => $this->randomName(),
+      'vocabulary' => 1,
+    ))->save();
+    $rule = rule(array(
+      'node' => array('type' => 'node'),
+    ));
+    $rule->condition('entity_is_of_bundle', array(
+      'entity:select' => 'node',
+      'bundle' => array('article'),
+    ));
+    $rule->action('data_set', array('data:select' => 'node:field_tags', 'value' => array($term_wrapped->getIdentifier())));
+    $rule->integrityCheck();
+    $rule->execute($article);
+    $this->assertEqual($term_wrapped->getIdentifier(), $article->field_tags[LANGUAGE_NONE][0]['tid'], 'Entity is of bundle condition has been met.');
+
+    // Test again using an entity variable.
+    $article = $this->drupalCreateNode(array('type' => 'article'));
+    $rule = rule(array(
+      'entity' => array('type' => 'entity'),
+    ));
+    $rule->condition('entity_is_of_bundle', array(
+      'entity:select' => 'entity',
+      'type' => 'node',
+      'bundle' => array('article'),
+    ));
+    $rule->action('data_set', array('data:select' => 'entity:field_tags', 'value' => array($term_wrapped->getIdentifier())));
+    $rule->integrityCheck();
+    $rule->execute(entity_metadata_wrapper('node', $article));
+    $this->assertEqual($term_wrapped->getIdentifier(), $article->field_tags[LANGUAGE_NONE][0]['tid'], 'Entity is of bundle condition has been met.');
+
     // Test CRUD actions.
     $action = rules_action('entity_create', array(
       'type' => 'node',
@@ -1883,8 +1934,11 @@ class RulesIntegrationTestCase extends DrupalWebTestCase {
     // Test sending mail to all users of a role. First make sure there is a
     // custom role and a user for it.
     $user = $this->drupalCreateUser(array('administer nodes'));
-    $roles = array_keys($user->roles);
-    rules_action('mail_to_users_of_role', $settings + array('roles' => $roles))->execute();
+    $roles = $user->roles;
+    // Remove the authenticate role so we only use the new role created by
+    // drupalCreateUser().
+    unset($roles[DRUPAL_AUTHENTICATED_RID]);
+    rules_action('mail_to_users_of_role', $settings + array('roles' => array_keys($roles)))->execute();
     $this->assertMail('to', $user->mail, 'Mail to users of a role has been sent.');
 
     // Test reacting on new log entries and make sure the log entry is usable.
diff --git a/profiles/commons/modules/contrib/rules/tests/rules_test.info b/profiles/commons/modules/contrib/rules/tests/rules_test.info
index bc451fc..6d149ee 100644
--- a/profiles/commons/modules/contrib/rules/tests/rules_test.info
+++ b/profiles/commons/modules/contrib/rules/tests/rules_test.info
@@ -6,9 +6,9 @@ files[] = rules_test.rules.inc
 files[] = rules_test.rules_defaults.inc
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2012-08-03
-version = "7.x-2.2"
+; Information added by drupal.org packaging script on 2013-03-27
+version = "7.x-2.3"
 core = "7.x"
 project = "rules"
-datestamp = "1343980733"
+datestamp = "1364401818"
 
diff --git a/profiles/commons/modules/contrib/rules/ui/ui.controller.inc b/profiles/commons/modules/contrib/rules/ui/ui.controller.inc
index a0abce1..dd80a29 100644
--- a/profiles/commons/modules/contrib/rules/ui/ui.controller.inc
+++ b/profiles/commons/modules/contrib/rules/ui/ui.controller.inc
@@ -275,8 +275,8 @@ class RulesUIController {
 
     // Add operations depending on the options and the exportable status.
     if (!$config->hasStatus(ENTITY_FIXED)) {
-      $row[] =  l(t('edit'), RulesPluginUI::path($name));
-      $row[] =  l(t('translate'), RulesPluginUI::path($name, 'translate'));
+      $row[] =  l(t('edit'), RulesPluginUI::path($name), array('attributes' => array('class' => array('edit', 'action'))));
+      $row[] =  l(t('translate'), RulesPluginUI::path($name, 'translate'), array('attributes' => array('class' => array('translate', 'action'))));
     }
     else {
       $row[] = '';
@@ -286,30 +286,31 @@ class RulesUIController {
     if (!$options['hide status op']) {
       // Add either an enable or disable link.
       $text = $config->active ? t('disable') : t('enable');
-      $link_path = RulesPluginUI::path($name, $config->active ? 'disable' : 'enable');
-      $row[] = $config->hasStatus(ENTITY_FIXED) ? '' : l($text, $link_path, array('query' => drupal_get_destination()));
+      $active_class = $config->active ? 'disable' : 'enable';
+      $link_path = RulesPluginUI::path($name, $active_class);
+      $row[] = $config->hasStatus(ENTITY_FIXED) ? '' : l($text, $link_path, array('attributes' => array('class' => array($active_class, 'action')), 'query' => drupal_get_destination()));
     }
-    $row[] = l(t('clone'), RulesPluginUI::path($name, 'clone'));
+    $row[] = l(t('clone'), RulesPluginUI::path($name, 'clone'), array('attributes' => array('class' => array('clone', 'action'))));
 
     // Add execute link for for components.
     if ($options['show execution op']) {
-      $row[] = ($config instanceof RulesTriggerableInterface) ? '' : l(t('execute'), RulesPluginUI::path($name, 'execute'), array('query' => drupal_get_destination()));
+      $row[] = ($config instanceof RulesTriggerableInterface) ? '' : l(t('execute'), RulesPluginUI::path($name, 'execute'), array('attributes' => array('class' => array('execute', 'action')), 'query' => drupal_get_destination()));
       if (module_exists('rules_scheduler')) {
         // Add schedule link for action components only.
-        $row[] = $config instanceof RulesActionInterface ? l(t('schedule'), RulesPluginUI::path($name, 'schedule'), array('query' => drupal_get_destination())) : '';
+        $row[] = $config instanceof RulesActionInterface ? l(t('schedule'), RulesPluginUI::path($name, 'schedule'), array('attributes' => array('class' => array('schedule', 'action')), 'query' => drupal_get_destination())) : '';
       }
     }
 
     if (!$config->hasStatus(ENTITY_IN_CODE) && !$config->hasStatus(ENTITY_FIXED)) {
-      $row[] = l(t('delete'), RulesPluginUI::path($name, 'delete'), array('query' => drupal_get_destination()));
+      $row[] = l(t('delete'), RulesPluginUI::path($name, 'delete'), array('attributes' => array('class' => array('delete', 'action')), 'query' => drupal_get_destination()));
     }
     elseif ($config->hasStatus(ENTITY_OVERRIDDEN) && !$config->hasStatus(ENTITY_FIXED)) {
-      $row[] = l(t('revert'), RulesPluginUI::path($name, 'revert'), array('query' => drupal_get_destination()));
+      $row[] = l(t('revert'), RulesPluginUI::path($name, 'revert'), array('attributes' => array('class' => array('revert', 'action')), 'query' => drupal_get_destination()));
     }
     else {
       $row[] = '';
     }
-    $row[] = l(t('export'), RulesPluginUI::path($name, 'export'));
+    $row[] = l(t('export'), RulesPluginUI::path($name, 'export'), array('attributes' => array('class' => array('export', 'action'))));
     return $row;
   }
 }
diff --git a/profiles/commons/modules/contrib/rules/ui/ui.core.inc b/profiles/commons/modules/contrib/rules/ui/ui.core.inc
index 6af9541..b72ede0 100644
--- a/profiles/commons/modules/contrib/rules/ui/ui.core.inc
+++ b/profiles/commons/modules/contrib/rules/ui/ui.core.inc
@@ -1087,7 +1087,7 @@ class RulesContainerPluginUI extends RulesPluginUI {
           '#theme' => 'rules_content_group',
           '#caption' => t('Tags'),
           'tags' => array(
-            '#markup' => implode(', ', $this->element->tags),
+            '#markup' => check_plain(drupal_implode_tags($this->element->tags)),
           ),
         );
       }
diff --git a/profiles/commons/modules/contrib/rules/ui/ui.data.inc b/profiles/commons/modules/contrib/rules/ui/ui.data.inc
index fdefc65..41e2d66 100755
--- a/profiles/commons/modules/contrib/rules/ui/ui.data.inc
+++ b/profiles/commons/modules/contrib/rules/ui/ui.data.inc
@@ -87,11 +87,11 @@ class RulesDataUI {
     $form['types_help']['#text'] = format_plural(count($type_labels), 'Select data of the type %types.', 'Select data of the types %types.', array('%types' => implode(', ', $type_labels)));
 
     if (!empty($info['translatable'])) {
-      if ($info['custom translation language']) {
-        $text = t('If a multilingual data source (i.e. a translatable field) is given, the argument is translated to the configured language.');
+      if (empty($info['custom translation language'])) {
+        $text = t('If a multilingual data source (i.e. a translatable field) is given, the argument is translated to the current interface language.');
       }
       else {
-        $text = t('If a multilingual data source (i.e. a translatable field) is given, the argument is translated to the current interface language.');
+        $text = t('If a multilingual data source (i.e. a translatable field) is given, the argument is translated to the configured language.');
       }
       $form['translation'] = array(
         '#theme' => 'rules_settings_help',
diff --git a/profiles/commons/modules/contrib/rules/ui/ui.forms.inc b/profiles/commons/modules/contrib/rules/ui/ui.forms.inc
index 95ddf3e..1439304 100644
--- a/profiles/commons/modules/contrib/rules/ui/ui.forms.inc
+++ b/profiles/commons/modules/contrib/rules/ui/ui.forms.inc
@@ -616,7 +616,7 @@ function rules_ui_form_data_selection_auto_completion($parameter, $form_build_id
         else {
           $text = check_plain($selector) . ' (' . check_plain($info['label']) . ')';
         }
-        $matches[$selector] = "<div" . drupal_attributes($attributes) . ">$text</div";
+        $matches[$selector] = "<div" . drupal_attributes($attributes) . ">$text</div>";
       }
     }
   }
diff --git a/profiles/commons/modules/contrib/strongarm/strongarm.info b/profiles/commons/modules/contrib/strongarm/strongarm.info
index bd14630..0b5eecb 100644
--- a/profiles/commons/modules/contrib/strongarm/strongarm.info
+++ b/profiles/commons/modules/contrib/strongarm/strongarm.info
@@ -7,9 +7,10 @@ files[] = strongarm.admin.inc
 files[] = strongarm.install
 files[] = strongarm.module
 
-; Information added by drupal.org packaging script on 2012-08-30
+
+; Information added by drush on 2013-04-04
 version = "7.x-2.0+2-dev"
 core = "7.x"
 project = "strongarm"
-datestamp = "1346288395"
+datestamp = "1365041432"
 
diff --git a/profiles/commons/modules/contrib/timeago/PATCHES.txt b/profiles/commons/modules/contrib/timeago/PATCHES.txt
index 9797a14..f55cfd0 100644
--- a/profiles/commons/modules/contrib/timeago/PATCHES.txt
+++ b/profiles/commons/modules/contrib/timeago/PATCHES.txt
@@ -1,4 +1,5 @@
 The following patches have been applied to this project:
 - http://drupal.org/files/1427226-timeago-date-type.patch
+- http://drupal.org/files/timeago-libraries-a.patch
 
 This file was automatically generated by Drush Make (http://drupal.org/project/drush).
\ No newline at end of file
diff --git a/profiles/commons/modules/contrib/timeago/timeago.info b/profiles/commons/modules/contrib/timeago/timeago.info
index cc1d2ac..699bd3c 100644
--- a/profiles/commons/modules/contrib/timeago/timeago.info
+++ b/profiles/commons/modules/contrib/timeago/timeago.info
@@ -6,9 +6,10 @@ configure = admin/config/user-interface/timeago
 files[] = timeago.install
 files[] = timeago.module
 
-; Information added by drupal.org packaging script on 2013-01-12
+
+; Information added by drush on 2013-04-04
 version = "7.x-2.1+6-dev"
 core = "7.x"
 project = "timeago"
-datestamp = "1357955762"
+datestamp = "1365041434"
 
diff --git a/profiles/commons/modules/contrib/timeago/timeago.module b/profiles/commons/modules/contrib/timeago/timeago.module
index 1e135ef..4b5d296 100644
--- a/profiles/commons/modules/contrib/timeago/timeago.module
+++ b/profiles/commons/modules/contrib/timeago/timeago.module
@@ -354,8 +354,6 @@ function timeago_add_js() {
   if (module_exists('libraries') && function_exists('libraries_load')) {
     $library_path = libraries_get_path('timeago');
     libraries_load('timeago');
-    $path = drupal_get_path('module', 'timeago') . '/timeago.js';
-    drupal_add_js($path);
   }
   else {
     $library_path = drupal_get_path('module', 'timeago');
diff --git a/profiles/commons/modules/contrib/title/CHANGELOG.txt b/profiles/commons/modules/contrib/title/CHANGELOG.txt
index 323225e..3ccce43 100644
--- a/profiles/commons/modules/contrib/title/CHANGELOG.txt
+++ b/profiles/commons/modules/contrib/title/CHANGELOG.txt
@@ -3,6 +3,20 @@ Title 7.x-1.x, xxxx-xx-xx
 -------------------------
 
 
+Title 7.x-1.0-alpha7, 2013-03-18
+--------------------------------
+#1919640 by peximo: Fixed Empty tag shown when the title field is displayed.
+#1869438 by jsacksick: Fixed hook_field_attach_create_bundle() implementation
+  isn't correct.
+#1280962 by mvc: Fixed Better description of field replacement dialogue.
+#1900282: Fixed wrong files[] directive in the title_test module.
+#1898618 by muka: Fixed Handle case when title property is not set (avoiding
+  error).
+#1885356 by peximo: Fixed Empty HTML class in Linked and wrapped format.
+#1865604 by GaëlG, plach: Fixed Title module overrides label callback (prevents
+  term label localization).
+
+
 Title 7.x-1.0-alpha5, 2012-12-18
 --------------------------------
 #1869228 by plach: Updated system dependencies.
diff --git a/profiles/commons/modules/contrib/title/tests/title.test b/profiles/commons/modules/contrib/title/tests/title.test
index b58635e..e88eb52 100644
--- a/profiles/commons/modules/contrib/title/tests/title.test
+++ b/profiles/commons/modules/contrib/title/tests/title.test
@@ -162,18 +162,25 @@ class TitleAdminSettingsTestCase extends DrupalWebTestCase {
 
   function setUp() {
     parent::setUp('field_test', 'title', 'title_test');
+    $admin_user = $this->drupalCreateUser(array('administer site configuration', 'administer taxonomy'));
+    $this->drupalLogin($admin_user);
   }
 
   /**
    * Check for automated title_field attachment.
    */
   function testAutomatedFieldAttachement() {
-    $admin_user = $this->drupalCreateUser(array('administer site configuration', 'administer taxonomy'));
-    $this->drupalLogin($admin_user);
+    $this->assertAutomatedFieldAttachement(TRUE);
+    $this->assertAutomatedFieldAttachement(FALSE);
+  }
 
+  /**
+   * Check that the fields are replaced or skipped depdening on the given value.
+   */
+  function assertAutomatedFieldAttachement($enabled) {
     $edit = array(
-      'title_taxonomy_term[auto_attach][name]' => TRUE,
-      'title_taxonomy_term[auto_attach][description]' => TRUE,
+      'title_taxonomy_term[auto_attach][name]' => $enabled,
+      'title_taxonomy_term[auto_attach][description]' => $enabled,
     );
     $this->drupalPost('admin/config/content/title', $edit, t('Save configuration'));
 
@@ -187,8 +194,8 @@ class TitleAdminSettingsTestCase extends DrupalWebTestCase {
     $entity_type = 'taxonomy_term';
     $bundle = $edit['machine_name'];
     field_info_cache_clear();
-    $this->assertTrue(title_field_replacement_enabled($entity_type, $bundle, 'name'), 'Name field automatically attached.');
-    $this->assertTrue(title_field_replacement_enabled($entity_type, $bundle, 'description', 'Description field automatically attached.'));
+    $this->assertTrue(title_field_replacement_enabled($entity_type, $bundle, 'name') == $enabled, 'Name field correctly processed.');
+    $this->assertTrue(title_field_replacement_enabled($entity_type, $bundle, 'description') == $enabled, 'Description field correctly processed.');
   }
 }
 
diff --git a/profiles/commons/modules/contrib/title/tests/title_test.info b/profiles/commons/modules/contrib/title/tests/title_test.info
index bdfa5a8..45846d3 100644
--- a/profiles/commons/modules/contrib/title/tests/title_test.info
+++ b/profiles/commons/modules/contrib/title/tests/title_test.info
@@ -6,11 +6,10 @@ hidden = TRUE
 dependencies[] = title
 dependencies[] = entity
 dependencies[] = entity_translation
-files[] = title_test.module
 
-; Information added by drupal.org packaging script on 2012-12-18
-version = "7.x-1.0-alpha5"
+; Information added by drupal.org packaging script on 2013-03-18
+version = "7.x-1.0-alpha7"
 core = "7.x"
 project = "title"
-datestamp = "1355827149"
+datestamp = "1363626024"
 
diff --git a/profiles/commons/modules/contrib/title/title.admin.inc b/profiles/commons/modules/contrib/title/title.admin.inc
index 743a46c..9cb0065 100644
--- a/profiles/commons/modules/contrib/title/title.admin.inc
+++ b/profiles/commons/modules/contrib/title/title.admin.inc
@@ -22,7 +22,7 @@ function title_form_field_ui_overview(&$form, &$form_state) {
           '#type' => 'link',
           '#title' => t('replace'),
           '#href' => $admin_path . '/fields/replace/' . $field_name,
-          '#options' => array('attributes' => array('title' => t('Replace %field with a field instance.', array('%field' => $field_name)))),
+          '#options' => array('attributes' => array('title' => t('Replace %field with a customizable field instance that can be translated.', array('%field' => $field_name)))),
         );
       }
       else {
@@ -48,8 +48,8 @@ function title_field_replacement_form($form, $form_state, $entity_type, $bundle,
 
   $form['enabled'] = array(
     '#type' => 'checkbox',
-    '#title' => t('Replace %field with a field instance.', array('%field' => $field_name)),
-    '#description' => t('If this is enabled the %field legacy field will be replaced with a regular field and will disappear from the <em>Manage fields</em> page. It will get back if the replacing field instance is deleted.', array('%field' => $field_name)),
+    '#title' => t('Replace %field with a field instance', array('%field' => $field_name)),
+    '#description' => t('If this is enabled the %field will be replaced with a customizable field that can be translated.', array('%field' => $field_name)),
     '#default_value' => $enabled,
     '#disabled' => $enabled,
   );
diff --git a/profiles/commons/modules/contrib/title/title.core.inc b/profiles/commons/modules/contrib/title/title.core.inc
index ef8a2a0..d75e656 100644
--- a/profiles/commons/modules/contrib/title/title.core.inc
+++ b/profiles/commons/modules/contrib/title/title.core.inc
@@ -39,7 +39,7 @@ function title_entity_info() {
         'field' => $field,
         'instance' => array(
           'label' => t('Title'),
-          'description' => t('A field replacing node title.'),
+          'description' => '',
         ) + $instance,
       ),
     ),
@@ -53,7 +53,7 @@ function title_entity_info() {
           'field' => $field,
           'instance' => array(
             'label' => t('Name'),
-            'description' => t('A field replacing taxonomy term name.'),
+            'description' => '',
           ) + $instance,
           'preprocess_key' => 'term_name',
         ),
@@ -64,7 +64,7 @@ function title_entity_info() {
           'instance' => array(
             'required' => FALSE,
             'label' => t('Description'),
-            'description' => t('A field replacing taxonomy term description.'),
+            'description' => '',
             'settings' => array(
               'text_processing' => 1,
             ),
@@ -87,7 +87,7 @@ function title_entity_info() {
           'field' => $field,
           'instance' => array(
             'label' => t('Subject'),
-            'description' => t('A field replacing comment subject.'),
+            'description' => '',
           ) + $instance,
           'preprocess_key' => 'title',
         ),
diff --git a/profiles/commons/modules/contrib/title/title.field.inc b/profiles/commons/modules/contrib/title/title.field.inc
index 15590cf..d94905b 100644
--- a/profiles/commons/modules/contrib/title/title.field.inc
+++ b/profiles/commons/modules/contrib/title/title.field.inc
@@ -104,18 +104,21 @@ function title_field_formatter_view($entity_type, $entity, $field, $instance, $l
     $output = l($output, $uri['path'], array('html' => TRUE));
   }
 
-  $wrap_tag = isset($settings['title_style']) ? $settings['title_style'] : '_none';
+  $wrap_tag = empty($settings['title_style']) ? '_none' : $settings['title_style'];
 
   if ($wrap_tag != '_none') {
-    $output = theme('html_tag', array(
+    $element = array(
       'element' => array(
         '#tag' => $wrap_tag,
-        '#attributes' => array(
-          'class' => $settings['title_class'],
-        ),
         '#value' => $output,
       ),
-    ));
+    );
+
+    if (!empty($settings['title_class'])) {
+      $element['#attributes'] = array('class' => $settings['title_class']);
+    }
+
+    $output = theme('html_tag', $element);
   }
 
   $element = array(
diff --git a/profiles/commons/modules/contrib/title/title.info b/profiles/commons/modules/contrib/title/title.info
index af6ca38..a331e8f 100644
--- a/profiles/commons/modules/contrib/title/title.info
+++ b/profiles/commons/modules/contrib/title/title.info
@@ -3,15 +3,15 @@ description = Replaces entity legacy fields with regular fields.
 core = 7.x
 package = Fields
 configure = admin/config/content/title
-dependencies[] = system (> 7.14)
+dependencies[] = system (>7.14)
 
 files[] = title.module
 files[] = views/views_handler_title_field.inc
 files[] = tests/title.test
 
-; Information added by drupal.org packaging script on 2012-12-18
-version = "7.x-1.0-alpha5"
+; Information added by drupal.org packaging script on 2013-03-18
+version = "7.x-1.0-alpha7"
 core = "7.x"
 project = "title"
-datestamp = "1355827149"
+datestamp = "1363626024"
 
diff --git a/profiles/commons/modules/contrib/title/title.module b/profiles/commons/modules/contrib/title/title.module
index ef106e9..06b6b3a 100644
--- a/profiles/commons/modules/contrib/title/title.module
+++ b/profiles/commons/modules/contrib/title/title.module
@@ -69,6 +69,10 @@ function title_entity_info_alter(&$info) {
 
         // Support add explicit support for entity_label().
         if (isset($entity_info['entity keys']['label']) && $entity_info['entity keys']['label'] == $legacy_field) {
+          // Store the original label callback for compatibility reasons.
+          if (isset($info[$entity_type]['label callback'])) {
+            $info[$entity_type]['label fallback']['title'] = $info[$entity_type]['label callback'];
+          }
           $info[$entity_type]['label callback'] = 'title_entity_label';
           $fr_info += array('preprocess_key' => $info[$entity_type]['entity keys']['label']);
         }
@@ -118,12 +122,17 @@ function title_entity_label($entity, $type, $langcode = NULL) {
   $info = $entity_info['field replacement'][$legacy_field];
   list(, , $bundle) = entity_extract_ids($type, $entity);
 
+  // If field replacement is enabled we use the replacing field value.
   if (title_field_replacement_enabled($type, $bundle, $legacy_field)) {
     $langcode = field_language($type, $entity, $info['field']['field_name'], $langcode);
     return $info['callbacks']['sync_get']($type, $entity, $legacy_field, $info, $langcode);
   }
+  // Otherwise if we have a fallback defined we use the original label callback.
+  elseif (isset($entity_info['label fallback']['title']) && function_exists($entity_info['label fallback']['title'])) {
+    return $entity_info['label fallback']['title']($entity, $type, $langcode);
+  }
   else {
-    return $entity->{$legacy_field};
+    return (property_exists($entity, $legacy_field)) ? $entity->{$legacy_field} : NULL;
   }
 }
 
@@ -234,7 +243,6 @@ function title_field_replacement_enabled($entity_type, $bundle, $legacy_field) {
  */
 function title_field_replacement_toggle($entity_type, $bundle, $legacy_field) {
   $info = title_field_replacement_info($entity_type, $legacy_field);
-
   if (!$info) {
     return;
   }
@@ -820,24 +828,26 @@ function title_field_attach_create_bundle($entity_type, $bundle) {
 
   $options = variable_get('title_' . $entity_type, array());
 
-  foreach (array_keys($entity_info['field replacement']) as $field_name) {
-    if (!isset($options['auto_attach'][$field_name])) {
+  foreach (array_keys($entity_info['field replacement']) as $legacy_field) {
+    if (empty($options['auto_attach'][$legacy_field])) {
       continue;
     }
 
     // Do not continue if the replacement field already exists.
+    $field_name = $entity_info['field replacement'][$legacy_field]['field']['field_name'];
     if (field_info_instance($entity_type, $field_name, $bundle)) {
       continue;
     }
 
-    title_field_replacement_toggle($entity_type, $bundle, $field_name);
+    title_field_replacement_toggle($entity_type, $bundle, $legacy_field);
 
     $instance = field_info_instance($entity_type, $field_name, $bundle);
-    $params = array(
-      '@entity_label' => drupal_strtolower($entity_info['label']),
-      '%field_name' => t($entity_info['field replacement'][$field_name]['instance']['label']),
-     );
-
-    drupal_set_message(t('The @entity_label %field_name field was automatically replaced.', $params));
+    if ($instance) {
+      $params = array(
+        '@entity_label' => drupal_strtolower($entity_info['label']),
+        '%field_name' => $instance['label'],
+      );
+      drupal_set_message(t('The @entity_label %field_name field was automatically replaced.', $params));
+    }
   }
 }
diff --git a/profiles/commons/modules/contrib/views/handlers/views_handler_area_text.inc b/profiles/commons/modules/contrib/views/handlers/views_handler_area_text.inc
index d772786..edb282f 100644
--- a/profiles/commons/modules/contrib/views/handlers/views_handler_area_text.inc
+++ b/profiles/commons/modules/contrib/views/handlers/views_handler_area_text.inc
@@ -56,7 +56,7 @@ class views_handler_area_text extends views_handler_area {
         if (!empty($options[$type])) {
           $items = array();
           foreach ($options[$type] as $key => $value) {
-            $items[] = $key . ' == ' . $value;
+            $items[] = $key . ' == ' . check_plain($value);
           }
           $output .= theme('item_list',
             array(
diff --git a/profiles/commons/modules/contrib/views/handlers/views_handler_field.inc b/profiles/commons/modules/contrib/views/handlers/views_handler_field.inc
index b657bd6..65210d9 100644
--- a/profiles/commons/modules/contrib/views/handlers/views_handler_field.inc
+++ b/profiles/commons/modules/contrib/views/handlers/views_handler_field.inc
@@ -814,7 +814,7 @@ If you would like to have the characters \'[\' and \']\' please use the html ent
           if (!empty($options[$type])) {
             $items = array();
             foreach ($options[$type] as $key => $value) {
-              $items[] = $key . ' == ' . $value;
+              $items[] = $key . ' == ' . check_plain($value);
             }
             $output .= theme('item_list',
               array(
diff --git a/profiles/commons/modules/contrib/views/handlers/views_handler_field_boolean.inc b/profiles/commons/modules/contrib/views/handlers/views_handler_field_boolean.inc
index 52e02bf..8acfb32 100644
--- a/profiles/commons/modules/contrib/views/handlers/views_handler_field_boolean.inc
+++ b/profiles/commons/modules/contrib/views/handlers/views_handler_field_boolean.inc
@@ -25,6 +25,8 @@ class views_handler_field_boolean extends views_handler_field {
   function option_definition() {
     $options = parent::option_definition();
     $options['type'] = array('default' => 'yes-no');
+    $options['type_custom_true'] = array('default' => '', 'translatable' => TRUE);
+    $options['type_custom_false'] = array('default' => '', 'translatable' => TRUE);
     $options['not'] = array('definition bool' => 'reverse');
 
     return $options;
@@ -42,7 +44,8 @@ class views_handler_field_boolean extends views_handler_field {
       'unicode-yes-no' => array('✔', '✖'),
     );
     $output_formats = isset($this->definition['output formats']) ? $this->definition['output formats'] : array();
-    $this->formats = array_merge($default_formats, $output_formats);
+    $custom_format = array('custom' => array(t('Custom')));
+    $this->formats = array_merge($default_formats, $output_formats, $custom_format);
   }
 
   function options_form(&$form, &$form_state) {
@@ -56,6 +59,29 @@ class views_handler_field_boolean extends views_handler_field {
       '#options' => $options,
       '#default_value' => $this->options['type'],
     );
+
+    $form['type_custom_true'] = array(
+      '#type' => 'textfield',
+      '#title' => t('Custom output for TRUE'),
+      '#default_value' => $this->options['type_custom_true'],
+      '#states' => array(
+        'visible' => array(
+          'select[name="options[type]"]' => array('value' => 'custom'),
+        ),
+      ),
+    );
+
+    $form['type_custom_false'] = array(
+      '#type' => 'textfield',
+      '#title' => t('Custom output for FALSE'),
+      '#default_value' => $this->options['type_custom_false'],
+      '#states' => array(
+        'visible' => array(
+          'select[name="options[type]"]' => array('value' => 'custom'),
+        ),
+      ),
+    );
+
     $form['not'] = array(
       '#type' => 'checkbox',
       '#title' => t('Reverse'),
@@ -71,7 +97,10 @@ class views_handler_field_boolean extends views_handler_field {
       $value = !$value;
     }
 
-    if (isset($this->formats[$this->options['type']])) {
+    if ($this->options['type'] == 'custom') {
+      return $value ? filter_xss_admin($this->options['type_custom_true']) : filter_xss_admin($this->options['type_custom_false']);
+    }
+    else if (isset($this->formats[$this->options['type']])) {
       return $value ? $this->formats[$this->options['type']][0] : $this->formats[$this->options['type']][1];
     }
     else {
diff --git a/profiles/commons/modules/contrib/views/handlers/views_handler_filter_numeric.inc b/profiles/commons/modules/contrib/views/handlers/views_handler_filter_numeric.inc
index 982abd8..03384f6 100644
--- a/profiles/commons/modules/contrib/views/handlers/views_handler_filter_numeric.inc
+++ b/profiles/commons/modules/contrib/views/handlers/views_handler_filter_numeric.inc
@@ -258,7 +258,7 @@ class views_handler_filter_numeric extends views_handler_filter {
   }
 
   function op_regex($field) {
-    $this->query->add_where($this->options['group'], $field, $this->value, 'RLIKE');
+    $this->query->add_where($this->options['group'], $field, $this->value['value'], 'RLIKE');
   }
 
   function admin_summary() {
diff --git a/profiles/commons/modules/contrib/views/includes/admin.inc b/profiles/commons/modules/contrib/views/includes/admin.inc
index e87aad7..160a61a 100644
--- a/profiles/commons/modules/contrib/views/includes/admin.inc
+++ b/profiles/commons/modules/contrib/views/includes/admin.inc
@@ -835,10 +835,10 @@ function theme_views_ui_view_info($variables) {
   }
 
   $output = '';
-  $output .= '<div class="views-ui-view-title">' . $title . "</div>\n";
+  $output .= '<div class="views-ui-view-title">' . check_plain($title) . "</div>\n";
   $output .= '<div class="views-ui-view-displays">' . $displays . "</div>\n";
   $output .= '<div class="views-ui-view-storage">' . $type . "</div>\n";
-  $output .= '<div class="views-ui-view-base">' . t('Type') . ': ' . $variables['base']. "</div>\n";
+  $output .= '<div class="views-ui-view-base">' . t('Type') . ': ' . check_plain($variables['base']). "</div>\n";
   return $output;
 }
 
@@ -2214,7 +2214,7 @@ function views_ui_edit_form_get_bucket($type, $view, $display) {
   switch ($type) {
     case 'filter':
       $rearrange_url = "admin/structure/views/nojs/rearrange-$type/$view->name/$display->id/$type";
-      $rearrange_text = t('and/or, rearrange');
+      $rearrange_text = t('And/Or, Rearrange');
       // TODO: Add another class to have another symbol for filter rearrange.
       $class = 'icon compact rearrange';
       break;
@@ -2233,7 +2233,7 @@ function views_ui_edit_form_get_bucket($type, $view, $display) {
 
     default:
       $rearrange_url = "admin/structure/views/nojs/rearrange/$view->name/$display->id/$type";
-      $rearrange_text = t('rearrange');
+      $rearrange_text = t('Rearrange');
       $class = 'icon compact rearrange';
   }
 
@@ -2241,16 +2241,16 @@ function views_ui_edit_form_get_bucket($type, $view, $display) {
   $actions = array();
   $count_handlers = count($display->handler->get_handlers($type));
   $actions['add'] = array(
-    'title' => t('add'),
+    'title' => t('Add'),
     'href' => "admin/structure/views/nojs/add-item/$view->name/$display->id/$type",
-    'attributes'=> array('class' => array('icon compact add', 'views-ajax-link'), 'title' => t('add'), 'id' => 'views-add-' . $type),
+    'attributes'=> array('class' => array('icon compact add', 'views-ajax-link'), 'title' => t('Add'), 'id' => 'views-add-' . $type),
     'html' => TRUE,
   );
   if ($count_handlers > 0) {
     $actions['rearrange'] = array(
       'title' => $rearrange_text,
       'href' => $rearrange_url,
-      'attributes' => array('class' => array($class, 'views-ajax-link'), 'title' => $rearrange_text, 'id' => 'views-rearrange-' . $type),
+      'attributes' => array('class' => array($class, 'views-ajax-link'), 'title' => t('Rearrange'), 'id' => 'views-rearrange-' . $type),
       'html' => TRUE,
     );
   }
@@ -3038,7 +3038,7 @@ function views_ui_reorder_displays_form($form, &$form_state) {
 
   foreach ($view->display as $display) {
     $form[$display->id] = array(
-      'title'  => array('#markup' => $display->display_title),
+      'title'  => array('#markup' => check_plain($display->display_title)),
       'weight' => array(
         '#type' => 'weight',
         '#value' => $display->position,
@@ -4122,8 +4122,8 @@ function views_ui_add_item_form($form, &$form_state) {
         $zebra_class = ($zebra % 2) ? 'odd' : 'even';
         $form['options']['name'][$key] = array(
           '#type' => 'checkbox',
-          '#title' => t('!group: !field', array('!group' => $option['group'], '!field' => $option['title'])),
-          '#description' => $option['help'],
+          '#title' => t('!group: !field', array('!group' => check_plain($option['group']), '!field' => check_plain($option['title']))),
+          '#description' => filter_xss_admin($option['help']),
           '#return_value' => $key,
           '#prefix' => "<div class='$zebra_class filterable-option'>",
           '#suffix' => '</div>',
@@ -5047,7 +5047,7 @@ function views_ui_autocomplete_tag($string = '') {
   $views = views_get_all_views();
   foreach ($views as $view) {
     if (!empty($view->tag) && strpos($view->tag, $string) === 0) {
-      $matches[$view->tag] = $view->tag;
+      $matches[$view->tag] = check_plain($view->tag);
       if (count($matches) >= 10) {
         break;
       }
@@ -5267,7 +5267,7 @@ function theme_views_ui_style_plugin_table($variables) {
   $rows = array();
   foreach (element_children($form['columns']) as $id) {
     $row = array();
-    $row[] = drupal_render($form['info'][$id]['name']);
+    $row[] = check_plain(drupal_render($form['info'][$id]['name']));
     $row[] = drupal_render($form['columns'][$id]);
     $row[] = drupal_render($form['info'][$id]['align']);
     $row[] = drupal_render($form['info'][$id]['separator']);
diff --git a/profiles/commons/modules/contrib/views/includes/cache.inc b/profiles/commons/modules/contrib/views/includes/cache.inc
index b019c34..59c1733 100644
--- a/profiles/commons/modules/contrib/views/includes/cache.inc
+++ b/profiles/commons/modules/contrib/views/includes/cache.inc
@@ -28,9 +28,11 @@ function _views_fetch_data($table = NULL, $move = TRUE, $reset = FALSE) {
         $cache[$table] = $data->data;
       }
       else {
-        // No cache entry, rebuild.
-        $cache = _views_fetch_data_build();
-        $fully_loaded = TRUE;
+        if (!$fully_loaded) {
+          // No cache entry, rebuild.
+          $cache = _views_fetch_data_build();
+          $fully_loaded = TRUE;
+        }
       }
     }
     if (isset($cache[$table])) {
diff --git a/profiles/commons/modules/contrib/views/js/ajax_view.js b/profiles/commons/modules/contrib/views/js/ajax_view.js
index 2a4012f..e3bc821 100644
--- a/profiles/commons/modules/contrib/views/js/ajax_view.js
+++ b/profiles/commons/modules/contrib/views/js/ajax_view.js
@@ -69,7 +69,7 @@ Drupal.views.ajaxView = function(settings) {
 };
 
 Drupal.views.ajaxView.prototype.attachExposedFormAjax = function() {
-  var button = $('input[type=submit], input[type=image]', this.$exposed_form);
+  var button = $('input[type=submit], button[type=submit], input[type=image]', this.$exposed_form);
   button = button[0];
 
   this.exposedFormAjax = new Drupal.ajax($(button).attr('id'), button, this.element_settings);
diff --git a/profiles/commons/modules/contrib/views/js/views-admin.js b/profiles/commons/modules/contrib/views/js/views-admin.js
index 1eb3897..e945429 100644
--- a/profiles/commons/modules/contrib/views/js/views-admin.js
+++ b/profiles/commons/modules/contrib/views/js/views-admin.js
@@ -209,7 +209,7 @@ Drupal.viewsUi.addItemForm.prototype.handleCheck = function (event) {
  */
 Drupal.viewsUi.addItemForm.prototype.refreshCheckedItems = function() {
   // Perhaps we should precache the text div, too.
-  this.$selected_div.find('.views-selected-options').html(this.checkedItems.join(', '));
+  this.$selected_div.find('.views-selected-options').html(Drupal.checkPlain(this.checkedItems.join(', ')));
   Drupal.viewsUi.resizeModal('', true);
 }
 
diff --git a/profiles/commons/modules/contrib/views/modules/aggregator/views_handler_argument_aggregator_iid.inc b/profiles/commons/modules/contrib/views/modules/aggregator/views_handler_argument_aggregator_iid.inc
index d959b04..4c7824e 100644
--- a/profiles/commons/modules/contrib/views/modules/aggregator/views_handler_argument_aggregator_iid.inc
+++ b/profiles/commons/modules/contrib/views/modules/aggregator/views_handler_argument_aggregator_iid.inc
@@ -18,9 +18,9 @@ class views_handler_argument_aggregator_iid extends views_handler_argument_numer
     $titles = array();
     $placeholders = implode(', ', array_fill(0, sizeof($this->value), '%d'));
 
-    $result = db_select('aggregator_item')
+    $result = db_select('aggregator_item', 'ai')
       ->condition('iid', $this->value, 'IN')
-      ->fields(array('title'))
+      ->fields('ai', array('title'))
       ->execute();
     foreach ($result as $term) {
       $titles[] = check_plain($term->title);
diff --git a/profiles/commons/modules/contrib/views/modules/taxonomy/views_plugin_argument_validate_taxonomy_term.inc b/profiles/commons/modules/contrib/views/modules/taxonomy/views_plugin_argument_validate_taxonomy_term.inc
index 3a88199..ba1a0e7 100644
--- a/profiles/commons/modules/contrib/views/modules/taxonomy/views_plugin_argument_validate_taxonomy_term.inc
+++ b/profiles/commons/modules/contrib/views/modules/taxonomy/views_plugin_argument_validate_taxonomy_term.inc
@@ -103,7 +103,8 @@ class views_plugin_argument_validate_taxonomy_term extends views_plugin_argument
         if (!$term) {
           return FALSE;
         }
-        $this->argument->validated_title = check_plain($term->name);
+        $term = taxonomy_term_load($term->tid);
+        $this->argument->validated_title = check_plain(entity_label('taxonomy_term', $term));
         return empty($vocabularies) || !empty($vocabularies[$term->machine_name]);
 
       case 'tids':
@@ -151,8 +152,8 @@ class views_plugin_argument_validate_taxonomy_term extends views_plugin_argument
               $validated_cache[$term->tid] = FALSE;
               return FALSE;
             }
-
-            $titles[] = $validated_cache[$term->tid] = check_plain($term->name);
+            $term = taxonomy_term_load($term->tid);
+            $titles[] = $validated_cache[$term->tid] = check_plain(entity_label('taxonomy_term', $term));
             unset($test[$term->tid]);
           }
         }
@@ -185,7 +186,8 @@ class views_plugin_argument_validate_taxonomy_term extends views_plugin_argument
           if ($type == 'convert') {
             $this->argument->argument = $term->tid;
           }
-          $this->argument->validated_title = check_plain($term->name);
+          $term = taxonomy_term_load($term->tid);
+          $this->argument->validated_title = check_plain(entity_label('taxonomy_term', $term));
           return TRUE;
         }
         return FALSE;
diff --git a/profiles/commons/modules/contrib/views/plugins/views_plugin_style_jump_menu.inc b/profiles/commons/modules/contrib/views/plugins/views_plugin_style_jump_menu.inc
index a07567c..16b0aef 100644
--- a/profiles/commons/modules/contrib/views/plugins/views_plugin_style_jump_menu.inc
+++ b/profiles/commons/modules/contrib/views/plugins/views_plugin_style_jump_menu.inc
@@ -19,6 +19,7 @@ class views_plugin_style_jump_menu extends views_plugin_style {
     $options['text'] = array('default' => 'Go', 'translatable' => TRUE);
     $options['label'] = array('default' => '', 'translatable' => TRUE);
     $options['choose'] = array('default' => '- Choose -', 'translatable' => TRUE);
+    $options['inline'] = array('default' => TRUE, 'bool' => TRUE);
     $options['default_value'] = array('default' => FALSE, 'bool' => TRUE);
 
     return $options;
@@ -83,6 +84,12 @@ class views_plugin_style_jump_menu extends views_plugin_style {
       '#description' => t('The text that will appear as the selected option in the jump menu.'),
     );
 
+    $form['inline'] = array(
+      '#type' => 'checkbox',
+      '#title' => t('Set this field to display inline'),
+      '#default_value' => !empty($this->options['inline']),
+    );
+
     $form['default_value'] = array(
       '#type' => 'checkbox',
       '#title' => t('Select the current contextual filter value'),
@@ -145,6 +152,7 @@ class views_plugin_style_jump_menu extends views_plugin_style {
       'button' => $this->options['text'],
       'title' => $this->options['label'],
       'choose' => $this->options['choose'],
+      'inline' => $this->options['inline'],
       'default_value' => $default_value,
     );
 
diff --git a/profiles/commons/modules/contrib/views/plugins/views_plugin_style_summary_jump_menu.inc b/profiles/commons/modules/contrib/views/plugins/views_plugin_style_summary_jump_menu.inc
index d5100df..a16a84b 100644
--- a/profiles/commons/modules/contrib/views/plugins/views_plugin_style_summary_jump_menu.inc
+++ b/profiles/commons/modules/contrib/views/plugins/views_plugin_style_summary_jump_menu.inc
@@ -20,6 +20,7 @@ class views_plugin_style_summary_jump_menu extends views_plugin_style {
     $options['text'] = array('default' => 'Go', 'translatable' => TRUE);
     $options['label'] = array('default' => '', 'translatable' => TRUE);
     $options['choose'] = array('default' => '- Choose -', 'translatable' => TRUE);
+    $options['inline'] = array('default' => TRUE, 'bool' => TRUE);
     $options['default_value'] = array('default' => FALSE, 'bool' => TRUE);
 
     return $options;
@@ -78,6 +79,12 @@ class views_plugin_style_summary_jump_menu extends views_plugin_style {
       '#description' => t('The text that will appear as the selected option in the jump menu.'),
     );
 
+    $form['inline'] = array(
+      '#type' => 'checkbox',
+      '#title' => t('Set this field to display inline'),
+      '#default_value' => !empty($this->options['inline']),
+    );
+
     $form['default_value'] = array(
       '#type' => 'checkbox',
       '#title' => t('Select the current contextual filter value'),
@@ -129,6 +136,7 @@ class views_plugin_style_summary_jump_menu extends views_plugin_style {
       'button' => $this->options['text'],
       'title' => $this->options['label'],
       'choose' => $this->options['choose'],
+      'inline' => $this->options['inline'],
       'default_value' => $default_value,
     );
 
diff --git a/profiles/commons/modules/contrib/views/tests/handlers/views_handler_field_boolean.test b/profiles/commons/modules/contrib/views/tests/handlers/views_handler_field_boolean.test
index 92ec7a5..286b942 100644
--- a/profiles/commons/modules/contrib/views/tests/handlers/views_handler_field_boolean.test
+++ b/profiles/commons/modules/contrib/views/tests/handlers/views_handler_field_boolean.test
@@ -66,11 +66,43 @@ class ViewsHandlerFieldBooleanTest extends ViewsSqlTest {
     $this->assertEqual('✖', $view->field['age']->advanced_render($view->result[0]));
     $this->assertEqual('✔', $view->field['age']->advanced_render($view->result[1]));
 
-    // Set a custom output format.
+    // Set a custom output format programmatically.
     $view->field['age']->formats['test'] = array(t('Test-True'), t('Test-False'));
     $view->field['age']->options['type'] = 'test';
     $this->assertEqual(t('Test-False'), $view->field['age']->advanced_render($view->result[0]));
     $this->assertEqual(t('Test-True'), $view->field['age']->advanced_render($view->result[1]));
 
+    // Set a custom output format through the UI using plain-text inputs.
+    $view->field['age']->options['type'] = 'custom';
+    $values = array(
+      'false' => 'Nay',
+      'true' => 'Yay',
+    );
+    $view->field['age']->options['type_custom_false'] = $values['false'];
+    $view->field['age']->options['type_custom_true'] = $values['true'];
+    $this->assertEqual($values['false'], $view->field['age']->advanced_render($view->result[0]));
+    $this->assertEqual($values['true'], $view->field['age']->advanced_render($view->result[1]));
+
+    // Set a custom output format through the UI using valid HTML inputs.
+    $view->field['age']->options['type'] = 'custom';
+    $values = array(
+      'false' => '<div class="bar">Nay</div>',
+      'true' => '<div class="foo">Yay</div>',
+    );
+    $view->field['age']->options['type_custom_false'] = $values['false'];
+    $view->field['age']->options['type_custom_true'] = $values['true'];
+    $this->assertEqual($values['false'], $view->field['age']->advanced_render($view->result[0]));
+    $this->assertEqual($values['true'], $view->field['age']->advanced_render($view->result[1]));
+
+    // Set a custom output format through the UI using unsafe inputs.
+    $view->field['age']->options['type'] = 'custom';
+    $values = array(
+      'false' => '<script>alert("Nay");</script>',
+      'true' => '<script>alert("Yay");</script>',
+    );
+    $view->field['age']->options['type_custom_false'] = $values['false'];
+    $view->field['age']->options['type_custom_true'] = $values['true'];
+    $this->assertNotEqual($values['false'], $view->field['age']->advanced_render($view->result[0]));
+    $this->assertNotEqual($values['true'], $view->field['age']->advanced_render($view->result[1]));
   }
 }
diff --git a/profiles/commons/modules/contrib/views/tests/views_test.info b/profiles/commons/modules/contrib/views/tests/views_test.info
index 2b98e0a..444ccc9 100644
--- a/profiles/commons/modules/contrib/views/tests/views_test.info
+++ b/profiles/commons/modules/contrib/views/tests/views_test.info
@@ -5,9 +5,9 @@ core = 7.x
 dependencies[] = views
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.x-3.5+42-dev"
+; Information added by drupal.org packaging script on 2013-03-20
+version = "7.x-3.6"
 core = "7.x"
 project = "views"
-datestamp = "1361328740"
+datestamp = "1363810217"
 
diff --git a/profiles/commons/modules/contrib/views/views.info b/profiles/commons/modules/contrib/views/views.info
index 5df22b5..ceb1aee 100644
--- a/profiles/commons/modules/contrib/views/views.info
+++ b/profiles/commons/modules/contrib/views/views.info
@@ -312,9 +312,9 @@ files[] = tests/views_cache.test
 files[] = tests/views_view.test
 files[] = tests/views_ui.test
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.x-3.5+42-dev"
+; Information added by drupal.org packaging script on 2013-03-20
+version = "7.x-3.6"
 core = "7.x"
 project = "views"
-datestamp = "1361328740"
+datestamp = "1363810217"
 
diff --git a/profiles/commons/modules/contrib/views/views_ui.info b/profiles/commons/modules/contrib/views/views_ui.info
index 7a08408..b746aa4 100644
--- a/profiles/commons/modules/contrib/views/views_ui.info
+++ b/profiles/commons/modules/contrib/views/views_ui.info
@@ -7,9 +7,9 @@ dependencies[] = views
 files[] = views_ui.module
 files[] = plugins/views_wizard/views_ui_base_views_wizard.class.php
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.x-3.5+42-dev"
+; Information added by drupal.org packaging script on 2013-03-20
+version = "7.x-3.6"
 core = "7.x"
 project = "views"
-datestamp = "1361328740"
+datestamp = "1363810217"
 
diff --git a/profiles/commons/modules/contrib/views/views_ui.module b/profiles/commons/modules/contrib/views/views_ui.module
index 8182714..5366f77 100644
--- a/profiles/commons/modules/contrib/views/views_ui.module
+++ b/profiles/commons/modules/contrib/views/views_ui.module
@@ -845,7 +845,8 @@ function _views_ui_get_displays_list($view) {
 
 function views_ui_library_alter(&$libraries, $module) {
   if ($module == 'system' && isset($libraries['ui.dialog'])) {
-    if (version_compare($libraries['ui.dialog']['version'], '1.7.2', '>=')) {
+    // Only apply the fix, if we don't have an up to date jQueryUI version.
+    if (version_compare($libraries['ui.dialog']['version'], '1.7.2', '>=') && version_compare($libraries['ui.dialog']['version'], '1.10.0', '<')) {
       $libraries['ui.dialog']['js'][drupal_get_path('module', 'views') . '/js/jquery.ui.dialog.patch.js'] = array();
     }
   }
diff --git a/profiles/commons/modules/contrib/votingapi/views/votingapi.views.inc b/profiles/commons/modules/contrib/votingapi/views/votingapi.views.inc
index 859e018..c9add95 100644
--- a/profiles/commons/modules/contrib/votingapi/views/votingapi.views.inc
+++ b/profiles/commons/modules/contrib/votingapi/views/votingapi.views.inc
@@ -13,7 +13,7 @@
 
 
 /**
- * Implementation of hook_views_handlers().
+ * Implements of hook_views_handlers().
  */
 function votingapi_views_handlers() {
   return array(
@@ -36,7 +36,7 @@ function votingapi_views_handlers() {
 
 
 /**
- * Implementation of hook_views_data().
+ * Implements of hook_views_data().
  */
 function votingapi_views_data() {
   // Basic table information.
@@ -273,30 +273,24 @@ function votingapi_views_data_alter(&$views_data) {
   // Add relationship handlers for both tables, for any base tables currently
   // available to Views.
 
-  $default_relationships = module_invoke_all('votingapi_relationships');
-
-  $default_relationships[] = array(
-    'description' => t('nodes'),
-    'entity_type' => 'node',
-    'base_table' => 'node',
-    'entity_id_column' => 'nid',
-    'pseudo_vote' => 'votingapi_vote',    // for legacy compatability w/RC1.
-    'pseudo_cache' => 'votingapi_cache',  // for legacy compatability w/RC1.
-  );
-  $default_relationships[] = array(
-    'description' => t('comments'),
-    'entity_type' => 'comment',
-    'base_table' => 'comment',
-    'entity_id_column' => 'cid',
-    'pseudo_vote' => 'votingapi_vote',    // for legacy compatability w/RC1.
-    'pseudo_cache' => 'votingapi_cache',  // for legacy compatability w/RC1.
-  );
+  //Get all entity types in the system and register as relationship.
+  $entity_types = entity_get_info();
+  foreach($entity_types as $key => $entity_type) {
+    $default_relationships[] = array(
+      'description' => $entity_type['label'],
+      'entity_type' => $key,
+      'base_table' => $entity_type['base table'],
+      'entity_id_column' => $entity_type['entity keys']['id'],
+      'pseudo_vote' => 'votingapi_vote',    // for legacy compatability w/RC1.
+      'pseudo_cache' => 'votingapi_cache',  // for legacy compatability w/RC1.
+    );
+  }
 
   foreach ($default_relationships as $data) {
-    $pseudo = str_replace(array(' ','-','.'), '_', $data['entity_type'] . '_' . $data['entity_id_column']);
-    $pseudo_vote = empty($data['pseudo_vote']) ? 'vapi_'. $pseudo : $data['pseudo_vote'];
-    $pseudo_cache = empty($data['pseudo_cache']) ? 'vapic_'. $pseudo : $data['pseudo_cache'];
-    
+    $pseudo = str_replace(array(' ', '-', '.'), '_', $data['entity_type'] . '_' . $data['entity_id_column']);
+    $pseudo_vote = empty($data['pseudo_vote']) ? 'vapi_' . $pseudo : $data['pseudo_vote'];
+    $pseudo_cache = empty($data['pseudo_cache']) ? 'vapic_' . $pseudo : $data['pseudo_cache'];
+
     $views_data[$data['base_table']][$pseudo_vote]['relationship'] = array(
       'title' => 'Votes',
       'help' => 'Votes cast by users on ' . $data['description'] . '.',
@@ -333,12 +327,12 @@ function votingapi_views_data_alter(&$views_data) {
 
 
 function _votingapi_views_sql_safe_entity_type($string) {
-  return str_replace(array(' ','-','.'), '_', $string);
+  return str_replace(array(' ', '-', '.'), '_', $string);
 }
 
 
 /**
- * Implementation of hook_views_analyze().
+ * Implements of hook_views_analyze().
  *
  * Warns admins if a VotingAPI relationship has been defined, but filters on the
  * relationship haven't been set.
diff --git a/profiles/commons/modules/contrib/votingapi/views/votingapi.views_default.inc b/profiles/commons/modules/contrib/votingapi/views/votingapi.views_default.inc
index a2bc296..172f87e 100644
--- a/profiles/commons/modules/contrib/votingapi/views/votingapi.views_default.inc
+++ b/profiles/commons/modules/contrib/votingapi/views/votingapi.views_default.inc
@@ -7,7 +7,7 @@
 
 function votingapi_views_default_views() {
   $views = array();
-    
+
   $view = new view;
   $view->name = 'top_content';
   $view->description = 'Top rated content';
diff --git a/profiles/commons/modules/contrib/votingapi/views/votingapi_views_handler_field_value.inc b/profiles/commons/modules/contrib/votingapi/views/votingapi_views_handler_field_value.inc
index 62d1cea..0296ff9 100644
--- a/profiles/commons/modules/contrib/votingapi/views/votingapi_views_handler_field_value.inc
+++ b/profiles/commons/modules/contrib/votingapi/views/votingapi_views_handler_field_value.inc
@@ -45,7 +45,7 @@ class votingapi_views_handler_field_value extends views_handler_field_numeric {
   function click_sort($order) {
     $this->query->add_orderby(NULL, "COALESCE($this->table_alias.$this->field, 0)", $order, $this->table_alias . '_' . $this->field . '_coalesced');
   }
-  
+
   function render($values) {
     $value = $values->{$this->field_alias};
     $function = $this->options['appearance'];
diff --git a/profiles/commons/modules/contrib/votingapi/views/votingapi_views_handler_relationship.inc b/profiles/commons/modules/contrib/votingapi/views/votingapi_views_handler_relationship.inc
index 29af5aa..af189f6 100644
--- a/profiles/commons/modules/contrib/votingapi/views/votingapi_views_handler_relationship.inc
+++ b/profiles/commons/modules/contrib/votingapi/views/votingapi_views_handler_relationship.inc
@@ -53,7 +53,7 @@ class votingapi_views_handler_relationship extends views_handler_relationship {
     $options['value_types'][''] = t('No filtering');
     $options['tags'][''] = t('No filtering');
     $options['functions'][''] = t('No filtering');
-    foreach(votingapi_metadata() as $bin => $bin_data) {
+    foreach (votingapi_metadata() as $bin => $bin_data) {
       foreach ($bin_data as $key => $data) {
         $options[$bin][$key] = $data['name'];
       }
@@ -131,7 +131,7 @@ class votingapi_views_handler_relationship extends views_handler_relationship {
             'value' => $value,
             'numeric' => FALSE
           );
-          $alias .= '_'. str_replace(array(' ','-','.'), '_', $value);
+          $alias .= '_' . str_replace(array(' ', '-', '.'), '_', $value);
         }
       }
     }
diff --git a/profiles/commons/modules/contrib/votingapi/votingapi.admin.inc b/profiles/commons/modules/contrib/votingapi/votingapi.admin.inc
index 5aa6d41..7cae7d7 100644
--- a/profiles/commons/modules/contrib/votingapi/votingapi.admin.inc
+++ b/profiles/commons/modules/contrib/votingapi/votingapi.admin.inc
@@ -19,6 +19,14 @@ function votingapi_settings_form($form_state) {
     '#options' => $period
   );
 
+  $form['votingapi_user_window'] = array(
+    '#type' => 'select',
+    '#title' => t('Registered user vote rollover'),
+    '#description' => t('The amount of time that must pass before two registered user votes from the same user ID are considered unique. Setting this to \'never\' will eliminate most double-voting for registered users.'),
+    '#default_value' => variable_get('votingapi_user_window', -1),
+    '#options' => $period
+  );
+
   $form['votingapi_calculation_schedule'] = array(
     '#type' => 'radios',
     '#title' => t('Vote tallying'),
diff --git a/profiles/commons/modules/contrib/votingapi/votingapi.drush.inc b/profiles/commons/modules/contrib/votingapi/votingapi.drush.inc
index 85a6066..800fa98 100644
--- a/profiles/commons/modules/contrib/votingapi/votingapi.drush.inc
+++ b/profiles/commons/modules/contrib/votingapi/votingapi.drush.inc
@@ -7,7 +7,7 @@
  */
 
 /**
- * Implementation of hook_drush_help().
+ * Implements of hook_drush_help().
  */
 function votingapi_drush_help($section) {
   switch ($section) {
@@ -21,7 +21,7 @@ function votingapi_drush_help($section) {
 }
 
 /**
- * Implementation of hook_drush_command().
+ * Implements of hook_drush_command().
  */
 function votingapi_drush_command() {
   $items['generate-votes'] = array(
@@ -80,7 +80,7 @@ function votingapi_generate_votes($entity_type = 'node', $vote_type = 'percent',
   module_load_include('inc', 'devel_generate');
   $options += array(
     'age' => 36000,
-    'types' => $roles = drush_get_option('types') ? explode(',', drush_get_option('types')) : array(),
+    'types' => array(),
     'kill' => FALSE,
   );
 
@@ -100,7 +100,7 @@ function votingapi_generate_votes($entity_type = 'node', $vote_type = 'percent',
 
   $query = db_select($entity_type, 'e')->fields('e', array($entity_id_column));
   if ($entity_type == 'node' && !empty($options['types'])) {
-    $query->condition('e.type', $node_types, 'IN');
+    $query->condition('e.type', $options['types'], 'IN');
   }
   $results = $query->execute()->fetchAll(PDO::FETCH_ASSOC);
 
@@ -126,7 +126,7 @@ function _votingapi_cast_votes($etype, $eid, $timestamp = 0, $uids = array(), $s
           'entity_type' => $etype,
           'entity_id' => $eid,
           'value_type' => 'percent',
-          'timestamp' => REQUEST_TIME - rand(0, REQUEST_TIME - $timestamp),
+          'timestamp' => REQUEST_TIME - mt_rand(0, $timestamp),
           'value' => mt_rand(1, 5) * 20,
           'tag' => $tags[mt_rand(0, 30)],
         );
@@ -138,7 +138,7 @@ function _votingapi_cast_votes($etype, $eid, $timestamp = 0, $uids = array(), $s
             'entity_type' => $etype,
             'entity_id' => $eid,
             'value_type' => 'points',
-            'timestamp' => REQUEST_TIME - rand(0, REQUEST_TIME - $timestamp),
+            'timestamp' => REQUEST_TIME - mt_rand(0, $timestamp),
             'value' => rand(0, 1) ? 1 : -1,
           );
         }
diff --git a/profiles/commons/modules/contrib/votingapi/votingapi.info b/profiles/commons/modules/contrib/votingapi/votingapi.info
index 7cbf10a..b375f56 100644
--- a/profiles/commons/modules/contrib/votingapi/votingapi.info
+++ b/profiles/commons/modules/contrib/votingapi/votingapi.info
@@ -4,22 +4,15 @@ package = Voting
 core = 7.x
 configure = admin/config/search/votingapi
 
-files[] = votingapi.module
-files[] = votingapi.admin.inc
-files[] = votingapi.drush.inc
-files[] = votingapi.install
-
 files[] = tests/votingapi.test
 
-files[] = views/votingapi.views.inc
-files[] = views/votingapi.views_default.inc
 files[] = views/votingapi_views_handler_field_value.inc
 files[] = views/votingapi_views_handler_sort_nullable.inc
 files[] = views/votingapi_views_handler_relationship.inc
 
-; Information added by drupal.org packaging script on 2012-11-07
-version = "7.x-2.10"
+; Information added by drupal.org packaging script on 2013-03-22
+version = "7.x-2.11"
 core = "7.x"
 project = "votingapi"
-datestamp = "1352273826"
+datestamp = "1363989617"
 
diff --git a/profiles/commons/modules/contrib/votingapi/votingapi.install b/profiles/commons/modules/contrib/votingapi/votingapi.install
index 7a01065..9407e2a 100644
--- a/profiles/commons/modules/contrib/votingapi/votingapi.install
+++ b/profiles/commons/modules/contrib/votingapi/votingapi.install
@@ -99,11 +99,42 @@ function votingapi_update_7202() {
  * Reduces confusion about 'content types' versus 'node types'.
  */
 function votingapi_update_7201() {
-  db_change_field('votingapi_vote', 'content_type', 'entity_type', array('type' => 'varchar', 'length' => 64));
-  db_change_field('votingapi_vote', 'content_id', 'entity_id', array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0));
+  $index['votingapi_vote'] = array(
+    'content_uid'       => array('entity_type', 'entity_id', 'uid'),
+    'content_uid_2'     => array('entity_type', 'uid'),
+    'content_source'    => array('entity_type', 'entity_id', 'vote_source'),
+    'content_value_tag' => array('entity_type', 'entity_id', 'value_type', 'tag'),
+  );
+  $index['votingapi_cache'] = array(
+    'content'                => array('entity_type', 'entity_id'),
+    'content_function'       => array('entity_type', 'entity_id', 'function'),
+    'content_tag_func'       => array('entity_type', 'entity_id', 'tag', 'function'),
+    'content_vtype_tag'      => array('entity_type', 'entity_id', 'value_type', 'tag'),
+    'content_vtype_tag_func' => array('entity_type', 'entity_id', 'value_type', 'tag', 'function'),
+  );
+  // Remove all existing indexes.
+  foreach ($index as $table => $data) {
+    foreach ($data as $index_name => $columns) {
+      if (db_index_exists($table, $index_name)) {
+        db_drop_index($table, $index_name);
+      }
+    }
+  }
 
-  db_change_field('votingapi_cache', 'content_type', 'entity_type', array('type' => 'varchar', 'length' => 64));
-  db_change_field('votingapi_cache', 'content_id', 'entity_id', array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0));
+  // Change fields
+  foreach (array('votingapi_vote', 'votingapi_cache') as $table) {
+    db_change_field($table, 'content_type', 'entity_type', array('type' => 'varchar', 'length' => 64, 'not null' => TRUE, 'default' => 'node'));
+    db_change_field($table, 'content_id', 'entity_id', array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0));
+    db_change_field($table, 'value_type', 'value_type', array('type' => 'varchar', 'length' => 64, 'not null' => TRUE, 'default' => 'percent'));
+    db_change_field($table, 'tag', 'tag', array('type' => 'varchar', 'length' => 64, 'not null' => TRUE, 'default' => 'vote'));
+  }
+
+  // Recreate the indexes.
+  foreach ($index as $table => $data) {
+    foreach ($data as $index_name => $columns) {
+      db_add_index($table, $index_name, $columns);
+    }
+  }
 
   return t('Updated VotingAPI table structure.');
 }
@@ -117,6 +148,7 @@ function votingapi_uninstall() {
   $variables = array(
     'votingapi_last_cron',
     'votingapi_anonymous_window',
+    'votingapi_user_window',
     'votingapi_calculation_schedule',
   );
   foreach ($variables as $variable) {
diff --git a/profiles/commons/modules/contrib/votingapi/votingapi.module b/profiles/commons/modules/contrib/votingapi/votingapi.module
index 40204ff..e0c5125 100644
--- a/profiles/commons/modules/contrib/votingapi/votingapi.module
+++ b/profiles/commons/modules/contrib/votingapi/votingapi.module
@@ -11,7 +11,7 @@
  */
 
 /**
- * Implementation of hook_menu().
+ * Implements of hook_menu().
  */
 function votingapi_menu() {
   $items = array();
@@ -52,7 +52,7 @@ function votingapi_permission() {
 }
 
 /**
- * Implementation of hook_views_api().
+ * Implements of hook_views_api().
  */
 function votingapi_views_api() {
   return array(
@@ -62,7 +62,7 @@ function votingapi_views_api() {
 }
 
 /**
- * Implementation of hook_cron().
+ * Implements of hook_cron().
  *
  * Allows db-intensive recalculations to be deferred until cron-time.
  */
@@ -136,8 +136,7 @@ function votingapi_set_votes(&$votes, $criteria = NULL) {
     // If the calling function didn't explicitly set criteria for vote deletion,
     // build up the delete queries here.
     foreach ($votes as $vote) {
-      $tmp = votingapi_current_user_identifier();
-      $tmp += $vote;
+      $tmp = $vote + votingapi_current_user_identifier();
       if (isset($tmp['value'])) {
         unset($tmp['value']);
       }
@@ -190,21 +189,21 @@ function votingapi_current_user_identifier() {
 }
 
 /**
- * Implementation of hook_votingapi_storage_add_vote().
+ * Implements of hook_votingapi_storage_add_vote().
  */
 function votingapi_votingapi_storage_add_vote(&$vote) {
   drupal_write_record('votingapi_vote', $vote);
 }
 
 /**
- * Implementation of hook_votingapi_storage_delete_votes().
+ * Implements of hook_votingapi_storage_delete_votes().
  */
 function votingapi_votingapi_storage_delete_votes($votes, $vids) {
   db_delete('votingapi_vote')->condition('vote_id', $vids, 'IN')->execute();
 }
 
 /**
- * Implementation of hook_votingapi_storage_select_votes().
+ * Implements of hook_votingapi_storage_select_votes().
  */
 function votingapi_votingapi_storage_select_votes($criteria, $limit) {
   $query = db_select('votingapi_vote')->fields('votingapi_vote');
@@ -349,9 +348,16 @@ function votingapi_delete_results($vote_results = array()) {
  *   An array of votes matching the criteria.
  */
 function votingapi_select_votes($criteria = array(), $limit = 0) {
-  $anon_window = variable_get('votingapi_anonymous_window', 86400);
-  if (!empty($criteria['vote_source']) && $anon_window >= 0) {
-    $criteria['timestamp'] = REQUEST_TIME - $anon_window;
+  $window = -1;
+  if (empty($criteria['uid']) || $criteria['uid'] == 0) {
+    if (!empty($criteria['vote_source'])) {
+      $window = variable_get('votingapi_anonymous_window', 86400);
+    }
+  } else {
+    $window = variable_get('votingapi_user_window', -1);
+  }
+  if ($window >= 0) {
+    $criteria['timestamp'] = REQUEST_TIME - $window;
   }
   $function = variable_get('votingapi_storage_module', 'votingapi') . '_votingapi_storage_select_votes';
   return $function($criteria, $limit);
@@ -552,7 +558,7 @@ function votingapi_votingapi_storage_standard_results($entity_type, $entity_id)
  */
 function votingapi_select_single_vote_value($criteria = array()) {
   if ($results = votingapi_select_votes($criteria, 1)) {
-     return $results[0]['value'];
+    return $results[0]['value'];
   }
 }
 
@@ -561,7 +567,7 @@ function votingapi_select_single_vote_value($criteria = array()) {
  */
 function votingapi_select_single_result_value($criteria = array()) {
   if ($results = votingapi_select_results($criteria, 1)) {
-     return $results[0]['value'];
+    return $results[0]['value'];
   }
 }
 
diff --git a/profiles/commons/themes/contrib/adaptivetheme/at_admin/adaptivetheme_admin.info b/profiles/commons/themes/contrib/adaptivetheme/at_admin/adaptivetheme_admin.info
old mode 100644
new mode 100755
index 8026282..652a2a4
--- a/profiles/commons/themes/contrib/adaptivetheme/at_admin/adaptivetheme_admin.info
+++ b/profiles/commons/themes/contrib/adaptivetheme/at_admin/adaptivetheme_admin.info
@@ -348,9 +348,10 @@
   ; Custom CSS
   settings[custom_css] = ''
 
-; Information added by drupal.org packaging script on 2013-02-24
+
+; Information added by drush on 2013-04-04
 version = "7.x-3.1+55-dev"
 core = "7.x"
 project = "adaptivetheme"
-datestamp = "1361666049"
+datestamp = "1365041546"
 
diff --git a/profiles/commons/themes/contrib/adaptivetheme/at_core/adaptivetheme.info b/profiles/commons/themes/contrib/adaptivetheme/at_core/adaptivetheme.info
old mode 100644
new mode 100755
index 3ac85b0..e10321d
--- a/profiles/commons/themes/contrib/adaptivetheme/at_core/adaptivetheme.info
+++ b/profiles/commons/themes/contrib/adaptivetheme/at_core/adaptivetheme.info
@@ -374,9 +374,10 @@
 ;----------// Custom CSS
   settings[custom_css] = ''
 
-; Information added by drupal.org packaging script on 2013-02-24
+
+; Information added by drush on 2013-04-04
 version = "7.x-3.1+55-dev"
 core = "7.x"
 project = "adaptivetheme"
-datestamp = "1361666049"
+datestamp = "1365041546"
 
diff --git a/profiles/commons/themes/contrib/adaptivetheme/at_subtheme/adaptivetheme_subtheme.info b/profiles/commons/themes/contrib/adaptivetheme/at_subtheme/adaptivetheme_subtheme.info
old mode 100644
new mode 100755
index 5394959..6dc31e6
--- a/profiles/commons/themes/contrib/adaptivetheme/at_subtheme/adaptivetheme_subtheme.info
+++ b/profiles/commons/themes/contrib/adaptivetheme/at_subtheme/adaptivetheme_subtheme.info
@@ -453,9 +453,10 @@
   ; Custom CSS
   settings[custom_css] = ''
 
-; Information added by drupal.org packaging script on 2013-02-24
+
+; Information added by drush on 2013-04-04
 version = "7.x-3.1+55-dev"
 core = "7.x"
 project = "adaptivetheme"
-datestamp = "1361666049"
+datestamp = "1365041546"
 
diff --git a/profiles/commons/themes/contrib/commons_origins/.gitignore b/profiles/commons/themes/contrib/commons_origins/.gitignore
index b4b2957..6173eab 100644
--- a/profiles/commons/themes/contrib/commons_origins/.gitignore
+++ b/profiles/commons/themes/contrib/commons_origins/.gitignore
@@ -1 +1,2 @@
-/.sass-cache/
\ No newline at end of file
+/.sass-cache/
+.DS_Store
diff --git a/profiles/commons/themes/contrib/commons_origins/commons_origins.info b/profiles/commons/themes/contrib/commons_origins/commons_origins.info
index 4f7f72b..31e19a7 100644
--- a/profiles/commons/themes/contrib/commons_origins/commons_origins.info
+++ b/profiles/commons/themes/contrib/commons_origins/commons_origins.info
@@ -421,9 +421,9 @@
   ; Custom CSS
   settings[custom_css] = ''
 
-; Information added by drupal.org packaging script on 2013-02-25
-version = "7.x-3.0"
+; Information added by drupal.org packaging script on 2013-04-04
+version = "7.x-3.2"
 core = "7.x"
 project = "commons_origins"
-datestamp = "1361820335"
+datestamp = "1365037516"
 
diff --git a/profiles/commons/themes/contrib/commons_origins/css/global.base.css b/profiles/commons/themes/contrib/commons_origins/css/global.base.css
index f766985..2aaae7d 100644
--- a/profiles/commons/themes/contrib/commons_origins/css/global.base.css
+++ b/profiles/commons/themes/contrib/commons_origins/css/global.base.css
@@ -79,7 +79,7 @@ input[type="button"] {
   -webkit-background-clip: padding;
   -moz-background-clip: padding;
   background-clip: padding-box;
-  background: #dddddd url('../images/button.png?1361802894') repeat-x;
+  background: #dddddd url('../images/button.png?1363371593') repeat-x;
   background-image: -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #ffffff), color-stop(100%, #dddddd));
   background-image: -webkit-linear-gradient(#ffffff, #dddddd);
   background-image: -moz-linear-gradient(#ffffff, #dddddd);
@@ -313,7 +313,7 @@ optgroup::-moz-focus-inner {
 .ie6_button,
 * html button,
 * html a.button {
-  background: #dddddd url('../images/button.png?1361802894') repeat-x;
+  background: #dddddd url('../images/button.png?1363371593') repeat-x;
   border: 1px solid;
   border-color: #dddddd #bbbbbb #999999;
   cursor: pointer;
@@ -366,7 +366,7 @@ optgroup::-moz-focus-inner {
 .selectBox-dropdown {
   min-width: 150px;
   position: relative;
-  border: solid 1px #bbbbbb;
+  border: solid 1px #BBB;
   line-height: 1.5;
   text-decoration: none;
   text-align: left;
@@ -390,13 +390,13 @@ optgroup::-moz-focus-inner {
   background: transparent;
   border: none;
   box-shadow: none;
-  min-width: auto;
+  min-width: inherit;
   color: white;
   line-height: 1;
   margin-top: 5px;
   margin-left: 9px;
 }
-#views-exposed-form-commons-homepage-content-panel-pane-1 .selectBox-dropdown, #quicktabs-commons_bw .selectBox-dropdown {
+#views-exposed-form-commons-homepage-content-panel-pane-1 .selectBox-dropdown, #quicktabs-commons_bw .selectBox-dropdown, .views-exposed-widgets .selectBox-dropdown {
   background: #e6e6e6;
   border: none;
   box-shadow: none;
@@ -443,7 +443,7 @@ optgroup::-moz-focus-inner {
   top: 1px;
   margin-left: 5px;
 }
-#views-exposed-form-commons-homepage-content-panel-pane-1 .selectBox-dropdown .selectBox-label, #quicktabs-commons_bw .selectBox-dropdown .selectBox-label {
+#views-exposed-form-commons-homepage-content-panel-pane-1 .selectBox-dropdown .selectBox-label, #quicktabs-commons_bw .selectBox-dropdown .selectBox-label, .views-exposed-widgets .selectBox-dropdown .selectBox-label {
   width: auto !important;
   padding: 2px 4px;
 }
@@ -454,13 +454,13 @@ optgroup::-moz-focus-inner {
   right: 0;
   width: 23px;
   height: 100%;
-  background: url('../images/jquery.selectBox-arrow.gif?1361802894') 50% center no-repeat;
-  border-left: solid 1px #bbbbbb;
+  background: url('../images/jquery.selectBox-arrow.gif?1363371593') 50% center no-repeat;
+  border-left: solid 1px #BBB;
 }
 .block-search .selectBox-dropdown .selectBox-arrow {
   display: none;
 }
-#views-exposed-form-commons-homepage-content-panel-pane-1 .selectBox-dropdown .selectBox-arrow, #quicktabs-commons_bw .selectBox-dropdown .selectBox-arrow {
+#views-exposed-form-commons-homepage-content-panel-pane-1 .selectBox-dropdown .selectBox-arrow, #quicktabs-commons_bw .selectBox-dropdown .selectBox-arrow, .views-exposed-widgets .selectBox-dropdown .selectBox-arrow {
   display: none;
 }
 
@@ -470,7 +470,7 @@ optgroup::-moz-focus-inner {
   z-index: 99999;
   max-height: 200px;
   min-height: 1em;
-  border: solid 1px #bbbbbb;
+  border: solid 1px #BBB;
   /* should be the same border width as .selectBox-dropdown */
   background: #FFF;
   -moz-box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);
@@ -484,7 +484,7 @@ optgroup::-moz-focus-inner {
 .selectBox-inline {
   min-width: 150px;
   outline: none;
-  border: solid 1px #bbbbbb;
+  border: solid 1px #BBB;
   background: #FFF;
   display: inline-block;
   -webkit-border-radius: 4px;
@@ -499,8 +499,8 @@ optgroup::-moz-focus-inner {
 
 /* Options */
 .selectBox-options,
-.selectBox-options LI,
-.selectBox-options LI A {
+.selectBox-options li,
+.selectBox-options li a {
   list-style: none;
   display: block;
   cursor: default;
@@ -508,24 +508,24 @@ optgroup::-moz-focus-inner {
   margin: 0;
 }
 
-.selectBox-options LI A {
+.selectBox-options li a {
   line-height: 1.5;
-  padding: 0 0.5em;
+  padding: 0 .5em;
   white-space: nowrap;
   overflow: hidden;
   background: 6px center no-repeat;
 }
 
-.selectBox-options LI.selectBox-hover A {
+.selectBox-options li.selectBox-hover a {
   background-color: #EEE;
 }
 
-.selectBox-options LI.selectBox-disabled A {
+.selectBox-options li.selectBox-disabled a {
   color: #888;
   background-color: transparent;
 }
 
-.selectBox-options LI.selectBox-selected A {
+.selectBox-options li.selectBox-selected a {
   background-color: #C8DEF4;
 }
 
@@ -534,13 +534,13 @@ optgroup::-moz-focus-inner {
   background: #EEE;
   font-weight: bold;
   line-height: 1.5;
-  padding: 0 0.3em;
+  padding: 0 .3em;
   white-space: nowrap;
 }
 
 /* Disabled state */
 .selectBox.selectBox-disabled {
-  color: #888888 !important;
+  color: #888 !important;
 }
 
 .selectBox-dropdown.selectBox-disabled .selectBox-arrow {
@@ -550,10 +550,10 @@ optgroup::-moz-focus-inner {
 }
 
 .selectBox-inline.selectBox-disabled {
-  color: #888888 !important;
+  color: #888 !important;
 }
 
-.selectBox-inline.selectBox-disabled .selectBox-options A {
+.selectBox-inline.selectBox-disabled .selectBox-options a {
   background-color: transparent !important;
 }
 
@@ -631,8 +631,7 @@ audio:not([controls]) {
 html {
   font-size: 100%;
   -webkit-text-size-adjust: 100%;
-  line-height: 1.5;
-  height: 100%;
+  line-height: 1.7;
   overflow-y: scroll;
 }
 
@@ -768,7 +767,7 @@ code,
 kbd,
 samp {
   font-family: monospace, serif;
-  _font-family: "courier new", monospace;
+  _font-family: 'courier new', monospace;
   font-size: 1em;
 }
 
@@ -1028,37 +1027,6 @@ table {
 }
 
 /* =============================================================================
-    Gutters
-   ========================================================================== */
-/*
- * If gutters are set in theme settings they will override these values,
- * see Extensions > Modify Output > Design
- * $gutter-width is set in _base.scss
- */
-#main-content,
-.block-inner,
-.pane-inner,
-.menu-wrapper,
-.branding-elements,
-.breadcrumb-wrapper,
-.attribution,
-.at-panel .rounded-corner,
-div.messages {
-  margin-left: 10px;
-  margin-right: 10px;
-}
-
-/*
- * Panel pages need negative margin equal to the gutter width applied to #content,
- * this is taken care of in theme settings as per above for normal gutters
- */
-#content .panel-display,
-#content .panel-flexible {
-  margin-left: -10px;
-  margin-right: -10px;
-}
-
-/* =============================================================================
     Flexible Media and Cross browser improvements
    ========================================================================== */
 /*
diff --git a/profiles/commons/themes/contrib/commons_origins/css/global.styles.css b/profiles/commons/themes/contrib/commons_origins/css/global.styles.css
index 19eddf6..21c53a3 100644
--- a/profiles/commons/themes/contrib/commons_origins/css/global.styles.css
+++ b/profiles/commons/themes/contrib/commons_origins/css/global.styles.css
@@ -12,17 +12,12 @@
   box-shadow: #247aac 1px 0px 0px;
 }
 
-.page-user-login #columns, .page-node-add .field-type-taxonomy-term-reference-form, .page-node-add #edit-additional-settings, .page-user .pane-views-panes, .commons-pod-comments, .front.not-logged-in .pane-views-panes, .front.not-logged-in
+.commons-pod, .page-user .pane-views-panes, .commons-pod-comments, .front.not-logged-in .pane-views-panes, .front.not-logged-in
 .pane-views, .front.not-logged-in
-body.page-node .pane-views-panes, .pane-commons-events-user-upcoming-events-panel-pane-2,
-.pane-commons-events-user-upcoming-events-panel-pane-3,
-.pane-commons-events-upcoming-panel-pane-1,
-.pane-activity-group-panel-pane-1,
-.pane-commons-radioactivity-groups-active-in-group-panel-pane-1,
-.pane-commons-contributors-group-panel-pane-2,
-.pane-commons-wikis-contributor-list-commons-wikis-contributor-pane,
-.nodes, .page-events .view-commons-events-upcoming .view-content, .pane-commons-radioactivity-groups-most-active-panel-pane-1, .pane-commons-activity-streams-activity-panel-pane-1, .pane-commons-featured-panel-pane-1, .pane-commons-groups-contributors-panel-pane-1, .pane-commons-bw-group, .view-display-id-commons_events_upcoming_page .views-row, .view-commons-groups-directory > .view-content > .views-row, .view-commons-groups-directory > .view-filters, .view-commons-homepage-content .node-teaser.node-group > .view-content > .views-row, .view-commons-homepage-content .node-teaser.node-group > .view-filters, body.front.logged-in .view-commons-homepage-content > .view-content, body.front.logged-in #views-exposed-form-commons-homepage-content-panel-pane-1 .views-exposed-widgets.widgets-active, .page-events .search-results-wrapper .search-result, .page-events .region-three-25-50-25-first, .page-events .region-three-25-50-25-third .pane-views-panes, .page-search .region-two-33-66-first, .page-search .pane-search-form,
-.page-search .search-results {
+body.page-node .pane-views-panes, .page-events .view-commons-events-upcoming .view-content, .pane-commons-bw-group, .view-display-id-commons_events_upcoming_page .views-row, .view-commons-groups-directory > .view-content > .views-row,
+.view-commons-groups-directory > .view-filters,
+.view-commons-homepage-content .node-teaser.node-group > .view-content > .views-row,
+.view-commons-homepage-content .node-teaser.node-group > .view-filters, body.front.logged-in .view-commons-homepage-content > .view-content, body.front.logged-in #views-exposed-form-commons-homepage-content-panel-pane-1 .views-exposed-widgets.widgets-active, .page-events .region-three-25-50-25-third .pane-views-panes, .pane-search-result .block-content .search-results, .page-search-user .user-results {
   background-color: white;
   -webkit-border-radius: 3px;
   -moz-border-radius: 3px;
@@ -32,43 +27,32 @@ body.page-node .pane-views-panes, .pane-commons-events-user-upcoming-events-pane
   -webkit-box-shadow: #858585 1px 1px 4px;
   -moz-box-shadow: #858585 1px 1px 4px;
   box-shadow: #858585 1px 1px 4px;
-  margin-right: 20px;
-  margin-bottom: 20px;
-}
-.lt480 .page-user-login #columns, .page-user-login .lt480 #columns, .lt480 .page-node-add .field-type-taxonomy-term-reference-form, .page-node-add .lt480 .field-type-taxonomy-term-reference-form, .lt480 .page-node-add #edit-additional-settings, .page-node-add .lt480 #edit-additional-settings, .lt480 .page-user .pane-views-panes, .page-user .lt480 .pane-views-panes, .lt480 .commons-pod-comments, .lt480 .front.not-logged-in .pane-views-panes, .front.not-logged-in .lt480 .pane-views-panes, .lt480 .front.not-logged-in .pane-views, .front.not-logged-in .lt480 .pane-views, .lt480 .front.not-logged-in
-body.page-node .pane-views-panes, .front.not-logged-in
-body.page-node .lt480 .pane-views-panes, .lt480 .pane-commons-events-user-upcoming-events-panel-pane-2,
-.lt480 .pane-commons-events-user-upcoming-events-panel-pane-3,
-.lt480 .pane-commons-events-upcoming-panel-pane-1,
-.lt480 .pane-activity-group-panel-pane-1,
-.lt480 .pane-commons-radioactivity-groups-active-in-group-panel-pane-1,
-.lt480 .pane-commons-contributors-group-panel-pane-2,
-.lt480 .pane-commons-wikis-contributor-list-commons-wikis-contributor-pane,
-.lt480 .nodes, .lt480 .page-events .view-commons-events-upcoming .view-content, .page-events .view-commons-events-upcoming .lt480 .view-content, .lt480 .pane-commons-radioactivity-groups-most-active-panel-pane-1, .lt480 .pane-commons-activity-streams-activity-panel-pane-1, .lt480 .pane-commons-featured-panel-pane-1, .lt480 .pane-commons-groups-contributors-panel-pane-1, .lt480 .pane-commons-bw-group, .lt480 .view-display-id-commons_events_upcoming_page .views-row, .view-display-id-commons_events_upcoming_page .lt480 .views-row, .lt480 .view-commons-groups-directory > .view-content > .views-row, .lt480 .view-commons-groups-directory > .view-filters, .lt480 .view-commons-homepage-content .node-teaser.node-group > .view-content > .views-row, .view-commons-homepage-content .lt480 .node-teaser.node-group > .view-content > .views-row, .lt480 .view-commons-homepage-content .node-teaser.node-group > .view-filters, .view-commons-homepage-content .lt480 .node-teaser.node-group > .view-filters, .lt480 body.front.logged-in .view-commons-homepage-content > .view-content, body.front.logged-in .lt480 .view-commons-homepage-content > .view-content, .lt480 body.front.logged-in #views-exposed-form-commons-homepage-content-panel-pane-1 .views-exposed-widgets.widgets-active, body.front.logged-in #views-exposed-form-commons-homepage-content-panel-pane-1 .lt480 .views-exposed-widgets.widgets-active, .lt480 .page-events .search-results-wrapper .search-result, .page-events .search-results-wrapper .lt480 .search-result, .lt480 .page-events .region-three-25-50-25-first, .page-events .lt480 .region-three-25-50-25-first, .lt480 .page-events .region-three-25-50-25-third .pane-views-panes, .page-events .region-three-25-50-25-third .lt480 .pane-views-panes, .lt480 .page-search .region-two-33-66-first, .page-search .lt480 .region-two-33-66-first, .lt480 .page-search .pane-search-form, .page-search .lt480 .pane-search-form,
-.lt480 .page-search .search-results,
-.page-search .lt480 .search-results {
-  margin-right: 0;
+  margin: 10px 0;
 }
 
-.page-user-login #columns, .page-node-add .field-type-taxonomy-term-reference-form > div, .page-node-add #edit-additional-settings > div, .page-user .pane-views-panes .block-inner, .commons-pod-comments .comment-wrapper, .front.not-logged-in .pane-views-panes > div, .front.not-logged-in
+.commons-pod, .page-user .pane-views-panes .block-inner, .commons-pod-comments .comment-wrapper, .front.not-logged-in .pane-views-panes > div, .front.not-logged-in
 .pane-views > div, .front.not-logged-in
-body.page-node .pane-views-panes > div, .pane-commons-events-user-upcoming-events-panel-pane-2,
-.pane-commons-events-user-upcoming-events-panel-pane-3,
-.pane-commons-events-upcoming-panel-pane-1,
-.pane-activity-group-panel-pane-1,
-.pane-commons-radioactivity-groups-active-in-group-panel-pane-1,
-.pane-commons-contributors-group-panel-pane-2,
-.pane-commons-wikis-contributor-list-commons-wikis-contributor-pane,
-.nodes, .page-events .view-commons-events-upcoming .view-content, .pane-commons-radioactivity-groups-most-active-panel-pane-1 > .block-inner, .pane-commons-activity-streams-activity-panel-pane-1 > .block-inner, .pane-commons-featured-panel-pane-1 > .block-inner, .pane-commons-groups-contributors-panel-pane-1 > .block-inner, .pane-commons-bw-group > .block-inner, .view-display-id-commons_events_upcoming_page .views-row article, .view-commons-groups-directory > .view-content > .views-row > .node-teaser, .view-commons-groups-directory > .view-content > .views-row form, .view-commons-groups-directory > .view-filters > .node-teaser, .view-commons-groups-directory > .view-filters form, .view-commons-homepage-content .node-teaser.node-group > .view-content > .views-row > .node-teaser, .view-commons-homepage-content .node-teaser.node-group > .view-content > .views-row form, .view-commons-homepage-content .node-teaser.node-group > .view-filters > .node-teaser, .view-commons-homepage-content .node-teaser.node-group > .view-filters form, body.front.logged-in #views-exposed-form-commons-homepage-content-panel-pane-1 .views-exposed-widgets.widgets-active, .page-events .search-results-wrapper .search-result .search-result-wrapper, .page-events .region-three-25-50-25-first .region-inner, .page-events .region-three-25-50-25-third .pane-views-panes .block-inner, .page-search .region-two-33-66-first .region-inner, .page-search .pane-search-form,
-.page-search .search-results {
-  padding: 10px 10px 20px 10px;
+body.page-node .pane-views-panes > div, .page-events .view-commons-events-upcoming .view-content, .pane-commons-bw-group > .block-inner, .view-display-id-commons_events_upcoming_page .views-row article, .view-commons-groups-directory > .view-content > .views-row > .node-teaser,
+.view-commons-groups-directory > .view-content > .views-row form,
+.view-commons-groups-directory > .view-filters > .node-teaser,
+.view-commons-groups-directory > .view-filters form,
+.view-commons-homepage-content .node-teaser.node-group > .view-content > .views-row > .node-teaser,
+.view-commons-homepage-content .node-teaser.node-group > .view-content > .views-row form,
+.view-commons-homepage-content .node-teaser.node-group > .view-filters > .node-teaser,
+.view-commons-homepage-content .node-teaser.node-group > .view-filters form, body.front.logged-in #views-exposed-form-commons-homepage-content-panel-pane-1 .views-exposed-widgets.widgets-active, .page-events .region-three-25-50-25-third .pane-views-panes .block-inner, .pane-search-result .block-content .search-results, .page-search-user .user-results {
+  padding: 10px;
 }
 
 .node.node-event > .node-content, .node.node-poll > .node-content, .node.node-question > .node-content, .node-teaser.node-promoted.node-event > .node-content, .node-teaser.node-promoted.node-poll > .node-content, .node-teaser.node-promoted.node-question > .node-content {
   margin-right: 90px;
 }
+@media only screen and (max-width: 768px) {
+  .node.node-event > .node-content, .node.node-poll > .node-content, .node.node-question > .node-content, .node-teaser.node-promoted.node-event > .node-content, .node-teaser.node-promoted.node-poll > .node-content, .node-teaser.node-promoted.node-question > .node-content {
+    margin-right: 0;
+  }
+}
 
-.commons-sign-up, .pane-commons-groups-commons-groups-create-group a, #quicktabs-container-commons_bw .quicktabs-tabpage .attachment-before > a, #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add a, #content-column .view-content input[type="submit"], form.commons-events-form-float input, form.commons-events-form-float input:hover, .pane-commons-events-commons-events-create-event-link a {
+.button-alert, .commons-sign-up, .pane-commons-groups-commons-groups-create-group a, #quicktabs-container-commons_bw .quicktabs-tabpage .attachment-before > a, #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add a, #content-column .view-content input[type="submit"], form.commons-events-form-float input, form.commons-events-form-float input:hover, .pane-commons-events-commons-events-create-event-link a {
   box-shadow: 1px 1px 1px #abe0a2 inset, 0 3px 3px rgba(0, 0, 0, 0.09);
   padding: 0 10px;
   background-color: #6eca5d;
@@ -85,12 +69,14 @@ body.page-node .pane-views-panes > div, .pane-commons-events-user-upcoming-event
   -ms-border-radius: 3px;
   -o-border-radius: 3px;
   border-radius: 3px;
-  color: white;
   text-align: center;
   display: inline-block;
   text-shadow: 1px 1px rgba(0, 0, 0, 0.49);
 }
-.commons-sign-up:hover, .pane-commons-groups-commons-groups-create-group a:hover, #quicktabs-container-commons_bw .quicktabs-tabpage .attachment-before > a:hover, #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add a:hover, #content-column .view-content input[type="submit"]:hover, form.commons-events-form-float input:hover, .pane-commons-events-commons-events-create-event-link a:hover {
+.button-alert, .commons-sign-up, .pane-commons-groups-commons-groups-create-group a, #quicktabs-container-commons_bw .quicktabs-tabpage .attachment-before > a, #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add a, #content-column .view-content input[type="submit"], form.commons-events-form-float input, form.commons-events-form-float input:hover, .pane-commons-events-commons-events-create-event-link a, .button-alert:link, .commons-sign-up:link, .pane-commons-groups-commons-groups-create-group a:link, #quicktabs-container-commons_bw .quicktabs-tabpage .attachment-before > a:link, #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add a:link, #content-column .view-content input[type="submit"]:link, form.commons-events-form-float input:link, form.commons-events-form-float input:link:hover, .pane-commons-events-commons-events-create-event-link a:link, .button-alert:visited, .commons-sign-up:visited, .pane-commons-groups-commons-groups-create-group a:visited, #quicktabs-container-commons_bw .quicktabs-tabpage .attachment-before > a:visited, #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add a:visited, #content-column .view-content input[type="submit"]:visited, form.commons-events-form-float input:visited, form.commons-events-form-float input:visited:hover, .pane-commons-events-commons-events-create-event-link a:visited, .button-alert:active, .commons-sign-up:active, .pane-commons-groups-commons-groups-create-group a:active, #quicktabs-container-commons_bw .quicktabs-tabpage .attachment-before > a:active, #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add a:active, #content-column .view-content input[type="submit"]:active, form.commons-events-form-float input:active, form.commons-events-form-float input:active:hover, .pane-commons-events-commons-events-create-event-link a:active, .button-alert:hover, .commons-sign-up:hover, .pane-commons-groups-commons-groups-create-group a:hover, #quicktabs-container-commons_bw .quicktabs-tabpage .attachment-before > a:hover, #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add a:hover, #content-column .view-content input[type="submit"]:hover, form.commons-events-form-float input:hover, .pane-commons-events-commons-events-create-event-link a:hover {
+  color: white;
+}
+.button-alert:hover, .commons-sign-up:hover, .pane-commons-groups-commons-groups-create-group a:hover, #quicktabs-container-commons_bw .quicktabs-tabpage .attachment-before > a:hover, #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add a:hover, #content-column .view-content input[type="submit"]:hover, form.commons-events-form-float input:hover, .pane-commons-events-commons-events-create-event-link a:hover {
   text-decoration: none;
 }
 
@@ -191,7 +177,7 @@ body.page-node .pane-views-panes > div, .pane-commons-events-user-upcoming-event
   padding: 5px 5px 0;
   z-index: 1;
   background: #D9D9D9;
-  border: 1px solid #b5b5b5;
+  border: 1px solid #B5B5B5;
   height: 22px;
   font-size: 11.9px;
   color: #333333;
@@ -227,7 +213,7 @@ body.page-node .pane-views-panes > div, .pane-commons-events-user-upcoming-event
   margin-top: -5px;
 }
 
-/*
+/**
  * @file
  * global.styles
  *
@@ -253,7 +239,7 @@ body.page-node .pane-views-panes > div, .pane-commons-events-user-upcoming-event
 /* =============================================================================
  *   Base
  * ========================================================================== */
-/*
+/**
  * To preserve theme settings never apply font properties to the HTML element.
  * This is critically important if you are using the Responsive JavaScript
  * feature as this relies on being able to set a pseudo font family on the HTML
@@ -324,7 +310,7 @@ var {
 /* =============================================================================
  *   Wrappers
  * ========================================================================== */
-/*
+/**
  * Page wrapper, includes the .container class which sets the overall page or section width
  * Main wrapper in page.tpl.php, the .container class sets the width of the page, do not add width to it!
  */
@@ -332,7 +318,7 @@ var {
   margin-top: -92px;
 }
 
-/*
+/**
  * Wraps all header elements - branding and .region-header
  */
 #header {
@@ -365,85 +351,71 @@ var {
   border-bottom: 1px solid #1e658f;
 }
 
-/*
+/**
  * Wraps the sidebars the content column
  */
-.page-user-login #columns {
-  margin-top: 50px;
+#columns {
+  margin-right: 10px;
+  margin-left: 10px;
 }
 
-/*
- * Main content column wrapper
- */
-/*
- * Wraps the main-content-header, the content region and feed-icons. Use this wrapper to style the entire main content column
- */
-/*
+/**
  * Footer wrapper
  */
-/*
- * Panels may need additional margin wrangling when in the $content region
- */
-/*
- * Full Width Wrappers
- * These are used in the optional page--full-width-wrappers.tpl.php template.
- * All have internal .container classes. In the full width wrapper template the
- * .container classes set the width or max-width of the contained element - you
- * can style this but never add any width/margin/padding/borders etc to .container
- */
-/*
- * Wraps #page
- */
-/*
- * Wraps the leaderboard
- */
-/*
- * Wraps the header
- */
-#header-wrapper {
-  /* Debug styles, is this working */
-  background: rgba(255, 192, 203, 0.5);
+#footer {
+  border-top: 1px solid #cccccc;
+  -webkit-box-shadow: inset 0 1px 0 white;
+  -moz-box-shadow: inset 0 1px 0 white;
+  box-shadow: inset 0 1px 0 white;
+  margin: 0 10px;
 }
 
-/*
- * Wraps the nav elements
- */
-/*
- * Wraps breadcrumb
- */
-/*
- * Wraps messages and help
- */
-/*
- * Wraps the secondary content/preface region
- */
-/*
- * Wraps the main content column
- */
-/*
- * Wraps the tertiary content/postfix region
+/**
+ * Default credit block
  */
-/*
- * Footer wrapper
+#block-block-1 .block-title,
+#block-block-1 .block-content {
+  color: #858585;
+}
+#block-block-1 .block-title {
+  margin: 10px 0 5px;
+}
+#block-block-1 .block-content {
+  font-size: .88em;
+}
+#footer #block-block-1 {
+  margin-bottom: 0;
+}
+
+/**
+ * Generic pod wrappers
  */
-#footer-wrapper {
-  /* Debug styles, is this working? */
-  background: rgba(255, 192, 203, 0.5);
+.commons-pod {
+  /* Prevent pod nesting. */
+}
+.commons-pod .commons-pod {
+  margin: 0;
+  padding: 0;
+  background: transparent;
+  -webkit-box-shadow: none;
+  -moz-box-shadow: none;
+  box-shadow: none;
 }
 
 /* =============================================================================
  *   Branding
  * ========================================================================== */
-/*
+/**
  * Wraps all the branding elements, logo, name and slogan
  */
 #branding {
   float: left;
+  margin-left: 10px;
   vertical-align: top;
   text-align: left;
 }
 
-/*
+/**
  * Logo
  */
 #logo {
@@ -454,7 +426,7 @@ var {
   vertical-align: bottom;
 }
 
-/*
+/**
  * Wrapper for the site name and slogan (hgroup)
  */
 #name-and-slogan {
@@ -469,7 +441,7 @@ var {
   margin-top: 6px;
 }
 
-/*
+/**
  * Site name (h1)
  */
 #site-name {
@@ -484,7 +456,7 @@ var {
   text-decoration: none;
 }
 
-/*
+/**
  * Site slogan (h2)
  */
 #site-slogan {
@@ -494,14 +466,11 @@ var {
 /* =============================================================================
  *   Page content header
  * ========================================================================== */
-/*
- * Main content header wraps the page title, tabs and actions links
- */
-/*
+/**
  * The main page title (h1)
  */
 #page-title {
-  margin: 0 0 10px 6px;
+  margin: 0 0 10px;
   font-weight: 300;
 }
 .page-node #page-title {
@@ -515,24 +484,32 @@ var {
 /* =============================================================================
  *   Misc Global Styles
  * ========================================================================== */
-/*
+/**
  * Generic styles for nodes.
  */
 .node {
   position: relative;
 }
-.node.node-answer, .node.node-event, .node.node-poll, .node.node-post, .node.node-question, .node.node-wiki.node-teaser {
+.node.user-picture-available {
   padding-left: 68px;
 }
-.node.node-answer .user-picture, .node.node-event .user-picture, .node.node-poll .user-picture, .node.node-post .user-picture, .node.node-question .user-picture, .node.node-wiki.node-teaser .user-picture {
+.node.user-picture-available .user-picture {
   position: absolute;
   float: left;
   margin-left: -68px;
   top: 0;
 }
-.node.node-answer .user-picture img, .node.node-event .user-picture img, .node.node-poll .user-picture img, .node.node-post .user-picture img, .node.node-question .user-picture img, .node.node-wiki.node-teaser .user-picture img {
+.node.user-picture-available .user-picture img {
   width: 50px;
 }
+@media only screen and (max-width: 480px) {
+  .node.user-picture-available {
+    padding-left: 0;
+  }
+  .node.user-picture-available .user-picture {
+    display: none;
+  }
+}
 .node .field-name-body {
   margin-bottom: 20px;
 }
@@ -546,8 +523,27 @@ var {
   top: 1px;
 }
 
+.node-actions {
+  float: right;
+  width: 90px;
+  list-style: none;
+  margin: .5em -90px 0 0;
+  text-align: right;
+}
+.node-actions, .block-content .node-actions {
+  padding: 0;
+}
+@media only screen and (max-width: 768px) {
+  .node-actions {
+    float: none;
+    width: auto;
+    margin: 1.7em 0;
+    text-align: left;
+  }
+}
+
 .node-teaser {
-  border-bottom: 1px solid #cccccc;
+  border-bottom: 1px solid #ccc;
   padding-bottom: 20px;
   margin-bottom: 10px;
 }
@@ -555,7 +551,7 @@ var {
   margin-bottom: 0;
 }
 .node-teaser.node-promoted {
-  background-image: url('../images/node-promoted-star.png?1361802894');
+  background-image: url('../images/node-promoted-star.png?1363371593');
   background-position: top right;
   background-repeat: no-repeat;
   background-color: #f7f7f7;
@@ -568,18 +564,26 @@ var {
   -o-border-radius: 3px;
   border-radius: 3px;
 }
-.node-teaser.node-promoted.node-answer, .node-teaser.node-promoted.node-event, .node-teaser.node-promoted.node-poll, .node-teaser.node-promoted.node-post, .node-teaser.node-promoted.node-question, .node-teaser.node-promoted.node-wiki.node-teaser {
+.node-teaser.node-promoted.user-picture-available {
   padding-left: 78px;
 }
-.node-teaser.node-promoted.node-answer .user-picture, .node-teaser.node-promoted.node-event .user-picture, .node-teaser.node-promoted.node-poll .user-picture, .node-teaser.node-promoted.node-post .user-picture, .node-teaser.node-promoted.node-question .user-picture, .node-teaser.node-promoted.node-wiki.node-teaser .user-picture {
+.node-teaser.node-promoted.user-picture-available .user-picture {
   position: absolute;
   float: left;
   margin-left: -68px;
   top: 10px;
 }
-.node-teaser.node-promoted.node-answer .user-picture img, .node-teaser.node-promoted.node-event .user-picture img, .node-teaser.node-promoted.node-poll .user-picture img, .node-teaser.node-promoted.node-post .user-picture img, .node-teaser.node-promoted.node-question .user-picture img, .node-teaser.node-promoted.node-wiki.node-teaser .user-picture img {
+.node-teaser.node-promoted.user-picture-available .user-picture img {
   width: 50px;
 }
+@media only screen and (max-width: 480px) {
+  .node-teaser.node-promoted.user-picture-available {
+    padding-left: 10px;
+  }
+  .node-teaser.node-promoted.user-picture-available .user-picture {
+    display: none;
+  }
+}
 
 .user-picture,
 .views-field-picture {
@@ -605,7 +609,7 @@ var {
   position: absolute;
   right: -5px;
   top: 10px;
-  background: url('../images/user_img_arrow.png?1361802894');
+  background: url('../images/user_img_arrow.png?1363371593');
 }
 .node .user-picture img, .comment .user-picture img, .node
 .views-field-picture img, .comment
@@ -613,10 +617,80 @@ var {
   width: 50px;
 }
 
-/*
- * Feed icons
+/**
+ * Filter drawer accessories
  */
-/*
+.filter-trigger {
+  display: none;
+  background: white;
+  -webkit-box-sizing: border-box;
+  -moz-box-sizing: border-box;
+  box-sizing: border-box;
+  padding: 5px;
+  position: absolute;
+  top: 0;
+  left: -40px;
+  width: 40px;
+  height: 40px;
+  border-right: none;
+  -webkit-border-radius: 3px 0 0 3px;
+  -moz-border-radius: 3px 0 0 3px;
+  -ms-border-radius: 3px 0 0 3px;
+  -o-border-radius: 3px 0 0 3px;
+  border-radius: 3px 0 0 3px;
+  text-align: center;
+  font: 0/0 a;
+  line-height: 0;
+  color: transparent;
+  -webkit-box-shadow: #858585 1px 1px 4px;
+  -moz-box-shadow: #858585 1px 1px 4px;
+  box-shadow: #858585 1px 1px 4px;
+  cursor: pointer;
+  z-index: -1;
+}
+.filter-trigger:after {
+  content: "\2026";
+  display: block;
+  width: 30px;
+  height: 30px;
+  font-size: 20px;
+  font-weight: bold;
+  text-shadow: 2px 2px 0.2 rgba(0, 0, 0, 0.5);
+  line-height: 20px;
+  background: #666666;
+  background: -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #858585), color-stop(100%, #666666));
+  background: -webkit-linear-gradient(#858585, #666666);
+  background: -moz-linear-gradient(#858585, #666666);
+  background: -o-linear-gradient(#858585, #666666);
+  background: linear-gradient(#858585, #666666);
+  color: white;
+  -webkit-border-radius: 3px;
+  -moz-border-radius: 3px;
+  -ms-border-radius: 3px;
+  -o-border-radius: 3px;
+  border-radius: 3px;
+  -webkit-box-shadow: inset 0 0 0.4em rgba(0, 0, 0, 0.2), #858585 1px 1px 4px;
+  -moz-box-shadow: inset 0 0 0.4em rgba(0, 0, 0, 0.2), #858585 1px 1px 4px;
+  box-shadow: inset 0 0 0.4em rgba(0, 0, 0, 0.2), #858585 1px 1px 4px;
+}
+.filter-trigger.following {
+  position: fixed;
+  right: 0;
+  left: auto;
+}
+
+.filter-overlay {
+  position: fixed;
+  top: 0;
+  left: 0;
+  display: none;
+  width: 100%;
+  height: 100%;
+  overflow: hidden;
+  background: rgba(255, 255, 255, 0.8);
+}
+
+/**
  * Aggregator feed source
  */
 #aggregator .feed-source .feed-icon {
@@ -631,24 +705,24 @@ var {
   margin: 0;
 }
 
-/*
+/**
  * Generic styles for the more link
  */
 .more-link {
-  background-image: url('../images/icons/icon-more.png?1361802894');
+  background-image: url('../images/icons/icon-more.png?1363371593');
   background-repeat: no-repeat;
-  height: 14px;
-  padding: 0 0 0 17px;
+  min-height: 14px;
+  padding: 0 0 0 1.7em;
   float: right;
   font-size: 0.85em;
   line-height: 14px;
-  margin: 10px;
+  margin-top: 10px;
 }
 .more-link a {
   color: #858585;
 }
 
-/*
+/**
  * Generic styles for links. See the ul.links declaration in node and comment stylesheets
  */
 ul.links {
@@ -664,38 +738,76 @@ ul.links li {
   padding: 0 10px 0 0;
 }
 
+.quicktabs-style-commons-pills ul.quicktabs-tabs,
 ul.primary.tabs {
   border-bottom: none;
   padding: 0;
 }
+.quicktabs-style-commons-pills ul.quicktabs-tabs li,
 ul.primary.tabs li {
   margin-bottom: 5px;
   margin-top: 5px;
 }
+.quicktabs-style-commons-pills ul.quicktabs-tabs li a,
 ul.primary.tabs li a {
-  background-color: #d7d7d7;
+  background-color: rgba(153, 153, 153, 0.3);
   -webkit-border-radius: 3px;
   -moz-border-radius: 3px;
   -ms-border-radius: 3px;
   -o-border-radius: 3px;
   border-radius: 3px;
-  padding: 3px 10px;
-  display: block;
-  color: #a5a3a3;
+  padding: .3em .8em;
+  display: inline-block;
   border: none;
 }
+.quicktabs-style-commons-pills ul.quicktabs-tabs li a,
+.quicktabs-style-commons-pills ul.quicktabs-tabs li a span,
+ul.primary.tabs li a,
+ul.primary.tabs li a span {
+  color: #2783b9;
+}
+.quicktabs-style-commons-pills ul.quicktabs-tabs li a:hover,
 ul.primary.tabs li a:hover {
   text-decoration: none;
-  background-color: #d7d7d7;
-  color: #a5a3a3;
+  background-color: rgba(153, 153, 153, 0.3);
+  color: #336699;
 }
+.quicktabs-style-commons-pills ul.quicktabs-tabs li.active a,
 ul.primary.tabs li.active a {
-  background-color: #336699;
+  position: relative;
+  background-color: #999999;
   border: none;
-  color: white;
 }
+.quicktabs-style-commons-pills ul.quicktabs-tabs li.active a, .quicktabs-style-commons-pills ul.quicktabs-tabs li.active a:hover,
+ul.primary.tabs li.active a,
 ul.primary.tabs li.active a:hover {
-  background-color: #336699;
+  background-color: #999999;
+}
+.quicktabs-style-commons-pills ul.quicktabs-tabs li.active a,
+.quicktabs-style-commons-pills ul.quicktabs-tabs li.active a span,
+ul.primary.tabs li.active a,
+ul.primary.tabs li.active a span {
+  color: #333333;
+}
+.quicktabs-style-commons-pills ul.quicktabs-tabs li.active a:after,
+ul.primary.tabs li.active a:after {
+  position: absolute;
+  bottom: -.7em;
+  left: 50%;
+  display: block;
+  width: 0;
+  height: 0;
+  overflow: hidden;
+  margin-left: -.6em;
+  content: "";
+  border-width: .4em .6em;
+  border-style: solid;
+  border-color: #999999 transparent transparent;
+}
+
+.quicktabs-style-commons-pills ul.quicktabs-tabs li {
+  text-transform: uppercase;
+  font-size: .8em;
 }
 
 li.sharethis {
@@ -714,7 +826,7 @@ ul.inline li.sharethis {
   display: inline-block;
 }
 li.sharethis:before {
-  content: '';
+  content: "";
   background: url('../images/icons-se7682cf316.png') 0 -683px no-repeat;
   width: 12px;
   height: 12px;
@@ -743,7 +855,7 @@ li.sharethis .sharethis-wrapper {
   position: relative;
 }
 li.sharethis .sharethis-wrapper:before, li.sharethis .sharethis-wrapper:after {
-  content: '';
+  content: "";
   width: 0;
   height: 0;
   border-style: solid;
@@ -761,14 +873,7 @@ li.sharethis .sharethis-wrapper:after {
   left: 11px;
 }
 
-/*
- * Search results are an ordered list so reset the margin
- */
-.search-results {
-  margin: 0;
-}
-
-/*
+/**
  * H1 Node title
  */
 h1.node-title {
@@ -783,40 +888,127 @@ h1.node-title a:hover {
   text-decoration: underline;
 }
 
-/*
- * User picture wrapping and shadow
+/**
+ * Main wrapper for most blocks, block_system_main does not have it
  */
-.view-commons-homepage-content .content, .view-commons-homepage-content .views-field-timestamp, .view-commons-activity-streams-activity .content, .view-commons-activity-streams-activity .views-field-timestamp, .view-activity-group .content, .view-activity-group .views-field-timestamp, .view-commons-activity-streams-user-activity .content, .view-commons-activity-streams-user-activity .views-field-timestamp {
-  padding-left: 58px;
+.block {
+  margin-bottom: 20px;
 }
-.view-commons-homepage-content .content .user-picture, .view-commons-homepage-content .views-field-timestamp .user-picture, .view-commons-activity-streams-activity .content .user-picture, .view-commons-activity-streams-activity .views-field-timestamp .user-picture, .view-activity-group .content .user-picture, .view-activity-group .views-field-timestamp .user-picture, .view-commons-activity-streams-user-activity .content .user-picture, .view-commons-activity-streams-user-activity .views-field-timestamp .user-picture {
-  position: absolute;
-  float: left;
-  margin-left: -58px;
-  top: 0;
+
+/**
+ * Block title
+ */
+.block-title {
+  margin: 0;
 }
-.view-commons-homepage-content .content .user-picture img, .view-commons-homepage-content .views-field-timestamp .user-picture img, .view-commons-activity-streams-activity .content .user-picture img, .view-commons-activity-streams-activity .views-field-timestamp .user-picture img, .view-activity-group .content .user-picture img, .view-activity-group .views-field-timestamp .user-picture img, .view-commons-activity-streams-user-activity .content .user-picture img, .view-commons-activity-streams-user-activity .views-field-timestamp .user-picture img {
-  width: 40px;
+
+/**
+ * Match item list and block menu margin and padding
+ */
+.block-content ul,
+.block-content ol {
+  padding: 0 0 0 15px;
+}
+.block-content li {
+  margin: 0;
+  padding: 0;
 }
 
-.view-activity-group .views-row, .view-commons-activity-streams-activity .views-row, .view-commons-activity-streams-user-activity .views-row {
-  border-bottom: 1px solid #eeeeee;
-  padding-bottom: 5px;
-  margin-bottom: 5px;
+/**
+ * User picture wrapping and shadow
+ */
+.views-row {
+  border-bottom: 1px solid #eee;
+  padding-bottom: 10px;
+  margin-bottom: 10px;
   position: relative;
 }
-.view-activity-group .views-row.views-row-last, .view-commons-activity-streams-activity .views-row.views-row-last, .view-commons-activity-streams-user-activity .views-row.views-row-last {
+.views-row.views-row-last {
+  border-bottom: none;
+  padding-bottom: 0;
+  margin-bottom: 0;
+}
+.view-plain .views-row {
   border-bottom: none;
   padding-bottom: 0;
+  margin: .3em 0;
+}
+.view-plain .views-row:first-child {
+  margin-top: 0;
+}
+.view-plain .views-row:last-child {
   margin-bottom: 0;
 }
-.view-activity-group .views-row h2, .view-commons-activity-streams-activity .views-row h2, .view-commons-activity-streams-user-activity .views-row h2 {
+
+.view-commons-homepage-content .content,
+.view-commons-homepage-content .views-field-timestamp,
+.view-commons-activity-streams-activity .content,
+.view-commons-activity-streams-activity .views-field-timestamp,
+.view-activity-group .content,
+.view-activity-group .views-field-timestamp,
+.view-commons-activity-streams-user-activity .content,
+.view-commons-activity-streams-user-activity .views-field-timestamp {
+  padding-left: 58px;
+}
+.view-commons-homepage-content .content .user-picture,
+.view-commons-homepage-content .views-field-timestamp .user-picture,
+.view-commons-activity-streams-activity .content .user-picture,
+.view-commons-activity-streams-activity .views-field-timestamp .user-picture,
+.view-activity-group .content .user-picture,
+.view-activity-group .views-field-timestamp .user-picture,
+.view-commons-activity-streams-user-activity .content .user-picture,
+.view-commons-activity-streams-user-activity .views-field-timestamp .user-picture {
+  position: absolute;
+  float: left;
+  margin-left: -58px;
+  top: 0;
+}
+.view-commons-homepage-content .content .user-picture img,
+.view-commons-homepage-content .views-field-timestamp .user-picture img,
+.view-commons-activity-streams-activity .content .user-picture img,
+.view-commons-activity-streams-activity .views-field-timestamp .user-picture img,
+.view-activity-group .content .user-picture img,
+.view-activity-group .views-field-timestamp .user-picture img,
+.view-commons-activity-streams-user-activity .content .user-picture img,
+.view-commons-activity-streams-user-activity .views-field-timestamp .user-picture img {
+  width: 40px;
+}
+@media only screen and (max-width: 480px) {
+  .view-commons-homepage-content .content,
+  .view-commons-homepage-content .views-field-timestamp,
+  .view-commons-activity-streams-activity .content,
+  .view-commons-activity-streams-activity .views-field-timestamp,
+  .view-activity-group .content,
+  .view-activity-group .views-field-timestamp,
+  .view-commons-activity-streams-user-activity .content,
+  .view-commons-activity-streams-user-activity .views-field-timestamp {
+    padding-left: 0;
+  }
+  .view-commons-homepage-content .content .user-picture,
+  .view-commons-homepage-content .views-field-timestamp .user-picture,
+  .view-commons-activity-streams-activity .content .user-picture,
+  .view-commons-activity-streams-activity .views-field-timestamp .user-picture,
+  .view-activity-group .content .user-picture,
+  .view-activity-group .views-field-timestamp .user-picture,
+  .view-commons-activity-streams-user-activity .content .user-picture,
+  .view-commons-activity-streams-user-activity .views-field-timestamp .user-picture {
+    display: none;
+  }
+}
+
+.view-activity-group .views-row h2,
+.view-commons-activity-streams-activity .views-row h2,
+.view-commons-activity-streams-user-activity .views-row h2 {
   display: none;
 }
-.view-activity-group .views-row .user-picture, .view-commons-activity-streams-activity .views-row .user-picture, .view-commons-activity-streams-user-activity .views-row .user-picture {
+.view-activity-group .views-row .user-picture,
+.view-commons-activity-streams-activity .views-row .user-picture,
+.view-commons-activity-streams-user-activity .views-row .user-picture {
   top: 5px;
 }
-.view-activity-group .views-row .user-picture img, .view-commons-activity-streams-activity .views-row .user-picture img, .view-commons-activity-streams-user-activity .views-row .user-picture img {
+.view-activity-group .views-row .user-picture img,
+.view-commons-activity-streams-activity .views-row .user-picture img,
+.view-commons-activity-streams-user-activity .views-row .user-picture img {
   width: 40px;
 }
 
@@ -826,21 +1018,25 @@ h1.node-title a:hover {
   line-height: 26px;
   color: #333333;
 }
-.page-node .field-name-field-topics, .page-node .field-name-og-group-ref {
+.page-node .field-name-field-topics.view-mode-full,
+.page-node .field-name-og-group-ref.view-mode-full {
   float: left;
   width: 50%;
+  margin-bottom: 1.7em;
 }
-.page-node .field-name-field-topics ul, .page-node .field-name-og-group-ref ul {
+.page-node .field-name-field-topics.view-mode-full ul,
+.page-node .field-name-og-group-ref.view-mode-full ul {
   margin: 0;
   list-style: none;
   padding: 0;
 }
-.page-node .field-name-field-topics ul li, .page-node .field-name-og-group-ref ul li {
+.page-node .field-name-field-topics.view-mode-full ul li,
+.page-node .field-name-og-group-ref.view-mode-full ul li {
   float: left;
   margin-right: 10px;
 }
 .page-node .field-name-field-topics .field-item:before {
-  content: '';
+  content: "";
   background: url('../images/icons-se7682cf316.png') 0 -1155px no-repeat;
   width: 8px;
   height: 8px;
@@ -851,7 +1047,7 @@ h1.node-title a:hover {
   top: -1px;
 }
 .page-node .field-name-og-group-ref .field-item:before {
-  content: '';
+  content: "";
   background: url('../images/icons-se7682cf316.png') 0 -1001px no-repeat;
   width: 8px;
   height: 8px;
@@ -872,12 +1068,6 @@ h1.node-title a:hover {
 .page-node .node nav li {
   float: left;
 }
-.page-node .node nav li.flag-inappropriate_node {
-  float: none;
-  position: absolute;
-  bottom: 5px;
-  right: 5px;
-}
 
 #comments {
   margin: 0;
@@ -890,7 +1080,7 @@ h1.node-title a:hover {
   font-size: 2.2em;
 }
 #comments h2.comment-title:before {
-  content: '';
+  content: "";
   background: url('../images/icons-se7682cf316.png') 0 -30px no-repeat;
   width: 31px;
   height: 24px;
@@ -929,6 +1119,14 @@ h1.node-title a:hover {
 .comment .user-picture img {
   width: 50px;
 }
+@media only screen and (max-width: 480px) {
+  .comment {
+    padding-left: 0;
+  }
+  .comment .user-picture {
+    display: none;
+  }
+}
 .comment .author-datetime {
   margin-bottom: 1.4em;
 }
@@ -946,7 +1144,7 @@ h1.node-title a:hover {
   float: right;
 }
 .comment-reply:before {
-  content: '';
+  content: "";
   background: url('../images/icons-se7682cf316.png') 0 -1061px no-repeat;
   width: 13px;
   height: 12px;
@@ -962,88 +1160,119 @@ h1.node-title a:hover {
   margin-bottom: 0;
 }
 
-.page-node-add .node-form {
-  position: relative;
-}
-.page-node-add fieldset {
-  border: none;
-}
-.page-node-add fieldset#edit-og-group-ref-und {
-  padding: 0;
+.primary-fields,
+.supplementary-fields {
+  display: -moz-inline-stack;
+  display: inline-block;
+  vertical-align: middle;
+  *vertical-align: auto;
+  zoom: 1;
+  *display: inline;
+  -webkit-box-sizing: border-box;
+  -moz-box-sizing: border-box;
+  box-sizing: border-box;
+  float: left;
 }
-.page-node-add #edit-body .ckeditor_links {
-  background-color: white;
-  padding: 5px 15px 0 15px;
+.view-commons-question-answers .primary-fields, .view-commons-question-answers
+.supplementary-fields {
   display: block;
-}
-.page-node-add #edit-body fieldset {
-  background-color: white;
-  -webkit-border-radius: 0 0 6px 6px;
-  -moz-border-radius: 0 0 6px 6px;
-  -ms-border-radius: 0 0 6px 6px;
-  -o-border-radius: 0 0 6px 6px;
-  border-radius: 0 0 6px 6px;
-}
-.page-node-add #edit-body, .page-node-add .form-item-title, .page-node-add .field-name-og-group-ref, .page-node-add #poll-choice-wrapper, .page-node-add .field-name-field-address-form {
-  width: 66%;
   float: none;
+  width: auto;
+  padding: 0;
 }
-.page-node-add #edit-body input[type="text"], .page-node-add .form-item-title input[type="text"], .page-node-add .field-name-og-group-ref input[type="text"], .page-node-add #poll-choice-wrapper input[type="text"], .page-node-add .field-name-field-address-form input[type="text"] {
-  width: 100%;
-}
-.lt480 .page-node-add #edit-body, .lt480 .page-node-add .form-item-title, .lt480 .page-node-add .field-name-og-group-ref, .lt480 .page-node-add #poll-choice-wrapper, .lt480 .page-node-add .field-name-field-address-form {
-  width: 100%;
+
+.primary-fields {
+  padding-right: 10px;
+  width: 66.666%;
 }
-.page-node-add .field-type-taxonomy-term-reference-form {
-  position: absolute;
-  right: 0;
-  top: 0;
-  width: 33%;
-  margin-right: 0;
-  margin-left: 0;
-  padding: 0;
+
+.supplementary-fields {
+  padding-left: 10px;
+  width: 33.333%;
 }
-.page-node-add .field-type-taxonomy-term-reference-form > div {
-  padding: 5px 10px 10px 10px;
-  margin: 0;
+
+.form-actions {
+  clear: both;
 }
-.page-node-add .field-type-taxonomy-term-reference-form input[type="text"] {
-  width: 100%;
+
+/* Format the date range form items. */
+.start-date-wrapper,
+.end-date-wrapper {
+  clear: none;
+  width: auto;
+  max-width: 49%;
+}
+.start-date-wrapper,
+.start-date-wrapper input,
+.start-date-wrapper .form-item .form-type-textfield,
+.start-date-wrapper .date-padding,
+.start-date-wrapper .form-type-textfield,
+.end-date-wrapper,
+.end-date-wrapper input,
+.end-date-wrapper .form-item .form-type-textfield,
+.end-date-wrapper .date-padding,
+.end-date-wrapper .form-type-textfield {
+  float: none;
+  display: inline-block;
+  min-width: inherit;
 }
-.page-node-add #edit-additional-settings {
-  position: absolute;
-  right: 0;
-  top: 80px;
-  width: 33%;
-  margin-right: 0;
-  margin-left: 0;
-  padding: 0;
+.start-date-wrapper .form-item input,
+.end-date-wrapper .form-item input {
+  margin-right: auto;
 }
-.page-node-add #edit-additional-settings > div fieldset {
-  border-bottom: 1px solid #cccccc;
-  padding-left: 0;
-  padding-right: 0;
+.start-date-wrapper .form-type-textfield,
+.end-date-wrapper .form-type-textfield {
+  max-width: 60%;
 }
-.page-node-add #edit-additional-settings > div fieldset.collapsed {
-  border-bottom: none;
+.start-date-wrapper .form-type-textfield:last-child,
+.end-date-wrapper .form-type-textfield:last-child {
+  max-width: 30%;
 }
-.page-node-add #edit-additional-settings > div fieldset fieldset {
-  border-bottom: none;
+.start-date-wrapper .form-type-date-popup,
+.end-date-wrapper .form-type-date-popup {
+  margin: 0;
 }
-.page-node-add #edit-additional-settings input[type="text"] {
-  width: 100%;
+@media only screen and (max-width: 768px) {
+  .start-date-wrapper,
+  .end-date-wrapper {
+    display: block;
+    max-width: inherit;
+    margin: 10px auto;
+  }
 }
-.page-node-add #edit-actions {
-  clear: both;
+
+.node-type-event .addressfield-container-inline:after {
+  content: "";
+  clear: none;
+  display: none;
 }
 
-.node-type-event .node-content {
-  margin-left: 0;
+.logo-available .field-name-field-date,
+.logo-available .field-name-field-address,
+.logo-available .field-name-field-offsite-url {
+  margin-left: 65px;
+}
+@media only screen and (max-width: 480px) {
+  .logo-available .field-name-field-date,
+  .logo-available .field-name-field-address,
+  .logo-available .field-name-field-offsite-url {
+    margin-left: 0;
+  }
 }
-.node-type-event .node-content .field-name-field-logo {
+
+.field-name-field-logo {
   float: left;
-  margin: 3px 15px 15px 0;
-  background: white;
+  width: 70px;
+  margin: .5em 0 0 -70px;
+  position: relative;
+  left: 70px;
+}
+.field-name-field-logo img {
+  display: block;
+  -webkit-box-sizing: border-box;
+  -moz-box-sizing: border-box;
+  box-sizing: border-box;
+  margin-bottom: 1.7em;
   padding: 4px;
   -webkit-border-radius: 3px;
   -moz-border-radius: 3px;
@@ -1053,15 +1282,26 @@ h1.node-title a:hover {
   -webkit-box-shadow: #858585 1px 1px 4px;
   -moz-box-shadow: #858585 1px 1px 4px;
   box-shadow: #858585 1px 1px 4px;
-  position: relative;
-  display: block;
-  line-height: 0;
+  background: white;
 }
-.node-type-event .node-content .field-name-field-logo img {
-  width: 72px;
+@media only screen and (max-width: 480px) {
+  .field-name-field-logo {
+    display: none;
+  }
 }
-.node-type-event .node-content .field-name-body {
-  clear: left;
+
+.field-name-body {
+  clear: both;
+  margin-top: 1.7em;
+}
+
+.field-name-field-date {
+  font-weight: bold;
+}
+
+.adr .region, .node-type-event .adr .region, .panel-display .region .adr .region {
+  float: none;
+  padding: 0;
 }
 
 .node .flag-commons-follow-node,
@@ -1092,7 +1332,7 @@ h1.node-title a:hover {
 .view-commons-follow-node .flag-commons-follow-node a.flag-action:before,
 .view-commons-follow-user .flag-commons-follow-user a.flag-action:before,
 .view-commons-follow-taxonomy-term .flag-commons-follow-term a.flag-action:before {
-  content: '';
+  content: "";
   background: url('../images/icons-se7682cf316.png') 0 -939px no-repeat;
   width: 13px;
   height: 11px;
@@ -1154,15 +1394,11 @@ h1.node-title a:hover {
 }
 
 .flag-inappropriate-node {
-  filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=0);
-  opacity: 0;
-  -webkit-transition: opacity 0.5s;
-  -moz-transition: opacity 0.5s;
-  -o-transition: opacity 0.5s;
-  transition: opacity 0.5s;
+  display: block;
+  margin: 10px 0;
 }
 .flag-inappropriate-node:before {
-  content: '';
+  content: "";
   top: 0;
   background: url('../images/icons-se7682cf316.png') 0 0 no-repeat;
   width: 12px;
@@ -1172,10 +1408,6 @@ h1.node-title a:hover {
   position: relative;
   top: 1px;
 }
-.page-node .node:hover .flag-inappropriate-node, .pane-node-links:hover .flag-inappropriate-node {
-  filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=100);
-  opacity: 1;
-}
 
 .view-commons-contributors-group .views-field-picture {
   margin: 0 0 10px;
@@ -1192,7 +1424,7 @@ h1.node-title a:hover {
   background-color: transparent;
 }
 
-/*
+/**
  * Author/Submit line
  */
 .author-datetime {
@@ -1204,14 +1436,14 @@ h1.node-title a:hover {
   color: #333333;
 }
 
-/*
+/**
  * Featured/New Tags
  */
 .tag.featured {
   width: 58px;
   height: 22px;
   display: inline-block;
-  background-image: url('../images/tag-featured.png?1361802894');
+  background-image: url('../images/tag-featured.png?1363371593');
   background-repeat: no-repeat;
   margin: 6px 0 0 5px;
 }
@@ -1220,7 +1452,7 @@ h1.node-title a:hover {
   width: 27px;
   height: 22px;
   display: inline-block;
-  background-image: url('../images/tag-new.png?1361802894');
+  background-image: url('../images/tag-new.png?1363371593');
   background-repeat: no-repeat;
   margin: 4px 0 0 5px;
 }
@@ -1259,7 +1491,7 @@ h1.node-title a:hover {
   display: inline-block;
 }
 .page-user .pane-user-field-facebook-url a:before {
-  content: '';
+  content: "";
   background: url('../images/icons-se7682cf316.png') 0 -166px no-repeat;
   width: 26px;
   height: 26px;
@@ -1278,7 +1510,7 @@ h1.node-title a:hover {
   display: inline-block;
 }
 .page-user .pane-user-field-linkedin-url a:before {
-  content: '';
+  content: "";
   background: url('../images/icons-se7682cf316.png') 0 -74px no-repeat;
   width: 26px;
   height: 26px;
@@ -1297,7 +1529,7 @@ h1.node-title a:hover {
   display: inline-block;
 }
 .page-user .pane-user-field-twitter-url a:before {
-  content: '';
+  content: "";
   background: url('../images/icons-se7682cf316.png') 0 -120px no-repeat;
   width: 26px;
   height: 26px;
@@ -1312,19 +1544,17 @@ h1.node-title a:hover {
   clear: both;
 }
 
+/**
+ * Group nodes
+ */
+.node-group .field-name-body {
+  clear: none;
+}
+
 /* =============================================================================
  *   Regions
  * ========================================================================== */
-/*
- * Standard region wrapper, don't add width to any regions, you will bork the layout - no margin, padding or borders etc
- */
-/*
- * Regions have an inner div - perfect for adding margin, padding or borders
- */
-/*
- * Regions can be nested, such as when using Panels
- */
-/*
+/**
  * Header region, embedded in the #header
  */
 .region-header {
@@ -1334,33 +1564,6 @@ h1.node-title a:hover {
   text-align: left;
 }
 
-/*
- * Generally used to output Drupals help block, if the help module is enabled
- */
-/*
- * Secondary content
- */
-/*
- * Sits above the main content header, like a content-top region
- */
-/*
- * Sits below the main content, like a content-bottom region
- */
-/*
- * Sidebars - targets both
- */
-/*
- * First sidebar
- */
-/*
- * Second sidebar
- */
-/*
- * Tertiary content
- */
-/*
- * Footer region
- */
 /* =============================================================================
  *   Links
  * ========================================================================== */
@@ -1379,7 +1582,7 @@ a:hover, a:focus {
   display: inline-block;
 }
 
-/*
+/**
  * Use one of the following id's for granular control:
  *  - #menu-bar (menu bar region)
  *  - #primary-menu (main menu)
@@ -1406,10 +1609,10 @@ a:hover, a:focus {
   padding: 0;
 }
 #menu-bar.nav ul.menu li:hover, #menu-bar.nav ul.menu li.active-trail {
-  background: url('../images/main-nav-hover.png?1361802894') repeat-x left top;
+  background: url('../images/main-nav-hover.png?1363371593') repeat-x left top;
 }
 #menu-bar.nav ul.menu li:hover .arrow:before, #menu-bar.nav ul.menu li.active-trail .arrow:before {
-  content: '';
+  content: "";
   display: block;
   position: absolute;
   bottom: 0px;
@@ -1421,7 +1624,7 @@ a:hover, a:focus {
   border-color: transparent transparent #3d9dd6 transparent;
 }
 #menu-bar.nav ul.menu li:hover .arrow:after, #menu-bar.nav ul.menu li.active-trail .arrow:after {
-  content: '';
+  content: "";
   display: block;
   position: absolute;
   bottom: 0px;
@@ -1459,22 +1662,22 @@ a:hover, a:focus {
 }
 
 .main-menu-home a {
-  background: url('../images/icons/icon-home.png?1361802894') no-repeat center 10px;
+  background: url('../images/icons/icon-home.png?1363371593') no-repeat center 10px;
 }
 
 .main-menu-groups a {
-  background: url('../images/icons/icon-groups.png?1361802894') no-repeat center 10px;
+  background: url('../images/icons/icon-groups.png?1363371593') no-repeat center 10px;
 }
 
 .main-menu-events a {
-  background: url('../images/icons/icon-events.png?1361802894') no-repeat center 10px;
+  background: url('../images/icons/icon-events.png?1363371593') no-repeat center 10px;
 }
 
 #menu-bar.nav ul.menu li.main-menu-search {
   display: none;
 }
 #menu-bar.nav ul.menu li.main-menu-search a {
-  background: url('../images/icons/icon-search.png?1361802894') no-repeat center 10px;
+  background: url('../images/icons/icon-search.png?1363371593') no-repeat center 10px;
 }
 
 #block-commons-utility-links-utility-links {
@@ -1498,7 +1701,7 @@ ul.commons-utility-links {
 ul.commons-utility-links li {
   display: inline-block;
 }
-ul.commons-utility-links li.first {
+.logged-in ul.commons-utility-links li.first {
   margin-right: 17px;
   font-weight: bold;
 }
@@ -1531,7 +1734,7 @@ ul.sf-menu a:focus, ul.sf-menu a:hover, ul.sf-menu a:active {
   outline: 0;
 }
 
-/*
+/**
  * Superfish blocks
  */
 .block-superfish ul {
@@ -1543,7 +1746,7 @@ ul.sf-menu a:focus, ul.sf-menu a:hover, ul.sf-menu a:active {
   padding: 0 !important;
 }
 
-/*
+/**
  * Vertical style
  */
 .sf-vertical {
@@ -1562,14 +1765,14 @@ ul.sf-menu a:focus, ul.sf-menu a:hover, ul.sf-menu a:active {
   padding: 0 10px;
 }
 
-/*
+/**
  * Navbar style
  */
 .sf-navbar {
   padding-bottom: 0 !important;
 }
 
-/*
+/**
  * Sensible padding for the default style
  */
 .sf-menu.sf-style-default a {
@@ -1585,7 +1788,7 @@ ul.menu {
 ul.menu ul {
   padding-left: 15px;
 }
-ul.menu li {
+ul.menu ul li {
   margin: 0;
 }
 
@@ -1660,9 +1863,6 @@ ul.pager li.pager-current {
   margin: 0;
 }
 
-/*
- * Theme the various states of pager links
- */
 /* =============================================================================
  *   Skip Navigation
  * ========================================================================== */
@@ -1740,7 +1940,7 @@ ul.primary li.active a:focus {
 ul.secondary {
   border-bottom: 1px solid #cccccc;
   margin: 1em 0 0;
-  padding: 0 0.3em 1em;
+  padding: 0 .3em 1em;
 }
 ul.secondary li {
   border-right: 0;
@@ -1763,16 +1963,7 @@ ul.action-links {
 /* =============================================================================
  *  Field Styling
  * ========================================================================== */
-/*
- * Wrapper for any field
- */
-/*
- * Above and inline classes are on the field wrapper
- */
-/*
- * When labels are set to inline in field display settings the clearfix class is automatically added
- */
-/*
+/**
  * Labels are h2 in Adaptivetheme. Use a strong selector to mitigate unwanted ineritance issues
  */
 .field-label {
@@ -1783,13 +1974,7 @@ ul.action-links {
   margin-bottom: 0;
 }
 
-/*
- * Field types (Core)
- */
-/*
- * Image fields use the <figure> and <figcaption> elements from HTML5
- */
-/*
+/**
  * Taxonomy
  */
 .field-type-taxonomy-term-reference {
@@ -1806,55 +1991,7 @@ ul.action-links {
   padding: 0 10px 0 0;
 }
 
-/*
- * Text
- */
-/*
- * Long text
- */
-/*
- * Text with summary
- */
-/*
- * File
- */
-/*
- * Number/Integer
- */
-/*
- * Decimal
- */
-/*
- * Number float
- */
-/*
- * List
- */
-/*
- * List boolean
- */
-/*
- * List integer
- */
-/*
- * List float
- */
-/*
- * Field types (Contrib)
- */
-/*
- * Named fields
- */
-/*
- * Underscores in field name are replaced with dashes
- */
-/*
- * Image Alignment Theme Settings - included here so you can easily override
- */
-/*
- * Float none setting
- */
-/*
+/**
  * Float left setting
  */
 .ia-l .field-type-image figure,
@@ -1862,7 +1999,7 @@ ul.action-links {
   margin: 5px 20px 15px 0;
 }
 
-/*
+/**
  * Centered setting
  */
 .ia-c .field-type-image figure,
@@ -1870,7 +2007,7 @@ ul.action-links {
   margin: 5px auto 15px;
 }
 
-/*
+/**
  * Float right setting
  */
 .ia-r .field-type-image figure,
@@ -1881,19 +2018,23 @@ ul.action-links {
 /* =============================================================================
  *   Panels Styling
  * ========================================================================== */
-.node-type-group.page-node .commons-pod {
-  padding: 0;
-  background-color: transparent;
-  -webkit-border-radius: 0;
-  -moz-border-radius: 0;
-  -ms-border-radius: 0;
-  -o-border-radius: 0;
-  border-radius: 0;
-  -webkit-box-shadow: none;
-  -moz-box-shadow: none;
-  box-shadow: none;
-  margin-right: 0;
-  margin-bottom: 0;
+.node-title,
+.pane-title {
+  font-weight: normal;
+  font-size: 1.6em;
+}
+
+.panel-display {
+  min-width: 100%;
+  margin-right: -10px;
+  margin-left: -10px;
+}
+.panel-display .region {
+  -webkit-box-sizing: border-box;
+  -moz-box-sizing: border-box;
+  box-sizing: border-box;
+  padding-right: 10px;
+  padding-left: 10px;
 }
 
 .commons-pod-comments {
@@ -1926,7 +2067,7 @@ ul.action-links {
   background-image: -moz-linear-gradient(top, #919591 0%, #90948f 12%, #757a74 33%, #737772 100%);
   background-image: -o-linear-gradient(top, #919591 0%, #90948f 12%, #757a74 33%, #737772 100%);
   background-image: linear-gradient(top, #919591 0%, #90948f 12%, #757a74 33%, #737772 100%);
-  border: 1px solid #585c58;
+  border: 1px solid #585C58;
   -webkit-border-radius: 3px;
   -moz-border-radius: 3px;
   -ms-border-radius: 3px;
@@ -1961,16 +2102,6 @@ body.page-node .pane-views-panes h2 {
 .pane-commons-events-upcoming .block-inner {
   margin: 0;
 }
-.pane-commons-featured-panel-pane-1 .block-inner .pane-title,
-.pane-commons-events-upcoming .block-inner .pane-title {
-  padding: 20px 20px 0 20px;
-  line-height: 20px;
-}
-.pane-commons-featured-panel-pane-1 .block-inner .views-row,
-.pane-commons-events-upcoming .block-inner .views-row {
-  padding: 10px 20px 10px 20px;
-  border-bottom: 1px solid #eeeeee;
-}
 .pane-commons-featured-panel-pane-1 .block-inner .views-row-last,
 .pane-commons-events-upcoming .block-inner .views-row-last {
   border-bottom: none;
@@ -2018,11 +2149,15 @@ body.page-node .pane-views-panes h2 {
   margin-left: 0;
 }
 
-.view-commons-radioactivity-groups-most-active .type-Wiki, .view-commons-groups-recent-content .type-Wiki, .view-commons-radioactivity-groups-active-in-group .type-Wiki {
+.view-commons-radioactivity-groups-most-active .type-Wiki,
+.view-commons-groups-recent-content .type-Wiki,
+.view-commons-radioactivity-groups-active-in-group .type-Wiki {
   font-size: 12px;
 }
-.view-commons-radioactivity-groups-most-active .type-Wiki:before, .view-commons-groups-recent-content .type-Wiki:before, .view-commons-radioactivity-groups-active-in-group .type-Wiki:before {
-  content: '';
+.view-commons-radioactivity-groups-most-active .type-Wiki:before,
+.view-commons-groups-recent-content .type-Wiki:before,
+.view-commons-radioactivity-groups-active-in-group .type-Wiki:before {
+  content: "";
   background: url('../images/icons-se7682cf316.png') 0 -491px no-repeat;
   width: 13px;
   height: 13px;
@@ -2032,11 +2167,15 @@ body.page-node .pane-views-panes h2 {
   top: 1px;
   margin-right: 6px;
 }
-.view-commons-radioactivity-groups-most-active .type-Event, .view-commons-groups-recent-content .type-Event, .view-commons-radioactivity-groups-active-in-group .type-Event {
+.view-commons-radioactivity-groups-most-active .type-Event,
+.view-commons-groups-recent-content .type-Event,
+.view-commons-radioactivity-groups-active-in-group .type-Event {
   font-size: 12px;
 }
-.view-commons-radioactivity-groups-most-active .type-Event:before, .view-commons-groups-recent-content .type-Event:before, .view-commons-radioactivity-groups-active-in-group .type-Event:before {
-  content: '';
+.view-commons-radioactivity-groups-most-active .type-Event:before,
+.view-commons-groups-recent-content .type-Event:before,
+.view-commons-radioactivity-groups-active-in-group .type-Event:before {
+  content: "";
   background: url('../images/icons-se7682cf316.png') 0 -715px no-repeat;
   width: 12px;
   height: 12px;
@@ -2046,11 +2185,15 @@ body.page-node .pane-views-panes h2 {
   top: 1px;
   margin-right: 6px;
 }
-.view-commons-radioactivity-groups-most-active .type-Poll, .view-commons-groups-recent-content .type-Poll, .view-commons-radioactivity-groups-active-in-group .type-Poll {
+.view-commons-radioactivity-groups-most-active .type-Poll,
+.view-commons-groups-recent-content .type-Poll,
+.view-commons-radioactivity-groups-active-in-group .type-Poll {
   font-size: 12px;
 }
-.view-commons-radioactivity-groups-most-active .type-Poll:before, .view-commons-groups-recent-content .type-Poll:before, .view-commons-radioactivity-groups-active-in-group .type-Poll:before {
-  content: '';
+.view-commons-radioactivity-groups-most-active .type-Poll:before,
+.view-commons-groups-recent-content .type-Poll:before,
+.view-commons-radioactivity-groups-active-in-group .type-Poll:before {
+  content: "";
   background: url('../images/icons-se7682cf316.png') 0 -811px no-repeat;
   width: 11px;
   height: 11px;
@@ -2060,11 +2203,15 @@ body.page-node .pane-views-panes h2 {
   top: 1px;
   margin-right: 6px;
 }
-.view-commons-radioactivity-groups-most-active .type-Post, .view-commons-groups-recent-content .type-Post, .view-commons-radioactivity-groups-active-in-group .type-Post {
+.view-commons-radioactivity-groups-most-active .type-Post,
+.view-commons-groups-recent-content .type-Post,
+.view-commons-radioactivity-groups-active-in-group .type-Post {
   font-size: 12px;
 }
-.view-commons-radioactivity-groups-most-active .type-Post:before, .view-commons-groups-recent-content .type-Post:before, .view-commons-radioactivity-groups-active-in-group .type-Post:before {
-  content: '';
+.view-commons-radioactivity-groups-most-active .type-Post:before,
+.view-commons-groups-recent-content .type-Post:before,
+.view-commons-radioactivity-groups-active-in-group .type-Post:before {
+  content: "";
   background: url('../images/icons-se7682cf316.png') 0 -970px no-repeat;
   width: 11px;
   height: 11px;
@@ -2074,11 +2221,21 @@ body.page-node .pane-views-panes h2 {
   top: 1px;
   margin-right: 6px;
 }
-.view-commons-radioactivity-groups-most-active .type-Question, .view-commons-radioactivity-groups-most-active .type-Answer, .view-commons-groups-recent-content .type-Question, .view-commons-groups-recent-content .type-Answer, .view-commons-radioactivity-groups-active-in-group .type-Question, .view-commons-radioactivity-groups-active-in-group .type-Answer {
+.view-commons-radioactivity-groups-most-active .type-Question,
+.view-commons-radioactivity-groups-most-active .type-Answer,
+.view-commons-groups-recent-content .type-Question,
+.view-commons-groups-recent-content .type-Answer,
+.view-commons-radioactivity-groups-active-in-group .type-Question,
+.view-commons-radioactivity-groups-active-in-group .type-Answer {
   font-size: 12px;
 }
-.view-commons-radioactivity-groups-most-active .type-Question:before, .view-commons-radioactivity-groups-most-active .type-Answer:before, .view-commons-groups-recent-content .type-Question:before, .view-commons-groups-recent-content .type-Answer:before, .view-commons-radioactivity-groups-active-in-group .type-Question:before, .view-commons-radioactivity-groups-active-in-group .type-Answer:before {
-  content: '';
+.view-commons-radioactivity-groups-most-active .type-Question:before,
+.view-commons-radioactivity-groups-most-active .type-Answer:before,
+.view-commons-groups-recent-content .type-Question:before,
+.view-commons-groups-recent-content .type-Answer:before,
+.view-commons-radioactivity-groups-active-in-group .type-Question:before,
+.view-commons-radioactivity-groups-active-in-group .type-Answer:before {
+  content: "";
   background: url('../images/icons-se7682cf316.png') 0 -619px no-repeat;
   width: 13px;
   height: 13px;
@@ -2131,7 +2288,7 @@ body.page-node .pane-views-panes h2 {
   margin-right: 3px;
   position: relative;
   top: 1px;
-  content: '';
+  content: "";
   top: 3px;
 }
 
@@ -2142,7 +2299,7 @@ body.page-node .pane-views-panes h2 {
   margin: 0 0 0 18px;
 }
 .view-id-commons_events_upcoming .views-field-title {
-  background-image: url('../images/icons/icon-gray-event.png?1361802894');
+  background-image: url('../images/icons/icon-gray-event.png?1363371593');
   background-repeat: no-repeat;
   background-position: left 4px;
   margin: 0;
@@ -2159,77 +2316,97 @@ body.page-node .pane-views-panes h2 {
   font-size: 0.85em;
 }
 
-.view-id-commons_groups_contributors table {
+.views-view-grid {
   border: none;
+  margin: 0;
 }
-.view-id-commons_groups_contributors tbody tr {
+.views-view-grid tbody tr {
   border-top: none;
-}
-.view-id-commons_groups_contributors .user-picture:after {
   background: none;
 }
+.views-view-grid td {
+  padding: 5px;
+}
+
+.grid-grouping-title {
+  font-size: 1em;
+  color: #858585;
+  margin-bottom: 10px;
+}
 
 .pager a {
   padding: 5px 20px;
 }
 
-.view-commons-groups-directory h2, .view-commons-homepage-content .node-teaser.node-group h2 {
+.view-commons-groups-directory h2,
+.view-commons-homepage-content .node-teaser.node-group h2 {
   font-size: 26px;
   line-height: 1em;
   margin: 10px 0 5px 0;
 }
-.view-commons-groups-directory .block-inner .pane-title, .view-commons-homepage-content .node-teaser.node-group .block-inner .pane-title {
+.view-commons-groups-directory .block-inner .pane-title,
+.view-commons-homepage-content .node-teaser.node-group .block-inner .pane-title {
   display: none;
 }
-.view-commons-groups-directory .pane-node-field-group-logo, .view-commons-homepage-content .node-teaser.node-group .pane-node-field-group-logo {
-  float: left;
-  margin-bottom: 3px;
-  margin-top: 3px;
-}
-.view-commons-groups-directory .pane-node-field-group-logo .field-name-field-group-logo a, .view-commons-homepage-content .node-teaser.node-group .pane-node-field-group-logo .field-name-field-group-logo a {
-  display: block;
-  border: 3px solid white;
-  -webkit-border-radius: 2px;
-  -moz-border-radius: 2px;
-  -ms-border-radius: 2px;
-  -o-border-radius: 2px;
-  border-radius: 2px;
-  box-shadow: 1px 1px 3px #666666;
-}
-.view-commons-groups-directory .pane-node-field-group-logo .field-name-field-group-logo a img, .view-commons-homepage-content .node-teaser.node-group .pane-node-field-group-logo .field-name-field-group-logo a img {
-  display: block;
-}
-.view-commons-groups-directory > .view-content > .views-row, .view-commons-groups-directory > .view-filters, .view-commons-homepage-content .node-teaser.node-group > .view-content > .views-row, .view-commons-homepage-content .node-teaser.node-group > .view-filters {
+.view-commons-groups-directory > .view-content > .views-row,
+.view-commons-groups-directory > .view-filters,
+.view-commons-homepage-content .node-teaser.node-group > .view-content > .views-row,
+.view-commons-homepage-content .node-teaser.node-group > .view-filters {
   position: relative;
 }
-.view-commons-groups-directory .view-filters .views-exposed-widgets, .view-commons-homepage-content .node-teaser.node-group .view-filters .views-exposed-widgets {
+.view-commons-groups-directory .view-filters .views-exposed-widgets,
+.view-commons-homepage-content .node-teaser.node-group .view-filters .views-exposed-widgets {
   margin-bottom: 0;
 }
 .view-commons-groups-directory .view-filters .views-widget,
-.view-commons-groups-directory .view-filters label, .view-commons-homepage-content .node-teaser.node-group .view-filters .views-widget,
+.view-commons-groups-directory .view-filters label,
+.view-commons-homepage-content .node-teaser.node-group .view-filters .views-widget,
 .view-commons-homepage-content .node-teaser.node-group .view-filters label {
   display: inline-block;
 }
-.view-commons-groups-directory .view-filters label, .view-commons-homepage-content .node-teaser.node-group .view-filters label {
+.view-commons-groups-directory .view-filters label,
+.view-commons-homepage-content .node-teaser.node-group .view-filters label {
   color: #333333;
   font-size: 0.85em;
   font-weight: normal;
   margin: 0 15px 0 0;
+  line-height: 2em;
 }
-.view-commons-groups-directory .view-filters .form-text, .view-commons-homepage-content .node-teaser.node-group .view-filters .form-text {
+.view-commons-groups-directory .view-filters .form-text,
+.view-commons-homepage-content .node-teaser.node-group .view-filters .form-text {
   width: 400px;
   -webkit-box-shadow: #858585 1px 1px 2px inset;
   -moz-box-shadow: #858585 1px 1px 2px inset;
   box-shadow: #858585 1px 1px 2px inset;
   border-color: #c2c2c2;
 }
-.view-commons-groups-directory .view-filters .form-submit, .view-commons-homepage-content .node-teaser.node-group .view-filters .form-submit {
+.view-commons-groups-directory .view-filters .form-submit,
+.view-commons-homepage-content .node-teaser.node-group .view-filters .form-submit {
   margin-top: 1px;
 }
-.view-commons-groups-directory .pane-node-body, .view-commons-homepage-content .node-teaser.node-group .pane-node-body {
+.view-commons-groups-directory .pane-node-body,
+.view-commons-homepage-content .node-teaser.node-group .pane-node-body {
   margin-bottom: 0;
 }
 
+.pane-node-field-group-logo {
+  float: left;
+  margin: 0 10px 10px 0;
+}
+.pane-node-field-group-logo .field-name-field-group-logo a {
+  display: block;
+  border: 3px solid white;
+  -webkit-border-radius: 2px;
+  -moz-border-radius: 2px;
+  -ms-border-radius: 2px;
+  -o-border-radius: 2px;
+  border-radius: 2px;
+  box-shadow: 1px 1px 3px #666666;
+}
+.pane-node-field-group-logo .field-name-field-group-logo a img {
+  display: block;
+}
+
 .pane-commons-groups-recent-content {
   width: 50%;
   float: left;
@@ -2292,7 +2469,7 @@ body.page-node .pane-views-panes h2 {
   z-index: 15;
 }
 .pane-commons-contributors-group-panel-pane-1 td a span:after {
-  content: '';
+  content: "";
   display: block;
   width: 0px;
   height: 0px;
@@ -2311,7 +2488,8 @@ body.page-node .pane-views-panes h2 {
   display: block;
 }
 
-.region-two-66-33-second .view-commons-contributors-group table, .region-two-66-33-second .view-commons-contributors-group tbody {
+.region-two-66-33-second .view-commons-contributors-group table,
+.region-two-66-33-second .view-commons-contributors-group tbody {
   margin: 0;
   border: none;
 }
@@ -2333,13 +2511,16 @@ body.page-node .pane-views-panes h2 {
   width: 40px;
 }
 
-#views-exposed-form-commons-homepage-content-panel-pane-1 .views-submit-button, #views-exposed-form-commons-bw-all-page-1 .views-submit-button {
+#views-exposed-form-commons-homepage-content-panel-pane-1 .views-submit-button,
+#views-exposed-form-commons-bw-all-page-1 .views-submit-button {
   margin-left: 20px;
 }
-#views-exposed-form-commons-homepage-content-panel-pane-1 .views-exposed-widget, #views-exposed-form-commons-bw-all-page-1 .views-exposed-widget {
+#views-exposed-form-commons-homepage-content-panel-pane-1 .views-exposed-widget,
+#views-exposed-form-commons-bw-all-page-1 .views-exposed-widget {
   padding: 0;
 }
-#views-exposed-form-commons-homepage-content-panel-pane-1 .views-exposed-widget .form-submit, #views-exposed-form-commons-bw-all-page-1 .views-exposed-widget .form-submit {
+#views-exposed-form-commons-homepage-content-panel-pane-1 .views-exposed-widget .form-submit,
+#views-exposed-form-commons-bw-all-page-1 .views-exposed-widget .form-submit {
   margin-top: 0;
 }
 
@@ -2349,11 +2530,11 @@ body.page-node .pane-views-panes h2 {
 
 .pane-node-flag-commons-follow-group-link {
   position: absolute;
-  right: 5px;
+  right: 10px;
   top: 22px;
 }
 .pane-node-flag-commons-follow-group-link .flag-action:before {
-  content: '';
+  content: "";
   background: url('../images/icons-se7682cf316.png') 0 -590px no-repeat;
   width: 11px;
   height: 9px;
@@ -2368,16 +2549,17 @@ body.page-node .pane-views-panes h2 {
 .view-id-commons_featured .views-field-title .field-content {
   background-repeat: no-repeat;
 }
-.view-id-commons_featured .views-field-field-date, .view-id-commons_featured .views-field-field-address {
+.view-id-commons_featured .views-field-field-date,
+.view-id-commons_featured .views-field-field-address {
   margin: 0 0 0 18px;
 }
 .view-id-commons_featured .type-Event {
-  background-image: url('../images/icons/icon-gray-event.png?1361802894');
+  background-image: url('../images/icons/icon-gray-event.png?1363371593');
   background-position: left 1px;
   padding: 0 0 0 18px;
 }
 .view-id-commons_featured .type-Post {
-  background-image: url('../images/icons/icon-gray-post.png?1361802894');
+  background-image: url('../images/icons/icon-gray-post.png?1363371593');
   background-position: left 1px;
   padding: 0 0 0 18px;
 }
@@ -2405,7 +2587,8 @@ body.page-node .pane-views-panes h2 {
   margin-top: 0;
 }
 
-.views-widget-sort-by .form-select-wrapper, .form-item-sort-order .form-select-wrapper {
+.views-widget-sort-by .form-select-wrapper,
+.form-item-sort-order .form-select-wrapper {
   float: left;
 }
 
@@ -2482,7 +2665,7 @@ body.page-node .pane-views-panes h2 {
   margin-right: 3px;
   position: relative;
   top: 1px;
-  content: '';
+  content: "";
   position: absolute;
   left: 10px;
   top: 13px;
@@ -2495,7 +2678,7 @@ body.page-node .pane-views-panes h2 {
   margin-right: 3px;
   position: relative;
   top: 1px;
-  content: '';
+  content: "";
   position: absolute;
   left: 10px;
   top: 13px;
@@ -2508,7 +2691,7 @@ body.page-node .pane-views-panes h2 {
   margin-right: 3px;
   position: relative;
   top: 1px;
-  content: '';
+  content: "";
   position: absolute;
   left: 10px;
   top: 13px;
@@ -2521,7 +2704,7 @@ body.page-node .pane-views-panes h2 {
   margin-right: 3px;
   position: relative;
   top: 1px;
-  content: '';
+  content: "";
   position: absolute;
   left: 10px;
   top: 13px;
@@ -2534,7 +2717,7 @@ body.page-node .pane-views-panes h2 {
   margin-right: 3px;
   position: relative;
   top: 1px;
-  content: '';
+  content: "";
   position: absolute;
   left: 10px;
   top: 13px;
@@ -2596,93 +2779,7 @@ body.page-node .pane-views-panes h2 {
 /* =============================================================================
  *   Block Styling
  * ========================================================================== */
-/*
- * Main wrapper for most blocks, block_system_main does not have it
- */
-.block {
-  margin-bottom: 20px;
-}
-
-/*
- * Inner wrapper for most blocks, good for margin, padding and borders, block_system_main does not have it
- */
-/*
- * The first block in the region
- */
-/*
- * The last block in the region
- */
-/*
- * Zebra striping for each block in the region
- */
-/*
- * Zebra striping for each block in the region
- */
-/*
- * Block title
- */
-.block-title {
-  margin: 0;
-}
-
-/*
- * Block content wrapper
- */
-/*
- * Match item list and block menu margin and padding
- */
-.block-content ul,
-.block-content ol {
-  padding: 0 0 0 15px;
-}
-.block-content li {
-  margin: 0;
-  padding: 0;
-}
-
-/*
- * Block for the latest news items in the first category
- */
-/*
- * Block for the latest news items in the first feed
- */
-/*
- * First block created with "Add block" link
- */
-/*
- * "Recent blog posts" block
- */
-/*
- * "Book navigation" block for the current book's table of contents
- */
-/*
- * "Recent comments" block
- */
-/*
- * "Active forum topics" block
- */
-/*
- * "New forum topics" block
- */
-/*
- * Language switcher block
- */
-/*
- * Custom menu block
- */
-/*
- * "Recent content" block
- */
-/*
- * "Syndicate" block for primary RSS feed; see also page.css's .feed-icon
- */
-/*
- * "Most recent poll" block
- */
-/*
- * "Author information" block for the profile of the page's author
- */
-/*
+/**
  * "Search form" block
  */
 .block-search {
@@ -2705,9 +2802,6 @@ body.page-node .pane-views-panes h2 {
   margin: 0 0 0 10px;
   position: relative;
 }
-.not-logged-in .block-search {
-  margin-top: 15px;
-}
 .block-search .block-inner {
   margin-left: 0;
   margin-right: 0;
@@ -2727,7 +2821,7 @@ body.page-node .pane-views-panes h2 {
   border: none !important;
   width: 12px !important;
   height: 12px !important;
-  background-image: url('../images/icons/ico_search_wht.png?1361802894') !important;
+  background-image: url('../images/icons/ico_search_wht.png?1363371593') !important;
   text-indent: -9999px !important;
   padding: 0 !important;
   margin: 10px 2px !important;
@@ -2743,42 +2837,6 @@ body.page-node .pane-views-panes h2 {
   display: block;
 }
 
-/*
- * "Shortcuts" block
- */
-/*
- * "Popular content" block
- */
-/*
- * "Main menu" block
- */
-/*
- * "Management" block for Drupal management menu
- */
-/*
- * "Navigation" block for Drupal navigation menu
- */
-/*
- * "User menu" block for Drupal user menu
- */
-/*
- * "System help" block
- */
-/*
- * "Main page content" block
- */
-/*
- * "Powered by Drupal" block
- */
-/*
- * "User login form" block
- */
-/*
- * "Who's new" block for a list of the newest users
- */
-/*
- * "Who's online" block for a list of the online users
- */
 /* =============================================================================
  *   Node Styling
  * ========================================================================== */
@@ -2800,7 +2858,7 @@ body.page-node .pane-views-panes h2 {
   z-index: 1;
 }
 .featured-node-tooltip:before {
-  content: '';
+  content: "";
   display: block;
   width: 0px;
   height: 0px;
@@ -2829,23 +2887,25 @@ body.page-node .pane-views-panes h2 {
 body.page-node.node-type-group h2#page-title {
   font-size: 54px;
   line-height: 54px;
-  font-weight: normal;
 }
 
-/*
- * All nodes are given a node-FOO class that describes the type of content that
- * it is. If you create a new content type called "my-custom-type", it will
- * receive a "node-my-custom-type" class.
+/**
+ * Node forms
  */
+.node-form {
+  /* Polls have some bad, over specific, styles so this is what needs to be
+     done. */
+}
+.node-form #poll-choice-table .form-text {
+  width: 100%;
+}
+
 /* =============================================================================
  *   Comment Styling - Comments, comment wrapper, comment form
  * ========================================================================== */
-/*
+/**
  * Wrapper for the list of comments and its titles
  */
-#comments {
-  margin: 1.5em 0;
-}
 #comments h2.comment-title {
   margin: 0;
 }
@@ -2853,38 +2913,58 @@ body.page-node.node-type-group h2#page-title {
   margin: 0;
 }
 
-/*
+/**
  * Wrapper for a single comment
  */
 .comment {
   margin-bottom: 20px;
 }
 
-/*
- * Comment states
- */
-/*
- * Preview of the comment before submitting new or updated comment
- */
-/*
+/**
  * "New" marker for comments that are new for the current user
  */
 .new {
   color: #cc0000;
 }
 
-/*
+/**
  * Nested comments are indented
  */
 .indented {
   margin-left: 40px;
 }
 
+.has-rate-widget {
+  margin-right: 6em;
+  position: relative;
+}
+@media only screen and (max-width: 768px) {
+  .has-rate-widget {
+    margin-right: 0;
+  }
+}
+
 .rate-widget-commons_thumbs_up_down {
   float: right;
+  position: absolute;
+  top: 0;
+  right: -6em;
+  margin-top: 0;
 }
-.rate-widget-commons_thumbs_up_down ul {
-  padding: 0;
+@media only screen and (max-width: 768px) {
+  .rate-widget-commons_thumbs_up_down {
+    position: static;
+    float: left;
+    margin: 20px auto;
+  }
+}
+
+.related-information {
+  clear: both;
+  margin: 20px 0;
+}
+.related-information .field {
+  float: left;
 }
 
 /* =============================================================================
@@ -2906,7 +2986,7 @@ tr.odd .form-item, tr.even .form-item {
   white-space: normal;
 }
 
-/*
+/**
  * Wrapper for a form element (or group of form elements) and its label
  */
 .form-item input.error,
@@ -2921,7 +3001,7 @@ tr.odd .form-item, tr.even .form-item {
   font-size: 0.85em;
 }
 
-/*
+/**
  * Highlight marks and form required mark
  */
 .marker,
@@ -2929,7 +3009,7 @@ tr.odd .form-item, tr.even .form-item {
   color: #cc0000;
 }
 
-/*
+/**
  * The submit button
  */
 .container-inline div,
@@ -2937,17 +3017,14 @@ tr.odd .form-item, tr.even .form-item {
   display: inline;
 }
 
-/*
+/**
  * Define consistent borders
  */
 fieldset {
   border: 1px solid #cccccc;
 }
 
-/*
- * Tips for Drupal's input formats
- */
-/*
+/**
  * Buttons used by contrib modules like Media
  */
 a.button {
@@ -2956,7 +3033,7 @@ a.button {
   appearance: button;
 }
 
-/*
+/**
  * Password confirmation
  */
 .password-parent,
@@ -2964,13 +3041,19 @@ a.button {
   margin: 0;
 }
 
-input[type="text"] {
+input[type="text"],
+textarea {
+  -webkit-box-sizing: border-box;
+  -moz-box-sizing: border-box;
+  box-sizing: border-box;
   -webkit-border-radius: 3px;
   -moz-border-radius: 3px;
   -ms-border-radius: 3px;
   -o-border-radius: 3px;
   border-radius: 3px;
-  border: 1px solid #b2b2b2;
+  border: 1px solid #B2B2B2;
+  width: 100%;
+  max-width: 100%;
 }
 
 button,
@@ -2988,7 +3071,7 @@ input[type="submit"] {
   background-image: -moz-linear-gradient(top, #ececec 0%, #e6e6e6 22%, #e6e6e6 100%);
   background-image: -o-linear-gradient(top, #ececec 0%, #e6e6e6 22%, #e6e6e6 100%);
   background-image: linear-gradient(top, #ececec 0%, #e6e6e6 22%, #e6e6e6 100%);
-  border: 1px solid #bbbbbb;
+  border: 1px solid #BBBBBB;
   font-weight: normal;
   margin: 0 10px 0 0;
 }
@@ -3017,8 +3100,8 @@ form.commons-events-form-float input {
 }
 
 #edit-field-topics-und {
-  border-top: 2px groove #8a8a8a;
-  border-left: 2px groove #8a8a8a;
+  border-top: 2px groove #8A8A8A;
+  border-left: 2px groove #8A8A8A;
 }
 
 form.commons-events-form-float {
@@ -3026,6 +3109,10 @@ form.commons-events-form-float {
   font-size: .85em;
   padding: 0;
   border: none;
+  -webkit-border-radius: 0;
+  -moz-border-radius: 0;
+  -ms-border-radius: 0;
+  -o-border-radius: 0;
   border-radius: 0;
   max-width: 80px;
   margin-right: -90px;
@@ -3034,6 +3121,18 @@ form.commons-events-form-float {
 form.commons-events-form-float input, form.commons-events-form-float input:hover {
   padding: 3px 10px;
 }
+@media only screen and (max-width: 768px) {
+  form.commons-events-form-float {
+    float: none;
+    margin: 1em 0;
+    max-width: inherit;
+    text-align: left;
+  }
+  form.commons-events-form-float .commons-event-status {
+    display: inline-block;
+    margin-left: 1em;
+  }
+}
 
 /* =============================================================================
  *   Tables
@@ -3101,7 +3200,7 @@ tr.even td.active {
   background-color: #ebebeb;
 }
 
-/*
+/**
  * Forum tables
  * Core sets white-space to nowrap, which makes no sense
  */
@@ -3126,7 +3225,7 @@ div.messages ul {
   margin-bottom: 0;
 }
 
-/*
+/**
  * Unpublished nodes
  */
 .node-unpublished p.unpublished,
@@ -3145,10 +3244,6 @@ div.messages ul {
   text-transform: uppercase;
   word-wrap: break-word;
 }
-.ie6-7 .node-unpublished p.unpublished > *, .ie6-7
-.comment-unpublished p.unpublished > * {
-  position: relative;
-}
 
 /* =============================================================================
  *    Maintenance pages
@@ -3177,7 +3272,7 @@ div.messages ul {
 /* =============================================================================
  *   Misc overrides for contrib modules
  * ========================================================================== */
-/*
+/**
  * Admin menu overrides
  */
 #admin-menu {
@@ -3185,7 +3280,7 @@ div.messages ul {
   padding: 0;
 }
 
-/*
+/**
  * Devel Module
  */
 .dev-query {
@@ -3193,7 +3288,7 @@ div.messages ul {
   padding: 30px;
 }
 
-/*
+/**
  * Styleguide module tweaks
  */
 #styleguide-header {
@@ -3222,7 +3317,6 @@ body.front .region-three-33-top h1 {
 body.front .region-three-33-top .commons_home-welcome-image {
   float: right;
 }
-
 body.front.not-logged-in #block-system-main .pane-1 .pane-title {
   font-weight: 700;
   font-size: 38px;
@@ -3262,17 +3356,20 @@ body.front.logged-in .view-commons-homepage-content .item-list {
   padding: 10px 0 0 0;
 }
 body.front.logged-in #views-exposed-form-commons-homepage-content-panel-pane-1 .views-exposed-widgets {
-  padding: 10px 10px 10px 10px;
+  padding: 10px 0;
   margin-bottom: 0;
 }
-body.front.logged-in #views-exposed-form-commons-homepage-content-panel-pane-1 .views-exposed-widgets.widgets-active {
-  padding-bottom: 10px;
-}
 body.front.logged-in #views-exposed-form-commons-homepage-content-panel-pane-1 .views-exposed-widgets.widgets-active .selectBox-dropdown {
   background-color: white;
 }
 
-body.front.logged-in .view-commons-homepage-content .article.node.no-user-picture .node-header, body.front.logged-in .view-commons-homepage-content .article.node.no-user-picture .node-content, body.front.logged-in .view-commons-homepage-content .article.node.no-user-picture .author-datetime, body.front.logged-in .view-commons-homepage-content .article.node.no-user-picture .links, body.front.logged-in .view-commons-homepage-content .article.node.node-page .node-header, body.front.logged-in .view-commons-homepage-content .article.node.node-page .node-content, body.front.logged-in .view-commons-homepage-content .article.node.node-page .author-datetime, body.front.logged-in .view-commons-homepage-content .article.node.node-page .links {
+body.front.logged-in .view-commons-homepage-content .article.node.no-user-picture .node-header,
+body.front.logged-in .view-commons-homepage-content .article.node.no-user-picture .node-content,
+body.front.logged-in .view-commons-homepage-content .article.node.no-user-picture .author-datetime,
+body.front.logged-in .view-commons-homepage-content .article.node.no-user-picture .links, body.front.logged-in .view-commons-homepage-content .article.node.node-page .node-header,
+body.front.logged-in .view-commons-homepage-content .article.node.node-page .node-content,
+body.front.logged-in .view-commons-homepage-content .article.node.node-page .author-datetime,
+body.front.logged-in .view-commons-homepage-content .article.node.node-page .links {
   margin-left: 0;
 }
 
@@ -3295,28 +3392,28 @@ body.front.logged-in .view-commons-homepage-content .article.node.no-user-pictur
   display: none;
 }
 
-/*
+/**
  *  Placeholder styles
  */
 #menu-bar.nav .menu-item-193 a {
-  background-image: url('../images/icons/icon-home.png?1361802894');
+  background-image: url('../images/icons/icon-home.png?1363371593');
 }
 #menu-bar.nav .menu-item-194 a {
-  background-image: url('../images/icons/icon-groups.png?1361802894');
+  background-image: url('../images/icons/icon-groups.png?1363371593');
 }
 #menu-bar.nav .menu-item-195 a {
-  background-image: url('../images/icons/icon-events.png?1361802894');
+  background-image: url('../images/icons/icon-events.png?1363371593');
 }
 
-.page-events .region-three-25-50-25-first {
-  margin-right: 0;
-}
+/**
+ * Events Page
+ */
 .page-events .region-three-25-50-25-first h3 {
   color: #666666;
   font-size: 18px;
 }
 .page-events .region-three-25-50-25-first .panel-pane {
-  border-bottom: 1px solid #eeeeee;
+  border-bottom: 1px solid #eee;
   padding-bottom: 5px;
   margin-bottom: 14px;
 }
@@ -3329,6 +3426,54 @@ body.front.logged-in .view-commons-homepage-content .article.node.no-user-pictur
 .page-events div.search-result-wrapper h3.title a {
   color: #2783b9;
 }
+@media only screen and (max-width: 768px) {
+  .page-events .three-25-50-25 > .filters-processed {
+    clear: none;
+    position: absolute;
+    right: 0;
+    float: right;
+    width: 0;
+    height: 0;
+    margin: 0;
+    padding: 0;
+    font-size: .88em;
+    background: white;
+    border: 1px solid #eeeeee;
+    z-index: 1;
+  }
+  .page-events .three-25-50-25 > .filters-processed .commons-pod {
+    margin: 0;
+    padding: 10px 0;
+    -webkit-border-radius: 0 0 0 3px;
+    -moz-border-radius: 0 0 0 3px;
+    -ms-border-radius: 0 0 0 3px;
+    -o-border-radius: 0 0 0 3px;
+    border-radius: 0 0 0 3px;
+  }
+  .page-events .three-25-50-25 > .filters-processed .panel-pane {
+    display: none;
+  }
+  .page-events .three-25-50-25 > .filters-processed .filter-trigger {
+    display: block;
+  }
+  .page-events .three-25-50-25 > .expanded {
+    margin-right: 0;
+    width: 75%;
+    height: auto;
+    opacity: 1;
+  }
+  .page-events .three-25-50-25 > .expanded .commons-pod {
+    padding: 10px;
+  }
+  .page-events .three-25-50-25 > .expanded .panel-pane {
+    display: block;
+  }
+}
+@media only screen and (max-width: 768px) {
+  .page-events .filter-overlay.expanded {
+    display: block;
+  }
+}
 
 .pane-commons-events-commons-events-create-event-link {
   text-align: right;
@@ -3347,29 +3492,89 @@ body.front.logged-in .view-commons-homepage-content .article.node.no-user-pictur
   margin-right: 3px;
   position: relative;
   top: 1px;
-  content: '';
+  content: "";
   top: 2px;
   margin-right: 6px;
 }
 
-.page-search .region-two-33-66-first {
-  margin-right: 0;
-}
-.page-search .region-two-33-66-first h3 {
+/**
+ * Search
+ */
+.page-search .two-33-66 > .region-two-33-66-first h3 {
+  margin-bottom: 10px;
   color: #666666;
-  font-size: 18px;
+  font-size: 1.2em;
 }
-.page-search .region-two-33-66-first .panel-pane {
-  border-bottom: 1px solid #eeeeee;
+.page-search .two-33-66 > .region-two-33-66-first .panel-pane {
+  border-bottom: 1px solid #eee;
   padding-bottom: 5px;
-  margin-bottom: 14px;
+  margin-bottom: 15px;
 }
-.page-search .region-two-33-66-second > div {
-  padding-left: 15px;
+@media only screen and (max-width: 480px) {
+  .page-search .two-33-66 > .filters-processed {
+    clear: none;
+    position: absolute;
+    right: 0;
+    float: right;
+    width: 0;
+    height: 0;
+    margin: 0;
+    padding: 0;
+    font-size: .88em;
+    background: white;
+    border: 1px solid #eeeeee;
+    z-index: 1;
+  }
+  .page-search .two-33-66 > .filters-processed .commons-pod {
+    margin: 0;
+    padding: 10px 0;
+    -webkit-border-radius: 0 0 0 3px;
+    -moz-border-radius: 0 0 0 3px;
+    -ms-border-radius: 0 0 0 3px;
+    -o-border-radius: 0 0 0 3px;
+    border-radius: 0 0 0 3px;
+  }
+  .page-search .two-33-66 > .filters-processed .panel-pane {
+    display: none;
+  }
+  .page-search .two-33-66 > .filters-processed .filter-trigger {
+    display: block;
+  }
+  .page-search .two-33-66 > .expanded {
+    margin-right: 0;
+    width: 75%;
+    height: auto;
+    opacity: 1;
+  }
+  .page-search .two-33-66 > .expanded .commons-pod {
+    padding: 10px;
+  }
+  .page-search .two-33-66 > .expanded .panel-pane {
+    display: block;
+  }
+}
+@media only screen and (max-width: 480px) {
+  .page-search .filter-overlay.expanded {
+    display: block;
+  }
+}
+
+.facetapi-processed, .block-content .facetapi-processed {
+  margin-bottom: 0;
+  padding-left: 0;
+}
+.facetapi-processed li.last, .block-content .facetapi-processed li.last {
+  margin-bottom: 0;
 }
 
+.search-results-title,
 .search-results-wrapper > h2 {
-  margin: 0 0 10px;
+  font-weight: 300;
+  margin: 20px 0;
+}
+
+.search-results, .block-content .search-results {
+  padding: 0;
 }
 
 .search-result {
@@ -3387,9 +3592,10 @@ body.front.logged-in .view-commons-homepage-content .article.node.no-user-pictur
 .search-result h2 {
   font-size: 1.429em;
   line-height: 1.2em;
-  margin: 0.5em 0 0;
+  margin: .5em 0 0;
 }
 .search-result .title {
+  margin-top: 0;
   margin-bottom: .2em;
 }
 .search-result .search-result-url {
@@ -3415,6 +3621,9 @@ body.front.logged-in .view-commons-homepage-content .article.node.no-user-pictur
   float: right;
 }
 
+/**
+ * Notification settings
+ */
 .view-commons-follow-node .views-field-ops,
 .view-commons-follow-node .views-field-ops-1,
 .view-commons-follow-user .views-field-ops,
@@ -3434,6 +3643,9 @@ body.front.logged-in .view-commons-homepage-content .article.node.no-user-pictur
   text-align: center;
 }
 
+/**
+ * Commons Origins Pallete Choices
+ */
 #edit-commons-origins-palette .form-item-commons-origins-palette {
   clear: both;
   margin-bottom: 10px;
@@ -3445,11 +3657,17 @@ body.front.logged-in .view-commons-homepage-content .article.node.no-user-pictur
   margin-left: 20px;
 }
 
+/**
+ * Login and signup form
+ */
 #user-login input[type="text"], #user-login input[type="password"], #user-register-form input[type="text"], #user-register-form input[type="password"] {
   width: 20em;
   max-width: 100%;
 }
 
+/**
+ * Add the color palettes
+ */
 .palette-orange-red h2 {
   color: #830c00;
 }
@@ -3488,11 +3706,21 @@ body.front.logged-in .view-commons-homepage-content .article.node.no-user-pictur
 .palette-orange-red ul.commons-utility-links li.last {
   border-left-color: #d54f1a;
 }
-.palette-orange-red .quicktabs-style-commons-pills ul.quicktabs-tabs li.active a, .palette-orange-red ul.primary.tabs li.active a {
-  background-color: #830c00;
+.palette-orange-red .quicktabs-style-commons-pills ul.quicktabs-tabs li a,
+.palette-orange-red .quicktabs-style-commons-pills ul.quicktabs-tabs li a span,
+.palette-orange-red ul.primary.tabs li a,
+.palette-orange-red ul.primary.tabs li a span {
+  color: #d54f1a;
 }
-.palette-orange-red .quicktabs-style-commons-pills ul.quicktabs-tabs li.active a:after {
-  border-color: #830c00 transparent transparent transparent;
+.palette-orange-red .quicktabs-style-commons-pills ul.quicktabs-tabs li a:hover,
+.palette-orange-red ul.primary.tabs li a:hover {
+  color: #a83e14;
+}
+.palette-orange-red .quicktabs-style-commons-pills ul.quicktabs-tabs li.active a,
+.palette-orange-red .quicktabs-style-commons-pills ul.quicktabs-tabs li.active a span,
+.palette-orange-red ul.primary.tabs li.active a,
+.palette-orange-red ul.primary.tabs li.active a span {
+  color: #333333;
 }
 .palette-orange-red .block-search {
   background-color: #9e3b13;
@@ -3522,7 +3750,7 @@ body.front.logged-in .view-commons-homepage-content .article.node.no-user-pictur
   -moz-box-shadow: #a20f00 1px 0px 0px;
   box-shadow: #a20f00 1px 0px 0px;
 }
-.palette-orange-red .commons-sign-up, .palette-orange-red .pane-commons-groups-commons-groups-create-group a, .pane-commons-groups-commons-groups-create-group .palette-orange-red a, .palette-orange-red #quicktabs-container-commons_bw .quicktabs-tabpage .attachment-before > a, #quicktabs-container-commons_bw .quicktabs-tabpage .palette-orange-red .attachment-before > a, .palette-orange-red #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add a, #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add .palette-orange-red a, .palette-orange-red #content-column .view-content input[type="submit"], #content-column .view-content .palette-orange-red input[type="submit"], .palette-orange-red form.commons-events-form-float input, form.commons-events-form-float .palette-orange-red input, .palette-orange-red form.commons-events-form-float input:hover, form.commons-events-form-float .palette-orange-red input:hover, .palette-orange-red .pane-commons-events-commons-events-create-event-link a, .pane-commons-events-commons-events-create-event-link .palette-orange-red a {
+.palette-orange-red .button-alert, .palette-orange-red .commons-sign-up, .palette-orange-red .pane-commons-groups-commons-groups-create-group a, .pane-commons-groups-commons-groups-create-group .palette-orange-red a, .palette-orange-red #quicktabs-container-commons_bw .quicktabs-tabpage .attachment-before > a, #quicktabs-container-commons_bw .quicktabs-tabpage .palette-orange-red .attachment-before > a, .palette-orange-red #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add a, #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add .palette-orange-red a, .palette-orange-red #content-column .view-content input[type="submit"], #content-column .view-content .palette-orange-red input[type="submit"], .palette-orange-red form.commons-events-form-float input, form.commons-events-form-float .palette-orange-red input, .palette-orange-red form.commons-events-form-float input:hover, form.commons-events-form-float .palette-orange-red input:hover, .palette-orange-red .pane-commons-events-commons-events-create-event-link a, .pane-commons-events-commons-events-create-event-link .palette-orange-red a {
   box-shadow: 1px 1px 1px #feb431 inset, 0 3px 3px rgba(0, 0, 0, 0.09);
   background-color: #feb431;
   *zoom: 1;
@@ -3577,11 +3805,21 @@ body.front.logged-in .view-commons-homepage-content .article.node.no-user-pictur
 .palette-magenta-blue ul.commons-utility-links li.last {
   border-left-color: #e60074;
 }
-.palette-magenta-blue .quicktabs-style-commons-pills ul.quicktabs-tabs li.active a, .palette-magenta-blue ul.primary.tabs li.active a {
-  background-color: #891746;
+.palette-magenta-blue .quicktabs-style-commons-pills ul.quicktabs-tabs li a,
+.palette-magenta-blue .quicktabs-style-commons-pills ul.quicktabs-tabs li a span,
+.palette-magenta-blue ul.primary.tabs li a,
+.palette-magenta-blue ul.primary.tabs li a span {
+  color: #e60074;
 }
-.palette-magenta-blue .quicktabs-style-commons-pills ul.quicktabs-tabs li.active a:after {
-  border-color: #891746 transparent transparent transparent;
+.palette-magenta-blue .quicktabs-style-commons-pills ul.quicktabs-tabs li a:hover,
+.palette-magenta-blue ul.primary.tabs li a:hover {
+  color: #b3005a;
+}
+.palette-magenta-blue .quicktabs-style-commons-pills ul.quicktabs-tabs li.active a,
+.palette-magenta-blue .quicktabs-style-commons-pills ul.quicktabs-tabs li.active a span,
+.palette-magenta-blue ul.primary.tabs li.active a,
+.palette-magenta-blue ul.primary.tabs li.active a span {
+  color: #333333;
 }
 .palette-magenta-blue .block-search {
   background-color: #a90055;
@@ -3611,7 +3849,7 @@ body.front.logged-in .view-commons-homepage-content .article.node.no-user-pictur
   -moz-box-shadow: #a31b53 1px 0px 0px;
   box-shadow: #a31b53 1px 0px 0px;
 }
-.palette-magenta-blue .commons-sign-up, .palette-magenta-blue .pane-commons-groups-commons-groups-create-group a, .pane-commons-groups-commons-groups-create-group .palette-magenta-blue a, .palette-magenta-blue #quicktabs-container-commons_bw .quicktabs-tabpage .attachment-before > a, #quicktabs-container-commons_bw .quicktabs-tabpage .palette-magenta-blue .attachment-before > a, .palette-magenta-blue #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add a, #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add .palette-magenta-blue a, .palette-magenta-blue #content-column .view-content input[type="submit"], #content-column .view-content .palette-magenta-blue input[type="submit"], .palette-magenta-blue form.commons-events-form-float input, form.commons-events-form-float .palette-magenta-blue input, .palette-magenta-blue form.commons-events-form-float input:hover, form.commons-events-form-float .palette-magenta-blue input:hover, .palette-magenta-blue .pane-commons-events-commons-events-create-event-link a, .pane-commons-events-commons-events-create-event-link .palette-magenta-blue a {
+.palette-magenta-blue .button-alert, .palette-magenta-blue .commons-sign-up, .palette-magenta-blue .pane-commons-groups-commons-groups-create-group a, .pane-commons-groups-commons-groups-create-group .palette-magenta-blue a, .palette-magenta-blue #quicktabs-container-commons_bw .quicktabs-tabpage .attachment-before > a, #quicktabs-container-commons_bw .quicktabs-tabpage .palette-magenta-blue .attachment-before > a, .palette-magenta-blue #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add a, #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add .palette-magenta-blue a, .palette-magenta-blue #content-column .view-content input[type="submit"], #content-column .view-content .palette-magenta-blue input[type="submit"], .palette-magenta-blue form.commons-events-form-float input, form.commons-events-form-float .palette-magenta-blue input, .palette-magenta-blue form.commons-events-form-float input:hover, form.commons-events-form-float .palette-magenta-blue input:hover, .palette-magenta-blue .pane-commons-events-commons-events-create-event-link a, .pane-commons-events-commons-events-create-event-link .palette-magenta-blue a {
   box-shadow: 1px 1px 1px #69c5ec inset, 0 3px 3px rgba(0, 0, 0, 0.09);
   background-color: #69c5ec;
   *zoom: 1;
@@ -3666,11 +3904,21 @@ body.front.logged-in .view-commons-homepage-content .article.node.no-user-pictur
 .palette-blue-blue ul.commons-utility-links li.last {
   border-left-color: #0d8bb9;
 }
-.palette-blue-blue .quicktabs-style-commons-pills ul.quicktabs-tabs li.active a, .palette-blue-blue ul.primary.tabs li.active a {
-  background-color: #197bb1;
+.palette-blue-blue .quicktabs-style-commons-pills ul.quicktabs-tabs li a,
+.palette-blue-blue .quicktabs-style-commons-pills ul.quicktabs-tabs li a span,
+.palette-blue-blue ul.primary.tabs li a,
+.palette-blue-blue ul.primary.tabs li a span {
+  color: #0d8bb9;
 }
-.palette-blue-blue .quicktabs-style-commons-pills ul.quicktabs-tabs li.active a:after {
-  border-color: #197bb1 transparent transparent transparent;
+.palette-blue-blue .quicktabs-style-commons-pills ul.quicktabs-tabs li a:hover,
+.palette-blue-blue ul.primary.tabs li a:hover {
+  color: #0a6789;
+}
+.palette-blue-blue .quicktabs-style-commons-pills ul.quicktabs-tabs li.active a,
+.palette-blue-blue .quicktabs-style-commons-pills ul.quicktabs-tabs li.active a span,
+.palette-blue-blue ul.primary.tabs li.active a,
+.palette-blue-blue ul.primary.tabs li.active a span {
+  color: #333333;
 }
 .palette-blue-blue .block-search {
   background-color: #096080;
@@ -3700,7 +3948,7 @@ body.front.logged-in .view-commons-homepage-content .article.node.no-user-pictur
   -moz-box-shadow: #1d8ecc 1px 0px 0px;
   box-shadow: #1d8ecc 1px 0px 0px;
 }
-.palette-blue-blue .commons-sign-up, .palette-blue-blue .pane-commons-groups-commons-groups-create-group a, .pane-commons-groups-commons-groups-create-group .palette-blue-blue a, .palette-blue-blue #quicktabs-container-commons_bw .quicktabs-tabpage .attachment-before > a, #quicktabs-container-commons_bw .quicktabs-tabpage .palette-blue-blue .attachment-before > a, .palette-blue-blue #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add a, #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add .palette-blue-blue a, .palette-blue-blue #content-column .view-content input[type="submit"], #content-column .view-content .palette-blue-blue input[type="submit"], .palette-blue-blue form.commons-events-form-float input, form.commons-events-form-float .palette-blue-blue input, .palette-blue-blue form.commons-events-form-float input:hover, form.commons-events-form-float .palette-blue-blue input:hover, .palette-blue-blue .pane-commons-events-commons-events-create-event-link a, .pane-commons-events-commons-events-create-event-link .palette-blue-blue a {
+.palette-blue-blue .button-alert, .palette-blue-blue .commons-sign-up, .palette-blue-blue .pane-commons-groups-commons-groups-create-group a, .pane-commons-groups-commons-groups-create-group .palette-blue-blue a, .palette-blue-blue #quicktabs-container-commons_bw .quicktabs-tabpage .attachment-before > a, #quicktabs-container-commons_bw .quicktabs-tabpage .palette-blue-blue .attachment-before > a, .palette-blue-blue #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add a, #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add .palette-blue-blue a, .palette-blue-blue #content-column .view-content input[type="submit"], #content-column .view-content .palette-blue-blue input[type="submit"], .palette-blue-blue form.commons-events-form-float input, form.commons-events-form-float .palette-blue-blue input, .palette-blue-blue form.commons-events-form-float input:hover, form.commons-events-form-float .palette-blue-blue input:hover, .palette-blue-blue .pane-commons-events-commons-events-create-event-link a, .pane-commons-events-commons-events-create-event-link .palette-blue-blue a {
   box-shadow: 1px 1px 1px #7ebd26 inset, 0 3px 3px rgba(0, 0, 0, 0.09);
   background-color: #7ebd26;
   *zoom: 1;
@@ -3755,11 +4003,21 @@ body.front.logged-in .view-commons-homepage-content .article.node.no-user-pictur
 .palette-black-green ul.commons-utility-links li.last {
   border-left-color: #81b453;
 }
-.palette-black-green .quicktabs-style-commons-pills ul.quicktabs-tabs li.active a, .palette-black-green ul.primary.tabs li.active a {
-  background-color: #2d3538;
+.palette-black-green .quicktabs-style-commons-pills ul.quicktabs-tabs li a,
+.palette-black-green .quicktabs-style-commons-pills ul.quicktabs-tabs li a span,
+.palette-black-green ul.primary.tabs li a,
+.palette-black-green ul.primary.tabs li a span {
+  color: #81b453;
 }
-.palette-black-green .quicktabs-style-commons-pills ul.quicktabs-tabs li.active a:after {
-  border-color: #2d3538 transparent transparent transparent;
+.palette-black-green .quicktabs-style-commons-pills ul.quicktabs-tabs li a:hover,
+.palette-black-green ul.primary.tabs li a:hover {
+  color: #689440;
+}
+.palette-black-green .quicktabs-style-commons-pills ul.quicktabs-tabs li.active a,
+.palette-black-green .quicktabs-style-commons-pills ul.quicktabs-tabs li.active a span,
+.palette-black-green ul.primary.tabs li.active a,
+.palette-black-green ul.primary.tabs li.active a span {
+  color: #333333;
 }
 .palette-black-green .block-search {
   background-color: #638d3d;
@@ -3789,7 +4047,7 @@ body.front.logged-in .view-commons-homepage-content .article.node.no-user-pictur
   -moz-box-shadow: #3b4549 1px 0px 0px;
   box-shadow: #3b4549 1px 0px 0px;
 }
-.palette-black-green .commons-sign-up, .palette-black-green .pane-commons-groups-commons-groups-create-group a, .pane-commons-groups-commons-groups-create-group .palette-black-green a, .palette-black-green #quicktabs-container-commons_bw .quicktabs-tabpage .attachment-before > a, #quicktabs-container-commons_bw .quicktabs-tabpage .palette-black-green .attachment-before > a, .palette-black-green #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add a, #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add .palette-black-green a, .palette-black-green #content-column .view-content input[type="submit"], #content-column .view-content .palette-black-green input[type="submit"], .palette-black-green form.commons-events-form-float input, form.commons-events-form-float .palette-black-green input, .palette-black-green form.commons-events-form-float input:hover, form.commons-events-form-float .palette-black-green input:hover, .palette-black-green .pane-commons-events-commons-events-create-event-link a, .pane-commons-events-commons-events-create-event-link .palette-black-green a {
+.palette-black-green .button-alert, .palette-black-green .commons-sign-up, .palette-black-green .pane-commons-groups-commons-groups-create-group a, .pane-commons-groups-commons-groups-create-group .palette-black-green a, .palette-black-green #quicktabs-container-commons_bw .quicktabs-tabpage .attachment-before > a, #quicktabs-container-commons_bw .quicktabs-tabpage .palette-black-green .attachment-before > a, .palette-black-green #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add a, #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add .palette-black-green a, .palette-black-green #content-column .view-content input[type="submit"], #content-column .view-content .palette-black-green input[type="submit"], .palette-black-green form.commons-events-form-float input, form.commons-events-form-float .palette-black-green input, .palette-black-green form.commons-events-form-float input:hover, form.commons-events-form-float .palette-black-green input:hover, .palette-black-green .pane-commons-events-commons-events-create-event-link a, .pane-commons-events-commons-events-create-event-link .palette-black-green a {
   box-shadow: 1px 1px 1px #4090ba inset, 0 3px 3px rgba(0, 0, 0, 0.09);
   background-color: #4090ba;
   *zoom: 1;
@@ -3844,11 +4102,21 @@ body.front.logged-in .view-commons-homepage-content .article.node.no-user-pictur
 .palette-brown-yellow ul.commons-utility-links li.last {
   border-left-color: #9c773d;
 }
-.palette-brown-yellow .quicktabs-style-commons-pills ul.quicktabs-tabs li.active a, .palette-brown-yellow ul.primary.tabs li.active a {
-  background-color: #6a513b;
+.palette-brown-yellow .quicktabs-style-commons-pills ul.quicktabs-tabs li a,
+.palette-brown-yellow .quicktabs-style-commons-pills ul.quicktabs-tabs li a span,
+.palette-brown-yellow ul.primary.tabs li a,
+.palette-brown-yellow ul.primary.tabs li a span {
+  color: #9c773d;
 }
-.palette-brown-yellow .quicktabs-style-commons-pills ul.quicktabs-tabs li.active a:after {
-  border-color: #6a513b transparent transparent transparent;
+.palette-brown-yellow .quicktabs-style-commons-pills ul.quicktabs-tabs li a:hover,
+.palette-brown-yellow ul.primary.tabs li a:hover {
+  color: #775b2f;
+}
+.palette-brown-yellow .quicktabs-style-commons-pills ul.quicktabs-tabs li.active a,
+.palette-brown-yellow .quicktabs-style-commons-pills ul.quicktabs-tabs li.active a span,
+.palette-brown-yellow ul.primary.tabs li.active a,
+.palette-brown-yellow ul.primary.tabs li.active a span {
+  color: #333333;
 }
 .palette-brown-yellow .block-search {
   background-color: #70552c;
@@ -3878,7 +4146,7 @@ body.front.logged-in .view-commons-homepage-content .article.node.no-user-pictur
   -moz-box-shadow: #7e6046 1px 0px 0px;
   box-shadow: #7e6046 1px 0px 0px;
 }
-.palette-brown-yellow .commons-sign-up, .palette-brown-yellow .pane-commons-groups-commons-groups-create-group a, .pane-commons-groups-commons-groups-create-group .palette-brown-yellow a, .palette-brown-yellow #quicktabs-container-commons_bw .quicktabs-tabpage .attachment-before > a, #quicktabs-container-commons_bw .quicktabs-tabpage .palette-brown-yellow .attachment-before > a, .palette-brown-yellow #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add a, #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add .palette-brown-yellow a, .palette-brown-yellow #content-column .view-content input[type="submit"], #content-column .view-content .palette-brown-yellow input[type="submit"], .palette-brown-yellow form.commons-events-form-float input, form.commons-events-form-float .palette-brown-yellow input, .palette-brown-yellow form.commons-events-form-float input:hover, form.commons-events-form-float .palette-brown-yellow input:hover, .palette-brown-yellow .pane-commons-events-commons-events-create-event-link a, .pane-commons-events-commons-events-create-event-link .palette-brown-yellow a {
+.palette-brown-yellow .button-alert, .palette-brown-yellow .commons-sign-up, .palette-brown-yellow .pane-commons-groups-commons-groups-create-group a, .pane-commons-groups-commons-groups-create-group .palette-brown-yellow a, .palette-brown-yellow #quicktabs-container-commons_bw .quicktabs-tabpage .attachment-before > a, #quicktabs-container-commons_bw .quicktabs-tabpage .palette-brown-yellow .attachment-before > a, .palette-brown-yellow #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add a, #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add .palette-brown-yellow a, .palette-brown-yellow #content-column .view-content input[type="submit"], #content-column .view-content .palette-brown-yellow input[type="submit"], .palette-brown-yellow form.commons-events-form-float input, form.commons-events-form-float .palette-brown-yellow input, .palette-brown-yellow form.commons-events-form-float input:hover, form.commons-events-form-float .palette-brown-yellow input:hover, .palette-brown-yellow .pane-commons-events-commons-events-create-event-link a, .pane-commons-events-commons-events-create-event-link .palette-brown-yellow a {
   box-shadow: 1px 1px 1px #fcd036 inset, 0 3px 3px rgba(0, 0, 0, 0.09);
   background-color: #fcd036;
   *zoom: 1;
@@ -3933,11 +4201,21 @@ body.front.logged-in .view-commons-homepage-content .article.node.no-user-pictur
 .palette-seafoam-orange ul.commons-utility-links li.last {
   border-left-color: #73a5a5;
 }
-.palette-seafoam-orange .quicktabs-style-commons-pills ul.quicktabs-tabs li.active a, .palette-seafoam-orange ul.primary.tabs li.active a {
-  background-color: #668284;
+.palette-seafoam-orange .quicktabs-style-commons-pills ul.quicktabs-tabs li a,
+.palette-seafoam-orange .quicktabs-style-commons-pills ul.quicktabs-tabs li a span,
+.palette-seafoam-orange ul.primary.tabs li a,
+.palette-seafoam-orange ul.primary.tabs li a span {
+  color: #73a5a5;
 }
-.palette-seafoam-orange .quicktabs-style-commons-pills ul.quicktabs-tabs li.active a:after {
-  border-color: #668284 transparent transparent transparent;
+.palette-seafoam-orange .quicktabs-style-commons-pills ul.quicktabs-tabs li a:hover,
+.palette-seafoam-orange ul.primary.tabs li a:hover {
+  color: #5a8b8b;
+}
+.palette-seafoam-orange .quicktabs-style-commons-pills ul.quicktabs-tabs li.active a,
+.palette-seafoam-orange .quicktabs-style-commons-pills ul.quicktabs-tabs li.active a span,
+.palette-seafoam-orange ul.primary.tabs li.active a,
+.palette-seafoam-orange ul.primary.tabs li.active a span {
+  color: #333333;
 }
 .palette-seafoam-orange .block-search {
   background-color: #568585;
@@ -3967,7 +4245,7 @@ body.front.logged-in .view-commons-homepage-content .article.node.no-user-pictur
   -moz-box-shadow: #759294 1px 0px 0px;
   box-shadow: #759294 1px 0px 0px;
 }
-.palette-seafoam-orange .commons-sign-up, .palette-seafoam-orange .pane-commons-groups-commons-groups-create-group a, .pane-commons-groups-commons-groups-create-group .palette-seafoam-orange a, .palette-seafoam-orange #quicktabs-container-commons_bw .quicktabs-tabpage .attachment-before > a, #quicktabs-container-commons_bw .quicktabs-tabpage .palette-seafoam-orange .attachment-before > a, .palette-seafoam-orange #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add a, #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add .palette-seafoam-orange a, .palette-seafoam-orange #content-column .view-content input[type="submit"], #content-column .view-content .palette-seafoam-orange input[type="submit"], .palette-seafoam-orange form.commons-events-form-float input, form.commons-events-form-float .palette-seafoam-orange input, .palette-seafoam-orange form.commons-events-form-float input:hover, form.commons-events-form-float .palette-seafoam-orange input:hover, .palette-seafoam-orange .pane-commons-events-commons-events-create-event-link a, .pane-commons-events-commons-events-create-event-link .palette-seafoam-orange a {
+.palette-seafoam-orange .button-alert, .palette-seafoam-orange .commons-sign-up, .palette-seafoam-orange .pane-commons-groups-commons-groups-create-group a, .pane-commons-groups-commons-groups-create-group .palette-seafoam-orange a, .palette-seafoam-orange #quicktabs-container-commons_bw .quicktabs-tabpage .attachment-before > a, #quicktabs-container-commons_bw .quicktabs-tabpage .palette-seafoam-orange .attachment-before > a, .palette-seafoam-orange #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add a, #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add .palette-seafoam-orange a, .palette-seafoam-orange #content-column .view-content input[type="submit"], #content-column .view-content .palette-seafoam-orange input[type="submit"], .palette-seafoam-orange form.commons-events-form-float input, form.commons-events-form-float .palette-seafoam-orange input, .palette-seafoam-orange form.commons-events-form-float input:hover, form.commons-events-form-float .palette-seafoam-orange input:hover, .palette-seafoam-orange .pane-commons-events-commons-events-create-event-link a, .pane-commons-events-commons-events-create-event-link .palette-seafoam-orange a {
   box-shadow: 1px 1px 1px #d9a300 inset, 0 3px 3px rgba(0, 0, 0, 0.09);
   background-color: #d9a300;
   *zoom: 1;
@@ -4022,11 +4300,21 @@ body.front.logged-in .view-commons-homepage-content .article.node.no-user-pictur
 .palette-black-blue-yellow ul.commons-utility-links li.last {
   border-left-color: #0072ab;
 }
-.palette-black-blue-yellow .quicktabs-style-commons-pills ul.quicktabs-tabs li.active a, .palette-black-blue-yellow ul.primary.tabs li.active a {
-  background-color: #353535;
+.palette-black-blue-yellow .quicktabs-style-commons-pills ul.quicktabs-tabs li a,
+.palette-black-blue-yellow .quicktabs-style-commons-pills ul.quicktabs-tabs li a span,
+.palette-black-blue-yellow ul.primary.tabs li a,
+.palette-black-blue-yellow ul.primary.tabs li a span {
+  color: #0072ab;
 }
-.palette-black-blue-yellow .quicktabs-style-commons-pills ul.quicktabs-tabs li.active a:after {
-  border-color: #353535 transparent transparent transparent;
+.palette-black-blue-yellow .quicktabs-style-commons-pills ul.quicktabs-tabs li a:hover,
+.palette-black-blue-yellow ul.primary.tabs li a:hover {
+  color: #005078;
+}
+.palette-black-blue-yellow .quicktabs-style-commons-pills ul.quicktabs-tabs li.active a,
+.palette-black-blue-yellow .quicktabs-style-commons-pills ul.quicktabs-tabs li.active a span,
+.palette-black-blue-yellow ul.primary.tabs li.active a,
+.palette-black-blue-yellow ul.primary.tabs li.active a span {
+  color: #333333;
 }
 .palette-black-blue-yellow .block-search {
   background-color: #00496e;
@@ -4056,7 +4344,7 @@ body.front.logged-in .view-commons-homepage-content .article.node.no-user-pictur
   -moz-box-shadow: #444444 1px 0px 0px;
   box-shadow: #444444 1px 0px 0px;
 }
-.palette-black-blue-yellow .commons-sign-up, .palette-black-blue-yellow .pane-commons-groups-commons-groups-create-group a, .pane-commons-groups-commons-groups-create-group .palette-black-blue-yellow a, .palette-black-blue-yellow #quicktabs-container-commons_bw .quicktabs-tabpage .attachment-before > a, #quicktabs-container-commons_bw .quicktabs-tabpage .palette-black-blue-yellow .attachment-before > a, .palette-black-blue-yellow #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add a, #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add .palette-black-blue-yellow a, .palette-black-blue-yellow #content-column .view-content input[type="submit"], #content-column .view-content .palette-black-blue-yellow input[type="submit"], .palette-black-blue-yellow form.commons-events-form-float input, form.commons-events-form-float .palette-black-blue-yellow input, .palette-black-blue-yellow form.commons-events-form-float input:hover, form.commons-events-form-float .palette-black-blue-yellow input:hover, .palette-black-blue-yellow .pane-commons-events-commons-events-create-event-link a, .pane-commons-events-commons-events-create-event-link .palette-black-blue-yellow a {
+.palette-black-blue-yellow .button-alert, .palette-black-blue-yellow .commons-sign-up, .palette-black-blue-yellow .pane-commons-groups-commons-groups-create-group a, .pane-commons-groups-commons-groups-create-group .palette-black-blue-yellow a, .palette-black-blue-yellow #quicktabs-container-commons_bw .quicktabs-tabpage .attachment-before > a, #quicktabs-container-commons_bw .quicktabs-tabpage .palette-black-blue-yellow .attachment-before > a, .palette-black-blue-yellow #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add a, #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add .palette-black-blue-yellow a, .palette-black-blue-yellow #content-column .view-content input[type="submit"], #content-column .view-content .palette-black-blue-yellow input[type="submit"], .palette-black-blue-yellow form.commons-events-form-float input, form.commons-events-form-float .palette-black-blue-yellow input, .palette-black-blue-yellow form.commons-events-form-float input:hover, form.commons-events-form-float .palette-black-blue-yellow input:hover, .palette-black-blue-yellow .pane-commons-events-commons-events-create-event-link a, .pane-commons-events-commons-events-create-event-link .palette-black-blue-yellow a {
   box-shadow: 1px 1px 1px #e5b700 inset, 0 3px 3px rgba(0, 0, 0, 0.09);
   background-color: #e5b700;
   *zoom: 1;
@@ -4111,11 +4399,21 @@ body.front.logged-in .view-commons-homepage-content .article.node.no-user-pictur
 .palette-brick-brick ul.commons-utility-links li.last {
   border-left-color: #723729;
 }
-.palette-brick-brick .quicktabs-style-commons-pills ul.quicktabs-tabs li.active a, .palette-brick-brick ul.primary.tabs li.active a {
-  background-color: #432a26;
+.palette-brick-brick .quicktabs-style-commons-pills ul.quicktabs-tabs li a,
+.palette-brick-brick .quicktabs-style-commons-pills ul.quicktabs-tabs li a span,
+.palette-brick-brick ul.primary.tabs li a,
+.palette-brick-brick ul.primary.tabs li a span {
+  color: #723729;
 }
-.palette-brick-brick .quicktabs-style-commons-pills ul.quicktabs-tabs li.active a:after {
-  border-color: #432a26 transparent transparent transparent;
+.palette-brick-brick .quicktabs-style-commons-pills ul.quicktabs-tabs li a:hover,
+.palette-brick-brick ul.primary.tabs li a:hover {
+  color: #4c251c;
+}
+.palette-brick-brick .quicktabs-style-commons-pills ul.quicktabs-tabs li.active a,
+.palette-brick-brick .quicktabs-style-commons-pills ul.quicktabs-tabs li.active a span,
+.palette-brick-brick ul.primary.tabs li.active a,
+.palette-brick-brick ul.primary.tabs li.active a span {
+  color: #333333;
 }
 .palette-brick-brick .block-search {
   background-color: #452119;
@@ -4145,7 +4443,7 @@ body.front.logged-in .view-commons-homepage-content .article.node.no-user-pictur
   -moz-box-shadow: #573631 1px 0px 0px;
   box-shadow: #573631 1px 0px 0px;
 }
-.palette-brick-brick .commons-sign-up, .palette-brick-brick .pane-commons-groups-commons-groups-create-group a, .pane-commons-groups-commons-groups-create-group .palette-brick-brick a, .palette-brick-brick #quicktabs-container-commons_bw .quicktabs-tabpage .attachment-before > a, #quicktabs-container-commons_bw .quicktabs-tabpage .palette-brick-brick .attachment-before > a, .palette-brick-brick #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add a, #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add .palette-brick-brick a, .palette-brick-brick #content-column .view-content input[type="submit"], #content-column .view-content .palette-brick-brick input[type="submit"], .palette-brick-brick form.commons-events-form-float input, form.commons-events-form-float .palette-brick-brick input, .palette-brick-brick form.commons-events-form-float input:hover, form.commons-events-form-float .palette-brick-brick input:hover, .palette-brick-brick .pane-commons-events-commons-events-create-event-link a, .pane-commons-events-commons-events-create-event-link .palette-brick-brick a {
+.palette-brick-brick .button-alert, .palette-brick-brick .commons-sign-up, .palette-brick-brick .pane-commons-groups-commons-groups-create-group a, .pane-commons-groups-commons-groups-create-group .palette-brick-brick a, .palette-brick-brick #quicktabs-container-commons_bw .quicktabs-tabpage .attachment-before > a, #quicktabs-container-commons_bw .quicktabs-tabpage .palette-brick-brick .attachment-before > a, .palette-brick-brick #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add a, #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add .palette-brick-brick a, .palette-brick-brick #content-column .view-content input[type="submit"], #content-column .view-content .palette-brick-brick input[type="submit"], .palette-brick-brick form.commons-events-form-float input, form.commons-events-form-float .palette-brick-brick input, .palette-brick-brick form.commons-events-form-float input:hover, form.commons-events-form-float .palette-brick-brick input:hover, .palette-brick-brick .pane-commons-events-commons-events-create-event-link a, .pane-commons-events-commons-events-create-event-link .palette-brick-brick a {
   box-shadow: 1px 1px 1px #c2594c inset, 0 3px 3px rgba(0, 0, 0, 0.09);
   background-color: #c2594c;
   *zoom: 1;
@@ -4200,11 +4498,21 @@ body.front.logged-in .view-commons-homepage-content .article.node.no-user-pictur
 .palette-gray-lightgray-blue ul.commons-utility-links li.last {
   border-left-color: #dbdbdb;
 }
-.palette-gray-lightgray-blue .quicktabs-style-commons-pills ul.quicktabs-tabs li.active a, .palette-gray-lightgray-blue ul.primary.tabs li.active a {
-  background-color: #868686;
+.palette-gray-lightgray-blue .quicktabs-style-commons-pills ul.quicktabs-tabs li a,
+.palette-gray-lightgray-blue .quicktabs-style-commons-pills ul.quicktabs-tabs li a span,
+.palette-gray-lightgray-blue ul.primary.tabs li a,
+.palette-gray-lightgray-blue ul.primary.tabs li a span {
+  color: #dbdbdb;
 }
-.palette-gray-lightgray-blue .quicktabs-style-commons-pills ul.quicktabs-tabs li.active a:after {
-  border-color: #868686 transparent transparent transparent;
+.palette-gray-lightgray-blue .quicktabs-style-commons-pills ul.quicktabs-tabs li a:hover,
+.palette-gray-lightgray-blue ul.primary.tabs li a:hover {
+  color: #c2c2c2;
+}
+.palette-gray-lightgray-blue .quicktabs-style-commons-pills ul.quicktabs-tabs li.active a,
+.palette-gray-lightgray-blue .quicktabs-style-commons-pills ul.quicktabs-tabs li.active a span,
+.palette-gray-lightgray-blue ul.primary.tabs li.active a,
+.palette-gray-lightgray-blue ul.primary.tabs li.active a span {
+  color: #333333;
 }
 .palette-gray-lightgray-blue .block-search {
   background-color: #bcbcbc;
@@ -4234,7 +4542,7 @@ body.front.logged-in .view-commons-homepage-content .article.node.no-user-pictur
   -moz-box-shadow: #959595 1px 0px 0px;
   box-shadow: #959595 1px 0px 0px;
 }
-.palette-gray-lightgray-blue .commons-sign-up, .palette-gray-lightgray-blue .pane-commons-groups-commons-groups-create-group a, .pane-commons-groups-commons-groups-create-group .palette-gray-lightgray-blue a, .palette-gray-lightgray-blue #quicktabs-container-commons_bw .quicktabs-tabpage .attachment-before > a, #quicktabs-container-commons_bw .quicktabs-tabpage .palette-gray-lightgray-blue .attachment-before > a, .palette-gray-lightgray-blue #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add a, #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add .palette-gray-lightgray-blue a, .palette-gray-lightgray-blue #content-column .view-content input[type="submit"], #content-column .view-content .palette-gray-lightgray-blue input[type="submit"], .palette-gray-lightgray-blue form.commons-events-form-float input, form.commons-events-form-float .palette-gray-lightgray-blue input, .palette-gray-lightgray-blue form.commons-events-form-float input:hover, form.commons-events-form-float .palette-gray-lightgray-blue input:hover, .palette-gray-lightgray-blue .pane-commons-events-commons-events-create-event-link a, .pane-commons-events-commons-events-create-event-link .palette-gray-lightgray-blue a {
+.palette-gray-lightgray-blue .button-alert, .palette-gray-lightgray-blue .commons-sign-up, .palette-gray-lightgray-blue .pane-commons-groups-commons-groups-create-group a, .pane-commons-groups-commons-groups-create-group .palette-gray-lightgray-blue a, .palette-gray-lightgray-blue #quicktabs-container-commons_bw .quicktabs-tabpage .attachment-before > a, #quicktabs-container-commons_bw .quicktabs-tabpage .palette-gray-lightgray-blue .attachment-before > a, .palette-gray-lightgray-blue #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add a, #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add .palette-gray-lightgray-blue a, .palette-gray-lightgray-blue #content-column .view-content input[type="submit"], #content-column .view-content .palette-gray-lightgray-blue input[type="submit"], .palette-gray-lightgray-blue form.commons-events-form-float input, form.commons-events-form-float .palette-gray-lightgray-blue input, .palette-gray-lightgray-blue form.commons-events-form-float input:hover, form.commons-events-form-float .palette-gray-lightgray-blue input:hover, .palette-gray-lightgray-blue .pane-commons-events-commons-events-create-event-link a, .pane-commons-events-commons-events-create-event-link .palette-gray-lightgray-blue a {
   box-shadow: 1px 1px 1px #00ccff inset, 0 3px 3px rgba(0, 0, 0, 0.09);
   background-color: #00ccff;
   *zoom: 1;
@@ -4289,11 +4597,21 @@ body.front.logged-in .view-commons-homepage-content .article.node.no-user-pictur
 .palette-black-white-red ul.commons-utility-links li.last {
   border-left-color: #383838;
 }
-.palette-black-white-red .quicktabs-style-commons-pills ul.quicktabs-tabs li.active a, .palette-black-white-red ul.primary.tabs li.active a {
-  background-color: #262626;
+.palette-black-white-red .quicktabs-style-commons-pills ul.quicktabs-tabs li a,
+.palette-black-white-red .quicktabs-style-commons-pills ul.quicktabs-tabs li a span,
+.palette-black-white-red ul.primary.tabs li a,
+.palette-black-white-red ul.primary.tabs li a span {
+  color: #383838;
 }
-.palette-black-white-red .quicktabs-style-commons-pills ul.quicktabs-tabs li.active a:after {
-  border-color: #262626 transparent transparent transparent;
+.palette-black-white-red .quicktabs-style-commons-pills ul.quicktabs-tabs li a:hover,
+.palette-black-white-red ul.primary.tabs li a:hover {
+  color: #1f1f1f;
+}
+.palette-black-white-red .quicktabs-style-commons-pills ul.quicktabs-tabs li.active a,
+.palette-black-white-red .quicktabs-style-commons-pills ul.quicktabs-tabs li.active a span,
+.palette-black-white-red ul.primary.tabs li.active a,
+.palette-black-white-red ul.primary.tabs li.active a span {
+  color: #333333;
 }
 .palette-black-white-red .block-search {
   background-color: #191919;
@@ -4323,7 +4641,7 @@ body.front.logged-in .view-commons-homepage-content .article.node.no-user-pictur
   -moz-box-shadow: #353535 1px 0px 0px;
   box-shadow: #353535 1px 0px 0px;
 }
-.palette-black-white-red .commons-sign-up, .palette-black-white-red .pane-commons-groups-commons-groups-create-group a, .pane-commons-groups-commons-groups-create-group .palette-black-white-red a, .palette-black-white-red #quicktabs-container-commons_bw .quicktabs-tabpage .attachment-before > a, #quicktabs-container-commons_bw .quicktabs-tabpage .palette-black-white-red .attachment-before > a, .palette-black-white-red #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add a, #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add .palette-black-white-red a, .palette-black-white-red #content-column .view-content input[type="submit"], #content-column .view-content .palette-black-white-red input[type="submit"], .palette-black-white-red form.commons-events-form-float input, form.commons-events-form-float .palette-black-white-red input, .palette-black-white-red form.commons-events-form-float input:hover, form.commons-events-form-float .palette-black-white-red input:hover, .palette-black-white-red .pane-commons-events-commons-events-create-event-link a, .pane-commons-events-commons-events-create-event-link .palette-black-white-red a {
+.palette-black-white-red .button-alert, .palette-black-white-red .commons-sign-up, .palette-black-white-red .pane-commons-groups-commons-groups-create-group a, .pane-commons-groups-commons-groups-create-group .palette-black-white-red a, .palette-black-white-red #quicktabs-container-commons_bw .quicktabs-tabpage .attachment-before > a, #quicktabs-container-commons_bw .quicktabs-tabpage .palette-black-white-red .attachment-before > a, .palette-black-white-red #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add a, #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add .palette-black-white-red a, .palette-black-white-red #content-column .view-content input[type="submit"], #content-column .view-content .palette-black-white-red input[type="submit"], .palette-black-white-red form.commons-events-form-float input, form.commons-events-form-float .palette-black-white-red input, .palette-black-white-red form.commons-events-form-float input:hover, form.commons-events-form-float .palette-black-white-red input:hover, .palette-black-white-red .pane-commons-events-commons-events-create-event-link a, .pane-commons-events-commons-events-create-event-link .palette-black-white-red a {
   box-shadow: 1px 1px 1px #e45553 inset, 0 3px 3px rgba(0, 0, 0, 0.09);
   background-color: #e45553;
   *zoom: 1;
@@ -4378,11 +4696,21 @@ body.front.logged-in .view-commons-homepage-content .article.node.no-user-pictur
 .palette-brown-burnt-orange ul.commons-utility-links li.last {
   border-left-color: #7c4811;
 }
-.palette-brown-burnt-orange .quicktabs-style-commons-pills ul.quicktabs-tabs li.active a, .palette-brown-burnt-orange ul.primary.tabs li.active a {
-  background-color: #62390e;
+.palette-brown-burnt-orange .quicktabs-style-commons-pills ul.quicktabs-tabs li a,
+.palette-brown-burnt-orange .quicktabs-style-commons-pills ul.quicktabs-tabs li a span,
+.palette-brown-burnt-orange ul.primary.tabs li a,
+.palette-brown-burnt-orange ul.primary.tabs li a span {
+  color: #7c4811;
 }
-.palette-brown-burnt-orange .quicktabs-style-commons-pills ul.quicktabs-tabs li.active a:after {
-  border-color: #62390e transparent transparent transparent;
+.palette-brown-burnt-orange .quicktabs-style-commons-pills ul.quicktabs-tabs li a:hover,
+.palette-brown-burnt-orange ul.primary.tabs li a:hover {
+  color: #4f2e0b;
+}
+.palette-brown-burnt-orange .quicktabs-style-commons-pills ul.quicktabs-tabs li.active a,
+.palette-brown-burnt-orange .quicktabs-style-commons-pills ul.quicktabs-tabs li.active a span,
+.palette-brown-burnt-orange ul.primary.tabs li.active a,
+.palette-brown-burnt-orange ul.primary.tabs li.active a span {
+  color: #333333;
 }
 .palette-brown-burnt-orange .block-search {
   background-color: #46290a;
@@ -4412,7 +4740,7 @@ body.front.logged-in .view-commons-homepage-content .article.node.no-user-pictur
   -moz-box-shadow: #7d4912 1px 0px 0px;
   box-shadow: #7d4912 1px 0px 0px;
 }
-.palette-brown-burnt-orange .commons-sign-up, .palette-brown-burnt-orange .pane-commons-groups-commons-groups-create-group a, .pane-commons-groups-commons-groups-create-group .palette-brown-burnt-orange a, .palette-brown-burnt-orange #quicktabs-container-commons_bw .quicktabs-tabpage .attachment-before > a, #quicktabs-container-commons_bw .quicktabs-tabpage .palette-brown-burnt-orange .attachment-before > a, .palette-brown-burnt-orange #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add a, #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add .palette-brown-burnt-orange a, .palette-brown-burnt-orange #content-column .view-content input[type="submit"], #content-column .view-content .palette-brown-burnt-orange input[type="submit"], .palette-brown-burnt-orange form.commons-events-form-float input, form.commons-events-form-float .palette-brown-burnt-orange input, .palette-brown-burnt-orange form.commons-events-form-float input:hover, form.commons-events-form-float .palette-brown-burnt-orange input:hover, .palette-brown-burnt-orange .pane-commons-events-commons-events-create-event-link a, .pane-commons-events-commons-events-create-event-link .palette-brown-burnt-orange a {
+.palette-brown-burnt-orange .button-alert, .palette-brown-burnt-orange .commons-sign-up, .palette-brown-burnt-orange .pane-commons-groups-commons-groups-create-group a, .pane-commons-groups-commons-groups-create-group .palette-brown-burnt-orange a, .palette-brown-burnt-orange #quicktabs-container-commons_bw .quicktabs-tabpage .attachment-before > a, #quicktabs-container-commons_bw .quicktabs-tabpage .palette-brown-burnt-orange .attachment-before > a, .palette-brown-burnt-orange #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add a, #quicktabs-container-commons_bw .quicktabs-tabpage .comment-add .palette-brown-burnt-orange a, .palette-brown-burnt-orange #content-column .view-content input[type="submit"], #content-column .view-content .palette-brown-burnt-orange input[type="submit"], .palette-brown-burnt-orange form.commons-events-form-float input, form.commons-events-form-float .palette-brown-burnt-orange input, .palette-brown-burnt-orange form.commons-events-form-float input:hover, form.commons-events-form-float .palette-brown-burnt-orange input:hover, .palette-brown-burnt-orange .pane-commons-events-commons-events-create-event-link a, .pane-commons-events-commons-events-create-event-link .palette-brown-burnt-orange a {
   box-shadow: 1px 1px 1px #eb9039 inset, 0 3px 3px rgba(0, 0, 0, 0.09);
   background-color: #eb9039;
   *zoom: 1;
diff --git a/profiles/commons/themes/contrib/commons_origins/css/lt-ie9.css b/profiles/commons/themes/contrib/commons_origins/css/lt-ie9.css
index 0bf70f8..6980f4d 100644
--- a/profiles/commons/themes/contrib/commons_origins/css/lt-ie9.css
+++ b/profiles/commons/themes/contrib/commons_origins/css/lt-ie9.css
@@ -10,7 +10,7 @@ html {
 }
 
 body.front.not-logged-in #content {
-  background: url('../images/commons-drop.png?1361802894') right top no-repeat;
+  background: url('../images/commons-drop.png?1363371593') right top no-repeat;
 }
 body.front.not-logged-in .region-three-33-top {
   margin-bottom: 24px;
diff --git a/profiles/commons/themes/contrib/commons_origins/css/responsive.custom.css b/profiles/commons/themes/contrib/commons_origins/css/responsive.custom.css
index c0092fd..0bc1b35 100644
--- a/profiles/commons/themes/contrib/commons_origins/css/responsive.custom.css
+++ b/profiles/commons/themes/contrib/commons_origins/css/responsive.custom.css
@@ -28,14 +28,14 @@
     padding-top: 0 !important;
   }
 
-  /* 
+  /*
    * Float Region blocks example:
    * In smaller screen sizes we can remove the float and widths so all blocks
    * stack instead of displaying horizonally. The selector used here is an
    * "attribute selector" which will match on any float block class. Use your
    * inspector or Firebug to get the classes from the page output if you need
    * more granular control over block alignment and stacking.
-   * 
+   *
    * "Float Region blocks" is an extension for floating blocks in regions, see
    * your themes appearance settings, under the Extensions tab.
    */
@@ -53,9 +53,7 @@
   }
 
   .commons-bw-create-all-widget-types {
-    left: -100px;
-    top: auto;
-    bottom: 0;
+    left: auto;
   }
 
   .page-node-add #edit-additional-settings {
@@ -105,6 +103,14 @@
   .view-commons-follow-taxonomy-term .views-field-ops-1 {
     width: 33.333%;
   }
+
+  .primary-fields,
+  .supplementary-fields {
+    display: block;
+    float: none;
+    width: auto;
+    padding: 0;
+  }
 }
 /*
  * Tablet sizes and down
@@ -131,7 +137,7 @@
  */
 @media only screen and (min-width: 768px) {
   body.front.not-logged-in #content {
-    background: url('../images/commons-drop.png?1361802894') right top no-repeat;
+    background: url('../images/commons-drop.png?1363371593') right top no-repeat;
   }
   body.front.not-logged-in .region-three-33-top {
     margin-bottom: 24px;
diff --git a/profiles/commons/themes/contrib/commons_origins/css/responsive.desktop.css b/profiles/commons/themes/contrib/commons_origins/css/responsive.desktop.css
index 3c4eb6a..e5bdd2e 100644
--- a/profiles/commons/themes/contrib/commons_origins/css/responsive.desktop.css
+++ b/profiles/commons/themes/contrib/commons_origins/css/responsive.desktop.css
@@ -7,3 +7,20 @@
  *
  * - Read the _README file in this directory, it contains useful help and other information.
  */
+.flag-inappropriate-node {
+  float: none;
+  position: absolute;
+  margin: 0;
+  bottom: 5px;
+  right: 5px;
+  filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=0);
+  opacity: 0;
+  -webkit-transition: opacity 0.5s;
+  -moz-transition: opacity 0.5s;
+  -o-transition: opacity 0.5s;
+  transition: opacity 0.5s;
+}
+.node:hover .flag-inappropriate-node {
+  filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=100);
+  opacity: 1;
+}
diff --git a/profiles/commons/themes/contrib/commons_origins/images/commons-logo.png b/profiles/commons/themes/contrib/commons_origins/images/commons-logo.png
new file mode 100644
index 0000000..b512b11
Binary files /dev/null and b/profiles/commons/themes/contrib/commons_origins/images/commons-logo.png differ
diff --git a/profiles/commons/themes/contrib/commons_origins/sass/_base.scss b/profiles/commons/themes/contrib/commons_origins/sass/_base.scss
index 9329211..48f8461 100755
--- a/profiles/commons/themes/contrib/commons_origins/sass/_base.scss
+++ b/profiles/commons/themes/contrib/commons_origins/sass/_base.scss
@@ -1,34 +1,20 @@
 //
-// Legacy IE support
-//
-// These variables are used by many mixins to add additional CSS to support
-// specific versions of IE or specific vendor prefixes.
-//
-// To turn off support for IE6 or IE7, set those variables to false.
-//
 // AdaptiveTheme does not require special handling for IE8 or later. But Compass
 // defines more Legacy IE variables that you might find useful for your theme.
 // See the documentation at http://compass-style.org/reference/compass/support/
 //
 
-$legacy-support-for-ie6: true;
-$legacy-support-for-ie7: true;
-
-
 //
 // Partials to be shared with all .scss files.
 //
 
-@import 'compass/support';                     // Add Compass' IE and vendor prefix support variables.
-@import 'compass/utilities/general/clearfix';  // Better than Drupal's clearfix.
-@import 'compass/utilities/sprites';           // See http://compass-style.org/help/tutorials/spriting/
-@import 'compass/css3';                        // Use one CSS3 mixin instead of multiple vendor prefixes.
-
+@import 'compass';
 
 //
 // Import custom partial - mixins and variables defined for your theme
 //
 @import 'custom';
+@import 'mixins/respond';
 @import 'mixins/icons';
 @import 'extend-styles';
 @import 'mixins/mixins';
diff --git a/profiles/commons/themes/contrib/commons_origins/sass/_custom.scss b/profiles/commons/themes/contrib/commons_origins/sass/_custom.scss
index 9d4d6a8..21d4924 100755
--- a/profiles/commons/themes/contrib/commons_origins/sass/_custom.scss
+++ b/profiles/commons/themes/contrib/commons_origins/sass/_custom.scss
@@ -51,6 +51,12 @@ $light_blue: rgb(39,131,185);
 $orange: rgb(255,153,0);
 $lighter_gray: #eee;
 
+$tab_background: rgba(153, 153, 153, .3);
+$tab_text: $light_blue;
+$tab_text_hover: $dark_blue;
+$tab_active_background: rgb(153, 153, 153);
+$tab_active_text: $dark_gray;
+
 // Colors for other palettes
 
 // Orange and Red
@@ -166,6 +172,6 @@ $alt-font: Helvetica, 'Helvetica Neue', Arial, sans-serif;
 //
 $gutter-width: 10px;
 
-// global chunck of code for importing
+// global chunk of code for importing
 
 $icons: sprite-map('icons/*.png', $spacing: 20px);
diff --git a/profiles/commons/themes/contrib/commons_origins/sass/_extend-styles.scss b/profiles/commons/themes/contrib/commons_origins/sass/_extend-styles.scss
index 5b69dc1..da0a738 100644
--- a/profiles/commons/themes/contrib/commons_origins/sass/_extend-styles.scss
+++ b/profiles/commons/themes/contrib/commons_origins/sass/_extend-styles.scss
@@ -12,21 +12,20 @@
   background-color: $white;
   @include border-radius(3px);
   @include box-shadow($light_gray 1px 1px 4px);
-  margin-right: 20px;
-  margin-bottom: 20px;
-
-  .lt480 & {
-    margin-right: 0;
-  }
+  margin: $gutter-width 0;
 }
 
 %pod-content {
-  padding: 10px 10px 20px 10px;
+  padding: $gutter-width;
 }
 
 %node-space-right {
   > .node-content {
     margin-right: 90px;
+
+    @include respond(small-medium) {
+      margin-right: 0;
+    }
   }
 }
 
@@ -39,11 +38,18 @@
   @include background-image(linear-gradient(top,  #6eca5d 0%,#6cc95b 12%,#47bc33 33%,#45bb2f 100%));
   border: 1px solid #249125;
   @include border-radius(3px);
-  color: $white;
   text-align: center;
   display: inline-block;
   text-shadow: 1px 1px rgba(#000, 0.49);
 
+  &,
+  &:link,
+  &:visited,
+  &:active,
+  &:hover {
+    color: $white;
+  }
+
   &:hover {
     text-decoration: none;
   }
@@ -83,72 +89,6 @@
   }
 }
 
-%like-btn {
-  position: relative;
-  @extend %btn-gray;
-  width: 62px;
-  height: 20px;
-  padding: 0;
-
-  .rate-commons-like-btn {
-    display: block;
-    font-size: 0;
-    width: 62px;
-    height: 20px;
-    position: absolute;
-    left: 0;
-    top: 0;
-    z-index: 2;
-
-    &:before {
-      content: '';
-      @include sprite_url_height_width($icons, like);
-      position: absolute;
-      left: 17px;
-      top: 3px;
-    }
-  }
-
-  .rate-commons-like-count {
-    position: absolute;
-    top: -1px;
-    right: -1px;
-    z-index: 1;
-    background: #D9D9D9;
-    border: 1px solid #B5B5B5;
-    height: 20px;
-    line-height: 20px;
-    padding: 0 5px;
-    @include border-radius(0 3px 3px 0px);
-
-    &:after, &:before {
-      right: 100%;
-      border: solid transparent;
-      content: " ";
-      height: 0;
-      width: 0;
-      position: absolute;
-      pointer-events: none;
-    }
-
-    &:after {
-      border-color: rgba(217, 217, 217, 0);
-      border-right-color: #D9D9D9;
-      border-width: 4px;
-      top: 50%;
-      margin-top: -4px;
-    }
-
-    &:before {
-      border-color: rgba(181, 181, 181, 0);
-      border-right-color: #B5B5B5;
-      border-width: 5px;
-      top: 50%;
-      margin-top: -5px;
-    }
-  }
-}
-
 %btn-with-attach {
   position: relative;
   font-size: 0;
@@ -181,7 +121,8 @@
   vertical-align: top;
   @include border-radius(0 3px 3px 0px);
 
-  &:after, &:before {
+  &:after,
+  &:before {
     right: 100%;
     border: solid transparent;
     content: " ";
diff --git a/profiles/commons/themes/contrib/commons_origins/sass/_palettes.scss b/profiles/commons/themes/contrib/commons_origins/sass/_palettes.scss
index 0178393..1056002 100644
--- a/profiles/commons/themes/contrib/commons_origins/sass/_palettes.scss
+++ b/profiles/commons/themes/contrib/commons_origins/sass/_palettes.scss
@@ -55,12 +55,30 @@
     }
 
     // Quicktabs buttons styles
-    .quicktabs-style-commons-pills ul.quicktabs-tabs li.active a, ul.primary.tabs li.active a {
-      background-color: $palette_color_dark;
-    }
 
-    .quicktabs-style-commons-pills ul.quicktabs-tabs li.active a:after {
-      border-color: $palette_color_dark transparent transparent transparent;
+    .quicktabs-style-commons-pills ul.quicktabs-tabs,
+    ul.primary.tabs {
+      li {
+        a {
+          &,
+          span {
+            color: $palette_color_light;
+          }
+
+          &:hover {
+            color: darken($palette_color_light, 10%)
+          }
+        }
+
+        &.active {
+          a {
+            &,
+            span {
+              color: $dark_gray;
+            }
+          }
+        }
+      }
     }
 
     .block-search {
diff --git a/profiles/commons/themes/contrib/commons_origins/sass/_selectBox.scss b/profiles/commons/themes/contrib/commons_origins/sass/_selectBox.scss
index d5cd308..11cd679 100644
--- a/profiles/commons/themes/contrib/commons_origins/sass/_selectBox.scss
+++ b/profiles/commons/themes/contrib/commons_origins/sass/_selectBox.scss
@@ -26,15 +26,16 @@
     background: transparent;
     border: none;
     box-shadow: none;
-    min-width: auto;
-    // width: auto !important;
+    min-width: inherit;
     color: $white;
     line-height: 1;
     margin-top: 5px;
     margin-left: 9px;
   }
 
-  #views-exposed-form-commons-homepage-content-panel-pane-1 &, #quicktabs-commons_bw & {
+  #views-exposed-form-commons-homepage-content-panel-pane-1 &,
+  #quicktabs-commons_bw &,
+  .views-exposed-widgets & {
     background: $page;
     border: none;
     box-shadow: none;
@@ -81,7 +82,9 @@
     }
   }
 
-  #views-exposed-form-commons-homepage-content-panel-pane-1 &, #quicktabs-commons_bw & {
+  #views-exposed-form-commons-homepage-content-panel-pane-1 &,
+  #quicktabs-commons_bw &,
+  .views-exposed-widgets & {
     width: auto !important;
     padding: 2px 4px;
   }
@@ -100,7 +103,9 @@
     display: none;
   }
 
-  #views-exposed-form-commons-homepage-content-panel-pane-1 &, #quicktabs-commons_bw & {
+  #views-exposed-form-commons-homepage-content-panel-pane-1 &,
+  #quicktabs-commons_bw &,
+  .views-exposed-widgets & {
     display: none;
   }
 }
@@ -145,8 +150,8 @@
 
 /* Options */
 .selectBox-options,
-.selectBox-options LI,
-.selectBox-options LI A {
+.selectBox-options li,
+.selectBox-options li a {
   list-style: none;
   display: block;
   cursor: default;
@@ -154,7 +159,7 @@
   margin: 0;
 }
 
-.selectBox-options LI A {
+.selectBox-options li a {
   line-height: 1.5;
   padding: 0 .5em;
   white-space: nowrap;
@@ -162,16 +167,16 @@
   background: 6px center no-repeat;
 }
 
-.selectBox-options LI.selectBox-hover A {
+.selectBox-options li.selectBox-hover a {
   background-color: #EEE;
 }
 
-.selectBox-options LI.selectBox-disabled A {
+.selectBox-options li.selectBox-disabled a {
   color: #888;
   background-color: transparent;
 }
 
-.selectBox-options LI.selectBox-selected A {
+.selectBox-options li.selectBox-selected a {
   background-color: #C8DEF4;
 }
 
@@ -200,6 +205,6 @@
   color: #888 !important;
 }
 
-.selectBox-inline.selectBox-disabled .selectBox-options A {
+.selectBox-inline.selectBox-disabled .selectBox-options a {
   background-color: transparent !important;
-}
\ No newline at end of file
+}
diff --git a/profiles/commons/themes/contrib/commons_origins/sass/global.base.scss b/profiles/commons/themes/contrib/commons_origins/sass/global.base.scss
index 3fd77bd..0c5c79f 100755
--- a/profiles/commons/themes/contrib/commons_origins/sass/global.base.scss
+++ b/profiles/commons/themes/contrib/commons_origins/sass/global.base.scss
@@ -85,8 +85,7 @@ audio:not([controls]) {
 html {
   font-size: 100%;
   -webkit-text-size-adjust: 100%;
-  line-height: 1.5;
-  height: 100%;
+  line-height: 1.7;
   overflow-y: scroll;
 }
 
@@ -534,39 +533,6 @@ table {
 
 
 /* =============================================================================
-    Gutters
-   ========================================================================== */
-
-/*
- * If gutters are set in theme settings they will override these values,
- * see Extensions > Modify Output > Design
- * $gutter-width is set in _base.scss
- */
-#main-content,
-.block-inner,
-.pane-inner,
-.menu-wrapper,
-.branding-elements,
-.breadcrumb-wrapper,
-.attribution,
-.at-panel .rounded-corner,
-div.messages {
-  margin-left: $gutter-width;
-  margin-right: $gutter-width;
-}
-
-/*
- * Panel pages need negative margin equal to the gutter width applied to #content,
- * this is taken care of in theme settings as per above for normal gutters
- */
-#content .panel-display,
-#content .panel-flexible {
-  margin-left: -$gutter-width;
-  margin-right: -$gutter-width;
-}
-
-
-/* =============================================================================
     Flexible Media and Cross browser improvements
    ========================================================================== */
 
diff --git a/profiles/commons/themes/contrib/commons_origins/sass/global.styles.scss b/profiles/commons/themes/contrib/commons_origins/sass/global.styles.scss
index e718952..da44378 100755
--- a/profiles/commons/themes/contrib/commons_origins/sass/global.styles.scss
+++ b/profiles/commons/themes/contrib/commons_origins/sass/global.styles.scss
@@ -2,7 +2,7 @@
 // _base.scss imports _custom.scss (variables and mixins) and other partials.
 @import "base";
 
-/*
+/**
  * @file
  * global.styles
  *
@@ -30,7 +30,7 @@
  *   Base
  * ========================================================================== */
 
-/*
+/**
  * To preserve theme settings never apply font properties to the HTML element.
  * This is critically important if you are using the Responsive JavaScript
  * feature as this relies on being able to set a pseudo font family on the HTML
@@ -39,7 +39,7 @@
  */
 
 html {
-  background:$page;
+  background: $page;
 }
 
 body {
@@ -48,7 +48,6 @@ body {
   color: $dark_gray;
 }
 
-
 /* =============================================================================
  *   HTML Elements
  * ========================================================================== */
@@ -58,7 +57,6 @@ h1 {
   line-height: 30px;
   font-weight: normal;
   color: $white;
-//  @include text-shadow(#000 1px 1px 4px);
 
   a {
     color: $white;
@@ -79,7 +77,6 @@ h1 {
   }
 }
 
-
 h2 {
   color: $dark_blue;
   font-weight: lighter;
@@ -88,7 +85,6 @@ h2 {
   font-family: $alt-font;
 }
 
-
 h3 {
   color: $light_blue;
   font-weight: normal;
@@ -100,78 +96,6 @@ h3 {
   }
 }
 
-
-h4 {}
-
-
-h5 {}
-
-
-h6 {}
-
-
-p {}
-
-
-b,
-strong {}
-
-
-i,
-em {}
-
-
-dfn {}
-
-
-sup {}
-
-
-sub {}
-
-
-del {}
-
-
-ins {}
-
-
-blockquote {}
-
-
-cite {}
-
-
-q {}
-
-
-address {}
-
-
-ul {}
-
-
-ol {}
-
-
-li {}
-
-
-dl {}
-
-
-dd {}
-
-
-dt {}
-
-
-abbr {}
-
-
-acronym {}
-
-
 pre,
 code,
 tt,
@@ -181,24 +105,23 @@ var {
   font-family: $mono;
 }
 
-
 /* =============================================================================
  *   Wrappers
  * ========================================================================== */
 
-/*
+/**
  * Page wrapper, includes the .container class which sets the overall page or section width
  * Main wrapper in page.tpl.php, the .container class sets the width of the page, do not add width to it!
  */
+
 #page  {
   margin-top: -92px;
-  .container {}
 }
 
-
-/*
+/**
  * Wraps all header elements - branding and .region-header
  */
+
 #header {
   height: 95px;
   color: $white;
@@ -229,155 +152,84 @@ var {
   border-bottom: 1px solid darken($light_blue, 10%);
 }
 
-
-/*
+/**
  * Wraps the sidebars the content column
  */
+
 #columns {
-  .page-user-login & {
-    @extend %pod;
-    @extend %pod-content;
-    margin-top: 50px;
-  }
+  margin-right: $gutter-width;
+  margin-left: $gutter-width;
 }
 
-
-/*
- * Main content column wrapper
- */
-#content-column {}
-
-
-/*
- * Wraps the main-content-header, the content region and feed-icons. Use this wrapper to style the entire main content column
- */
-#main-content {}
-
-
-/*
+/**
  * Footer wrapper
  */
-#footer {}
-
-
-/*
- * Panels may need additional margin wrangling when in the $content region
- */
-#content .panel-display {}
-
-
-/*
- * Full Width Wrappers
- * These are used in the optional page--full-width-wrappers.tpl.php template.
- * All have internal .container classes. In the full width wrapper template the
- * .container classes set the width or max-width of the contained element - you
- * can style this but never add any width/margin/padding/borders etc to .container
- */
-
-/*
- * Wraps #page
- */
-#page-wrapper {
-  .container {}
-}
-
-
-/*
- * Wraps the leaderboard
- */
-#leaderboard-wrapper {
-  .container {}
-}
-
-
-/*
- * Wraps the header
- */
-#header-wrapper {
-  /* Debug styles, is this working */
-  background: $debug;
-  .container {}
-}
-
-
-/*
- * Wraps the nav elements
- */
-#nav-wrapper {
-  .container {}
-}
-
 
-/*
- * Wraps breadcrumb
- */
-#breadcrumb-wrapper {
-  .container {}
+#footer {
+  border-top: 1px solid $border;
+  @include box-shadow(inset 0 1px 0 $white);
+  margin: 0 $gutter-width;
 }
 
-
-/*
- * Wraps messages and help
+/**
+ * Default credit block
  */
-#messages-help-wrapper {
-  .container {}
-}
 
+#block-block-1 {
+  .block-title,
+  .block-content {
+    color: $light_gray;
+  }
 
-/*
- * Wraps the secondary content/preface region
- */
-#secondary-content-wrapper {
-  .container {}
-}
+  .block-title {
+    margin: $gutter-width 0 $gutter-width / 2;
+  }
 
+  .block-content {
+    font-size: .88em;
+  }
 
-/*
- * Wraps the main content column
- */
-#content-wrapper {
-  .container {}
+  #footer & {
+    margin-bottom: 0;
+  }
 }
 
-
-/*
- * Wraps the tertiary content/postfix region
+/**
+ * Generic pod wrappers
  */
-#tertiary-content-wrapper {
-  .container {}
-}
-
 
-/*
- * Footer wrapper
- */
-#footer-wrapper {
-  /* Debug styles, is this working? */
-  background: $debug;
+ .commons-pod {
+  @extend %pod;
+  @extend %pod-content;
 
-  .container {}
+  /* Prevent pod nesting. */
+  .commons-pod {
+    margin: 0;
+    padding: 0;
+    background: transparent;
+    @include box-shadow(none);
+  }
 }
 
-
 /* =============================================================================
  *   Branding
  * ========================================================================== */
 
-/*
+/**
  * Wraps all the branding elements, logo, name and slogan
  */
+
 #branding {
-  // display: inline-block;
   float: left;
+  margin-left: 10px;
   vertical-align: top;
-  // width: 395px;
   text-align: left;
 }
 
-
-/*
+/**
  * Logo
  */
+
 #logo {
   display: inline-block;
   padding: 0 10px 0 0;
@@ -385,25 +237,12 @@ var {
   img {
     vertical-align: bottom;
   }
-
-  // .palette-active & {
-  //   a {
-  //     display: block;
-  //     width: 48px;
-  //     height: 80px;
-  //     background: image-url('logo-general.png') left top no-repeat;
-  //   }
-
-  //   img {
-  //     display: none;
-  //   }
-  // }
 }
 
-
-/*
+/**
  * Wrapper for the site name and slogan (hgroup)
  */
+
 #name-and-slogan {
   display: inline-block;
   vertical-align: top;
@@ -418,17 +257,16 @@ var {
   }
 }
 
-
-/*
+/**
  * Site name (h1)
  */
+
 #site-name {
   margin: 0;
   font-family:'Trebuchet MS';
   font-weight:700;
 
   a {
-
     &:link,
     &:visited {
       text-decoration: none;
@@ -441,30 +279,24 @@ var {
   }
 }
 
-
-/*
+/**
  * Site slogan (h2)
  */
+
 #site-slogan {
   margin: 0;
 }
 
-
 /* =============================================================================
  *   Page content header
  * ========================================================================== */
 
-/*
- * Main content header wraps the page title, tabs and actions links
- */
-#main-content-header {}
-
-
-/*
+/**
  * The main page title (h1)
  */
+
 #page-title {
-  margin: 0 0 10px 6px;
+  margin: 0 0 10px;
   font-weight:300;
 
   .page-node & {
@@ -480,18 +312,14 @@ var {
  *   Misc Global Styles
  * ========================================================================== */
 
-/*
+/**
  * Generic styles for nodes.
  */
+
 .node {
   position: relative;
 
-  &.node-answer,
-  &.node-event,
-  &.node-poll,
-  &.node-post,
-  &.node-question,
-  &.node-wiki.node-teaser {
+  &.user-picture-available {
     @include place-picture;
   }
 
@@ -507,11 +335,35 @@ var {
 
   .comment-comments {
     a {
-      @include count-btn('comments-dark'); 
+      @include count-btn('comments-dark');
     }
   }
 }
 
+.node-actions {
+  float: right;
+  width: 90px;
+  list-style: none;
+  margin: .5em -90px 0 0;
+  text-align: right;
+
+  &,
+  .block-content & {
+    padding: 0;
+  }
+
+  @include respond(small-medium) {
+    float: none;
+    width: auto;
+    margin: 1.7em 0;
+    text-align: left;
+  }
+}
+
+.button-alert {
+  @extend %btn-green;
+}
+
 .node-teaser {
   border-bottom: 1px solid #ccc;
   padding-bottom: 20px;
@@ -531,12 +383,7 @@ var {
     position: relative;
     @include border-radius(3px);
 
-    &.node-answer,
-    &.node-event,
-    &.node-poll,
-    &.node-post,
-    &.node-question,
-    &.node-wiki.node-teaser {
+    &.user-picture-available {
       @include place-picture(50px, 10px);
     }
 
@@ -555,18 +402,18 @@ var {
   padding:4px;
   @include border-radius(3px);
   @include box-shadow($light_gray 1px 1px 4px);
-  line-height:0;
+  line-height: 0;
 
   .node &,
   .comment & {
     &:after {
-      content:"";
-      width:5px;
-      height:8px;
-      position:absolute;
-      right:-5px;
-      top:10px;
-      background:image-url('user_img_arrow.png');
+      content: "";
+      width: 5px;
+      height: 8px;
+      position: absolute;
+      right: -5px;
+      top: 10px;
+      background: image-url('user_img_arrow.png');
     }
 
     img {
@@ -575,50 +422,103 @@ var {
   }
 }
 
-/*
- * Feed icons
+/**
+ * Filter drawer accessories
  */
-.feed-icon {}
 
+.filter-trigger {
+  display: none;
+  background: white;
+  @include box-sizing(border-box);
+  padding: 5px;
+  position: absolute;
+  top: 0;
+  left: -40px;
+  width: 40px;
+  height: 40px;
+  border-right: none;
+  @include border-radius(3px 0 0 3px);
+  text-align: center;
+  font: 0/0 a;
+  line-height: 0;
+  color: transparent;
+  @include box-shadow($light_gray 1px 1px 4px);
+  cursor: pointer;
+  z-index: -1;
+
+  &:after {
+    content: "\2026";
+    display: block;
+    width: 30px;
+    height: 30px;
+    font-size: 20px;
+    font-weight: bold;
+    @include text-shadow(2px 2px .2 rgba(0, 0, 0, .5));
+    line-height: 20px;
+    background: $gray;
+    @include background(linear-gradient($light_gray, $gray));
+    color: white;
+    @include border-radius(3px);
+    @include box-shadow(inset 0 0 .4em rgba(0, 0, 0, .2), $light_gray 1px 1px 4px);
+  }
+
+  &.following {
+    position: fixed;
+    right: 0;
+    left: auto;
+  }
+}
+
+.filter-overlay {
+  position: fixed;
+  top: 0;
+  left: 0;
+  display: none;
+  width: 100%;
+  height: 100%;
+  overflow: hidden;
+  background: rgba(255, 255, 255, .8);
+}
 
-/*
+/**
  * Aggregator feed source
  */
+
 #aggregator .feed-source .feed-icon {
   display: inline;
   float: none;
   margin-right: 10px;
 }
 
-
 .feed-details dt,
 .feed-details dd {
   display: inline;
   margin: 0;
 }
 
-
-/*
+/**
  * Generic styles for the more link
  */
+
 .more-link {
-  background-image:image-url('icons/icon-more.png');
-  background-repeat:no-repeat;
-  height:14px;
-  padding:0 0 0 17px;
-  float:right;
-  font-size:0.85em;
-  line-height:14px;
-  margin:10px;
+  background-image: image-url('icons/icon-more.png');
+  background-repeat: no-repeat;
+  min-height: 14px;
+  padding: 0 0 0 1.7em;
+  float: right;
+  font-size: 0.85em;
+  line-height: 14px;
+  margin-top: 10px;
+
   a {
     color:$light_gray;
   }
 }
 
-
-/*
+/**
  * Generic styles for links. See the ul.links declaration in node and comment stylesheets
  */
+
 ul.links {
   margin: 0;
   padding: 0;
@@ -634,6 +534,7 @@ ul.links {
   }
 }
 
+.quicktabs-style-commons-pills ul.quicktabs-tabs,
 ul.primary.tabs {
   border-bottom: none;
   padding: 0;
@@ -643,39 +544,61 @@ ul.primary.tabs {
     margin-top: 5px;
 
     a {
-      background-color: #d7d7d7;
+      background-color: $tab_background;
       @include border-radius(3px);
-      padding: 3px 10px;
-      display: block;
-      color: #a5a3a3;
+      padding: .3em .8em;
+      display: inline-block;
       border: none;
 
+      &,
+      span {
+        color: $tab_text;
+      }
+
       &:hover {
         text-decoration: none;
-        background-color: #d7d7d7;
-        color: #a5a3a3;
+        background-color: $tab_background;
+        color: $tab_text_hover;
       }
     }
 
     &.active a {
-      background-color: $dark_blue;
+      position: relative;
+      background-color: $tab_active_background;
       border: none;
-      color: $white;
 
+      &,
       &:hover {
-        background-color: $dark_blue;
+        background-color: $tab_active_background;
+      }
+
+      &,
+      span {
+        color: $tab_active_text;
+      }
+
+      &:after {
+        position: absolute;
+        bottom: -.7em;
+        left: 50%;
+        display: block;
+        width: 0;
+        height: 0;
+        overflow: hidden;
+        margin-left: -.6em;
+        content: "";
+        border-width: .4em .6em;
+        border-style: solid;
+        border-color: $tab_active_background transparent transparent;
       }
     }
   }
 }
 
-// li.flag-commons_follow_group {
-//   @extend %btn-gray;
-//   a {
-//     background:transparent !important;
-//     padding:3px 17px !important;
-//   }
-// }
+.quicktabs-style-commons-pills ul.quicktabs-tabs li {
+  text-transform: uppercase;
+  font-size: .8em;
+}
 
 li.sharethis {
   @extend %btn-gray;
@@ -696,7 +619,7 @@ li.sharethis {
   }
 
   &:before {
-    content: '';
+    content: "";
     @include sprite_url_height_width($icons, share);
   }
 
@@ -717,7 +640,7 @@ li.sharethis {
     position: relative;
 
     &:before, &:after {
-      content: '';
+      content: "";
       width: 0;
       height: 0;
       border-style: solid;
@@ -739,52 +662,101 @@ li.sharethis {
   }
 }
 
-/*
- * Search results are an ordered list so reset the margin
- */
-.search-results {
-  margin: 0;
-}
-
-/*
+/**
  * H1 Node title
  */
 
 h1.node-title {
-  color:$dark_blue;
-  font-size:20px;
+  color: $dark_blue;
+  font-size: 20px;
+
   a {
-    text-decoration:none;
-    color:$dark_blue;
+    text-decoration: none;
+    color: $dark_blue;
+
     &:hover {
-      text-decoration:underline;
+      text-decoration: underline;
     }
   }
 }
 
-/*
- * User picture wrapping and shadow
+/**
+ * Main wrapper for most blocks, block_system_main does not have it
  */
 
-.view-commons-homepage-content, .view-commons-activity-streams-activity, .view-activity-group, .view-commons-activity-streams-user-activity {
-  .content, .views-field-timestamp {
-    @include place-picture(40px);
+.block {
+  margin-bottom: 20px;
+}
+
+/**
+ * Block title
+ */
+
+.block-title {
+  margin: 0;
+}
+
+/**
+ * Match item list and block menu margin and padding
+ */
+
+.block-content {
+  ul,
+  ol {
+    padding: 0 0 0 15px;
+  }
+
+  li {
+    margin: 0;
+    padding: 0;
   }
 }
 
-.view-activity-group, .view-commons-activity-streams-activity, .view-commons-activity-streams-user-activity {
-  .views-row {
-    border-bottom: 1px solid #eee;
-    padding-bottom: 5px;
-    margin-bottom: 5px;
-    position: relative;
+/**
+ * User picture wrapping and shadow
+ */
 
-    &.views-row-last {
-      border-bottom: none;
-      padding-bottom: 0;
+.views-row {
+  border-bottom: 1px solid #eee;
+  padding-bottom: $gutter-width;
+  margin-bottom: $gutter-width;
+  position: relative;
+
+  &.views-row-last {
+    border-bottom: none;
+    padding-bottom: 0;
+    margin-bottom: 0;
+  }
+
+  .view-plain & {
+    border-bottom: none;
+    padding-bottom: 0;
+    margin: .3em 0;
+
+    &:first-child {
+      margin-top: 0;
+    }
+
+    &:last-child {
       margin-bottom: 0;
     }
+  }
+}
 
+.view-commons-homepage-content,
+.view-commons-activity-streams-activity,
+.view-activity-group,
+.view-commons-activity-streams-user-activity {
+  .content,
+  .views-field-timestamp {
+    @include place-picture(40px);
+  }
+}
+
+.view-activity-group,
+.view-commons-activity-streams-activity,
+.view-commons-activity-streams-user-activity {
+  .views-row {
     h2 {
       display: none;
     }
@@ -807,25 +779,29 @@ h1.node-title {
     color: $dark_gray;
   }
 
-  .field-name-field-topics, .field-name-og-group-ref {
-    float: left;
-    width: 50%;
+  .field-name-field-topics,
+  .field-name-og-group-ref {
+    &.view-mode-full {
+      float: left;
+      width: 50%;
+      margin-bottom: 1.7em;
 
-    ul {
-      margin: 0;
-      list-style: none;
-      padding: 0;
+      ul {
+        margin: 0;
+        list-style: none;
+        padding: 0;
 
-      li {
-        float: left;
-        margin-right: 10px;
+        li {
+          float: left;
+          margin-right: 10px;
+        }
       }
     }
   }
 
   .field-name-field-topics {
     .field-item:before {
-      content: '';
+      content: "";
       @include sprite_url_height_width($icons, tags);
       top: -1px;
     }
@@ -833,15 +809,13 @@ h1.node-title {
 
   .field-name-og-group-ref {
     .field-item:before {
-      content: '';
+      content: "";
       @include sprite_url_height_width($icons, groups);
       top: -1px;
     }
   }
 
   .node nav {
-    // float: left;
-    // width: 50%;
     clear: both;
     margin-top: 20px;
     position:relative;
@@ -852,16 +826,8 @@ h1.node-title {
 
     li {
       float: left;
-
-      &.flag-inappropriate_node {
-        float: none;
-        position: absolute;
-        bottom: 5px;
-        right: 5px;
-      }
     }
   }
-
 }
 
 #comments {
@@ -875,7 +841,7 @@ h1.node-title {
       font-size: 2.2em;
 
       &:before {
-        content: '';
+        content: "";
         @include sprite_url_height_width($icons, comments-large);
       }
     }
@@ -923,7 +889,7 @@ h1.node-title {
   float: right;
 
   &:before {
-    content: '';
+    content: "";
     @include sprite_url_height_width($icons, comments);
     margin-right: 8px;
     top: 3px;
@@ -936,132 +902,136 @@ h1.node-title {
   }
 }
 
+.primary-fields,
+.supplementary-fields {
+  @include inline-block;
+  @include box-sizing(border-box);
+  float: left;
 
-.page-node-add {
-  .node-form {
-    position: relative;
+  .view-commons-question-answers & {
+    display: block;
+    float: none;
+    width: auto;
+    padding: 0;
   }
+}
 
-  fieldset {
-    border: none;
+.primary-fields {
+  padding-right: $gutter-width;
+  width: 66.666%;
+}
 
-    &#edit-og-group-ref-und {
-      padding: 0;
-    }
-  }
+.supplementary-fields {
+  padding-left: $gutter-width;
+  width: 33.333%;
+}
 
-  #edit-body {
-    .ckeditor_links {
-      background-color: $white;
-      padding: 5px 15px 0 15px;
-      display: block;
-    }
+.form-actions {
+  clear: both;
+}
 
-    fieldset {
-      background-color: $white;
-      @include border-radius(0 0 6px 6px);
-    }
-  }
+/* Format the date range form items. */
+.start-date-wrapper,
+.end-date-wrapper {
+  clear: none;
+  width: auto;
+  max-width: 49%;
 
-  #edit-body, .form-item-title, .field-name-og-group-ref, #poll-choice-wrapper, .field-name-field-address-form {
-    width: 66%;
+  &,
+  input,
+  .form-item .form-type-textfield,
+  .date-padding,
+  .form-type-textfield {
     float: none;
+    display: inline-block;
+    min-width: inherit;
+  }
 
-    input[type="text"] {
-      width: 100%;
-    }
-
-    .lt480 & {
-      width: 100%;
+  .form-item {
+    input {
+      margin-right: auto;
     }
   }
 
-  .field-type-taxonomy-term-reference-form {
-    position: absolute;
-    right: 0;
-    top: 0;
-    width: 33%;
-    margin-right: 0;
-    margin-left: 0;
-    padding: 0;
-    @extend %pod;
-
-    > div {
-      @extend %pod-content;
-      padding: 5px 10px 10px 10px;
-      margin: 0;
-    }
+  .form-type-textfield {
+    max-width: 60%;
 
-    input[type="text"] {
-      width: 100%;
+    &:last-child {
+      max-width: 30%;
     }
   }
 
-  #edit-additional-settings {
-    // float: right;
-    position: absolute;
-    right: 0;
-    top: 80px;
-    width: 33%;
-    margin-right: 0;
-    margin-left: 0;
-    padding: 0;
-    @extend %pod;
+  .form-type-date-popup {
+    margin: 0;
+  }
 
-    > div {
-      @extend %pod-content;
+  @include respond(small-medium) {
+    display: block;
+    max-width: inherit;
+    margin: $gutter-width auto;
+  }
+}
 
-      fieldset {
-        border-bottom: 1px solid $border;
-        padding-left: 0;
-        padding-right: 0;
+.node-type-event {
+  .addressfield-container-inline {
+    &:after {
+      content: "";
+      clear: none;
+      display: none;
+    }
+  }
+}
 
-        &.collapsed {
-          border-bottom: none;
-        }
+.logo-available {
+  .field-name-field-date,
+  .field-name-field-address,
+  .field-name-field-offsite-url {
+    margin-left: 65px;
 
-        fieldset {
-          border-bottom: none;
-        }
-      }
+    @include respond(only-small) {
+      margin-left: 0;
     }
+  }
+}
 
-    input[type="text"] {
-      width: 100%;
-    }
+.field-name-field-logo {
+  float: left;
+  width: 70px;
+  margin: .5em 0 0 -70px;
+  position: relative;
+  left: 70px;
+
+  img {
+    display: block;
+    @include box-sizing(border-box);
+    margin-bottom: 1.7em;
+    padding: 4px;
+    @include border-radius(3px);
+    @include box-shadow($light_gray 1px 1px 4px);
+    background: $white;
   }
 
-  #edit-actions {
-    clear: both;
+  @include respond(only-small) {
+    display: none;
   }
 }
 
-.node-type-event {
-  .node-content {
-    margin-left: 0;
-
-    .field-name-field-logo {
-      float:left;
-      margin:3px 15px 15px 0;
-      background:$white;
-      padding:4px;
-      @include border-radius(3px);
-      @include box-shadow($light_gray 1px 1px 4px);
-      position:relative;
-      display:block;
-      line-height:0;
-
-      img {
-        width:72px;
-      }
-    }
+.field-name-body {
+  clear: both;
+  margin-top: 1.7em;
+}
 
-    // .field-name-field-offsite-url {
-    //   float: right;
-    // }
+.field-name-field-date {
+  font-weight: bold;
+}
 
-    .field-name-body {
-      clear: left;
+.adr {
+  .region {
+    &,
+    .node-type-event &,
+    .panel-display .region & {
+      float: none;
+      padding: 0;
     }
   }
 }
@@ -1083,7 +1053,7 @@ h1.node-title {
       @extend %btn-gray;
 
       &:before {
-        content: '';
+        content: "";
         @include sprite_url_height_width($icons, follow-large);
       }
     }
@@ -1126,18 +1096,13 @@ h1.node-title {
 }
 
 .flag-inappropriate-node {
-  @include opacity(0);
-  @include transition(opacity 0.5s);
-
+  display: block;
+  margin: $gutter-width 0;
   &:before {
-    content: '';
+    content: "";
     top: 0;
     @include sprite_url_height_width($icons, spam);
   }
-
-  .page-node .node:hover &, .pane-node-links:hover & {
-    @include opacity(1);
-  }
 }
 
 .view-commons-contributors-group {
@@ -1160,9 +1125,10 @@ h1.node-title {
   }
 }
 
-/*
+/**
  * Author/Submit line
  */
+
 .author-datetime {
   color:$light_gray;
   font-size:0.85em;
@@ -1172,30 +1138,30 @@ h1.node-title {
   color: $dark_gray;
 }
 
-/*
+/**
  * Featured/New Tags
  */
 
 .tag.featured {
-  width:58px;
-  height:22px;
-  display:inline-block;
+  width: 58px;
+  height: 22px;
+  display: inline-block;
   background: {
-    image:image-url('tag-featured.png');
-    repeat:no-repeat;
+    image: image-url('tag-featured.png');
+    repeat: no-repeat;
   }
-  margin:6px 0 0 5px;
+  margin: 6px 0 0 5px;
 }
 
 .tag.new {
-  width:27px;
-  height:22px;
-  display:inline-block;
+  width: 27px;
+  height: 22px;
+  display: inline-block;
   background: {
-    image:image-url('tag-new.png');
-    repeat:no-repeat;
+    image: image-url('tag-new.png');
+    repeat: no-repeat;
   }
-  margin:4px 0 0 5px;
+  margin: 4px 0 0 5px;
 }
 
 .page-user {
@@ -1231,7 +1197,7 @@ h1.node-title {
       display: inline-block;
 
       &:before {
-        content: '';
+        content: "";
         @include sprite_url_height_width($icons, facebook);
         margin-right: 7px;
         top: 7px;
@@ -1247,7 +1213,7 @@ h1.node-title {
       display: inline-block;
 
       &:before {
-        content: '';
+        content: "";
         @include sprite_url_height_width($icons, linkedin);
         margin-right: 7px;
         top: 7px;
@@ -1263,7 +1229,7 @@ h1.node-title {
       display: inline-block;
 
       &:before {
-        content: '';
+        content: "";
         @include sprite_url_height_width($icons, twitter);
         margin-right: 7px;
         top: 7px;
@@ -1284,95 +1250,31 @@ h1.node-title {
   }
 }
 
-/* =============================================================================
- *   Regions
- * ========================================================================== */
-
-/*
- * Standard region wrapper, don't add width to any regions, you will bork the layout - no margin, padding or borders etc
- */
-.region {}
-
-
-/*
- * Regions have an inner div - perfect for adding margin, padding or borders
+/**
+ * Group nodes
  */
-.region-inner {}
 
+.node-group {
+  .field-name-body {
+    clear: none;
+  }
+}
 
-/*
- * Regions can be nested, such as when using Panels
- */
-.region-inner .region-inner {}
-//
+/* =============================================================================
+ *   Regions
+ * ========================================================================== */
 
-/*
+/**
  * Header region, embedded in the #header
  */
+
 .region-header {
   display: inline-block;
-  // float: left;
-  // @extend %divider-left;
   height: 64px;
   width: 266px;
   text-align: left;
 }
 
-
-/*
- * Generally used to output Drupals help block, if the help module is enabled
- */
-.region-help {}
-
-
-/*
- * Secondary content
- */
-.region-secondary-content {}
-
-
-/*
- * Sits above the main content header, like a content-top region
- */
-.region-highlighted {}
-
-
-/*
- * Sits below the main content, like a content-bottom region
- */
-.region-content-aside {}
-
-
-/*
- * Sidebars - targets both
- */
-.sidebar {}
-
-
-/*
- * First sidebar
- */
-.region-sidebar-first {}
-.region-two-66-33-first {}
-
-/*
- * Second sidebar
- */
-.region-sidebar-second {}
-.region-two-66-33-second {}
-
-/*
- * Tertiary content
- */
-.region-tertiary-content {}
-
-
-/*
- * Footer region
- */
-.region-footer {}
-
-
 /* =============================================================================
  *   Links
  * ========================================================================== */
@@ -1381,19 +1283,12 @@ a {
   text-decoration: none;
   color: $light_blue;
 
-  &:link,
-  &:visited {}
-
-  &:active,
-  &.active {}
-
   &:hover,
   &:focus {
     text-decoration: underline;
   }
 }
 
-
 /* =============================================================================
  *   Primary, Secondary and Menu Bar region menus
  * ========================================================================== */
@@ -1402,7 +1297,7 @@ a {
   display: inline-block;
 }
 
-/*
+/**
  * Use one of the following id's for granular control:
  *  - #menu-bar (menu bar region)
  *  - #primary-menu (main menu)
@@ -1412,8 +1307,6 @@ a {
 
 #menu-bar.nav {
   display: inline-block;
-  // margin-right: -3px;
-  // float: left;
   vertical-align: top;
   margin:0;
   @extend %divider-right;
@@ -1434,11 +1327,12 @@ a {
     margin: 0;
     padding: 0;
 
-    &:hover, &.active-trail {
+    &:hover,
+    &.active-trail {
       background: image-url('main-nav-hover.png') repeat-x left top;
       .arrow {
         &:before {
-          content: '';
+          content: "";
           display: block;
           position: absolute;
           bottom: 0px;
@@ -1451,7 +1345,7 @@ a {
         }
 
         &:after {
-          content: '';
+          content: "";
           display: block;
           position: absolute;
           bottom: 0px;
@@ -1473,15 +1367,16 @@ a {
     height: 33px;
     text-transform: uppercase;
     @include text-shadow(#000 1px 1px 4px);
-    background-position:center 10px;
-    background-repeat:no-repeat;
-    position:relative;
+    background-position: center 10px;
+    background-repeat: no-repeat;
+    position: relative;
     @extend %divider-left;
-    &:visited {}
+
     &:hover,
     &:focus {
       text-decoration: none;
     }
+
     .arrow {
       width:17px;
       height:9px;
@@ -1541,8 +1436,10 @@ ul.commons-utility-links {
     display: inline-block;
 
     &.first {
-      margin-right: 17px;
-      font-weight: bold;
+      .logged-in & {
+        margin-right: 17px;
+        font-weight: bold;
+      }
     }
 
     &.last {
@@ -1556,7 +1453,6 @@ ul.commons-utility-links {
   }
 }
 
-
 /* =============================================================================
  *   Superfish
  * ========================================================================== */
@@ -1571,9 +1467,6 @@ ul.sf-menu {
     text-decoration: none;
     height: 2.5em;
     line-height: 2.5em;
-
-    &:link,
-    &:visited {}
   }
 
   li {
@@ -1592,23 +1485,14 @@ ul.sf-menu {
   }
 }
 
-
-/*
+/**
  * Superfish blocks
  */
-.block-superfish {
-
-  .block-inner .content {}
 
+.block-superfish {
   ul {
     margin: 0 !important;
     padding: 0 !important;
-
-    ul {
-      ul {
-        ul {}
-      }
-    }
   }
 
   li {
@@ -1617,18 +1501,16 @@ ul.sf-menu {
   }
 }
 
-
-/*
+/**
  * Vertical style
  */
+
 .sf-vertical {
   width: 100%;
 
   li {
     width: 100%;
 
-    &.last {}
-
     &:hover ul,
     &.sfHover ul {
       left: 100%;
@@ -1643,23 +1525,22 @@ ul.sf-menu {
   }
 }
 
-
-/*
+/**
  * Navbar style
  */
+
 .sf-navbar {
   padding-bottom: 0 !important;
 }
 
-
-/*
+/**
  * Sensible padding for the default style
  */
+
 .sf-menu.sf-style-default a {
   padding: 0 10px;
 }
 
-
 /* =============================================================================
  *   Menus, usually blocks
  * ========================================================================== */
@@ -1670,57 +1551,22 @@ ul.menu {
   ul {
     padding-left: 15px;
 
-    ul {
-      ul {}
-    }
-  }
-
-  li {
-    margin: 0;
-
-    &.collapsed,
-    &.expanded,
-    &.leaf {}
-
-    a {
-
-      &:link,
-      &:visited {}
-
-      &:active,
-      &.active {}
-
-      &:hover,
-      &:focus {}
+    li {
+      margin: 0;
     }
-
-    &.active a,
-    &.active-trail a {}
-
-    &.first,
-    &.last {}
   }
 }
 
-
 /* If li.content exists it's a problem, so reset the padding */
 .block .menu li.content {
   padding: 0;
 }
 
-
 /* =============================================================================
  *   Book navigation menu
  * ========================================================================== */
 
 .book-navigation {
-
-  .page-links {}
-
-  .page-previous {}
-
-  .page-next {}
-
   .page-up {
     /* Prevent text wrapping to a new line, assumes English "up" is used (two characters) */
     min-width: 2em;
@@ -1732,7 +1578,6 @@ ul.menu {
   }
 }
 
-
 /* =============================================================================
  *   Breadcrumbs
  * ========================================================================== */
@@ -1764,25 +1609,8 @@ ul.menu {
     list-style: none;
     display: inline;
   }
-
-  li.crumb-first {}
-
-  li.crumb-last {}
-
-  a {
-
-    &:link,
-    &:visited {}
-
-    &:active,
-    &.active {}
-
-    &:hover,
-    &:focus {}
-  }
 }
 
-
 /* =============================================================================
  *   Pagers
  * ========================================================================== */
@@ -1793,12 +1621,10 @@ ul.pager {
   text-align: center;
 }
 
-
 .item-list ul.pager li {
   margin: 0;
 }
 
-
 ul.pager li {
   background-image: none;
   display: inline;
@@ -1810,40 +1636,10 @@ ul.pager li {
   }
 }
 
-
 .block ul.pager li {
   margin: 0;
 }
 
-
-/*
- * Theme the various states of pager links
- */
-ul.pager li {
-
-  a {
-
-    &:link,
-    &:visited {}
-
-    &:active,
-    &.active {}
-
-    &:hover,
-    &:focus {}
-  }
-
-  &.pager-item {}
-  &.first {}
-  &.last {}
-  &.pager-current {}
-  &.pager-first {}
-  &.pager-previous {}
-  &.pager-next {}
-  &.pager-last {}
-}
-
-
 /* =============================================================================
  *   Skip Navigation
  * ========================================================================== */
@@ -1886,7 +1682,6 @@ ul.pager li {
   }
 }
 
-
 /* =============================================================================
  *   Tabs (local tasks)
  * ========================================================================== */
@@ -1895,7 +1690,6 @@ ul.pager li {
   margin-bottom: 15px;
 }
 
-
 ul.primary {
   border-bottom-color: $border;
   margin: 20px 0;
@@ -1934,7 +1728,6 @@ ul.primary {
   }
 }
 
-
 ul.secondary {
   border-bottom: 1px solid $border;
   margin: 1em 0 0;
@@ -1955,7 +1748,6 @@ ul.secondary {
   }
 }
 
-
 /* =============================================================================
  *   Action links
  * ========================================================================== */
@@ -1963,36 +1755,16 @@ ul.secondary {
 ul.action-links {
   margin: 20px 0 0;
   list-style: none;
-
-  li {}
 }
 
-
 /* =============================================================================
  *  Field Styling
  * ========================================================================== */
 
-/*
- * Wrapper for any field
- */
-.field {}
-
-
-/*
- * Above and inline classes are on the field wrapper
- */
-.field-label-above {}
-
-
-/*
- * When labels are set to inline in field display settings the clearfix class is automatically added
- */
-.field-label-inline {}
-
-
-/*
+/**
  * Labels are h2 in Adaptivetheme. Use a strong selector to mitigate unwanted ineritance issues
  */
+
 .field-label {
   font-size: 1em;
   font-weight: 700;
@@ -2001,29 +1773,11 @@ ul.action-links {
   margin-bottom: 0;
 }
 
-
-/*
- * Field types (Core)
- */
-
-/*
- * Image fields use the <figure> and <figcaption> elements from HTML5
- */
-.field-type-image {
-
-  .caption {}
-
-  .full-caption {}
-
-  .teaser-caption {}
-}
-
-
-/*
+/**
  * Taxonomy
  */
-.field-type-taxonomy-term-reference {
 
+.field-type-taxonomy-term-reference {
   /* The same bottom margin as p, blockquote, ul, ol and dl */
   margin-bottom: 1.5em;
 
@@ -2039,131 +1793,28 @@ ul.action-links {
   }
 }
 
-
-/*
- * Text
- */
-.field-type-text {}
-
-
-/*
- * Long text
- */
-.field-type-text-long {}
-
-
-/*
- * Text with summary
- */
-.field-type-text-with-summary {}
-
-
-/*
- * File
- */
-.field-type-file {}
-
-
-/*
- * Number/Integer
- */
-.field-type-number-integer {}
-
-
-/*
- * Decimal
- */
-.field-type-number-decimal {}
-
-
-/*
- * Number float
- */
-.field-type-number-float {}
-
-
-/*
- * List
- */
-.field-type-list-text {}
-
-
-/*
- * List boolean
- */
-.field-type-list-boolean {}
-
-
-/*
- * List integer
- */
-.field-type-list-integer {}
-
-
-/*
- * List float
- */
-.field-type-list-float {}
-
-
-/*
- * Field types (Contrib)
- */
-.field-type-datetime {}
-
-.field-type-node-reference {}
-
-.field-type-user-reference {}
-
-
-/*
- * Named fields
- */
-.field-name-body {}
-
-.field-name-field-image {}
-
-.field-name-field-tags {}
-
-
-/*
- * Underscores in field name are replaced with dashes
- */
-.field-name-field-FIELDNAME {}
-
-
-/*
- * Image Alignment Theme Settings - included here so you can easily override
- */
-
-/*
- * Float none setting
- */
-.ia-n .field-type-image,
-.iat-n .field-type-image {}
-
-
-/*
+/**
  * Float left setting
  */
+
 .ia-l .field-type-image figure,
 .iat-l .field-type-image figure {
   margin: 5px 20px 15px 0;
 }
 
-
-/*
+/**
  * Centered setting
  */
+
 .ia-c .field-type-image figure,
 .iat-c .field-type-image figure {
   margin: 5px auto 15px;
 }
 
-
-/*
+/**
  * Float right setting
  */
+
 .ia-r .field-type-image figure,
 .iat-r .field-type-image figure {
   margin: 5px 0 15px 20px;
@@ -2173,13 +1824,22 @@ ul.action-links {
  *   Panels Styling
  * ========================================================================== */
 
-.node-type-group.page-node .commons-pod {
-  padding: 0;
-  background-color: transparent;
-  @include border-radius(0);
-  @include box-shadow(none);
-  margin-right: 0;
-  margin-bottom: 0;
+.node-title,
+.pane-title {
+  font-weight: normal;
+  font-size: 1.6em;
+}
+
+.panel-display {
+  min-width: 100%;
+  margin-right: -$gutter-width;
+  margin-left: -$gutter-width;
+
+  .region {
+    @include box-sizing(border-box);
+    padding-right: $gutter-width;
+    padding-left: $gutter-width;
+  }
 }
 
 .commons-pod-comments {
@@ -2211,8 +1871,7 @@ ul.action-links {
   min-width: 83px;
   height: 34px;
   padding: 0 10px;
-  // needs latest Compass, add '@import "compass"' to your scss
-  background-color: #919591; // Old browsers
+  background-color: #919591;
   @include filter-gradient(#919591, #737772, vertical); // IE6-9
   @include background-image(linear-gradient(top,  #919591 0%,#90948f 12%,#757a74 33%,#737772 100%));
   border: 1px solid #585C58;
@@ -2233,9 +1892,8 @@ ul.action-links {
 .pane-views-panes,
 .pane-views,
 body.page-node .pane-views-panes {
-
   h2 {
-    font-size:20px;
+    font-size: 20px;
     line-height: 1.2em;
     margin-bottom: .85em;
     color:$gray;
@@ -2250,18 +1908,6 @@ body.page-node .pane-views-panes {
   }
 }
 
-.pane-commons-events-user-upcoming-events-panel-pane-2,
-.pane-commons-events-user-upcoming-events-panel-pane-3,
-.pane-commons-events-upcoming-panel-pane-1,
-.pane-activity-group-panel-pane-1,
-.pane-commons-radioactivity-groups-active-in-group-panel-pane-1,
-.pane-commons-contributors-group-panel-pane-2,
-.pane-commons-wikis-contributor-list-commons-wikis-contributor-pane,
-.nodes {
-  @extend %pod;
-  @extend %pod-content;
-}
-
 .nodes {
   margin-top: 1em;
 }
@@ -2277,40 +1923,26 @@ body.page-node .pane-views-panes {
 
 .pane-commons-featured-panel-pane-1,
 .pane-commons-events-upcoming {
-  .block-inner {
-    // padding:0 0 15px 0;
-    margin:0;
-    .pane-title {
-      padding:20px 20px 0 20px;
-      line-height:20px;
-    }
-    .views-row{
-      padding:10px 20px 10px 20px;
-      border-bottom:1px solid #eee;
-    }
+  .block-inner {
+    margin: 0;
+
     .views-row-last {
-      border-bottom:none;
+      border-bottom: none;
     }
+
     .views-field-field-date,
     .views-field-field-location,
     .views-field-comment-count {
-      font-size:0.85em;
+      font-size: 0.85em;
     }
+
     .views-field-field-location,
     .views-field-comment-count {
-      color:$light_gray;
+      color: $light_gray;
     }
   }
 }
 
-.pane-commons-radioactivity-groups-most-active-panel-pane-1, .pane-commons-activity-streams-activity-panel-pane-1, .pane-commons-featured-panel-pane-1, .pane-commons-groups-contributors-panel-pane-1 {
-  @extend %pod;
-
-  > .block-inner {
-    @extend %pod-content;
-  }
-}
-
 .pane-commons-bw-group {
   @extend %pod;
 
@@ -2332,22 +1964,16 @@ body.page-node .pane-views-panes {
       }
 
       figure {
-        float:left;
-        margin:3px 10px 5px 0;
-        background:$white;
-        padding:4px;
+        float: left;
+        margin: 3px 10px 5px 0;
+        background: $white;
+        padding: 4px;
         @include border-radius(3px);
         @include box-shadow($light_gray 1px 1px 4px);
-        position:relative;
-        display:block;
-        line-height:0;
-      }
-
-      .field-name-field-topics {
-        // float: right;
+        position: relative;
+        display: block;
+        line-height: 0;
       }
-
-
     }
 
     .node-content {
@@ -2356,12 +1982,14 @@ body.page-node .pane-views-panes {
   }
 }
 
-.view-commons-radioactivity-groups-most-active, .view-commons-groups-recent-content, .view-commons-radioactivity-groups-active-in-group {
+.view-commons-radioactivity-groups-most-active,
+.view-commons-groups-recent-content,
+.view-commons-radioactivity-groups-active-in-group {
   .type-Wiki {
     font-size: 12px;
 
     &:before {
-      content: '';
+      content: "";
       @include sprite_url_height_width($icons, wikis);
       margin-right: 6px;
     }
@@ -2371,7 +1999,7 @@ body.page-node .pane-views-panes {
     font-size: 12px;
 
     &:before {
-      content: '';
+      content: "";
       @include sprite_url_height_width($icons, events);
       margin-right: 6px;
     }
@@ -2381,7 +2009,7 @@ body.page-node .pane-views-panes {
     font-size: 12px;
 
     &:before {
-      content: '';
+      content: "";
       @include sprite_url_height_width($icons, polls);
       margin-right: 6px;
     }
@@ -2391,17 +2019,18 @@ body.page-node .pane-views-panes {
     font-size: 12px;
 
     &:before {
-      content: '';
+      content: "";
       @include sprite_url_height_width($icons, posts);
       margin-right: 6px;
     }
   }
 
-  .type-Question, .type-Answer {
+  .type-Question,
+  .type-Answer {
     font-size: 12px;
 
     &:before {
-      content: '';
+      content: "";
       @include sprite_url_height_width($icons, qa);
       margin-right: 6px;
     }
@@ -2421,13 +2050,15 @@ body.page-node .pane-views-panes {
 }
 
 .pane-commons-groups-directory-panel-pane-1 {
-  background-color:transparent;
+  background-color: transparent;
   @include border-radius(0px);
   @include box-shadow(none);
-  margin-right:0;
-  margin-bottom:0;
+  margin-right: 0;
+  margin-bottom: 0;
+
   .block-inner {
-    padding:0;
+    padding: 0;
+
     .pane-title {
       display:none;
     }
@@ -2442,7 +2073,7 @@ body.page-node .pane-views-panes {
 
     &:before {
       @include sprite_url_height_width($icons, icon-groups-small);
-      content: '';
+      content: "";
       top: 3px;
     }
   }
@@ -2454,14 +2085,15 @@ body.page-node .pane-views-panes {
 
 .view-id-commons_events_upcoming {
   .views-field {
-    margin:0 0 0 18px;
+    margin: 0 0 0 18px;
   }
+
   .views-field-title {
-    background-image:image-url('icons/icon-gray-event.png');
-    background-repeat:no-repeat;
-    background-position:left 4px;
-    margin:0;
-    padding:0 0 0 18px;
+    background-image: image-url('icons/icon-gray-event.png');
+    background-repeat: no-repeat;
+    background-position: left 4px;
+    margin: 0;
+    padding: 0 0 0 18px;
   }
 }
 
@@ -2470,14 +2102,14 @@ body.page-node .pane-views-panes {
 
   article {
     @extend %pod-content;
+
     .commons-events-form-float {
-      float:right;
-      margin:-40px 0 0 0;
+      float: right;
+      margin: -40px 0 0 0;
     }
   }
 }
 
-
 .view-id-commons_activity_streams_activity {
   .view-content {
     .views-field-timestamp {
@@ -2487,25 +2119,35 @@ body.page-node .pane-views-panes {
   }
 }
 
-.view-id-commons_groups_contributors {
-  table {
-    border:none;
-  }
-  tbody tr {
-    border-top:none;
+.views-view-grid {
+  border: none;
+  margin: 0;
+
+  tbody {
+    tr {
+      border-top: none;
+      background: none;
+    }
   }
-  .user-picture:after {
-    background:none;
+
+  td {
+    padding: $gutter-width / 2;
   }
 }
 
+.grid-grouping-title {
+  font-size: 1em;
+  color: $light_gray;
+  margin-bottom: $gutter-width;
+}
+
 .pager a {
   @extend %btn-gray;
   padding: 5px 20px;
 }
 
-.view-commons-groups-directory, .view-commons-homepage-content .node-teaser.node-group {
-
+.view-commons-groups-directory,
+.view-commons-homepage-content .node-teaser.node-group {
   h2 {
     font-size: 26px;
     line-height: 1em;
@@ -2516,50 +2158,41 @@ body.page-node .pane-views-panes {
     display: none;
   }
 
-  .pane-node-field-group-logo {
-    float: left;
-    margin-bottom: 3px;
-    margin-top: 3px;
-
-    .field-name-field-group-logo a {
-      display: block;
-      border: 3px solid $white;
-      @include border-radius(2px);
-      box-shadow: 1px 1px 3px $gray;
-
-      img {
-        display: block;
-      }
-    }
-  }
-
-  > .view-content > .views-row, > .view-filters {
+  > .view-content > .views-row,
+  > .view-filters {
     @extend %pod;
     position: relative;
 
-    > .node-teaser, form {
+    > .node-teaser,
+    form {
       @extend %pod-content;
     }
   }
+
   .view-filters {
     .views-exposed-widgets {
       margin-bottom: 0;
     }
+
     .views-widget,
     label {
-      display:inline-block;
+      display: inline-block;
     }
+
     label {
-      color:$dark_gray;
-      font-size:0.85em;
-      font-weight:normal;
-      margin:0 15px 0 0;
+      color: $dark_gray;
+      font-size: 0.85em;
+      font-weight: normal;
+      margin: 0 15px 0 0;
+      line-height: 2em;
     }
+
     .form-text {
       width:400px;
       @include box-shadow($light_gray 1px 1px 2px inset);
       border-color:#c2c2c2;
     }
+
     .form-submit {
       margin-top:1px;
     }
@@ -2570,6 +2203,22 @@ body.page-node .pane-views-panes {
   }
 }
 
+.pane-node-field-group-logo {
+  float: left;
+  margin: 0 $gutter-width $gutter-width 0;
+
+  .field-name-field-group-logo a {
+    display: block;
+    border: 3px solid $white;
+    @include border-radius(2px);
+    box-shadow: 1px 1px 3px $gray;
+
+    img {
+      display: block;
+    }
+  }
+}
+
 .pane-commons-groups-recent-content {
   width: 50%;
   float: left;
@@ -2632,7 +2281,7 @@ body.page-node .pane-views-panes {
         z-index: 15;
 
         &:after {
-          content: '';
+          content: "";
           display: block;
           width: 0px;
           height: 0px;
@@ -2659,7 +2308,8 @@ body.page-node .pane-views-panes {
 }
 
 .region-two-66-33-second .view-commons-contributors-group {
-  table, tbody {
+  table,
+  tbody {
     margin: 0;
     border: none;
   }
@@ -2671,8 +2321,6 @@ body.page-node .pane-views-panes {
 
   td {
     padding: 0;
-    // margin: 0 5px 5px 0;
-    // float: left;
     line-height: 0;
 
     &.col-last a {
@@ -2689,7 +2337,8 @@ body.page-node .pane-views-panes {
   }
 }
 
-#views-exposed-form-commons-homepage-content-panel-pane-1, #views-exposed-form-commons-bw-all-page-1 {
+#views-exposed-form-commons-homepage-content-panel-pane-1,
+#views-exposed-form-commons-bw-all-page-1 {
   .views-submit-button {
     margin-left: 20px;
   }
@@ -2709,14 +2358,14 @@ body.page-node .pane-views-panes {
 
 .pane-node-flag-commons-follow-group-link {
   position: absolute;
-  right: 5px;
+  right: 10px;
   top: 22px;
 
   .flag-action {
     @extend %btn-gray;
 
     &:before {
-      content: '';
+      content: "";
       @include sprite_url_height_width($icons, icon-gray-follow);
       top: 0;
       margin-right: 5px;
@@ -2730,56 +2379,57 @@ body.page-node .pane-views-panes {
 
 .view-id-commons_featured {
   .views-field-title .field-content {
-    background-repeat:no-repeat;
+    background-repeat: no-repeat;
   }
-  .views-field-field-date, .views-field-field-address {
-    margin:0 0 0 18px;
+
+  .views-field-field-date,
+  .views-field-field-address {
+    margin: 0 0 0 18px;
   }
+
   .type-Event {
-    background-image:image-url('icons/icon-gray-event.png');
-    background-position:left 1px;
-    padding:0 0 0 18px;
+    background-image: image-url('icons/icon-gray-event.png');
+    background-position: left 1px;
+    padding: 0 0 0 18px;
   }
+
   .type-Post {
-    background-image:image-url('icons/icon-gray-post.png');
-    background-position:left 1px;
-    padding:0 0 0 18px;
+    background-image: image-url('icons/icon-gray-post.png');
+    background-position: left 1px;
+    padding: 0 0 0 18px;
   }
 }
 
 .views-exposed-widgets {
-  margin-bottom:1.5em;
+  margin-bottom: 1.5em;
+
   .views-exposed-widget {
-    padding:0;
-    .form-select {
-      // border:none !important;
-      // background:transparent !important;
-      // color:$light_blue;
-      // cursor:pointer;
-      // padding-right:0;
-      // padding:0 0.5em;
-      // display:block;
-    }
+    padding: 0;
+
     label {
-      float:left;
-      font-weight:normal;
-      color:$light_gray;
-      padding:1px 0 0 0;
+      float: left;
+      font-weight: normal;
+      color: $light_gray;
+      padding: 1px 0 0 0;
     }
   }
+
   .views-widget {
-    float:left;
+    float: left;
   }
+
   .views-submit-button {
-    padding:0;
-    display:none;
+    padding: 0;
+    display: none;
+
     .form-submit {
-      margin-top:0;
+      margin-top: 0;
     }
   }
 }
 
-.views-widget-sort-by, .form-item-sort-order {
+.views-widget-sort-by,
+.form-item-sort-order {
   .form-select-wrapper {
     float: left;
   }
@@ -2825,7 +2475,8 @@ body.page-node .pane-views-panes {
   @include border-radius(6px);
   list-style: none;
 
-  .block-content &, .item-list & {
+  .block-content &,
+  .item-list & {
     margin: 0;
     padding: 0;
   }
@@ -2847,7 +2498,7 @@ body.page-node .pane-views-panes {
 
     .commons-polls-create:before {
       @include sprite_url_height_width($icons, polls);
-      content: '';
+      content: "";
       position: absolute;
       left: 10px;
       top: 13px;
@@ -2855,7 +2506,7 @@ body.page-node .pane-views-panes {
 
     .commons-posts-create:before {
       @include sprite_url_height_width($icons, posts);
-      content: '';
+      content: "";
       position: absolute;
       left: 10px;
       top: 13px;
@@ -2863,7 +2514,7 @@ body.page-node .pane-views-panes {
 
     .commons-wikis-create:before {
       @include sprite_url_height_width($icons, wikis);
-      content: '';
+      content: "";
       position: absolute;
       left: 10px;
       top: 13px;
@@ -2871,7 +2522,7 @@ body.page-node .pane-views-panes {
 
     .commons-events-create:before {
       @include sprite_url_height_width($icons, events);
-      content: '';
+      content: "";
       position: absolute;
       left: 10px;
       top: 13px;
@@ -2879,7 +2530,7 @@ body.page-node .pane-views-panes {
 
     .commons-q-a-create:before {
       @include sprite_url_height_width($icons, qa);
-      content: '';
+      content: "";
       position: absolute;
       left: 10px;
       top: 13px;
@@ -2953,216 +2604,47 @@ body.page-node .pane-views-panes {
  *   Block Styling
  * ========================================================================== */
 
-/*
- * Main wrapper for most blocks, block_system_main does not have it
- */
-.block {
-  margin-bottom: 20px;
-}
-
-
-/*
- * Inner wrapper for most blocks, good for margin, padding and borders, block_system_main does not have it
- */
-.block-inner {}
-
-
-/*
- * The first block in the region
- */
-.block.first {}
-
-
-/*
- * The last block in the region
- */
-.block.last {}
-
-
-/*
- * Zebra striping for each block in the region
- */
-.block.odd {}
-
-
-/*
- * Zebra striping for each block in the region
- */
-.block.even {}
-
-
-/*
- * Block title
- */
-.block-title {
-  margin: 0;
-}
-
-
-/*
- * Block content wrapper
- */
-.block-content {}
-
-
-/*
- * Match item list and block menu margin and padding
- */
-.block-content {
-
-  ul,
-  ol {
-    padding: 0 0 0 15px;
-  }
-
-  li {
-    margin: 0;
-    padding: 0;
-  }
-}
-
-
-/*
- * Block for the latest news items in the first category
- */
-#block-aggregator-category-1 {}
-
-
-/*
- * Block for the latest news items in the first feed
- */
-#block-aggregator-feed-1 {}
-
-
-/*
- * First block created with "Add block" link
- */
-#block-block-1 {}
-
-
-/*
- * "Recent blog posts" block
- */
-#block-blog-recent {}
-
-
-/*
- * "Book navigation" block for the current book's table of contents
- */
-#block-book-navigation {}
-
-
-/*
- * "Recent comments" block
- */
-#block-comment-recent {}
-
-
-/*
- * "Active forum topics" block
- */
-#block-forum-active {}
-
-
-/*
- * "New forum topics" block
- */
-#block-forum-new {}
-
-
-/*
- * Language switcher block
- */
-#block-locale-language {}
-
-
-/*
- * Custom menu block
- */
-#block-menu-menu-NAME {}
-
-
-/*
- * "Recent content" block
- */
-#block-node-recent {}
-
-
-/*
- * "Syndicate" block for primary RSS feed; see also page.css's .feed-icon
- */
-#block-node-syndicate {}
-
-
-/*
- * "Most recent poll" block
- */
-#block-poll-recent {}
-
-
-/*
- * "Author information" block for the profile of the page's author
- */
-#block-profile-author-information {}
-
-
-/*
+/**
  * "Search form" block
  */
+
 .block-search {
-  display:block;
-  // needs latest Compass, add '@import "compass"' to your scss
-  // background-color: #03416a; // Old browsers
-  // @include filter-gradient(#03416a, #00558b, vertical); // IE6-9
-  // @include background-image(linear-gradient(top,  #03416a 0%,#034b7b 19%,#034d7e 27%,#00558b 100%));
+  display: block;
   background-color: darken($dark_blue, 12%); // Old browsers
   @include filter-gradient(darken($dark_blue, 12%), darken($dark_blue, 6%), vertical); // IE6-9
   @include background-image(linear-gradient(top,  darken($dark_blue, 12%) 0%,darken($dark_blue, 6%)100%));
   @include border-radius(4px);
   box-shadow: 1px 1px 2px #000 inset, 2px 3px 3px rgba(#fff, 0.09);
-  // width:100%;
-  height:30px;
-  margin:0 0 0 10px;
+  height: 30px;
+  margin: 0 0 0 10px;
   position: relative;
 
-  .not-logged-in & {
-    margin-top: 15px;
-  }
-
   .block-inner {
-    margin-left:0;
-    margin-right:0;
-  }
-  .form-select {
-    // background-color:transparent;
-    // color:$white;
-    // border:none;
-    // background-image:image-url('icons/ico_arrow_wht.png');
-    // background-repeat:no-repeat;
-    // background-position:right center;
-    // padding-right:10px;
-    // margin:3px 0 0 5px;
+    margin-left: 0;
+    margin-right: 0;
   }
+
   .form-text {
-    color:$white;
-    background:transparent;
-    border:none;
-    margin:3px 0 0 0;
-    width:145px;
+    color: $white;
+    background: transparent;
+    border: none;
+    margin: 3px 0 0 0;
+    width: 145px;
 
     .node-type-group & {
-      width:120px;
+      width: 120px;
     }
   }
+
   .form-submit {
-    background-color:transparent !important;
-    border:none !important;
-    width:12px !important;
-    height:12px !important;
-    background-image:image-url('icons/ico_search_wht.png') !important;
-    text-indent:-9999px !important;
-    padding:0 !important;
-    margin:10px 2px !important;
+    background-color: transparent !important;
+    border: none !important;
+    width: 12px !important;
+    height: 12px !important;
+    background-image: image-url('icons/ico_search_wht.png') !important;
+    text-indent: -9999px !important;
+    padding: 0 !important;
+    margin: 10px 2px !important;
   }
 
   .form-item-search-block-form label {
@@ -3177,79 +2659,6 @@ body.page-node .pane-views-panes {
   }
 }
 
-
-/*
- * "Shortcuts" block
- */
-#block-shortcut-shortcuts {}
-
-
-/*
- * "Popular content" block
- */
-#block-statistics-popular {}
-
-
-/*
- * "Main menu" block
- */
-#block-system-main-menu {}
-
-
-/*
- * "Management" block for Drupal management menu
- */
-#block-system-management {}
-
-
-/*
- * "Navigation" block for Drupal navigation menu
- */
-#block-system-navigation {}
-
-
-/*
- * "User menu" block for Drupal user menu
- */
-#block-system-user-menu {}
-
-
-/*
- * "System help" block
- */
-#block-system-help {}
-
-
-/*
- * "Main page content" block
- */
-#block-system-main {}
-
-
-/*
- * "Powered by Drupal" block
- */
-#block-system-powered-by {}
-
-
-/*
- * "User login form" block
- */
-#block-user-login {}
-
-
-/*
- * "Who's new" block for a list of the newest users
- */
-#block-user-new {}
-
-
-/*
- * "Who's online" block for a list of the online users
- */
-#block-user-online {}
-
-
 /* =============================================================================
  *   Node Styling
  * ========================================================================== */
@@ -3268,7 +2677,7 @@ body.page-node .pane-views-panes {
   z-index: 1;
 
   &:before {
-    content: '';
+    content: "";
     display: block;
     width: 0px;
     height: 0px;
@@ -3286,53 +2695,17 @@ body.page-node .pane-views-panes {
   }
 }
 
-.node {
-  margin-bottom: 20px;
-
-  &.node-sticky {}
-
-  &.node-by-viewer {}
-
-  &.node-teaser {
-    .links {
-      font-size:0.85em;
-    }
-  }
-
-  &.node-full {}
-
-  &.odd {}
-
-  &.even {}
-
-  .node-title {
-    margin: 0;
-  }
-
-  .user-picture {}
-
-  .submitted {
-
-    .username {}
-
-    time {}
-  }
-
-  .node-content {}
-
-  ul.links {
+.node {
+  margin-bottom: 20px;
 
-    li {}
-    li a {}
+  &.node-teaser {
+    .links {
+      font-size:0.85em;
+    }
+  }
 
-    li.node-read-more a {}
-    li.comment-add a {}
-    li.comment-comments a {}
-    li.comment-new-comments a {}
-    li.blog-sernames-blog a {}
-    li.print-html a {}
-    li.print-email a {}
-    li.print-pdf a {}
+  .node-title {
+    margin: 0;
   }
 }
 
@@ -3340,40 +2713,30 @@ body.page-node.node-type-group {
   h2#page-title {
     font-size: 54px;
     line-height: 54px;
-    font-weight: normal;
   }
 }
 
-
-.preview .node {}
-
-
-/*
- * All nodes are given a node-FOO class that describes the type of content that
- * it is. If you create a new content type called "my-custom-type", it will
- * receive a "node-my-custom-type" class.
+/**
+ * Node forms
  */
-.node-page {}
-
-.node-article {}
-
-.node-book {}
-
-.node-forum {}
-
-.node-poll {}
 
+.node-form {
+  /* Polls have some bad, over specific, styles so this is what needs to be
+     done. */
+  #poll-choice-table .form-text {
+    width: 100%;
+  }
+}
 
 /* =============================================================================
  *   Comment Styling - Comments, comment wrapper, comment form
  * ========================================================================== */
 
-/*
+/**
  * Wrapper for the list of comments and its titles
  */
-#comments {
-  margin: 1.5em 0;
 
+#comments {
   h2 {
     &.comment-title {
       margin: 0;
@@ -3385,91 +2748,69 @@ body.page-node.node-type-group {
   }
 }
 
-
-/*
+/**
  * Wrapper for a single comment
  */
+
 .comment {
   margin-bottom: 20px;
-
-  &.first {}
-
-  &.last {}
-
-  &.odd {}
-
-  &.even {}
-
-  .user-picture {}
-
-  .submitted {
-
-    p {}
-
-    .username {}
-
-    time {}
-  }
-
-  .user-signature {}
-
-  ul.links {}
 }
 
-/*
- * Comment states
- */
-.comment-new {}
-
-.comment-by-anonymous {}
-
-.comment-by-node-author {}
-
-.comment-by-viewer {}
-
-.comment-title-hidden {}
-
-.comment-with-picture {}
-
-.comment-with-signature {}
-
-
-/*
- * Preview of the comment before submitting new or updated comment
- */
-.comment-preview {}
-
-
-/*
+/**
  * "New" marker for comments that are new for the current user
  */
+
 .new {
   color: $highlight;
 }
 
-
-/*
+/**
  * Nested comments are indented
  */
+
 .indented {
   margin-left: 40px;
 }
 
+.has-rate-widget {
+  margin-right: 6em;
+  position: relative;
+
+  @include respond(small-medium) {
+    margin-right: 0;
+  }
+}
+
 .rate-widget-commons_thumbs_up_down {
   float: right;
-  ul {
-    padding: 0;
+  position: absolute;
+  top: 0;
+  right: -6em;
+  margin-top: 0;
+
+  @include respond(small-medium) {
+    position: static;
+    float: left;
+    margin: ($gutter-width * 2) auto;
   }
 }
 
+.related-information {
+  clear: both;
+  margin: ($gutter-width * 2) 0;
+
+  .field {
+    float: left;
+  }
+}
 
 /* =============================================================================
  *   Forms
  * ========================================================================== */
 
- html.js input.form-autocomplete {
+html.js input.form-autocomplete {
   background-position: 100% 5px;
- }
+}
 
  html.js input.throbbing {
   background-position: 100% -15px; /* LTR */
@@ -3478,6 +2819,7 @@ body.page-node.node-type-group {
 /**
  * Forms in tables.
  */
+
 tr {
   &.odd,
   &.even {
@@ -3487,11 +2829,11 @@ tr {
   }
 }
 
-/*
+/**
  * Wrapper for a form element (or group of form elements) and its label
  */
-.form-item {
 
+.form-item {
   input.error,
   textarea.error,
   select.error {
@@ -3502,34 +2844,23 @@ tr {
     font-weight: 700;
   }
 
-  label.option {
-  }
-
   .description {
     font-size: 0.85em;
   }
-
-  &.form-checkboxes ,
-  &.form-radios {
-  }
 }
 
-
-/*
+/**
  * Highlight marks and form required mark
  */
+
 .marker,
 .form-required {
   color: $highlight;
 }
 
-
-/*
+/**
  * The submit button
  */
-.form-submit {
-}
-
 
 .container-inline {
   div,
@@ -3538,43 +2869,40 @@ tr {
   }
 }
 
-/*
+/**
  * Define consistent borders
  */
+
 fieldset {
   border: 1px solid $border;
 }
 
-/*
- * Tips for Drupal's input formats
- */
-.tips {
-}
-
-
-/*
+/**
  * Buttons used by contrib modules like Media
  */
+
 a.button {
   @include appearance(button);
 }
 
-
-/*
+/**
  * Password confirmation
  */
+
 .password-parent,
 .confirm-parent {
   margin: 0;
 }
 
-
-input[type="text"] {
+input[type="text"],
+textarea {
+  @include box-sizing(border-box);
   @include border-radius(3px);
   border: 1px solid #B2B2B2;
+  width: 100%;
+  max-width: 100%;
 }
 
-
 button,
 input[type="submit"] {
   @include border-radius(3px);
@@ -3586,7 +2914,6 @@ input[type="submit"] {
   margin: 0 10px 0 0;
 }
 
-
 form.commons-events-form-float {
   background-color:none;
   padding:0;
@@ -3600,7 +2927,7 @@ form.commons-events-form-float {
 .form-actions input[type="submit"] {
   @extend %btn-gray;
   padding: 5px 20px;
-  margin:0 15px 0 0;
+  margin: 0 15px 0 0;
   box-shadow: 0 3px 3px rgba(#000, 0.09);
 
   &.js-hide {
@@ -3623,7 +2950,7 @@ form.commons-events-form-float {
   font-size: .85em;
   padding: 0;
   border: none;
-  border-radius: 0;
+  @include border-radius(0);
   max-width: 80px;
   margin-right: -90px;
   text-align: center;
@@ -3632,8 +2959,19 @@ form.commons-events-form-float {
     @extend %btn-green;
     padding: 3px 10px;
   }
-}
 
+  @include respond(small-medium) {
+    float: none;
+    margin: 1em 0;
+    max-width: inherit;
+    text-align: left;
+
+    .commons-event-status {
+      display: inline-block;
+      margin-left: 1em;
+    }
+  }
+}
 
 /* =============================================================================
  *   Tables
@@ -3649,7 +2987,6 @@ table {
   }
 }
 
-
 table,
 thead,
 tbody,
@@ -3659,27 +2996,23 @@ td {
   border-color: $border;
 }
 
-
 table,
 td,
 th {
   vertical-align: middle;
 }
 
-
 caption,
 th,
 td {
   text-align: left;
 }
 
-
 thead tr {
   font-weight: 700;
   background-color: $medium_dark;
 }
 
-
 td,
 th {
   border-bottom: 0;
@@ -3687,17 +3020,11 @@ th {
   padding: 5px 7px;
 }
 
-
-tbody {}
-
-
 tbody tr {
   border-top: 1px solid $border;
 }
 
-
 tr {
-
   &.odd {
     background: $page;
   }
@@ -3710,10 +3037,6 @@ tr {
     background-color: $ultralight;
   }
 
-  &.drag {}
-
-  &.drag-previous {}
-
   &.odd td.active {
     background-color: $light;
   }
@@ -3723,23 +3046,11 @@ tr {
   }
 }
 
-
-.lt-ie8 tr {
-
-  &.even,
-  &.odd {
-
-    th,
-    td {
-    }
-  }
-}
-
-
-/*
+/**
  * Forum tables
  * Core sets white-space to nowrap, which makes no sense
  */
+
 #forum td {
   .created,
   .posts,
@@ -3751,7 +3062,6 @@ tr {
   }
 }
 
-
 /* =============================================================================
  *   Messages
  * ========================================================================== */
@@ -3767,48 +3077,19 @@ div {
       margin-bottom: 0;
     }
   }
-
-  &.status {
-  }
-
-  &.warning {
-  }
-}
-
-tr.warning {
-}
-
-
-div.error,
-tr.error {
-}
-
-
-.error {
-}
-
-
-.warning {
 }
 
-
-/*
+/**
  * Unpublished nodes
  */
-.node-unpublished,
-.comment-unpublished {
-}
-
 
 .node-unpublished,
 .comment-unpublished {
-
   p.unpublished {
     @include unpublished;
   }
 }
 
-
 /* =============================================================================
  *    Maintenance pages
  * ========================================================================== */
@@ -3824,7 +3105,6 @@ tr.error {
   }
 }
 
-
 .db-offline {
   .container {
     margin: 0 auto;
@@ -3842,32 +3122,32 @@ tr.error {
   }
 }
 
-
 /* =============================================================================
  *   Misc overrides for contrib modules
  * ========================================================================== */
 
-/*
+/**
  * Admin menu overrides
  */
+
 #admin-menu {
   margin: 0;
   padding: 0;
 }
 
-
-/*
+/**
  * Devel Module
  */
+
 .dev-query {
   background: $light;
   padding: 30px;
 }
 
-
-/*
+/**
  * Styleguide module tweaks
  */
+
 #styleguide-header {
   padding: 0 10px;
 
@@ -3885,27 +3165,29 @@ tr.error {
 
 body.front {
   .region-three-33-top {
-    font-size:24px;
-    font-weight:300;
+    font-size: 24px;
+    font-weight: 300;
+
     h1 {
-      color:$dark_gray;
-      font-size:40px;
-      font-weight:700;
-      line-height:50px;
+      color: $dark_gray;
+      font-size: 40px;
+      font-weight: 700;
+      line-height: 50px;
     }
+
     .commons_home-welcome-image {
       float:right;
     }
   }
-}
 
-body.front.not-logged-in {
-  #block-system-main {
-    .pane-1 {
-      .pane-title {
-        font-weight:700;
-        font-size:38px;
-        color:$dark_gray;
+  &.not-logged-in {
+    #block-system-main {
+      .pane-1 {
+        .pane-title {
+          font-weight: 700;
+          font-size: 38px;
+          color: $dark_gray;
+        }
       }
     }
   }
@@ -3939,9 +3221,10 @@ body.front.logged-in {
     .article.node, .node-teaser.node-group {
       .node-header {
         a {
-          float:left;
+          float: left;
         }
       }
+
       .node-content {
         form {
 
@@ -3950,26 +3233,29 @@ body.front.logged-in {
         .field-name-body {
         }
       }
+
       .author-datetime {
         margin-bottom: 1.5em;
-        clear:both;
+        clear: both;
       }
     }
+
     .views-row-first {
-      border-top:none;
+      border-top: none;
     }
+
     .item-list {
-      padding:10px 0 0 0;
+      padding: 10px 0 0 0;
     }
   }
+
   #views-exposed-form-commons-homepage-content-panel-pane-1 .views-exposed-widgets {
-    padding: 10px 10px 10px 10px;
+    padding: $gutter-width 0;
     margin-bottom: 0;
 
     &.widgets-active {
       @extend %pod;
       @extend %pod-content;
-      padding-bottom: 10px;
 
       .selectBox-dropdown {
         background-color: $white;
@@ -3979,8 +3265,12 @@ body.front.logged-in {
 }
 
 body.front.logged-in .view-commons-homepage-content .article.node {
-  &.no-user-picture, &.node-page {
-    .node-header, .node-content, .author-datetime, .links {
+  &.no-user-picture,
+  &.node-page {
+    .node-header,
+    .node-content,
+    .author-datetime,
+    .links {
       margin-left: 0;
     }
   }
@@ -4005,42 +3295,30 @@ body.front.logged-in .view-commons-homepage-content .article.node {
   }
 }
 
-/*
+/**
  *  Placeholder styles
  */
 
 #menu-bar.nav {
   .menu-item-193 a {
-    background-image:image-url('icons/icon-home.png');
+    background-image: image-url('icons/icon-home.png');
   }
+
   .menu-item-194 a {
-    background-image:image-url('icons/icon-groups.png');
+    background-image: image-url('icons/icon-groups.png');
   }
+
   .menu-item-195 a {
-    background-image:image-url('icons/icon-events.png');
+    background-image: image-url('icons/icon-events.png');
   }
 }
 
-// Events Page
+/**
+ * Events Page
+ */
 
 .page-events {
-
-  .search-results-wrapper .search-result {
-    @extend %pod;
-
-    .search-result-wrapper {
-      @extend %pod-content;
-    }
-  }
-
   .region-three-25-50-25-first {
-    @extend %pod;
-    margin-right: 0;
-
-    .region-inner {
-      @extend %pod-content;
-    }
-
     h3 {
       color: $gray;
       font-size: 18px;
@@ -4072,6 +3350,13 @@ body.front.logged-in .view-commons-homepage-content .article.node {
     }
   }
 
+  .three-25-50-25 {
+    > {
+      @include filter-drawer(small-medium);
+    }
+  }
+
+  @include filter-overlay(small-medium);
 }
 
 .pane-commons-events-commons-events-create-event-link {
@@ -4087,50 +3372,86 @@ body.front.logged-in .view-commons-homepage-content .article.node {
 
     &:before {
       @include sprite_url_height_width($icons, icon-events);
-      content: '';
+      content: "";
       top: 2px;
       margin-right: 6px;
     }
   }
 }
 
-// Search
-
+/**
+ * Search
+ */
 .page-search {
-  .region-two-33-66-first {
-    @extend %pod;
-    margin-right: 0;
+  .two-33-66 {
+    > {
+      .region-two-33-66-first {
+        h3 {
+          margin-bottom: $gutter-width;
+          color: $gray;
+          font-size: 1.2em;
+        }
 
-    .region-inner {
-      @extend %pod-content;
-    }
+        .panel-pane {
+          border-bottom: 1px solid #eee;
+          padding-bottom: 5px;
+          margin-bottom: 15px;
+        }
+      }
 
-    h3 {
-      color: $gray;
-      font-size: 18px;
+      @include filter-drawer;
     }
 
-    .panel-pane {
-      border-bottom: 1px solid #eee;
-      padding-bottom: 5px;
-      margin-bottom: 14px;
+  }
+
+  @include filter-overlay;
+}
+
+.facetapi-processed {
+  &,
+  .block-content & {
+    margin-bottom: 0;
+    padding-left: 0;
+
+    li {
+      &.last {
+        margin-bottom: 0;
+      }
     }
   }
+}
 
-  .region-two-33-66-second > div {
-    padding-left: 15px;
+.search-results-title,
+.search-results-wrapper > h2 {
+  font-weight: 300;
+  margin: $gutter-width * 2 0;
+}
+
+.search-results {
+  &,
+  /* The ol styling is a bit specific. */
+  .block-content & {
+    padding: 0;
   }
+}
 
-  .pane-search-form,
-  .search-results {
-    @extend %pod;
-    @extend %pod-content;
+// This is not optimal. Preferably, a class would be placed in the markup, but
+// ctools has hardcoded the output without the chance of override. The other
+// option is to use regex to force in wrappers.
+// @see http://drupal.org/node/1743402
+.pane-search-result {
+  .block-content {
+    .search-results {
+      @extend %pod;
+      @extend %pod-content;
+    }
   }
 }
 
-.search-results-wrapper {
-  > h2 {
-    margin: 0 0 10px;
+.page-search-user, {
+  .user-results {
+    @extend %pod;
+    @extend %pod-content;
   }
 }
 
@@ -4155,6 +3476,7 @@ body.front.logged-in .view-commons-homepage-content .article.node {
   }
 
   .title {
+    margin-top: 0;
     margin-bottom: .2em;
   }
 
@@ -4187,7 +3509,9 @@ body.front.logged-in .view-commons-homepage-content .article.node {
   }
 }
 
-// Notification settings
+/**
+ * Notification settings
+ */
 
 .view-commons-follow-node,
 .view-commons-follow-user,
@@ -4206,7 +3530,9 @@ body.front.logged-in .view-commons-homepage-content .article.node {
   }
 }
 
-// Commons Origins Pallete Choices
+/**
+ * Commons Origins Pallete Choices
+ */
 
 #edit-commons-origins-palette {
   .form-item-commons-origins-palette {
@@ -4223,7 +3549,10 @@ body.front.logged-in .view-commons-homepage-content .article.node {
   }
 }
 
-// Login & Signup Form
+/**
+ * Login and signup form
+ */
+
 #user-login, #user-register-form {
   input[type="text"], input[type="password"] {
     width: 20em;
@@ -4231,5 +3560,8 @@ body.front.logged-in .view-commons-homepage-content .article.node {
   }
 }
 
-// Import the color palettes
+/**
+ * Add the color palettes
+ */
+
 @import 'palettes';
diff --git a/profiles/commons/themes/contrib/commons_origins/sass/mixins/_mixins.scss b/profiles/commons/themes/contrib/commons_origins/sass/mixins/_mixins.scss
index 14ecca6..4179686 100644
--- a/profiles/commons/themes/contrib/commons_origins/sass/mixins/_mixins.scss
+++ b/profiles/commons/themes/contrib/commons_origins/sass/mixins/_mixins.scss
@@ -1,97 +1,4 @@
 //
-// Markup free clearing
-// http://www.stubbornella.org/content/2012/05/02/cross-browser-debugging-css/
-//
-
-@mixin cf {
-  overflow: hidden;   // New formatting context in better browsers
-  *overflow: visible; // Protect IE7 and older from the overflow property
-  *zoom: 1;           // Give IE hasLayout, a new formatting context equivalent
-}
-
-
-//
-// Image replacement
-// Kellum Method: http://www.zeldman.com/2012/03/01/replacing-the-9999px-hack-new-image-replacement
-// Additional helpers from http://html5boilerplate.com/docs/css/
-// This is also included as a SASS mixin, see: sass/custom.rb
-//
-
-@mixin ir {
-  // Kellum Method
-  display: block !important;
-  text-indent: 100%;
-  white-space: nowrap;
-  overflow: hidden;
-  // Additional helpers
-  border: 0;                     // Remove the default border from elements like <button>
-  font: 0/0 a;                   // Crush the text down to take up no space
-  text-shadow: none;             // Remove any text shadows
-  color: transparent;            // Hide any residual text in Safari 4 and any mobile devices that may need it
-  background-color: transparent; // Hide the default background color on elements like <button>
-}
-
-
-//
-// element-invisible improved and more robust
-//
-@mixin element-invisible {
-  border: 0;
-  height: 1px;
-  overflow: hidden;
-  padding: 0;
-  position: absolute !important;
-  width: 1px;
-  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
-    clip: rect(1px 1px 1px 1px); // IE6 and IE7 use the wrong syntax
-  }
-  clip: rect(1px, 1px, 1px, 1px);
-}
-
-
-//
-// Turns off the element-invisible effect
-//
-@mixin element-invisible-off {
-  position: static !important;
-  clip: auto;
-  height: auto;
-  width: auto;
-  overflow: auto;
-}
-
-@mixin element-focusable {
-  @include element-invisible;
-
-  &:active,
-  &:focus {
-    @include element-invisible-off;
-  }
-}
-
-
-//
-// Shift content offscreen, can be usefull when you reall need to do this
-//
-@mixin offscreen {
-  position: absolute;
-  top: -99999em;
-  width: 1px;
-  height: 1px;
-  overflow: hidden;
-  outline: 0;
-}
-
-
-//
-// Hide content from all users
-//
-@mixin element-hidden {
-  display: none;
-}
-
-
-//
 // The word "Unpublished" displayed underneath unpublished nodes and comments
 //
 @mixin unpublished {
@@ -108,12 +15,6 @@
   text-align: center;
   text-transform: uppercase;
   word-wrap: break-word;
-
-  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
-    .ie6-7 &>* {
-      position: relative; // Otherwise these elements will appear below the "Unpublished" text.
-    }
-  }
 }
 
 //
@@ -132,6 +33,14 @@
       width: $width;
     }
   }
+
+  @include respond(only-small) {
+    padding-left: $extra-padding;
+
+    .user-picture {
+      display: none;
+    }
+  }
 }
 
 @mixin count-btn($icon, $counter: 'counter') {
@@ -143,6 +52,64 @@
   }
 
   .#{$counter} {
-    @extend %btn-attach; 
+    @extend %btn-attach;
+  }
+}
+
+@mixin filter-drawer($break: only-small) {
+  @include respond($break) {
+    .filters-processed {
+      clear: none;
+      position: absolute;
+      right: 0;
+      float: right;
+      width: 0;
+      height: 0;
+      margin: 0;
+      padding: 0;
+      font-size: .88em;
+      background: white;
+      border: 1px solid $lighter_gray;
+      z-index: 1;
+
+      .commons-pod {
+        margin: 0;
+        padding: $gutter-width 0;
+        @include border-radius(0 0 0 3px);
+      }
+
+      .panel-pane {
+        display: none;
+      }
+
+      .filter-trigger {
+        display: block;
+      }
+    }
+
+    .expanded {
+      margin-right: 0;
+      width: 75%;
+      height: auto;
+      opacity: 1;
+
+      .commons-pod {
+        padding: $gutter-width;
+      }
+
+      .panel-pane {
+        display: block;
+      }
+    }
+  }
+}
+
+@mixin filter-overlay($break: only-small) {
+  .filter-overlay {
+    @include respond($break) {
+      &.expanded {
+        display: block;
+      }
+    }
   }
 }
diff --git a/profiles/commons/themes/contrib/commons_origins/sass/mixins/_respond.scss b/profiles/commons/themes/contrib/commons_origins/sass/mixins/_respond.scss
new file mode 100644
index 0000000..27616b3
--- /dev/null
+++ b/profiles/commons/themes/contrib/commons_origins/sass/mixins/_respond.scss
@@ -0,0 +1,23 @@
+// @file
+// General logic for responsive layouts.
+
+$screen-small: 480px !default;
+$screen-large: 768px !default;
+
+@mixin respond($media) {
+  @if $media == only-small {
+    @media only screen and (max-width: $screen-small) { @content; }
+  }
+  @else if $media == small-medium {
+    @media only screen and (max-width: $screen-large) { @content; }
+  }
+  @else if $media == only-medium {
+    @media only screen and (min-width: $screen-small + 1) and (max-width: $screen-large) { @content; }
+  }
+  @else if $media == medium {
+    @media only screen and (min-width: $screen-small + 1) { @content; }
+  }
+  @else if $media == large {
+    @media only screen and (min-width: $screen-large + 1) { @content; }
+  }
+}
diff --git a/profiles/commons/themes/contrib/commons_origins/sass/responsive.custom.scss b/profiles/commons/themes/contrib/commons_origins/sass/responsive.custom.scss
index 671d1d5..3e2e625 100755
--- a/profiles/commons/themes/contrib/commons_origins/sass/responsive.custom.scss
+++ b/profiles/commons/themes/contrib/commons_origins/sass/responsive.custom.scss
@@ -39,18 +39,18 @@
       padding-top: 0 !important;
     }
   }
-    
-  /* 
+
+  /*
    * Float Region blocks example:
    * In smaller screen sizes we can remove the float and widths so all blocks
    * stack instead of displaying horizonally. The selector used here is an
    * "attribute selector" which will match on any float block class. Use your
    * inspector or Firebug to get the classes from the page output if you need
    * more granular control over block alignment and stacking.
-   * 
+   *
    * "Float Region blocks" is an extension for floating blocks in regions, see
    * your themes appearance settings, under the Extensions tab.
-   */ 
+   */
   .region[class*="float-blocks"] .block {
     float: none;
     width: 100%;
@@ -65,9 +65,7 @@
   }
 
   .commons-bw-create-all-widget-types {
-    left: -100px;
-    top: auto;
-    bottom: 0;
+    left: auto;
   }
 
   .page-node-add #edit-additional-settings {
@@ -94,7 +92,7 @@
     clip: rect(1px 1px 1px 1px); /* IE6, IE7 */
     clip: rect(1px, 1px, 1px, 1px);
   }
-  
+
   // Remove the panels adminstration controls on small screens.
   div#panels-ipe-control-container {
     display: none !important;
@@ -125,6 +123,14 @@
       width: 33.333%;
     }
   }
+
+  .primary-fields,
+  .supplementary-fields {
+    display: block;
+    float: none;
+    width: auto;
+    padding: 0;
+  }
 }
 
 /*
@@ -218,7 +224,7 @@
         font-size: 12px;
         padding: 31px 7px 0px 7px;
       }
-      
+
       &.main-menu-search {
         display: inline-block;
       }
diff --git a/profiles/commons/themes/contrib/commons_origins/sass/responsive.desktop.scss b/profiles/commons/themes/contrib/commons_origins/sass/responsive.desktop.scss
index 75eb2e7..fae2bba 100755
--- a/profiles/commons/themes/contrib/commons_origins/sass/responsive.desktop.scss
+++ b/profiles/commons/themes/contrib/commons_origins/sass/responsive.desktop.scss
@@ -11,3 +11,17 @@
  *
  * - Read the _README file in this directory, it contains useful help and other information.
  */
+
+.flag-inappropriate-node {
+  float: none;
+  position: absolute;
+  margin: 0;
+  bottom: 5px;
+  right: 5px;
+  @include opacity(0);
+  @include transition(opacity 0.5s);
+
+  .node:hover & {
+    @include opacity(1);
+  }
+}
diff --git a/profiles/commons/themes/contrib/commons_origins/scripts/commons_origins.js b/profiles/commons/themes/contrib/commons_origins/scripts/commons_origins.js
index 2dfc78e..f87b31e 100644
--- a/profiles/commons/themes/contrib/commons_origins/scripts/commons_origins.js
+++ b/profiles/commons/themes/contrib/commons_origins/scripts/commons_origins.js
@@ -4,20 +4,8 @@ jQuery(document).ready(function($){
 
   'use strict';
 
-//    $.fn.textWidth = function(){
-//      var html_org = $(this).html();
-//      var html_calc = '<span>' + html_org + '</span>';
-//      $(this).html(html_calc);
-//      var width = $(this).find('span:first').width();
-//      $(this).html(html_org);
-//      return width;
-//    };
-
-//    var selectwidth = $('#edit-following option:selected').textWidth();
-//    console.log(selectwidth);
-
   var attach_selectBox = function(){
-    $('#views-exposed-form-commons-homepage-content-panel-pane-1 select, #edit-custom-search-types, #quicktabs-commons_bw select').selectBox();
+    $('#views-exposed-form-commons-homepage-content-panel-pane-1 select, #edit-custom-search-types, #quicktabs-commons_bw select, .views-exposed-widgets select').selectBox();
   };
 
   var set_follow_checkboxes = function(){
@@ -27,7 +15,7 @@ jQuery(document).ready(function($){
       if (a_target.children('span').length === 0) {
         a_target.wrapInner('<span></span>');
       }
-      
+
       if (a_target.hasClass('flag-action') && a_target.children('input').length === 0) {
         a_target.prepend('<input type="checkbox">');
       } else if (a_target.children('input').length === 0) {
@@ -68,3 +56,101 @@ jQuery(document).ready(function($){
     set_follow_checkboxes();
   });
 });
+
+(function ($) {
+  /**
+   * Make an item follow the page when an item is in view.
+   */
+  function showWithElement(tracker, leader) {
+    if ($(leader).length > 0) {
+      var top = $(leader).offset().top,
+          bottom = $(leader).innerHeight() + top,
+          trackerHeight = $(tracker).innerHeight();
+          position = $(document).scrollTop();
+
+      // Make sure the tracker parent stays aligned with the leader.
+      $(tracker).parent().css('top', top);
+
+      // Keep the trigger visible when the leader is in view.
+      if (top < position && (bottom - trackerHeight) > position && !$(tracker).hasClass('following')) {
+        $(tracker).addClass('following').css('top', $('.region-page-top').offset().top);
+      }
+      else if ((top >= position || (bottom - trackerHeight) <= position) && $(tracker).hasClass('following')) {
+        $(tracker).removeClass('following').css('top', '');
+      }
+    }
+  }
+
+  /**
+   * Collapse the filter options for search.
+   */
+  Drupal.behaviors.filterDrawer = {
+    attach: function (context, settings) {
+      $('.page-search .region-two-33-66-first, .page-events .region-three-25-50-25-first', context).once('filterDrawer', function () {
+        var filters = $(this),
+            filterTrigger = $('<a/>', {'href': '#filter-drawer', 'class': 'filter-trigger', 'id': 'filter-drawer'}).text(Drupal.t('Filter results')),
+            filterOverlay = $('<div/>', {'class': 'filter-overlay'}),
+            results = $('.search-results-content');
+            size = $(window).width(),
+            triggerWidth = '';
+
+        // Determine if the page is for search or events and set the target
+        // width.
+        if ($('.page-search', context).length > 0) {
+          triggerWidth = 480;
+        }
+        else if ($('.page-events', context).length > 0) {
+          triggerWidth = 768;
+        }
+
+        // Add process flags and styling elements.
+        $(this).prepend(filterTrigger).addClass('filters-processed');
+        $('body').append(filterOverlay);
+
+        // Make sure the trigger is in place on the initial page load.
+        if (size <= triggerWidth) {
+          showWithElement(filterTrigger, results);
+        }
+
+        // Define the clickable areas to control the visibility of the filters.
+        $(filterTrigger).click(function () {
+          if ($(filterTrigger).hasClass('following')) {
+            $(filterTrigger).removeClass('following');
+          }
+          $(filters).toggleClass('expanded');
+          $(filterOverlay).toggleClass('expanded');
+
+          if ($(filters).hasClass('expanded')) {
+            $('html, body').animate({
+              scrollTop: $(filterTrigger).offset().top - $('.region-page-top').offset().top
+            }, 0);
+          }
+
+          return false;
+        });
+        $(filterOverlay).click(function () {
+          $(filters).toggleClass('expanded');
+          $(filterOverlay).toggleClass('expanded');
+          showWithElement(filterTrigger, results);
+        });
+
+        // Make the filterToggle follow the search results when scrolling and
+        // resizing.
+        $(window).resize(function () {
+          size = $(window).width();
+          if (size <= triggerWidth) {
+            showWithElement(filterTrigger, results);
+          }
+          else {
+            $(filters).css('top', '');
+          }
+        });
+        $(document).scroll(function () {
+          if (!$(filters).hasClass('expanded')) {
+            showWithElement(filterTrigger, results);
+          }
+        });
+      });
+    }
+  }
+})(jQuery);
diff --git a/profiles/commons/themes/contrib/commons_origins/template.php b/profiles/commons/themes/contrib/commons_origins/template.php
index 6c7487d..9794efd 100755
--- a/profiles/commons/themes/contrib/commons_origins/template.php
+++ b/profiles/commons/themes/contrib/commons_origins/template.php
@@ -3,70 +3,78 @@
 /**
  * @file
  * Process theme data.
- *
- * Use this file to run your theme specific implimentations of theme functions,
- * such preprocess, process, alters, and theme function overrides.
- *
- * Preprocess and process functions are used to modify or create variables for
- * templates and theme functions. They are a common theming tool in Drupal, often
- * used as an alternative to directly editing or adding code to templates. Its
- * worth spending some time to learn more about these functions - they are a
- * powerful way to easily modify the output of any template variable.
- *
- * Preprocess and Process Functions SEE: http://drupal.org/node/254940#variables-processor
- * 1. Rename each function and instance of "commons_origins" to match
- *    your subthemes name, e.g. if your theme name is "footheme" then the function
- *    name will be "footheme_preprocess_hook". Tip - you can search/replace
- *    on "commons_origins".
- * 2. Uncomment the required function to use.
  */
 
+/**
+ * Implements hook_theme().
+ */
+function commons_origins_theme($existing, $type, $theme, $path) {
+  return array(
+    // Register the newly added theme_form_content() hook so we can utilize
+    // theme hook suggestions.
+    // @see commons_origins_form_alter().
+    'form_content' => array(
+      'render element' => 'form',
+      'path' => drupal_get_path('theme', 'commons_origins') . '/templates/form',
+      'template' => 'form-content',
+    ),
+  );
+}
 
+/**
+ * Implements hook_preprocess_search_results().
+ *
+ * Assemble attributes for styling that core does not do so we can keep the
+ * tpl files simpler and make maintaining it a bit less worrisome since there
+ * are 2 forms of search supported.
+ */
+function commons_origins_preprocess_search_results(&$variables, $hook) {
+  $variables['classes_array'][] = 'search-results-wrapper';
+  $variables['title_attributes_array']['class'][] = 'search-results-title';
+  $variables['content_attributes_array']['class'][] = 'search-results-content';
+  $variables['content_attributes_array']['class'][] = 'commons-pod';
+}
 
+/**
+ * Implements hook_process_search_results().
+ */
+function commons_origins_process_search_results(&$variables, $hook) {
+  // Set the title in preprocess so that it can be overridden by modules
+  // further upstream.
+  if (empty($variables['title'])) {
+    $variables['title'] = t('Search results');
+  }
+}
 
 /**
  * Preprocess variables for the html template.
  */
-function commons_origins_preprocess_html(&$vars) {
+function commons_origins_preprocess_html(&$variables, $hook) {
   global $theme_key;
 
   $site_name = variable_get('site_name', 'Commons');
 
   if (strlen($site_name) > 23) {
-    $vars['classes_array'][] = 'site-name-long-2-lines';
+    $variables['classes_array'][] = 'site-name-long-2-lines';
   } else if (strlen($site_name) > 15) {
-    $vars['classes_array'][] = 'site-name-long';
+    $variables['classes_array'][] = 'site-name-long';
   }
   $palette = variable_get('commons_origins_palette', 'default');
   if ($palette != 'default') {
-    $vars['classes_array'][] = 'palette-active';
-    $vars['classes_array'][] = drupal_html_class($palette);
+    $variables['classes_array'][] = 'palette-active';
+    $variables['classes_array'][] = drupal_html_class($palette);
   }
 
-  // Two examples of adding custom classes to the body.
-
-  // Add a body class for the active theme name.
-  // $vars['classes_array'][] = drupal_html_class($theme_key);
+  // Browser/platform sniff - adds body classes such as ipad, webkit, chrome
+  // etc.
+  $variables['classes_array'][] = css_browser_selector();
 
-  // Browser/platform sniff - adds body classes such as ipad, webkit, chrome etc.
-  $vars['classes_array'][] = css_browser_selector();
-
-}
-//
-
-
-/**
- * Process variables for the html template.
- */
-/* -- Delete this line if you want to use this function
-function commons_origins_process_html(&$vars) {
 }
-// */
 
 /**
  * Implements theme_menu_link().
  */
-function commons_origins_menu_link($vars) {
+function commons_origins_menu_link($variables) {
   $output = '';
   $path_to_at_core = drupal_get_path('theme', 'adaptivetheme');
 
@@ -75,7 +83,7 @@ function commons_origins_menu_link($vars) {
   global $theme_key;
   $theme_name = $theme_key;
 
-  $element = $vars['element'];
+  $element = $variables['element'];
   commons_origins_menu_link_class($element);
   $sub_menu = '';
 
@@ -117,43 +125,58 @@ function commons_origins_menu_link_class(&$element)  {
 /**
  * Override or insert variables for the page templates.
  */
-function commons_origins_preprocess_page(&$vars) {
+function commons_origins_preprocess_page(&$variables, $hook) {
   if (module_exists('page_manager')) {
     $p = page_manager_get_current_page();
     if (isset($p['name']) && $p['name'] == 'node_view') {
       $node = $p['contexts']['argument_entity_id:node_1']->data;
       if (module_exists('og') && !og_is_group('node', $node)) {
-        $vars['hide_panelized_title'] = 1;
+        $variables['hide_panelized_title'] = 1;
       }
     }
   }
 }
-function commons_origins_process_page(&$vars) {
-}
-// */
-
 
 /**
  * Override or insert variables into the node templates.
  */
-function commons_origins_preprocess_node(&$vars) {
-  if ($vars['promote']) {
-    $vars['submitted'] .= ' <span class="featured-node-tooltip">' . t('Featured') . ' ' . $vars['type'] . '</span>';
+function commons_origins_preprocess_node(&$variables, $hook) {
+  // Append a feature label to featured node teasers.
+  if ($variables['teaser'] && $variables['promote']) {
+    $variables['submitted'] .= ' <span class="featured-node-tooltip">' . t('Featured') . ' ' . $variables['type'] . '</span>';
+  }
+
+  // Some content does not get a user image on the full node.
+  $no_avatar = array(
+    'event',
+    'group',
+    'page',
+    'wiki',
+  );
+  if (!$variables['teaser'] && in_array($variables['node']->type, $no_avatar)) {
+    $variables['user_picture'] = '';
   }
 
-  if (empty($vars['user_picture'])) {
-    $vars['classes_array'][] = 'no-user-picture';
+  // If there does happen to be a user image, add a class for styling purposes.
+  if (!empty($variables['user_picture'])) {
+    $variables['classes_array'][] = 'user-picture-available';
   }
 
-  // Add classes to render the comment-comments link as a button with a number attached.
-  if (!empty($vars['content']['links']['comment']['#links']['comment-comments'])) {
-    $comments_link = &$vars['content']['links']['comment']['#links']['comment-comments'];
+  // Add classes to render the comment-comments link as a button with a number
+  // attached.
+  if (!empty($variables['content']['links']['comment']['#links']['comment-comments'])) {
+    $comments_link = &$variables['content']['links']['comment']['#links']['comment-comments'];
     $comments_link['attributes']['class'][] = 'link-with-counter';
-    $comments_link['title'] = str_replace($vars['comment_count'], '<span class="counter">' . $vars['comment_count'] . '</span>', $comments_link['title']);
+    $comments_link['title'] = str_replace($variables['comment_count'], '<span class="counter">' . $variables['comment_count'] . '</span>', $comments_link['title']);
   }
 
-  // Hide some of the node links.
-  if (!empty($vars['content']['links'])) {
+  // Push the reporting link to the end.
+  if (!empty($variables['content']['links']['flag']['#links']['flag-inappropriate_node'])) {
+    $variables['content']['report_link'] = array('#markup' => $variables['content']['links']['flag']['#links']['flag-inappropriate_node']['title']);
+  }
+
+  if (!empty($variables['content']['links'])) {
+    // Hide some of the node links.
     $hidden_links = array(
       'node' => array(
         'node-readmore',
@@ -162,11 +185,14 @@ function commons_origins_preprocess_node(&$vars) {
         'comment-add',
         'comment-new-comments'
       ),
+      'flag' => array(
+        'flag-inappropriate_node',
+      ),
     );
     foreach ($hidden_links as $element => $links) {
       foreach ($links as $link) {
-        if (!empty($vars['content']['links'][$element]['#links'][$link])) {
-          $vars['content']['links'][$element]['#links'][$link]['#access'] = FALSE;
+        if (!empty($variables['content']['links'][$element]['#links'][$link])) {
+          $variables['content']['links'][$element]['#links'][$link]['#access'] = FALSE;
         }
       }
     }
@@ -174,65 +200,297 @@ function commons_origins_preprocess_node(&$vars) {
 
   // Replace the submitted text on nodes with something a bit more pertinent to
   // the content type.
-  if (variable_get('node_submitted_' . $vars['node']->type, TRUE)) {
+  if (variable_get('node_submitted_' . $variables['node']->type, TRUE)) {
     $placeholders = array(
-      '!type' => '<span class="node-content-type">' . ucfirst($vars['node']->type) . '</span>',
-      '!user' => $vars['name'],
-      '!date' => $vars['date'],
+      '!type' => '<span class="node-content-type">' . ucfirst($variables['node']->type) . '</span>',
+      '!user' => $variables['name'],
+      '!date' => $variables['date'],
+    );
+
+    $variables['submitted'] = t('!type created by !user on !date', $placeholders);
+  }
+
+  // Add a class to the node when there is a logo image.
+  if (!empty($variables['field_logo'])) {
+    $variables['classes_array'][] = 'logo-available';
+  }
+
+  // Move the answer link on question nodes to the top of the content.
+  if ($variables['node']->type == 'question' && !empty($variables['content']['links']['answer'])) {
+    $variables['content']['answer'] = $variables['content']['links']['answer'];
+    $variables['content']['answer']['#attributes']['class'][] = 'node-actions';
+    $variables['content']['answer']['#links']['answer-add']['attributes']['class'][] = 'button-alert';
+    $variables['content']['answer']['#weight'] = -100;
+    $variables['content']['links']['answer']['#access'] = FALSE;
+  }
+
+  // Groups the related fields into their own container.
+  $related_information = array(
+    'og_group_ref',
+    'field_related_question',
+    'field_topics',
+  );
+  foreach($related_information as $field) {
+    if (!empty($variables['content'][$field])) {
+      $variables['content']['related_information'][$field] = $variables['content'][$field];
+      hide($variables['content'][$field]);
+    }
+  }
+  if (!empty($variables['content']['related_information'])) {
+    $variables['content']['related_information'] += array(
+      '#theme_wrappers' => array('container'),
+      '#attributes' => array(
+        'class' => array('related-information', 'clearfix'),
+      ),
+      '#weight' => 1000,
     );
+  }
 
-    $vars['submitted'] = t('!type created by !user on !date', $placeholders);
+  // Add classes when there is a voting widget present.
+  if (!empty($variables['content']['rate_commons_answer'])) {
+    $variables['content_attributes_array']['class'][] = 'has-rate-widget';
+    $variables['content']['rate_commons_answer']['#weight'] = 999;
   }
 }
 
 /**
-* Implements hook_form_alter().
-*/
-function commons_origins_form_alter(&$form, &$form_state, $form_id) {
-  if (isset($form['#node']) && substr($form_id, -10) == '_node_form' && isset($form['additional_settings']) && $form['#node']->type != 'post') {
-    $form['additional_settings']['#type'] = 'fieldset';
+ * Implements hook_preprocess_two_33_66().
+ */
+function commons_origins_preprocess_two_33_66(&$variables, $hook) {
+  $menu = menu_get_item();
+
+  // Suggest a variant for the search page so the facets will be wrapped in pod
+  // styling.
+  if (strpos($menu['path'], 'search') === 0) {
+    $variables['theme_hook_suggestions'][] = 'two_33_66__search';
   }
-  // Description text on these fields is redundant.
-  if ($form_id == 'user_login') {
-    $form['name']['#description'] = '';
-    $form['pass']['#description'] = '';
+}
+
+function commons_origins_preprocess_three_25_50_25(&$variables, $hook) {
+  $menu = menu_get_item();
+
+  // Suggest a variant for the search page so the facets will be wrapped in pod
+  // styling.
+  if (isset($menu['page_arguments']) && $menu['page_arguments'][0] == 'solr_events') {
+    $variables['theme_hook_suggestions'][] = 'three_25_50_25__events';
   }
+}
 
-  if ($form_id == 'user_register_form') {
-    $form['account']['mail']['#description'] = t('Password reset and notification emails will be sent to this address.');
+/**
+ * Implements hook_preprocess_panels_pane().
+ */
+function commons_origins_preprocess_panels_pane(&$variables, $hook) {
+  $pane = $variables['pane'];
+
+  // Add pod styling to some of the panels panes.
+  $not_pods = array(
+    'commons_events-commons_events_create_event_link',
+  );
+  $content_pods = array(
+    'commons_question_answers-panel_pane_1',
+  );
+  if (($pane->panel == 'two_66_33_second' && !in_array($pane->subtype, $not_pods)) || in_array($pane->subtype, $content_pods)) {
+    $variables['attributes_array']['class'][] = 'commons-pod';
   }
 }
 
 /**
-* Implements hook_css_alter().
-*/
-function commons_origins_css_alter(&$css) {
-  if (isset($css['profiles/commons/modules/contrib/rich_snippets/rich_snippets.css'])) {
-    unset($css['profiles/commons/modules/contrib/rich_snippets/rich_snippets.css']);
+ * Implements hook_preprocess_views_view().
+ */
+function commons_origins_preprocess_views_view(&$variables, $hook) {
+  $view = $variables['view'];
+
+  // Wrap page views in pod styling.
+  if ($view->display_handler->plugin_name == 'page') {
+    $variables['classes_array'][] = 'commons-pod';
+    $variables['classes_array'][] = 'clearfix';
+  }
+
+  // Style some views without bottom borders and padding.
+  $plain = array(
+    'commons_bw_all' => array('default'),
+    'commons_bw_polls' => array('default'),
+    'commons_bw_posts' => array('default'),
+    'commons_bw_q_a' => array('default'),
+    'commons_bw_wikis' => array('default'),
+    'commons_events_upcoming' => array('panel_pane_2'),
+    'commons_featured' => array('panel_pane_1'),
+    'commons_groups_directory' => array('panel_pane_1'),
+    'commons_groups_recent_content' => array('block'),
+    'commons_groups_user_groups' => array('panel_pane_1'),
+    'commons_homepage_content' => array('panel_pane_1'),
+    'commons_radioactivity_groups_active_in_group' => array('panel_pane_1'),
+    'commons_radioactivity_groups_most_active' => array('panel_pane_1'),
+  );
+  if (isset($plain[$variables['name']]) && in_array($variables['display_id'], $plain[$variables['name']])) {
+    $variables['classes_array'][] = 'view-plain';
   }
 }
 
+/**
+ * Implements hook_preprocess_form().
+ *
+ * Since Commons Origins overrides the default theme_form() function, we will
+ * need to perform some processing on attributes to make it work in a template.
+ */
+function commons_origins_preprocess_form(&$variables, $hook) {
+  // Bootstrap the with some of Drupal's default variables.
+  template_preprocess($variables, $hook);
+
+  $element = &$variables['element'];
+  if (isset($element['#action'])) {
+    $element['#attributes']['action'] = drupal_strip_dangerous_protocols($element['#action']);
+  }
+  element_set_attributes($element, array('method', 'id'));
+  if (empty($element['#attributes']['accept-charset'])) {
+    $element['#attributes']['accept-charset'] = "UTF-8";
+  }
+  $variables['attributes_array'] = $element['#attributes'];
+
+  // Give the search form on the search page pod styling.
+  if (isset($element['#search_page']) || (isset($element['module']) && ($element['module']['#value'] == 'search_facetapi' || $element['module']['#value'] == 'user'))) {
+    $variables['attributes_array']['class'][] = 'commons-pod';
+  }
+
+  $pods = array(
+    'user-login',
+    'user-pass',
+    'user-register-form',
+  );
+
+  if (in_array($element['#id'], $pods)) {
+    $variables['attributes_array']['class'][] = 'commons-pod';
+  }
+}
 
 /**
- * Override or insert variables into the comment templates.
+ * Implements hook_process_form().
+ *
+ * Since Commons Origins overrides the default theme_form() function, we will
+ * need to perform some processing on attributes to make it work in a template.
  */
-/* -- Delete this line if you want to use these functions
-function commons_origins_preprocess_comment(&$vars) {
+function commons_origins_process_form(&$variables, $hook) {
+  // Crunch down attribute arrays.
+  template_process($variables, $hook);
 }
-function commons_origins_process_comment(&$vars) {
+
+/**
+ * Implements hook_preprocess_form_content().
+ */
+function commons_origins_preprocess_form_content(&$variables, $hook) {
+  // Bootstrap the with some of Drupal's default variables.
+  template_preprocess($variables, $hook);
+
+  if (isset($variables['form']['supplementary'])) {
+    foreach ($variables['form']['supplementary'] as &$field) {
+      if (is_array($field) && isset($field['#theme_wrappers'])) {
+        $field['#theme_wrappers'][] = 'container';
+        $field['#attributes']['class'][] = 'commons-pod';
+      }
+    }
+  }
 }
-// */
 
+/**
+ * Implements hook_process_form_content().
+ */
+function commons_origins_process_form_content(&$variables, $hook) {
+  // Crunch down attribute arrays.
+  template_process($variables, $hook);
+}
 
 /**
- * Override or insert variables into the block templates.
+ * Implements hook_preprocess_views_view_unformatted().
  */
-/* -- Delete this line if you want to use these functions
-function commons_origins_preprocess_block(&$vars) {
+function commons_origins_preprocess_views_view_unformatted(&$variables, $hook) {
+  // Prevent the avatars in the activity stream blocks from bleeding into the
+  // rows below them.
+  if ($variables['view']->name == 'commons_activity_streams_activity') {
+    foreach ($variables['classes_array'] as &$classes) {
+      $classes .= ' clearfix';
+    }
+  }
 }
-function commons_origins_process_block(&$vars) {
+
+/**
+ * Implements hook_form_alter().
+ */
+function commons_origins_form_alter(&$form, &$form_state, $form_id) {
+  // Give forms a common theme function so we do not have to declare every
+  // single form we want to override in hook_theme().
+  if (is_array($form['#theme'])) {
+    $hooks = array('form_content');
+    $form['#theme'] = array_merge($form['#theme'], $hooks);
+  }
+  else {
+    $form['#theme'] = array(
+      $form['#theme'],
+      'form_content',
+    );
+  }
+
+  // Description text on these fields is redundant.
+  if ($form_id == 'user_login') {
+    $form['name']['#description'] = '';
+    $form['pass']['#description'] = '';
+  }
+
+  if ($form_id == 'user_register_form') {
+    $form['account']['mail']['#description'] = t('Password reset and notification emails will be sent to this address.');
+  }
+
+  if (isset($form['#node_edit_form']) && $form['#node_edit_form']) {
+    // Vertical tabs muck things up, so things need to be shuffled to get rid
+    // of them.
+    $general_settings = array();
+    foreach ($form as $id => $field) {
+      if (is_array($field) && isset($field['#group']) && $field['#group'] == 'additional_settings' && (!isset($field['#access']) || $field['#access'] !== FALSE)) {
+        $general_settings[$id] = $field;
+        $general_settings[$id]['#collapsible'] = TRUE;
+        $general_settings[$id]['#collapsed'] = TRUE;
+        unset($general_settings[$id]['#group']);
+      }
+    }
+    if (!empty($general_settings)) {
+      $form['general_settings'] = array(
+        '#theme_wrappers' => array('container'),
+        '#attributes' => array(
+          'class' => array('general-settings'),
+        ),
+        '#weight' => 100,
+        'general_settings' => $general_settings,
+      );
+      $form['additional_settings']['#access'] = FALSE;
+    }
+
+    // Declare the fields to go into each column.
+    $supplementary = array(
+      'event_topics',
+      'field_topics',
+      'general_settings',
+    );
+
+    foreach ($supplementary as $field) {
+      if (isset($form[$field])) {
+        // Translate the field to the appropriate container.
+        $form['supplementary'][$field] = $form[$field];
+
+        // Remove access to the old placement instead of unset() to maintain
+        // the legacy information.
+        $form[$field]['#access'] = FALSE;
+      }
+    }
+  }
+}
+
+/**
+ * Implements hook_css_alter().
+ */
+function commons_origins_css_alter(&$css) {
+  if (isset($css['profiles/commons/modules/contrib/rich_snippets/rich_snippets.css'])) {
+    unset($css['profiles/commons/modules/contrib/rich_snippets/rich_snippets.css']);
+  }
 }
-// */
 
 /**
  * Overrides theme_links() for nodes.
@@ -316,3 +574,97 @@ function commons_origins_links($variables) {
 
   return $output;
 }
+
+/**
+ * Process an address to add microformat structure and remove &nbsp;
+ * characters.
+ */
+function _commons_origins_format_address(&$address) {
+  $address['#theme_wrappers'][] = 'container';
+  $address['#attributes']['class'][] = 'adr';
+  if (!empty($address['street_block']['thoroughfare'])) {
+    $address['street_block']['thoroughfare']['#attributes']['class'][] = 'street-address';
+  }
+  if (!empty($address['street_block']['premise'])) {
+    $address['street_block']['premise']['#attributes']['class'][] = 'extended-address';
+  }
+  if (!empty($address['locality_block']['locality'])) {
+    $address['locality_block']['locality']['#suffix'] = ',';
+  }
+  if (!empty($address['locality_block']['administrative_area'])) {
+    $address['locality_block']['administrative_area']['#attributes']['class'][] = 'region';
+    // Remove the hardcoded "&nbsp;&nbsp;" as it causes issues with
+    // formatting.
+    $address['locality_block']['administrative_area']['#prefix'] = ' ';
+  }
+  if (!empty($address['locality_block']['postal_code'])) {
+    // Remove the hardcoded "&nbsp;&nbsp;" as it causes issues with
+    // formatting.
+    $address['locality_block']['postal_code']['#prefix'] = ' ';
+  }
+  if (!empty($address['country'])) {
+    $address['country']['#attributes']['class'][] = 'country-name';
+  }
+}
+
+/**
+ * Overrides theme_field__addressfield().
+ */
+function commons_origins_field__addressfield($variables) {
+  $output = '';
+
+  // Add Microformat classes to each address.
+  foreach($variables['items'] as &$address) {
+    // Only display an address if it has been populated. We determine this by
+    // validating that the administrative area has been populated.
+    if ($address['#address']['administrative_area']) {
+      _commons_origins_format_address($address);
+    }
+    else {
+      // Deny access to incomplete addresses.
+      $address['#access'] = FALSE;
+    }
+  }
+
+  // Render the label, if it's not hidden.
+  if (!$variables['label_hidden']) {
+    $output .= '<div class="field-label"' . $variables['title_attributes'] . '>' . $variables['label'] . ':</div> ';
+  }
+
+  // Render the items.
+  $output .= '<div class="field-items"' . $variables['content_attributes'] . '>';
+  foreach ($variables['items'] as $delta => $item) {
+    $classes = 'field-item ' . ($delta % 2 ? 'odd' : 'even');
+    $output .= '<div class="' . $classes . '"' . $variables['item_attributes'][$delta] . '>' . drupal_render($item) . '</div>';
+  }
+  $output .= '</div>';
+
+  // Render the top-level DIV.
+  $output = '<div class="' . $variables['classes'] . '"' . $variables['attributes'] . '>' . $output . '</div>';
+
+  return $output;
+}
+
+/**
+ * Implements hook_preprocess_views_view_field().
+ */
+function commons_origins_preprocess_views_view_field(&$variables, $hook) {
+  // Make sure empty addresses are not displayed.
+  // Views does not use theme_field__addressfield(), so we need to process
+  // these implementations separately.
+  if (isset($variables['theme_hook_suggestion']) && $variables['theme_hook_suggestion'] == 'views_view_field__field_address') {
+    foreach ($variables['row']->field_field_address as $key => &$address) {
+      if (!$address['raw']['administrative_area']) {
+        // If an address is incomplete, remove it and tell the system a
+        // rebuild is needed.
+        unset($variables['row']->field_field_address[$key]);
+      }
+      else {
+        _commons_origins_format_address($address['rendered']);
+      }
+    }
+
+    // The output will need rebuilt to get the changes applied.
+    $variables['output'] = $variables['field']->advanced_render($variables['row']);
+  }
+}
diff --git a/profiles/commons/themes/contrib/commons_origins/templates/form/form-content.tpl.php b/profiles/commons/themes/contrib/commons_origins/templates/form/form-content.tpl.php
new file mode 100644
index 0000000..4b5d319
--- /dev/null
+++ b/profiles/commons/themes/contrib/commons_origins/templates/form/form-content.tpl.php
@@ -0,0 +1,35 @@
+<?php
+/**
+ * @file form-content.tpl.php
+ * Default template implementation to display the content of a form.
+ *
+ * Available variables:
+ * - $form: An array of form elements. Use render() to output individual
+ *   elements, but drupal_render_children() to render the whole item.
+ */
+?>
+
+<?php
+  // Some nodes are multicolumn, so check for the second column. 
+  if (!empty($form['supplementary'])):
+?>
+  <?php 
+    hide($form['supplementary']); 
+    hide($form['actions']);
+  ?>
+  <div class="columns clearfix">
+    <div class="primary-fields">
+      <?php print drupal_render_children($form); ?>
+    </div>
+    <div class="supplementary-fields">
+      <?php print render($form['supplementary']); ?>
+    </div>
+  </div>
+  <?php print render($form['actions']); ?>
+<?php 
+  // If there is no second column, print everything as normal.
+  else:
+?>
+  <?php print drupal_render_children($form); ?>
+<?php endif; ?>
+
diff --git a/profiles/commons/themes/contrib/commons_origins/templates/form/form.tpl.php b/profiles/commons/themes/contrib/commons_origins/templates/form/form.tpl.php
new file mode 100644
index 0000000..b9e41a8
--- /dev/null
+++ b/profiles/commons/themes/contrib/commons_origins/templates/form/form.tpl.php
@@ -0,0 +1,21 @@
+<?php
+/**
+ * @file
+ * Output a form.
+ *
+ * @see theme_form()
+ * @see commons_origins_preprocess_form()
+ * @see commons_origins_process_form()
+ */
+?>
+<form<?php print $attributes; ?>>
+  <div<?php print $content_attributes; ?>>
+    <?php
+      // Due to the way the Drupal renders forms, we cannot control individual
+      // form elements in this template. If you would like to have more granular
+      // control of the form elements, use form-content.tpl.php or variant.
+    ?>
+    <?php print $element['#children']; ?>
+  </div>
+</form>
+
diff --git a/profiles/commons/themes/contrib/commons_origins/templates/node/node.tpl.php b/profiles/commons/themes/contrib/commons_origins/templates/node/node.tpl.php
index 05b0103..f33cf6a 100755
--- a/profiles/commons/themes/contrib/commons_origins/templates/node/node.tpl.php
+++ b/profiles/commons/themes/contrib/commons_origins/templates/node/node.tpl.php
@@ -18,7 +18,7 @@
  * - $footer_attributes: attributes such as classes to apply to the footer element.
  * - $links_attributes: attributes such as classes to apply to the nav element.
  * - $is_mobile: Mixed, requires the Mobile Detect or Browscap module to return
- *   TRUE for mobile.  Note that tablets are also considered mobile devices.  
+ *   TRUE for mobile.  Note that tablets are also considered mobile devices.
  *   Returns NULL if the feature could not be detected.
  * - $is_tablet: Mixed, requires the Mobile Detect to return TRUE for tablets.
  *   Returns NULL if the feature could not be detected.
@@ -106,6 +106,7 @@
  */
 hide($content['comments']);
 hide($content['links']);
+hide($content['report_link'])
 ?>
 <article id="node-<?php print $node->nid; ?>" class="<?php print $classes; ?>"<?php print $attributes; ?>>
   <?php print render($title_prefix); ?>
@@ -135,6 +136,8 @@ hide($content['links']);
     <nav<?php print $links_attributes; ?>><?php print $links; ?></nav>
   <?php endif; ?>
 
+  <?php print render($content['report_link']); ?>
+
 </article>
 <?php if (isset($content['comments']['comments'])): ?>
 <div class="commons-pod commons-pod-comments">
diff --git a/profiles/commons/themes/contrib/commons_origins/templates/page/page.tpl.php b/profiles/commons/themes/contrib/commons_origins/templates/page/page.tpl.php
index 420308f..b0d8aaf 100755
--- a/profiles/commons/themes/contrib/commons_origins/templates/page/page.tpl.php
+++ b/profiles/commons/themes/contrib/commons_origins/templates/page/page.tpl.php
@@ -132,14 +132,13 @@
     <?php print render($page['header']); ?>
   </header>
 
-  <!-- Messages and Help -->
-  <?php print $messages; ?>
-  <?php print render($page['help']); ?>
-
-  <!-- region: Secondary Content -->
-  <?php print render($page['secondary_content']); ?>
-
   <div id="columns" class="columns clearfix">
+    <!-- Messages and Help -->
+    <?php print $messages; ?>
+    <?php print render($page['help']); ?>
+
+    <!-- region: Secondary Content -->
+    <?php print render($page['secondary_content']); ?>
 
     <div id="page-top">
       <!-- Breadcrumbs -->
diff --git a/profiles/commons/themes/contrib/commons_origins/templates/panels/node--panel--fallback.tpl.php b/profiles/commons/themes/contrib/commons_origins/templates/panels/node--panel--fallback.tpl.php
index b898f95..46351ba 100644
--- a/profiles/commons/themes/contrib/commons_origins/templates/panels/node--panel--fallback.tpl.php
+++ b/profiles/commons/themes/contrib/commons_origins/templates/panels/node--panel--fallback.tpl.php
@@ -18,7 +18,7 @@
  * - $footer_attributes: attributes such as classes to apply to the footer element.
  * - $links_attributes: attributes such as classes to apply to the nav element.
  * - $is_mobile: Mixed, requires the Mobile Detect or Browscap module to return
- *   TRUE for mobile.  Note that tablets are also considered mobile devices.  
+ *   TRUE for mobile.  Note that tablets are also considered mobile devices.
  *   Returns NULL if the feature could not be detected.
  * - $is_tablet: Mixed, requires the Mobile Detect to return TRUE for tablets.
  *   Returns NULL if the feature could not be detected.
@@ -106,8 +106,9 @@
  */
 hide($content['comments']);
 hide($content['links']);
+hide($content['report_link']);
 ?>
-<article id="node-<?php print $node->nid; ?>" class="<?php print $classes; ?> clearfix commons-pod"<?php print $attributes; ?>>
+<article id="node-<?php print $node->nid; ?>" class="<?php print $classes; ?> clearfix"<?php print $attributes; ?>>
 
   <?php print render($title_prefix); ?>
   <header<?php print $header_attributes; ?>>
@@ -130,7 +131,8 @@ hide($content['links']);
   <?php if ($links = render($content['links'])): ?>
     <nav<?php print $links_attributes; ?>><?php print $links; ?></nav>
   <?php endif; ?>
-  
+  <?php print render($content['report_link']); ?>
+
 </article>
 
 <?php if (isset($content['comments']['comments'])): ?>
diff --git a/profiles/commons/themes/contrib/commons_origins/templates/panels/three-25-50-25--events.tpl.php b/profiles/commons/themes/contrib/commons_origins/templates/panels/three-25-50-25--events.tpl.php
new file mode 100755
index 0000000..24cb7de
--- /dev/null
+++ b/profiles/commons/themes/contrib/commons_origins/templates/panels/three-25-50-25--events.tpl.php
@@ -0,0 +1,59 @@
+<?php
+/**
+ * @file
+ * Adativetheme implementation to present a Panels layout.
+ *
+ * Available variables:
+ * - $content: An array of content, each item in the array is keyed to one
+ *   panel of the layout.
+ * - $css_id: unique id if present.
+ * - $panel_prefix: prints a wrapper when this template is used in certain context,
+ *   such as when rendered by Display Suite or other module - the wrapper is
+ *   added by Adaptivetheme in the appropriate process function.
+ * - $panel_suffix: closing element for the $prefix.
+ *
+ * @see adaptivetheme_preprocess_three_25_50_25()
+ * @see adaptivetheme_preprocess_node()
+ * @see adaptivetheme_process_node()
+ */
+
+// Ensure variables are always set. In the last hours before cutting a stable
+// release I found these are not set when inside a Field Collection using Display
+// Suite, even though they are initialized in the templates preprocess function.
+// This is a workaround, that may or may not go away.
+$panel_prefix = isset($panel_prefix) ? $panel_prefix : '';
+$panel_suffix = isset($panel_suffix) ? $panel_suffix : '';
+?>
+<?php print $panel_prefix; ?>
+<div class="three-25-50-25 at-panel panel-display clearfix" <?php if (!empty($css_id)): print "id=\"$css_id\""; endif; ?>>
+  <?php if ($content['three_25_50_25_top']): ?>
+    <div class="region region-three-25-50-25-top region-conditional-stack">
+      <div class="region-inner clearfix">
+        <?php print $content['three_25_50_25_top']; ?>
+      </div>
+    </div>
+  <?php endif; ?>
+  <div class="region region-three-25-50-25-first">
+    <div class="region-inner commons-pod clearfix">
+      <?php print $content['three_25_50_25_first']; ?>
+    </div>
+  </div>
+  <div class="region region-three-25-50-25-second">
+    <div class="region-inner clearfix">
+      <?php print $content['three_25_50_25_second']; ?>
+    </div>
+  </div>
+  <div class="region region-three-25-50-25-third">
+    <div class="region-inner clearfix">
+      <?php print $content['three_25_50_25_third']; ?>
+    </div>
+  </div>
+  <?php if ($content['three_25_50_25_bottom']): ?>
+    <div class="region region-three-25-50-25-bottom region-conditional-stack">
+      <div class="region-inner clearfix">
+        <?php print $content['three_25_50_25_bottom']; ?>
+      </div>
+    </div>
+  <?php endif; ?>
+</div>
+<?php print $panel_suffix; ?>
diff --git a/profiles/commons/themes/contrib/commons_origins/templates/panels/two-33-66--search.tpl.php b/profiles/commons/themes/contrib/commons_origins/templates/panels/two-33-66--search.tpl.php
new file mode 100644
index 0000000..3e11c0b
--- /dev/null
+++ b/profiles/commons/themes/contrib/commons_origins/templates/panels/two-33-66--search.tpl.php
@@ -0,0 +1,54 @@
+<?php
+/**
+ * @file
+ * Adativetheme implementation to present a Panels layout.
+ *
+ * Available variables:
+ * - $content: An array of content, each item in the array is keyed to one
+ *   panel of the layout.
+ * - $css_id: unique id if present.
+ * - $panel_prefix: prints a wrapper when this template is used in certain context,
+ *   such as when rendered by Display Suite or other module - the wrapper is
+ *   added by Adaptivetheme in the appropriate process function.
+ * - $panel_suffix: closing element for the $prefix.
+ *
+ * @see adaptivetheme_preprocess_two_33_66()
+ * @see adaptivetheme_preprocess_node()
+ * @see adaptivetheme_process_node()
+ */
+
+// Ensure variables are always set. In the last hours before cutting a stable
+// release I found these are not set when inside a Field Collection using Display
+// Suite, even though they are initialized in the templates preprocess function.
+// This is a workaround, that may or may not go away.
+$panel_prefix = isset($panel_prefix) ? $panel_prefix : '';
+$panel_suffix = isset($panel_suffix) ? $panel_suffix : '';
+?>
+<?php print $panel_prefix; ?>
+<div class="two-33-66 at-panel panel-display clearfix" <?php if (!empty($css_id)): print "id=\"$css_id\""; endif; ?>>
+  <?php if ($content['two_33_66_top']): ?>
+    <div class="region region-two-33-66-top region-conditional-stack">
+      <div class="region-inner clearfix">
+        <?php print $content['two_33_66_top']; ?>
+      </div>
+    </div>
+  <?php endif; ?>
+  <div class="region region-two-33-66-first">
+    <div class="region-inner commons-pod clearfix">
+      <?php print $content['two_33_66_first']; ?>
+    </div>
+  </div>
+  <div class="region region-two-33-66-second">
+    <div class="region-inner clearfix">
+      <?php print $content['two_33_66_second']; ?>
+    </div>
+  </div>
+  <?php if ($content['two_33_66_bottom']): ?>
+    <div class="region region-two-33-66-bottom region-conditional-stack">
+      <div class="region-inner clearfix">
+        <?php print $content['two_33_66_bottom']; ?>
+      </div>
+    </div>
+  <?php endif; ?>
+</div>
+<?php print $panel_suffix; ?>
diff --git a/profiles/commons/themes/contrib/commons_origins/templates/search/search-result.tpl.php b/profiles/commons/themes/contrib/commons_origins/templates/search/search-result.tpl.php
new file mode 100644
index 0000000..ff2cfa8
--- /dev/null
+++ b/profiles/commons/themes/contrib/commons_origins/templates/search/search-result.tpl.php
@@ -0,0 +1,73 @@
+<?php
+
+/**
+ * @file
+ * Overrides modules/search/search-result.tpl.php.
+ *
+ * Variables provided by the Rich Snippets module:
+ * - $url_shortened: The shortened URL of the result.
+ * - $alternate_links: Alternate links to the result, such as links to a cached
+ *   version of the page or a link to similar results.
+ * - $image:
+ *
+ * Available variables:
+ * - $url: URL of the result.
+ * - $title: Title of the result.
+ * - $snippet: A small preview of the result. Does not apply to user searches.
+ * - $info: String of all the meta information ready for print. Does not apply
+ *   to user searches.
+ * - $info_split: Contains same data as $info, split into a keyed array.
+ * - $module: The machine-readable name of the module (tab) being searched, such
+ *   as "node" or "user".
+ * - $title_prefix (array): An array containing additional output populated by
+ *   modules, intended to be displayed in front of the main title tag that
+ *   appears in the template.
+ * - $title_suffix (array): An array containing additional output populated by
+ *   modules, intended to be displayed after the main title tag that appears in
+ *   the template.
+ *
+ * Default keys within $info_split:
+ * - $info_split['type']: Node type (or item type string supplied by module).
+ * - $info_split['user']: Author of the node linked to users profile. Depends
+ *   on permission.
+ * - $info_split['date']: Last update of the node. Short formatted.
+ * - $info_split['comment']: Number of comments output as "% comments", %
+ *   being the count. Depends on comment.module.
+ *
+ * Other variables:
+ * - $classes_array: Array of HTML class attribute values. It is flattened
+ *   into a string within the variable $classes.
+ * - $title_attributes_array: Array of HTML attributes for the title. It is
+ *   flattened into a string within the variable $title_attributes.
+ * - $content_attributes_array: Array of HTML attributes for the content. It is
+ *   flattened into a string within the variable $content_attributes.
+ *
+ * Since $info_split is keyed, a direct print of the item is possible.
+ * This array does not apply to user searches so it is recommended to check
+ * for its existence before printing. The default keys of 'type', 'user' and
+ * 'date' always exist for node searches. Modules may provide other data.
+ * @code
+ *   <?php if (isset($info_split['comment'])): ?>
+ *     <span class="info-comment">
+ *       <?php print $info_split['comment']; ?>
+ *     </span>
+ *   <?php endif; ?>
+ * @endcode
+ *
+ * To check for all available data within $info_split, use the code below.
+ * @code
+ *   <?php print '<pre>'. check_plain(print_r($info_split, 1)) .'</pre>'; ?>
+ * @endcode
+ *
+ * @see template_preprocess()
+ * @see template_preprocess_search_result()
+ * @see template_process()
+ */
+?>
+<li class="<?php print $classes; ?>"<?php print $attributes; ?>>
+  <div class="search-result-wrapper">
+      <?php if ($snippet): ?>
+        <span class="search-result-snippet"<?php print $content_attributes; ?>><?php print $snippet; ?></span>
+      <?php endif; ?>
+  </div>
+</li>
diff --git a/profiles/commons/themes/contrib/commons_origins/templates/search/search-results--apachesolr-search.tpl.php b/profiles/commons/themes/contrib/commons_origins/templates/search/search-results--apachesolr-search.tpl.php
new file mode 100644
index 0000000..42b1be3
--- /dev/null
+++ b/profiles/commons/themes/contrib/commons_origins/templates/search/search-results--apachesolr-search.tpl.php
@@ -0,0 +1,43 @@
+<?php
+
+/**
+ * @file
+ * Default theme implementation for displaying search results.
+ *
+ * This template collects each invocation of theme_search_result(). This and
+ * the child template are dependent to one another sharing the markup for
+ * definition lists.
+ *
+ * Note that modules may implement their own search type and theme function
+ * completely bypassing this template.
+ *
+ * Available variables:
+ * - $search_results: All results as it is rendered through
+ *   search-result.tpl.php
+ * - $module: The machine-readable name of the module (tab) being searched, such
+ *   as "node" or "user".
+ *
+ *
+ * @see template_preprocess_search_results()
+ *
+ * @ingroup themeable
+ */
+?>
+<div class="<?php print $classes; ?>"<?php print $attributes; ?>>
+  <?php if ($search_results): ?>
+    <?php if (!empty($title)): ?>
+      <h2<?php print $title_attributes; ?>><?php print $title; ?></h2>
+    <?php endif; ?>
+    <div<?php print $content_attributes; ?>>
+      <ol class="search-results <?php print $module; ?>-results">
+        <?php print $search_results; ?>
+      </ol>
+    </div>
+    <?php print $pager; ?>
+  <?php else : ?>
+    <h2<?php print $title_attributes; ?>><?php print t('Your search yielded no results');?></h2>
+    <div<?php print $content_attributes; ?>>
+      <?php print search_help('search#noresults', drupal_help_arg()); ?>
+    </div>
+  <?php endif; ?>
+</div>
diff --git a/profiles/commons/themes/contrib/commons_origins/templates/views/views-view-field--field-address.tpl.php b/profiles/commons/themes/contrib/commons_origins/templates/views/views-view-field--field-address.tpl.php
new file mode 100644
index 0000000..91d92ee
--- /dev/null
+++ b/profiles/commons/themes/contrib/commons_origins/templates/views/views-view-field--field-address.tpl.php
@@ -0,0 +1,25 @@
+<?php
+
+/**
+ * @file
+ * This template is used to print a single field in a view.
+ *
+ * It is not actually used in default Views, as this is registered as a theme
+ * function which has better performance. For single overrides, the template is
+ * perfectly okay.
+ *
+ * Variables available:
+ * - $view: The view object
+ * - $field: The field handler object that can process the input
+ * - $row: The raw SQL result that can be used
+ * - $output: The processed output that will normally be used.
+ *
+ * When fetching output from the $row, this construct should be used:
+ * $data = $row->{$field->field_alias}
+ *
+ * The above will guarantee that you'll always get the correct data,
+ * regardless of any changes in the aliasing that might happen if
+ * the view is modified.
+ */
+?>
+<?php print $output; ?>
diff --git a/profiles/commons/themes/contrib/commons_origins/templates/views/views-view-grid.tpl.php b/profiles/commons/themes/contrib/commons_origins/templates/views/views-view-grid.tpl.php
new file mode 100644
index 0000000..25a877d
--- /dev/null
+++ b/profiles/commons/themes/contrib/commons_origins/templates/views/views-view-grid.tpl.php
@@ -0,0 +1,32 @@
+<?php
+
+/**
+ * @file
+ * Default simple view template to display a rows in a grid.
+ *
+ * - $rows contains a nested array of rows. Each row contains an array of
+ *   columns.
+ *
+ * @ingroup views_templates
+ */
+?>
+<?php if (!empty($title)) : ?>
+  <h3 class="grid-grouping-title"><?php print $title; ?></h3>
+<?php endif; ?>
+<table class="<?php print $class; ?>"<?php print $attributes; ?>>
+  <?php if (!empty($caption)) : ?>
+    <caption><?php print $caption; ?></caption>
+  <?php endif; ?>
+
+  <tbody>
+    <?php foreach ($rows as $row_number => $columns): ?>
+      <tr <?php if ($row_classes[$row_number]) { print 'class="' . $row_classes[$row_number] .'"';  } ?>>
+        <?php foreach ($columns as $column_number => $item): ?>
+          <td <?php if ($column_classes[$row_number][$column_number]) { print 'class="' . $column_classes[$row_number][$column_number] .'"';  } ?>>
+            <?php print $item; ?>
+          </td>
+        <?php endforeach; ?>
+      </tr>
+    <?php endforeach; ?>
+  </tbody>
+</table>
diff --git a/profiles/minimal/minimal.info b/profiles/minimal/minimal.info
index 0153599..01a4558 100644
--- a/profiles/minimal/minimal.info
+++ b/profiles/minimal/minimal.info
@@ -6,8 +6,8 @@ hidden = TRUE
 dependencies[] = block
 dependencies[] = dblog
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/profiles/standard/standard.info b/profiles/standard/standard.info
index ddd0a56..254f475 100644
--- a/profiles/standard/standard.info
+++ b/profiles/standard/standard.info
@@ -25,8 +25,8 @@ dependencies[] = field_ui
 dependencies[] = file
 dependencies[] = rdf
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/profiles/testing/modules/drupal_system_listing_compatible_test/drupal_system_listing_compatible_test.info b/profiles/testing/modules/drupal_system_listing_compatible_test/drupal_system_listing_compatible_test.info
index 2703107..55bd3ff 100644
--- a/profiles/testing/modules/drupal_system_listing_compatible_test/drupal_system_listing_compatible_test.info
+++ b/profiles/testing/modules/drupal_system_listing_compatible_test/drupal_system_listing_compatible_test.info
@@ -6,8 +6,8 @@ core = 7.x
 hidden = TRUE
 files[] = drupal_system_listing_compatible_test.test
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/profiles/testing/modules/drupal_system_listing_incompatible_test/drupal_system_listing_incompatible_test.info b/profiles/testing/modules/drupal_system_listing_incompatible_test/drupal_system_listing_incompatible_test.info
index 3fb12b5..81fb29a 100644
--- a/profiles/testing/modules/drupal_system_listing_incompatible_test/drupal_system_listing_incompatible_test.info
+++ b/profiles/testing/modules/drupal_system_listing_incompatible_test/drupal_system_listing_incompatible_test.info
@@ -8,8 +8,8 @@ version = VERSION
 core = 6.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/profiles/testing/testing.info b/profiles/testing/testing.info
index 77ac5ef..76b7e8a 100644
--- a/profiles/testing/testing.info
+++ b/profiles/testing/testing.info
@@ -4,8 +4,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/themes/bartik/bartik.info b/themes/bartik/bartik.info
index bf0d33d..0e0c6d8 100644
--- a/themes/bartik/bartik.info
+++ b/themes/bartik/bartik.info
@@ -34,8 +34,8 @@ regions[footer] = Footer
 settings[shortcut_module_link] = 0
 
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/themes/garland/garland.info b/themes/garland/garland.info
index 38dad5a..adc546f 100644
--- a/themes/garland/garland.info
+++ b/themes/garland/garland.info
@@ -7,8 +7,8 @@ stylesheets[all][] = style.css
 stylesheets[print][] = print.css
 settings[garland_width] = fluid
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/themes/seven/seven.info b/themes/seven/seven.info
index 99194dd..76e4a19 100644
--- a/themes/seven/seven.info
+++ b/themes/seven/seven.info
@@ -13,8 +13,8 @@ regions[page_bottom] = Page bottom
 regions[sidebar_first] = First sidebar
 regions_hidden[] = sidebar_first
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
diff --git a/themes/stark/stark.info b/themes/stark/stark.info
index 2402152..3ad46b8 100644
--- a/themes/stark/stark.info
+++ b/themes/stark/stark.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 stylesheets[all][] = layout.css
 
-; Information added by drupal.org packaging script on 2013-02-20
-version = "7.20"
+; Information added by drupal.org packaging script on 2013-03-07
+version = "7.21"
 project = "drupal"
-datestamp = "1361393684"
+datestamp = "1362616996"
 
