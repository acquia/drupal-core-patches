diff --git a/CHANGELOG.txt b/CHANGELOG.txt
index 3a63aea..ed73431 100644
--- a/CHANGELOG.txt
+++ b/CHANGELOG.txt
@@ -1,4 +1,46 @@
 
+Drupal 7.28, 2014-05-08
+-----------------------
+- Fixed a regression introduced in Drupal 7.27 that caused JavaScript to break
+  on older browsers (such as Internet Explorer 8 and earlier) when Ajax was
+  used.
+- Increased the timeout used by the Update Manager module when it fetches data
+  from drupal.org (from 5 seconds to 30 seconds), to work around a problem
+  which causes incomplete information about security updates to be presented to
+  site administrators. This fix may lead to a performance slowdown on the
+  Update Manager administration pages, when installing Drupal distributions,
+  and (for sites that use the automated cron feature) on occasional page loads
+  by site visitors.
+- Fixed the behavior of the token system's "[node:summary]" token when the body
+  field does not have a manual summary.
+- Changed the behavior of db_query_temporary() so that it works on SELECT
+  queries even when they have leading comments/whitespace. A side effect of
+  this fix is that db_query_temporary() will now fail with an error if it is
+  ever used on non-SELECT queries.
+- Added a "node_admin_filter" tag to the database query used to build the list
+  of nodes on the content administration page, to make it easier to alter.
+- Made the cron queue system log any exceptions that are thrown while an item
+  in the queue is being processed, rather than stopping the entire PHP request.
+- Improved screen reader support by adding an aria-live HTML attribute to file
+  upload fields when there is an error uploading the file (minor markup
+  change).
+- Made the pager on the Tracker module listing pages show the same number of
+  items as other pagers throughout Drupal core (minor UI change).
+- Fixed a bug which caused caches not to be properly cleared when a file entity
+  was saved or deleted.
+- Added several missing countries to the default list returned by
+  country_get_list() (string change).
+- Replaced the term "weight" with "influence" in the content ranking settings
+  for search, and added help text for administrators (string change).
+- Fixed untranslatable text strings in the administrative interface for the
+  "Crop" effect provided by the Image module (minor string change).
+- Fixed a bug in the Taxonomy module update function introduced in Drupal 7.26
+  that caused memory and CPU problems on sites with very large numbers of
+  unpublished nodes.
+- Numerous small bug fixes.
+- Numerous API documentation improvements.
+- Additional automated test coverage.
+
 Drupal 7.27, 2014-04-16
 ----------------------
 - Fixed security issues (information disclosure). See SA-CORE-2014-002.
diff --git a/INSTALL.mysql.txt b/INSTALL.mysql.txt
index bee5811..95a8734 100644
--- a/INSTALL.mysql.txt
+++ b/INSTALL.mysql.txt
@@ -20,18 +20,21 @@ initial database files. Next you must log in and set the access database rights:
 Again, you will be asked for the 'username' database password. At the MySQL
 prompt, enter the following command:
 
-  GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, INDEX, ALTER
-  ON databasename.*
+  GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, INDEX, ALTER,
+  CREATE TEMPORARY TABLES ON databasename.*
   TO 'username'@'localhost' IDENTIFIED BY 'password';
 
-where
+where:
 
  'databasename' is the name of your database
- 'username@localhost' is the username of your MySQL account
+ 'username' is the username of your MySQL account
+ 'localhost' is the web server host where Drupal is installed
  'password' is the password required for that username
 
-Note: Unless your database user has all of the privileges listed above, you will
-not be able to run Drupal.
+Note: Unless the database user/host combination for your Drupal installation
+has all of the privileges listed above (except possibly CREATE TEMPORARY TABLES,
+which is currently only used by Drupal core automated tests and some
+contributed modules), you will not be able to install or run Drupal.
 
 If successful, MySQL will reply with:
 
diff --git a/PATCHES.txt b/PATCHES.txt
index 9c67369..a477100 100644
--- a/PATCHES.txt
+++ b/PATCHES.txt
@@ -4,5 +4,6 @@ The following patches have been applied to this project:
 - http://drupal.org/files/1664602-1.patch
 - https://drupal.org/files/issues/drupal-optimize_node_access_queries-106721-D7-71-do-not-test.patch
 - https://drupal.org/files/issues/node_access_grants-static-cache-11.patch
+- https://drupal.org/files/issues/1805690_11.patch
 
 This file was automatically generated by Drush Make (http://drupal.org/project/drush).
\ No newline at end of file
diff --git a/README.txt b/README.txt
index f4c2f64..60d3da5 100644
--- a/README.txt
+++ b/README.txt
@@ -71,12 +71,12 @@ profiles/your_site_profile/themes respectively to restrict their usage to only
 sites that were installed with that specific profile.
 
 More about installation profiles and distributions:
-* Read about the difference between installation profiles and distributions:
-  http://drupal.org/node/1089736
-* Download contributed installation profiles and distributions:
-  http://drupal.org/project/distributions
-* Develop your own installation profile or distribution:
-  http://drupal.org/developing/distributions
+ * Read about the difference between installation profiles and distributions:
+   http://drupal.org/node/1089736
+ * Download contributed installation profiles and distributions:
+   http://drupal.org/project/distributions
+ * Develop your own installation profile or distribution:
+   http://drupal.org/developing/distributions
 
 APPEARANCE
 ----------
diff --git a/includes/bootstrap.inc b/includes/bootstrap.inc
index 4cc3914..09c2044 100644
--- a/includes/bootstrap.inc
+++ b/includes/bootstrap.inc
@@ -8,7 +8,7 @@
 /**
  * The current system version.
  */
-define('VERSION', '7.27');
+define('VERSION', '7.28');
 
 /**
  * Core API compatibility.
diff --git a/includes/common.inc b/includes/common.inc
index 7d56b8b..36405d8 100644
--- a/includes/common.inc
+++ b/includes/common.inc
@@ -458,7 +458,7 @@ function drupal_get_query_array($query) {
   $result = array();
   if (!empty($query)) {
     foreach (explode('&', $query) as $param) {
-      $param = explode('=', $param);
+      $param = explode('=', $param, 2);
       $result[$param[0]] = isset($param[1]) ? rawurldecode($param[1]) : '';
     }
   }
@@ -1426,7 +1426,6 @@ function filter_xss_admin($string) {
  *   valid UTF-8.
  *
  * @see drupal_validate_utf8()
- * @ingroup sanitization
  */
 function filter_xss($string, $allowed_tags = array('a', 'em', 'strong', 'cite', 'blockquote', 'code', 'ul', 'ol', 'li', 'dl', 'dt', 'dd')) {
   // Only operate on valid UTF-8 strings. This is necessary to prevent cross
@@ -5070,6 +5069,11 @@ function drupal_get_private_key() {
  * @param $value
  *   An additional value to base the token on.
  *
+ * The generated token is based on the session ID of the current user. Normally,
+ * anonymous users do not have a session, so the generated token will be
+ * different on every page request. To generate a token for users without a
+ * session, manually start a session prior to calling this function.
+ *
  * @return string
  *   A 43-character URL-safe token for validation, based on the user session ID,
  *   the hash salt provided from drupal_get_hash_salt(), and the
@@ -5293,8 +5297,15 @@ function drupal_cron_run() {
     $end = time() + (isset($info['time']) ? $info['time'] : 15);
     $queue = DrupalQueue::get($queue_name);
     while (time() < $end && ($item = $queue->claimItem())) {
-      $function($item->data);
-      $queue->deleteItem($item);
+      try {
+        $function($item->data);
+        $queue->deleteItem($item);
+      }
+      catch (Exception $e) {
+        // In case of exception log it and leave the item in the queue
+        // to be processed again later.
+        watchdog_exception('cron', $e);
+      }
     }
   }
   // Restore the user.
@@ -5949,14 +5960,16 @@ function drupal_render(&$elements) {
 /**
  * Renders children of an element and concatenates them.
  *
- * This renders all children of an element using drupal_render() and then
- * joins them together into a single string.
- *
- * @param $element
+ * @param array $element
  *   The structured array whose children shall be rendered.
- * @param $children_keys
- *   If the keys of the element's children are already known, they can be passed
- *   in to save another run of element_children().
+ * @param array $children_keys
+ *   (optional) If the keys of the element's children are already known, they
+ *   can be passed in to save another run of element_children().
+ *
+ * @return string
+ *   The rendered HTML of all children of the element.
+
+ * @see drupal_render()
  */
 function drupal_render_children(&$element, $children_keys = NULL) {
   if ($children_keys === NULL) {
@@ -7830,7 +7843,10 @@ function entity_load_unchanged($entity_type, $id) {
 }
 
 /**
- * Get the entity controller class for an entity type.
+ * Gets the entity controller for an entity type.
+ *
+ * @return DrupalEntityControllerInterface
+ *   The entity controller object for the specified entity type.
  */
 function entity_get_controller($entity_type) {
   $controllers = &drupal_static(__FUNCTION__, array());
diff --git a/includes/database/database.inc b/includes/database/database.inc
index 604dd4c..ad78ac0 100644
--- a/includes/database/database.inc
+++ b/includes/database/database.inc
@@ -28,18 +28,21 @@
  * Most Drupal database SELECT queries are performed by a call to db_query() or
  * db_query_range(). Module authors should also consider using the PagerDefault
  * Extender for queries that return results that need to be presented on
- * multiple pages, and the Tablesort Extender for generating appropriate queries
- * for sortable tables.
+ * multiple pages (see https://drupal.org/node/508796), and the TableSort
+ * Extender for generating appropriate queries for sortable tables
+ * (see https://drupal.org/node/1848372).
  *
  * For example, one might wish to return a list of the most recent 10 nodes
  * authored by a given user. Instead of directly issuing the SQL query
  * @code
- * SELECT n.nid, n.title, n.created FROM node n WHERE n.uid = $uid LIMIT 0, 10;
+ * SELECT n.nid, n.title, n.created FROM node n WHERE n.uid = $uid
+ *   ORDER BY n.created DESC LIMIT 0, 10;
  * @endcode
  * one would instead call the Drupal functions:
  * @code
  * $result = db_query_range('SELECT n.nid, n.title, n.created
- *   FROM {node} n WHERE n.uid = :uid', 0, 10, array(':uid' => $uid));
+ *   FROM {node} n WHERE n.uid = :uid
+ *   ORDER BY n.created DESC', 0, 10, array(':uid' => $uid));
  * foreach ($result as $record) {
  *   // Perform operations on $record->title, etc. here.
  * }
@@ -2380,14 +2383,14 @@ function db_query_range($query, $from, $count, array $args = array(), array $opt
 }
 
 /**
- * Executes a query string and saves the result set to a temporary table.
+ * Executes a SELECT query string and saves the result set to a temporary table.
  *
  * The execution of the query string happens against the active database.
  *
  * @param $query
- *   The prepared statement query to run. Although it will accept both named and
- *   unnamed placeholders, named placeholders are strongly preferred as they are
- *   more self-documenting.
+ *   The prepared SELECT statement query to run. Although it will accept both
+ *   named and unnamed placeholders, named placeholders are strongly preferred
+ *   as they are more self-documenting.
  * @param $args
  *   An array of values to substitute into the query. If the query uses named
  *   placeholders, this is an associative array in any order. If the query uses
diff --git a/includes/database/mysql/database.inc b/includes/database/mysql/database.inc
index 00d81f4..4907a39 100644
--- a/includes/database/mysql/database.inc
+++ b/includes/database/mysql/database.inc
@@ -90,7 +90,7 @@ class DatabaseConnection_mysql extends DatabaseConnection {
 
   public function queryTemporary($query, array $args = array(), array $options = array()) {
     $tablename = $this->generateTemporaryTableName();
-    $this->query(preg_replace('/^SELECT/i', 'CREATE TEMPORARY TABLE {' . $tablename . '} Engine=MEMORY SELECT', $query), $args, $options);
+    $this->query('CREATE TEMPORARY TABLE {' . $tablename . '} Engine=MEMORY ' . $query, $args, $options);
     return $tablename;
   }
 
diff --git a/includes/database/pgsql/database.inc b/includes/database/pgsql/database.inc
index 00ed799..67b49fe 100644
--- a/includes/database/pgsql/database.inc
+++ b/includes/database/pgsql/database.inc
@@ -146,7 +146,7 @@ class DatabaseConnection_pgsql extends DatabaseConnection {
 
   public function queryTemporary($query, array $args = array(), array $options = array()) {
     $tablename = $this->generateTemporaryTableName();
-    $this->query(preg_replace('/^SELECT/i', 'CREATE TEMPORARY TABLE {' . $tablename . '} AS SELECT', $query), $args, $options);
+    $this->query('CREATE TEMPORARY TABLE {' . $tablename . '} AS ' . $query, $args, $options);
     return $tablename;
   }
 
diff --git a/includes/database/select.inc b/includes/database/select.inc
index e036904..70c03a2 100644
--- a/includes/database/select.inc
+++ b/includes/database/select.inc
@@ -596,7 +596,7 @@ class SelectQueryExtender implements SelectQueryInterface {
 
   public function hasAnyTag() {
     $args = func_get_args();
-    return call_user_func_array(array($this->query, 'hasAnyTags'), $args);
+    return call_user_func_array(array($this->query, 'hasAnyTag'), $args);
   }
 
   public function addMetaData($key, $object) {
diff --git a/includes/database/sqlite/database.inc b/includes/database/sqlite/database.inc
index b302b3e..8a5ba8c 100644
--- a/includes/database/sqlite/database.inc
+++ b/includes/database/sqlite/database.inc
@@ -250,7 +250,7 @@ class DatabaseConnection_sqlite extends DatabaseConnection {
     $prefixes[$tablename] = '';
     $this->setPrefix($prefixes);
 
-    $this->query(preg_replace('/^SELECT/i', 'CREATE TEMPORARY TABLE ' . $tablename . ' AS SELECT', $query), $args, $options);
+    $this->query('CREATE TEMPORARY TABLE ' . $tablename . ' AS ' . $query, $args, $options);
     return $tablename;
   }
 
diff --git a/includes/entity.inc b/includes/entity.inc
index 25f7584..dc43e73 100644
--- a/includes/entity.inc
+++ b/includes/entity.inc
@@ -360,9 +360,23 @@ class DrupalDefaultEntityController implements DrupalEntityControllerInterface {
     // This ensures the same behavior whether loading from memory or database.
     if ($conditions) {
       foreach ($entities as $entity) {
-        $entity_values = (array) $entity;
-        if (array_diff_assoc($conditions, $entity_values)) {
-          unset($entities[$entity->{$this->idKey}]);
+        // Iterate over all conditions and compare them to the entity
+        // properties. We cannot use array_diff_assoc() here since the
+        // conditions can be nested arrays, too.
+        foreach ($conditions as $property_name => $condition) {
+          if (is_array($condition)) {
+            // Multiple condition values for one property are treated as OR
+            // operation: only if the value is not at all in the condition array
+            // we remove the entity.
+            if (!in_array($entity->{$property_name}, $condition)) {
+              unset($entities[$entity->{$this->idKey}]);
+              continue 2;
+            }
+          }
+          elseif ($condition != $entity->{$property_name}) {
+            unset($entities[$entity->{$this->idKey}]);
+            continue 2;
+          }
         }
       }
     }
diff --git a/includes/file.inc b/includes/file.inc
index 0ec69b7..834699f 100644
--- a/includes/file.inc
+++ b/includes/file.inc
@@ -621,7 +621,11 @@ function file_save(stdClass $file) {
     module_invoke_all('entity_update', $file, 'file');
   }
 
+  // Clear internal properties.
   unset($file->original);
+  // Clear the static loading cache.
+  entity_get_controller('file')->resetCache(array($file->fid));
+
   return $file;
 }
 
@@ -1293,6 +1297,7 @@ function file_delete(stdClass $file, $force = FALSE) {
   if (file_unmanaged_delete($file->uri)) {
     db_delete('file_managed')->condition('fid', $file->fid)->execute();
     db_delete('file_usage')->condition('fid', $file->fid)->execute();
+    entity_get_controller('file')->resetCache();
     return TRUE;
   }
   return FALSE;
@@ -1402,8 +1407,9 @@ function file_space_used($uid = NULL, $status = FILE_STATUS_PERMANENT) {
  * Temporary files are periodically cleaned. To make the file a permanent file,
  * assign the status and use file_save() to save the changes.
  *
- * @param $source
- *   A string specifying the filepath or URI of the uploaded file to save.
+ * @param $form_field_name
+ *   A string that is the associative array key of the upload form element in
+ *   the form array.
  * @param $validators
  *   An optional, associative array of callback functions used to validate the
  *   file. See file_validate() for a full discussion of the array format.
@@ -1414,9 +1420,9 @@ function file_space_used($uid = NULL, $status = FILE_STATUS_PERMANENT) {
  *   (Beware: this is not safe and should only be allowed for trusted users, if
  *   at all).
  * @param $destination
- *   A string containing the URI $source should be copied to.
- *   This must be a stream wrapper URI. If this value is omitted, Drupal's
- *   temporary files scheme will be used ("temporary://").
+ *   A string containing the URI that the file should be copied to. This must
+ *   be a stream wrapper URI. If this value is omitted, Drupal's temporary
+ *   files scheme will be used ("temporary://").
  * @param $replace
  *   Replace behavior when the destination file already exists:
  *   - FILE_EXISTS_REPLACE: Replace the existing file.
@@ -1434,45 +1440,45 @@ function file_space_used($uid = NULL, $status = FILE_STATUS_PERMANENT) {
  *   - source: Path to the file before it is moved.
  *   - destination: Path to the file after it is moved (same as 'uri').
  */
-function file_save_upload($source, $validators = array(), $destination = FALSE, $replace = FILE_EXISTS_RENAME) {
+function file_save_upload($form_field_name, $validators = array(), $destination = FALSE, $replace = FILE_EXISTS_RENAME) {
   global $user;
   static $upload_cache;
 
   // Return cached objects without processing since the file will have
   // already been processed and the paths in _FILES will be invalid.
-  if (isset($upload_cache[$source])) {
-    return $upload_cache[$source];
+  if (isset($upload_cache[$form_field_name])) {
+    return $upload_cache[$form_field_name];
   }
 
   // Make sure there's an upload to process.
-  if (empty($_FILES['files']['name'][$source])) {
+  if (empty($_FILES['files']['name'][$form_field_name])) {
     return NULL;
   }
 
   // Check for file upload errors and return FALSE if a lower level system
   // error occurred. For a complete list of errors:
   // See http://php.net/manual/features.file-upload.errors.php.
-  switch ($_FILES['files']['error'][$source]) {
+  switch ($_FILES['files']['error'][$form_field_name]) {
     case UPLOAD_ERR_INI_SIZE:
     case UPLOAD_ERR_FORM_SIZE:
-      drupal_set_message(t('The file %file could not be saved, because it exceeds %maxsize, the maximum allowed size for uploads.', array('%file' => $_FILES['files']['name'][$source], '%maxsize' => format_size(file_upload_max_size()))), 'error');
+      drupal_set_message(t('The file %file could not be saved, because it exceeds %maxsize, the maximum allowed size for uploads.', array('%file' => $_FILES['files']['name'][$form_field_name], '%maxsize' => format_size(file_upload_max_size()))), 'error');
       return FALSE;
 
     case UPLOAD_ERR_PARTIAL:
     case UPLOAD_ERR_NO_FILE:
-      drupal_set_message(t('The file %file could not be saved, because the upload did not complete.', array('%file' => $_FILES['files']['name'][$source])), 'error');
+      drupal_set_message(t('The file %file could not be saved, because the upload did not complete.', array('%file' => $_FILES['files']['name'][$form_field_name])), 'error');
       return FALSE;
 
     case UPLOAD_ERR_OK:
       // Final check that this is a valid upload, if it isn't, use the
       // default error handler.
-      if (is_uploaded_file($_FILES['files']['tmp_name'][$source])) {
+      if (is_uploaded_file($_FILES['files']['tmp_name'][$form_field_name])) {
         break;
       }
 
     // Unknown error
     default:
-      drupal_set_message(t('The file %file could not be saved. An unknown error has occurred.', array('%file' => $_FILES['files']['name'][$source])), 'error');
+      drupal_set_message(t('The file %file could not be saved. An unknown error has occurred.', array('%file' => $_FILES['files']['name'][$form_field_name])), 'error');
       return FALSE;
   }
 
@@ -1480,10 +1486,10 @@ function file_save_upload($source, $validators = array(), $destination = FALSE,
   $file = new stdClass();
   $file->uid      = $user->uid;
   $file->status   = 0;
-  $file->filename = trim(drupal_basename($_FILES['files']['name'][$source]), '.');
-  $file->uri      = $_FILES['files']['tmp_name'][$source];
+  $file->filename = trim(drupal_basename($_FILES['files']['name'][$form_field_name]), '.');
+  $file->uri      = $_FILES['files']['tmp_name'][$form_field_name];
   $file->filemime = file_get_mimetype($file->filename);
-  $file->filesize = $_FILES['files']['size'][$source];
+  $file->filesize = $_FILES['files']['size'][$form_field_name];
 
   $extensions = '';
   if (isset($validators['file_validate_extensions'])) {
@@ -1540,7 +1546,7 @@ function file_save_upload($source, $validators = array(), $destination = FALSE,
     return FALSE;
   }
 
-  $file->source = $source;
+  $file->source = $form_field_name;
   // A URI may already have a trailing slash or look like "public://".
   if (substr($destination, -1) != '/') {
     $destination .= '/';
@@ -1549,7 +1555,7 @@ function file_save_upload($source, $validators = array(), $destination = FALSE,
   // If file_destination() returns FALSE then $replace == FILE_EXISTS_ERROR and
   // there's an existing file so we need to bail.
   if ($file->destination === FALSE) {
-    drupal_set_message(t('The file %source could not be uploaded because a file by that name already exists in the destination %directory.', array('%source' => $source, '%directory' => $destination)), 'error');
+    drupal_set_message(t('The file %source could not be uploaded because a file by that name already exists in the destination %directory.', array('%source' => $form_field_name, '%directory' => $destination)), 'error');
     return FALSE;
   }
 
@@ -1568,7 +1574,7 @@ function file_save_upload($source, $validators = array(), $destination = FALSE,
     else {
       $message .= ' ' . array_pop($errors);
     }
-    form_set_error($source, $message);
+    form_set_error($form_field_name, $message);
     return FALSE;
   }
 
@@ -1576,8 +1582,8 @@ function file_save_upload($source, $validators = array(), $destination = FALSE,
   // directory. This overcomes open_basedir restrictions for future file
   // operations.
   $file->uri = $file->destination;
-  if (!drupal_move_uploaded_file($_FILES['files']['tmp_name'][$source], $file->uri)) {
-    form_set_error($source, t('File upload error. Could not move uploaded file.'));
+  if (!drupal_move_uploaded_file($_FILES['files']['tmp_name'][$form_field_name], $file->uri)) {
+    form_set_error($form_field_name, t('File upload error. Could not move uploaded file.'));
     watchdog('file', 'Upload error. Could not move uploaded file %file to destination %destination.', array('%file' => $file->filename, '%destination' => $file->uri));
     return FALSE;
   }
@@ -1597,7 +1603,7 @@ function file_save_upload($source, $validators = array(), $destination = FALSE,
   // If we made it this far it's safe to record this file in the database.
   if ($file = file_save($file)) {
     // Add file to the cache.
-    $upload_cache[$source] = $file;
+    $upload_cache[$form_field_name] = $file;
     return $file;
   }
   return FALSE;
diff --git a/includes/form.inc b/includes/form.inc
index fd80e09..846bcb5 100644
--- a/includes/form.inc
+++ b/includes/form.inc
@@ -15,10 +15,9 @@
  * reference the form builder function using \@see. For examples, of this see
  * system_modules_uninstall() or user_pass(), the latter of which has the
  * following in its doxygen documentation:
- *
- * \@ingroup forms
- * \@see user_pass_validate().
- * \@see user_pass_submit().
+ * - \@ingroup forms
+ * - \@see user_pass_validate()
+ * - \@see user_pass_submit()
  *
  * @}
  */
@@ -3101,8 +3100,7 @@ function form_process_radios($element) {
  * @param $variables
  *   An associative array containing:
  *   - element: An associative array containing the properties of the element.
- *     Properties used: #title, #value, #return_value, #description, #required,
- *     #attributes, #checked.
+ *     Properties used: #id, #name, #attributes, #checked, #return_value.
  *
  * @ingroup themeable
  */
@@ -4294,7 +4292,7 @@ function element_validate_number($element, &$form_state) {
  * returns any user input in the 'results' or 'message' keys of $context,
  * it must also sanitize them first.
  *
- * Sample batch operations:
+ * Sample callback_batch_operation():
  * @code
  * // Simple and artificial: load a node of a given type for a given user
  * function my_function_1($uid, $type, &$context) {
@@ -4346,7 +4344,7 @@ function element_validate_number($element, &$form_state) {
  * }
  * @endcode
  *
- * Sample 'finished' callback:
+ * Sample callback_batch_finished():
  * @code
  * function batch_test_finished($success, $results, $operations) {
  *   // The 'success' parameter means no fatal PHP errors were detected. All
@@ -4385,12 +4383,14 @@ function element_validate_number($element, &$form_state) {
  * @param $batch_definition
  *   An associative array defining the batch, with the following elements (all
  *   are optional except as noted):
- *   - operations: (required) Array of function calls to be performed.
+ *   - operations: (required) Array of operations to be performed, where each
+ *     item is an array consisting of the name of an implementation of
+ *     callback_batch_operation() and an array of parameter.
  *     Example:
  *     @code
  *     array(
- *       array('my_function_1', array($arg1)),
- *       array('my_function_2', array($arg2_1, $arg2_2)),
+ *       array('callback_batch_operation_1', array($arg1)),
+ *       array('callback_batch_operation_2', array($arg2_1, $arg2_2)),
  *     )
  *     @endcode
  *   - title: A safe, translated string to use as the title for the progress
@@ -4402,10 +4402,10 @@ function element_validate_number($element, &$form_state) {
  *     @elapsed. Defaults to t('Completed @current of @total.').
  *   - error_message: Message displayed if an error occurred while processing
  *     the batch. Defaults to t('An error has occurred.').
- *   - finished: Name of a function to be executed after the batch has
- *     completed. This should be used to perform any result massaging that may
- *     be needed, and possibly save data in $_SESSION for display after final
- *     page redirection.
+ *   - finished: Name of an implementation of callback_batch_finished(). This is
+ *     executed after the batch has completed. This should be used to perform
+ *     any result massaging that may be needed, and possibly save data in
+ *     $_SESSION for display after final page redirection.
  *   - file: Path to the file containing the definitions of the 'operations' and
  *     'finished' functions, for instance if they don't reside in the main
  *     .module file. The path should be relative to base_path(), and thus should
diff --git a/includes/iso.inc b/includes/iso.inc
index 6c66c56..5cad329 100644
--- a/includes/iso.inc
+++ b/includes/iso.inc
@@ -53,6 +53,7 @@ function _country_get_predefined_list() {
     'BM' => $t('Bermuda'),
     'BN' => $t('Brunei'),
     'BO' => $t('Bolivia'),
+    'BQ' => $t('Caribbean Netherlands'),
     'BR' => $t('Brazil'),
     'BS' => $t('Bahamas'),
     'BT' => $t('Bhutan'),
@@ -74,8 +75,8 @@ function _country_get_predefined_list() {
     'CO' => $t('Colombia'),
     'CR' => $t('Costa Rica'),
     'CU' => $t('Cuba'),
-    'CW' => $t('Curaçao'),
     'CV' => $t('Cape Verde'),
+    'CW' => $t('Curaçao'),
     'CX' => $t('Christmas Island'),
     'CY' => $t('Cyprus'),
     'CZ' => $t('Czech Republic'),
@@ -230,8 +231,10 @@ function _country_get_predefined_list() {
     'SN' => $t('Senegal'),
     'SO' => $t('Somalia'),
     'SR' => $t('Suriname'),
+    'SS' => $t('South Sudan'),
     'ST' => $t('Sao Tome and Principe'),
     'SV' => $t('El Salvador'),
+    'SX' => $t('Sint Maarten'),
     'SY' => $t('Syria'),
     'SZ' => $t('Swaziland'),
     'TC' => $t('Turks and Caicos Islands'),
diff --git a/includes/menu.inc b/includes/menu.inc
index aef557a..fa5a71e 100644
--- a/includes/menu.inc
+++ b/includes/menu.inc
@@ -1000,7 +1000,7 @@ function menu_tree($menu_name) {
 }
 
 /**
- * Returns a rendered menu tree.
+ * Returns an output structure for rendering a menu tree.
  *
  * The menu item's LI element is given one of the following classes:
  * - expanded: The menu item is showing its submenu.
diff --git a/includes/path.inc b/includes/path.inc
index 234430e..2e35711 100644
--- a/includes/path.inc
+++ b/includes/path.inc
@@ -560,8 +560,8 @@ function drupal_valid_path($path, $dynamic_allowed = FALSE) {
   elseif ($dynamic_allowed && preg_match('/\/\%/', $path)) {
     // Path is dynamic (ie 'user/%'), so check directly against menu_router table.
     if ($item = db_query("SELECT * FROM {menu_router} where path = :path", array(':path' => $path))->fetchAssoc()) {
-      $item['link_path']  = $form_item['link_path'];
-      $item['link_title'] = $form_item['link_title'];
+      $item['link_path']  = $item['path'];
+      $item['link_title'] = $item['title'];
       $item['external']   = FALSE;
       $item['options'] = '';
       _menu_link_translate($item);
diff --git a/includes/registry.inc b/includes/registry.inc
index f6c81eb..5fc7674 100644
--- a/includes/registry.inc
+++ b/includes/registry.inc
@@ -10,7 +10,7 @@
  * @{
  * The code registry engine.
  *
- * Drupal maintains an internal registry of all functions or classes in the
+ * Drupal maintains an internal registry of all interfaces or classes in the
  * system, allowing it to lazy-load code files as needed (reducing the amount
  * of code that must be parsed on each request).
  */
@@ -120,7 +120,10 @@ function registry_get_parsed_files() {
 }
 
 /**
- * Parse all files that have changed since the registry was last built, and save their function and class listings.
+ * Parse all changed files and save their interface and class listings.
+ *
+ * Parse all files that have changed since the registry was last built, and save
+ * their interface and class listings.
  *
  * @param $files
  *  The list of files to check and parse.
@@ -149,7 +152,7 @@ function _registry_parse_files($files) {
 }
 
 /**
- * Parse a file and save its function and class listings.
+ * Parse a file and save its interface and class listings.
  *
  * @param $filename
  *   Name of the file we are going to parse.
diff --git a/misc/ajax.js b/misc/ajax.js
index 63dd65f..29483b4 100644
--- a/misc/ajax.js
+++ b/misc/ajax.js
@@ -622,7 +622,7 @@ Drupal.ajax.prototype.commands = {
    * Command to update a form's build ID.
    */
   updateBuildId: function(ajax, response, status) {
-    $('input[name="form_build_id"][value="' + response.old + '"]').val(response.new);
+    $('input[name="form_build_id"][value="' + response['old'] + '"]').val(response['new']);
   }
 };
 
diff --git a/modules/aggregator/aggregator.info b/modules/aggregator/aggregator.info
index e256d23..57ae313 100644
--- a/modules/aggregator/aggregator.info
+++ b/modules/aggregator/aggregator.info
@@ -7,8 +7,8 @@ files[] = aggregator.test
 configure = admin/config/services/aggregator/settings
 stylesheets[all][] = aggregator.css
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/aggregator/aggregator.install b/modules/aggregator/aggregator.install
index b84556a..d6cc039 100644
--- a/modules/aggregator/aggregator.install
+++ b/modules/aggregator/aggregator.install
@@ -260,6 +260,7 @@ function aggregator_schema() {
     'primary key' => array('iid'),
     'indexes' => array(
       'fid' => array('fid'),
+      'timestamp' => array('timestamp'),
     ),
     'foreign keys' => array(
       'aggregator_feed' => array(
@@ -326,5 +327,14 @@ function aggregator_update_7003() {
 }
 
 /**
+ * Add index on timestamp.
+ */
+function aggregator_update_7004() {
+  if (!db_index_exists('aggregator_item', 'timestamp')) {
+    db_add_index('aggregator_item', 'timestamp', array('timestamp'));
+  }
+}
+
+/**
  * @} End of "addtogroup updates-7.x-extra"
  */
diff --git a/modules/aggregator/aggregator.test b/modules/aggregator/aggregator.test
index 18d5b33..d84ee78 100644
--- a/modules/aggregator/aggregator.test
+++ b/modules/aggregator/aggregator.test
@@ -288,6 +288,10 @@ EOF;
     return $GLOBALS['base_url'] . '/' . drupal_get_path('module', 'aggregator') . '/tests/aggregator_test_atom.xml';
   }
 
+  function getHtmlEntitiesSample() {
+    return $GLOBALS['base_url'] . '/' . drupal_get_path('module', 'aggregator') . '/tests/aggregator_test_title_entities.xml';
+  }
+
   /**
    * Creates sample article nodes.
    *
@@ -1016,4 +1020,15 @@ class FeedParserTestCase extends AggregatorTestCase {
     $this->assertText('Some text.');
     $this->assertEqual('urn:uuid:1225c695-cfb8-4ebb-aaaa-80da344efa6a', db_query('SELECT guid FROM {aggregator_item} WHERE link = :link', array(':link' => 'http://example.org/2003/12/13/atom03'))->fetchField(), 'Atom entry id element is parsed correctly.');
   }
+
+  /**
+   * Tests a feed that uses HTML entities in item titles.
+   */
+  function testHtmlEntitiesSample() {
+    $feed = $this->createFeed($this->getHtmlEntitiesSample());
+    aggregator_refresh($feed);
+    $this->drupalGet('aggregator/sources/' . $feed->fid);
+    $this->assertResponse(200, format_string('Feed %name exists.', array('%name' => $feed->title)));
+    $this->assertRaw("Quote&quot; Amp&amp;");
+  }
 }
diff --git a/modules/aggregator/tests/aggregator_test.info b/modules/aggregator/tests/aggregator_test.info
index dc03793..53c583c 100644
--- a/modules/aggregator/tests/aggregator_test.info
+++ b/modules/aggregator/tests/aggregator_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/aggregator/tests/aggregator_test_title_entities.xml b/modules/aggregator/tests/aggregator_test_title_entities.xml
new file mode 100644
index 0000000..e526e44
--- /dev/null
+++ b/modules/aggregator/tests/aggregator_test_title_entities.xml
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<rss version="0.91">
+  <channel>
+    <title>Example with Entities</title>
+    <link>http://example.com</link>
+    <description>Example RSS Feed With HTML Entities in Title</description>
+    <language>en-us</language>
+    <item>
+      <title>Quote&quot; Amp&amp;</title>
+      <link>http://example.com/example-turns-one</link>
+      <description>Some text.</description>
+    </item>
+  </channel>
+</rss>
diff --git a/modules/block/block.api.php b/modules/block/block.api.php
index d8e129e..d7453b2 100644
--- a/modules/block/block.api.php
+++ b/modules/block/block.api.php
@@ -87,13 +87,13 @@
  *     and any value provided can be modified by a user on the block
  *     configuration screen.
  *   - pages: (optional) See 'visibility' above. A string that contains one or
- *     more page paths separated by '\n', '\r', or '\r\n' when 'visibility' is
- *     set to BLOCK_VISIBILITY_NOTLISTED or BLOCK_VISIBILITY_LISTED, or custom
- *     PHP code when 'visibility' is set to BLOCK_VISIBILITY_PHP. Paths may use
- *     '*' as a wildcard (matching any number of characters); '<front>'
- *     designates the site's front page. For BLOCK_VISIBILITY_PHP, the PHP
- *     code's return value should be TRUE if the block is to be made visible or
- *     FALSE if the block should not be visible.
+ *     more page paths separated by "\n", "\r", or "\r\n" when 'visibility' is
+ *     set to BLOCK_VISIBILITY_NOTLISTED or BLOCK_VISIBILITY_LISTED (example:
+ *     "<front>\nnode/1"), or custom PHP code when 'visibility' is set to
+ *     BLOCK_VISIBILITY_PHP. Paths may use '*' as a wildcard (matching any
+ *     number of characters); '<front>' designates the site's front page. For
+ *     BLOCK_VISIBILITY_PHP, the PHP code's return value should be TRUE if the
+ *     block is to be made visible or FALSE if the block should not be visible.
  *
  * For a detailed usage example, see block_example.module.
  *
diff --git a/modules/block/block.info b/modules/block/block.info
index a6854b6..571b335 100644
--- a/modules/block/block.info
+++ b/modules/block/block.info
@@ -6,8 +6,8 @@ core = 7.x
 files[] = block.test
 configure = admin/structure/block
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/block/tests/block_test.info b/modules/block/tests/block_test.info
index b0666a5..759ecbe 100644
--- a/modules/block/tests/block_test.info
+++ b/modules/block/tests/block_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/block/tests/themes/block_test_theme/block_test_theme.info b/modules/block/tests/themes/block_test_theme/block_test_theme.info
index 20e2fa9..36a43c2 100644
--- a/modules/block/tests/themes/block_test_theme/block_test_theme.info
+++ b/modules/block/tests/themes/block_test_theme/block_test_theme.info
@@ -13,8 +13,8 @@ regions[footer] = Footer
 regions[highlighted] = Highlighted
 regions[help] = Help
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/blog/blog.info b/modules/blog/blog.info
index cd06d0c..ae26201 100644
--- a/modules/blog/blog.info
+++ b/modules/blog/blog.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 files[] = blog.test
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/book/book.info b/modules/book/book.info
index 6bb8a64..297366b 100644
--- a/modules/book/book.info
+++ b/modules/book/book.info
@@ -7,8 +7,8 @@ files[] = book.test
 configure = admin/content/book/settings
 stylesheets[all][] = book.css
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/color/color.info b/modules/color/color.info
index 25ae8cc..0c35d98 100644
--- a/modules/color/color.info
+++ b/modules/color/color.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 files[] = color.test
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/comment/comment.info b/modules/comment/comment.info
index 8814c8d..7c344ac 100644
--- a/modules/comment/comment.info
+++ b/modules/comment/comment.info
@@ -9,8 +9,8 @@ files[] = comment.test
 configure = admin/content/comment
 stylesheets[all][] = comment.css
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/comment/comment.module b/modules/comment/comment.module
index 6f6c04b..3c94200 100644
--- a/modules/comment/comment.module
+++ b/modules/comment/comment.module
@@ -2304,7 +2304,7 @@ function template_preprocess_comment(&$variables) {
   $variables['signature'] = $comment->signature;
 
   $uri = entity_uri('comment', $comment);
-  $uri['options'] += array('attributes' => array('class' => 'permalink', 'rel' => 'bookmark'));
+  $uri['options'] += array('attributes' => array('class' => array('permalink'), 'rel' => 'bookmark'));
 
   $variables['title']     = l($comment->subject, $uri['path'], $uri['options']);
   $variables['permalink'] = l(t('Permalink'), $uri['path'], $uri['options']);
diff --git a/modules/contact/contact.info b/modules/contact/contact.info
index b3af921..875ec0b 100644
--- a/modules/contact/contact.info
+++ b/modules/contact/contact.info
@@ -6,8 +6,8 @@ core = 7.x
 files[] = contact.test
 configure = admin/structure/contact
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/contextual/contextual.info b/modules/contextual/contextual.info
index b5d3885..617ad68 100644
--- a/modules/contextual/contextual.info
+++ b/modules/contextual/contextual.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 files[] = contextual.test
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/dashboard/dashboard.info b/modules/dashboard/dashboard.info
index f38979e..12f890a 100644
--- a/modules/dashboard/dashboard.info
+++ b/modules/dashboard/dashboard.info
@@ -7,8 +7,8 @@ files[] = dashboard.test
 dependencies[] = block
 configure = admin/dashboard/customize
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/dblog/dblog.info b/modules/dblog/dblog.info
index ee48753..09d2896 100644
--- a/modules/dblog/dblog.info
+++ b/modules/dblog/dblog.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 files[] = dblog.test
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/field/field.api.php b/modules/field/field.api.php
index b0fc6a4..365fc40 100644
--- a/modules/field/field.api.php
+++ b/modules/field/field.api.php
@@ -1,4 +1,8 @@
 <?php
+/**
+ * @file
+ * Hooks provided by the Field module.
+ */
 
 /**
  * @addtogroup hooks
@@ -37,6 +41,8 @@
  *   - delete: (optional) String containing markup (normally a link) used as the
  *     element's 'delete' operation in the administration interface. Only for
  *     'form' context.
+ *
+ * @ingroup field_types
  */
 function hook_field_extra_fields() {
   $extra['node']['poll'] = array(
@@ -76,6 +82,8 @@ function hook_field_extra_fields() {
  *   The associative array of 'pseudo-field' components.
  *
  * @see hook_field_extra_fields()
+ *
+ * @ingroup field_types
  */
 function hook_field_extra_fields_alter(&$info) {
   // Force node title to always be at the top of the list by default.
@@ -656,6 +664,8 @@ function hook_field_delete_revision($entity_type, $entity, $field, $instance, $l
  *   The source entity from which field values are being copied.
  * @param $source_langcode
  *   The source language from which field values are being copied.
+ *
+ * @ingroup field_language
  */
 function hook_field_prepare_translation($entity_type, $entity, $field, $instance, $langcode, &$items, $source_entity, $source_langcode) {
   // If the translating user is not permitted to use the assigned text format,
@@ -1250,7 +1260,7 @@ function hook_field_formatter_view($entity_type, $entity, $field, $instance, $la
  */
 
 /**
- * @ingroup field_attach
+ * @addtogroup field_attach
  * @{
  */
 
@@ -1312,6 +1322,13 @@ function hook_field_attach_load($entity_type, $entities, $age, $options) {
  * This hook is invoked after the field module has performed the operation.
  *
  * See field_attach_validate() for details and arguments.
+ *
+ * @param $entity_type
+ *   The type of $entity; e.g., 'node' or 'user'.
+ * @param $entity
+ *   The entity with fields to validate.
+ * @param array $errors
+ *   An associative array of errors keyed by field_name, language, delta.
  */
 function hook_field_attach_validate($entity_type, $entity, &$errors) {
   // @todo Needs function body.
@@ -1516,6 +1533,8 @@ function hook_field_attach_prepare_translation_alter(&$entity, $context) {
  *   - entity_type: The type of the entity to be displayed.
  *   - entity: The entity with fields to render.
  *   - langcode: The language code $entity has to be displayed in.
+ *
+ * @ingroup field_language
  */
 function hook_field_language_alter(&$display_language, $context) {
   // Do not apply core language fallback rules if they are disabled or if Locale
@@ -1537,6 +1556,8 @@ function hook_field_language_alter(&$display_language, $context) {
  *   An associative array containing:
  *   - entity_type: The type of the entity the field is attached to.
  *   - field: A field data structure.
+ *
+ * @ingroup field_language
  */
 function hook_field_available_languages_alter(&$languages, $context) {
   // Add an unavailable language.
@@ -1587,7 +1608,7 @@ function hook_field_attach_rename_bundle($entity_type, $bundle_old, $bundle_new)
  * @param $entity_type
  *   The type of entity; for example, 'node' or 'user'.
  * @param $bundle
- *   The bundle that was just deleted.
+ *   The name of the bundle that was just deleted.
  * @param $instances
  *   An array of all instances that existed for the bundle before it was
  *   deleted.
@@ -1602,7 +1623,7 @@ function hook_field_attach_delete_bundle($entity_type, $bundle, $instances) {
 }
 
 /**
- * @} End of "defgroup field_attach".
+ * @} End of "addtogroup field_attach".
  */
 
 /**
@@ -2263,6 +2284,10 @@ function hook_field_storage_pre_update($entity_type, $entity, &$skip_fields) {
 }
 
 /**
+ * @} End of "addtogroup field_storage
+ */
+
+/**
  * Returns the maximum weight for the entity components handled by the module.
  *
  * Field API takes care of fields and 'extra_fields'. This hook is intended for
@@ -2275,9 +2300,12 @@ function hook_field_storage_pre_update($entity_type, $entity, &$skip_fields) {
  * @param $context
  *   The context for which the maximum weight is requested. Either 'form', or
  *   the name of a view mode.
+ *
  * @return
  *   The maximum weight of the entity's components, or NULL if no components
  *   were found.
+ *
+ * @ingroup field_info
  */
 function hook_field_info_max_weight($entity_type, $bundle, $context) {
   $weights = array();
@@ -2290,6 +2318,11 @@ function hook_field_info_max_weight($entity_type, $bundle, $context) {
 }
 
 /**
+ * @addtogroup field_types
+ * @{
+ */
+
+/**
  * Alters the display settings of a field before it gets displayed.
  *
  * Note that instead of hook_field_display_alter(), which is called for all
@@ -2356,6 +2389,10 @@ function hook_field_display_ENTITY_TYPE_alter(&$display, $context) {
 }
 
 /**
+ * @} End of "addtogroup field_types
+ */
+
+/**
  * Alters the display settings of pseudo-fields before an entity is displayed.
  *
  * This hook is called once per displayed entity. If the result of the hook
@@ -2370,6 +2407,8 @@ function hook_field_display_ENTITY_TYPE_alter(&$display, $context) {
  *   - entity_type: The entity type; e.g., 'node' or 'user'.
  *   - bundle: The bundle name.
  *   - view_mode: The view mode, e.g. 'full', 'teaser'...
+ *
+ * @ingroup field_types
  */
 function hook_field_extra_fields_display_alter(&$displays, $context) {
   if ($context['entity_type'] == 'taxonomy_term' && $context['view_mode'] == 'full') {
@@ -2399,6 +2438,8 @@ function hook_field_extra_fields_display_alter(&$displays, $context) {
  *   - instance: The instance of the field.
  *
  * @see hook_field_widget_properties_alter()
+ *
+ * @ingroup field_widget
  */
 function hook_field_widget_properties_ENTITY_TYPE_alter(&$widget, $context) {
   // Change a widget's type according to the time of day.
@@ -2410,10 +2451,6 @@ function hook_field_widget_properties_ENTITY_TYPE_alter(&$widget, $context) {
 }
 
 /**
- * @} End of "addtogroup field_storage".
- */
-
-/**
  * @addtogroup field_crud
  * @{
  */
@@ -2608,6 +2645,8 @@ function hook_field_purge_instance($instance) {
  *
  * @param $field
  *   The field being purged.
+ *
+ * @ingroup field_storage
  */
 function hook_field_storage_purge_field($field) {
   $table_name = _field_sql_storage_tablename($field);
@@ -2625,6 +2664,8 @@ function hook_field_storage_purge_field($field) {
  *
  * @param $instance
  *   The instance being purged.
+ *
+ * @ingroup field_storage
  */
 function hook_field_storage_purge_field_instance($instance) {
   db_delete('my_module_field_instance_info')
@@ -2646,6 +2687,8 @@ function hook_field_storage_purge_field_instance($instance) {
  *   The (possibly deleted) field whose data is being purged.
  * @param $instance
  *   The deleted field instance whose data is being purged.
+ *
+ * @ingroup field_storage
  */
 function hook_field_storage_purge($entity_type, $entity, $field, $instance) {
   list($id, $vid, $bundle) = entity_extract_ids($entity_type, $entity);
@@ -2685,6 +2728,8 @@ function hook_field_storage_purge($entity_type, $entity, $field, $instance) {
  *
  * @return
  *   TRUE if the operation is allowed, and FALSE if the operation is denied.
+ *
+ * @ingroup field_types
  */
 function hook_field_access($op, $field, $entity_type, $entity, $account) {
   if ($field['field_name'] == 'field_of_interest' && $op == 'edit') {
diff --git a/modules/field/field.info b/modules/field/field.info
index fc65243..72ee3bd 100644
--- a/modules/field/field.info
+++ b/modules/field/field.info
@@ -11,8 +11,8 @@ dependencies[] = field_sql_storage
 required = TRUE
 stylesheets[all][] = theme/field.css
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/field/modules/field_sql_storage/field_sql_storage.info b/modules/field/modules/field_sql_storage/field_sql_storage.info
index 702ffb0..2cd799a 100644
--- a/modules/field/modules/field_sql_storage/field_sql_storage.info
+++ b/modules/field/modules/field_sql_storage/field_sql_storage.info
@@ -7,8 +7,8 @@ dependencies[] = field
 files[] = field_sql_storage.test
 required = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/field/modules/list/list.info b/modules/field/modules/list/list.info
index d88ea86..14226b9 100644
--- a/modules/field/modules/list/list.info
+++ b/modules/field/modules/list/list.info
@@ -7,8 +7,8 @@ dependencies[] = field
 dependencies[] = options
 files[] = tests/list.test
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/field/modules/list/tests/list_test.info b/modules/field/modules/list/tests/list_test.info
index a9bc057..6089a46 100644
--- a/modules/field/modules/list/tests/list_test.info
+++ b/modules/field/modules/list/tests/list_test.info
@@ -5,8 +5,8 @@ package = Testing
 version = VERSION
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/field/modules/number/number.info b/modules/field/modules/number/number.info
index 2a11de3..d4eeafe 100644
--- a/modules/field/modules/number/number.info
+++ b/modules/field/modules/number/number.info
@@ -6,8 +6,8 @@ core = 7.x
 dependencies[] = field
 files[] = number.test
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/field/modules/options/options.info b/modules/field/modules/options/options.info
index a1955d3..0dd78c2 100644
--- a/modules/field/modules/options/options.info
+++ b/modules/field/modules/options/options.info
@@ -6,8 +6,8 @@ core = 7.x
 dependencies[] = field
 files[] = options.test
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/field/modules/text/text.info b/modules/field/modules/text/text.info
index 807154e..ce42e0a 100644
--- a/modules/field/modules/text/text.info
+++ b/modules/field/modules/text/text.info
@@ -7,8 +7,8 @@ dependencies[] = field
 files[] = text.test
 required = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/field/tests/field_test.info b/modules/field/tests/field_test.info
index 4a7d2fb..7a17d30 100644
--- a/modules/field/tests/field_test.info
+++ b/modules/field/tests/field_test.info
@@ -6,8 +6,8 @@ files[] = field_test.entity.inc
 version = VERSION
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/field_ui/field_ui.admin.inc b/modules/field_ui/field_ui.admin.inc
index 5c6f529..5d74a5c 100644
--- a/modules/field_ui/field_ui.admin.inc
+++ b/modules/field_ui/field_ui.admin.inc
@@ -936,7 +936,7 @@ function field_ui_display_overview_form($form, &$form_state, $entity_type, $bund
   $field_label_options = array(
     'above' => t('Above'),
     'inline' => t('Inline'),
-    'hidden' => t('<Hidden>'),
+    'hidden' => '<' . t('Hidden') . '>',
   );
   $extra_visibility_options = array(
     'visible' => t('Visible'),
@@ -992,7 +992,7 @@ function field_ui_display_overview_form($form, &$form_state, $entity_type, $bund
     );
 
     $formatter_options = field_ui_formatter_options($field['type']);
-    $formatter_options['hidden'] = t('<Hidden>');
+    $formatter_options['hidden'] = '<' . t('Hidden') . '>';
     $table[$name]['format'] = array(
       'type' => array(
         '#type' => 'select',
diff --git a/modules/field_ui/field_ui.info b/modules/field_ui/field_ui.info
index b5e3d93..f00cc4f 100644
--- a/modules/field_ui/field_ui.info
+++ b/modules/field_ui/field_ui.info
@@ -6,8 +6,8 @@ core = 7.x
 dependencies[] = field
 files[] = field_ui.test
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/file/file.field.inc b/modules/file/file.field.inc
index d540c0a..75f0f99 100644
--- a/modules/file/file.field.inc
+++ b/modules/file/file.field.inc
@@ -768,7 +768,7 @@ function file_field_widget_submit($form, &$form_state) {
   $langcode = $element['#language'];
   $parents = $element['#field_parents'];
 
-  $submitted_values = drupal_array_get_nested_value($form_state['values'], array_slice($button['#array_parents'], 0, -2));
+  $submitted_values = drupal_array_get_nested_value($form_state['values'], array_slice($button['#parents'], 0, -2));
   foreach ($submitted_values as $delta => $submitted_value) {
     if (!$submitted_value['fid']) {
       unset($submitted_values[$delta]);
@@ -779,7 +779,7 @@ function file_field_widget_submit($form, &$form_state) {
   $submitted_values = array_values($submitted_values);
 
   // Update form_state values.
-  drupal_array_set_nested_value($form_state['values'], array_slice($button['#array_parents'], 0, -2), $submitted_values);
+  drupal_array_set_nested_value($form_state['values'], array_slice($button['#parents'], 0, -2), $submitted_values);
 
   // Update items.
   $field_state = field_form_get_state($parents, $field_name, $langcode, $form_state);
@@ -1002,6 +1002,30 @@ function file_field_formatter_view($entity_type, $entity, $field, $instance, $la
 }
 
 /**
+ * Determine whether a field references files stored in {file_managed}.
+ *
+ * @param array $field
+ *   A field array.
+ *
+ * @return
+ *   The field column if the field references {file_managed}.fid, typically
+ *   fid, FALSE if it doesn't.
+ */
+
+function file_field_find_file_reference_column($field) {
+  foreach ($field['foreign keys'] as $data) {
+    if ($data['table'] == 'file_managed') {
+      foreach ($data['columns'] as $field_column => $column) {
+        if ($column == 'fid') {
+          return $field_column;
+        }
+      }
+    }
+  }
+  return FALSE;
+}
+
+/**
  * Returns HTML for a file attachments table.
  *
  * @param $variables
diff --git a/modules/file/file.info b/modules/file/file.info
index 9bcfd2f..418b384 100644
--- a/modules/file/file.info
+++ b/modules/file/file.info
@@ -6,8 +6,8 @@ core = 7.x
 dependencies[] = field
 files[] = tests/file.test
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/file/file.js b/modules/file/file.js
index 0135a3b..fffec6b 100644
--- a/modules/file/file.js
+++ b/modules/file/file.js
@@ -83,7 +83,7 @@ Drupal.file = Drupal.file || {
           '%filename': this.value.replace('C:\\fakepath\\', ''),
           '%extensions': extensionPattern.replace(/\|/g, ', ')
         });
-        $(this).closest('div.form-managed-file').prepend('<div class="messages error file-upload-js-error">' + error + '</div>');
+        $(this).closest('div.form-managed-file').prepend('<div class="messages error file-upload-js-error" aria-live="polite">' + error + '</div>');
         this.value = '';
         return false;
       }
diff --git a/modules/file/file.module b/modules/file/file.module
index 5a635fd..aa43173 100644
--- a/modules/file/file.module
+++ b/modules/file/file.module
@@ -148,7 +148,7 @@ function file_file_download($uri, $field_type = 'file') {
   // an image preview on a node/add form) in which case, allow download by the
   // file's owner.
   if (empty($references) && ($file->status == FILE_STATUS_PERMANENT || $file->uid != $user->uid)) {
-      return;
+    return;
   }
 
   // Default to allow access.
@@ -160,44 +160,24 @@ function file_file_download($uri, $field_type = 'file') {
   // and no reference denied access, access is granted as well. If at least one
   // reference denied access, access is denied.
   foreach ($references as $field_name => $field_references) {
-    foreach ($field_references as $entity_type => $type_references) {
-      foreach ($type_references as $id => $reference) {
-        // Try to load $entity and $field.
-        $entity = entity_load($entity_type, array($id));
-        $entity = reset($entity);
+    foreach ($field_references as $entity_type => $entities) {
+      foreach ($entities as $entity) {
         $field = field_info_field($field_name);
 
-        // Load the field item that references the file.
-        $field_item = NULL;
-        if ($entity) {
-          // Load all field items for that entity.
-          $field_items = field_get_items($entity_type, $entity, $field_name);
-
-          // Find the field item with the matching URI.
-          foreach ($field_items as $item) {
-            if ($item['uri'] == $uri) {
-              $field_item = $item;
-              break;
-            }
-          }
-        }
-
-        // Check that $entity, $field and $field_item were loaded successfully
-        // and check if access to that field is not disallowed. If any of these
-        // checks fail, stop checking access for this reference.
-        if (empty($entity) || empty($field) || empty($field_item) || !field_access('view', $field, $entity_type, $entity)) {
+        // Check if access to this field is not disallowed.
+        if (!field_access('view', $field, $entity_type, $entity)) {
           $denied = TRUE;
-          break;
+          continue;
         }
 
         // Invoke hook and collect grants/denies for download access.
         // Default to FALSE and let entities overrule this ruling.
         $grants = array('system' => FALSE);
         foreach (module_implements('file_download_access') as $module) {
-          $grants = array_merge($grants, array($module => module_invoke($module, 'file_download_access', $field_item, $entity_type, $entity)));
+          $grants = array_merge($grants, array($module => module_invoke($module, 'file_download_access', $field, $entity_type, $entity)));
         }
         // Allow other modules to alter the returned grants/denies.
-        drupal_alter('file_download_access', $grants, $field_item, $entity_type, $entity);
+        drupal_alter('file_download_access', $grants, $field, $entity_type, $entity);
 
         if (in_array(TRUE, $grants)) {
           // If TRUE is returned, access is granted and no further checks are
@@ -984,27 +964,83 @@ function file_icon_map($file) {
  *   FIELD_LOAD_CURRENT to retrieve references only in the current revisions.
  * @param $field_type
  *   (optional) The name of a field type. If given, limits the reference check
- *   to fields of the given type.
+ *   to fields of the given type. If both $field and $field_type is given but
+ *   $field is not the same type as $field_type, an empty array will be
+ *   returned.
  *
  * @return
- *   An integer value.
+ *   A multidimensional array. The keys are field_name, entity_type,
+ *   entity_id and the value is an entity referencing this file.
  */
 function file_get_file_references($file, $field = NULL, $age = FIELD_LOAD_REVISION, $field_type = 'file') {
-  $references = drupal_static(__FUNCTION__, array());
-  $fields = isset($field) ? array($field['field_name'] => $field) : field_info_fields();
-
-  foreach ($fields as $field_name => $file_field) {
-    if ((empty($field_type) || $file_field['type'] == $field_type) && !isset($references[$field_name])) {
-      // Get each time this file is used within a field.
-      $query = new EntityFieldQuery();
-      $query
-        ->fieldCondition($file_field, 'fid', $file->fid)
-        ->age($age);
-      $references[$field_name] = $query->execute();
+  $references = &drupal_static(__FUNCTION__, array());
+  $field_columns = &drupal_static(__FUNCTION__ . ':field_columns', array());
+
+  // Fill the static cache, disregard $field and $field_type for now.
+  if (!isset($references[$file->fid][$age])) {
+    $references[$file->fid][$age] = array();
+    $usage_list = file_usage_list($file);
+    $file_usage_list = isset($usage_list['file']) ? $usage_list['file'] : array();
+    foreach ($file_usage_list as $entity_type => $entity_ids) {
+      $entity_info = entity_get_info($entity_type);
+      // The usage table contains usage of every revision. If we are looking
+      // for every revision or the entity does not support revisions then
+      // every usage is already a match.
+      $match_entity_type = $age == FIELD_LOAD_REVISION || !isset($entity_info['entity keys']['revision']);
+      $entities = entity_load($entity_type, $entity_ids);
+      foreach ($entities as $entity) {
+        list($id, , $bundle) = entity_extract_ids($entity_type, $entity);
+        // We need to find file fields for this entity type and bundle.
+        if (!isset($file_fields[$entity_type][$bundle])) {
+          $file_fields[$entity_type][$bundle] = array();
+          // This contains the possible field names.
+          $instances = field_info_instances($entity_type, $bundle);
+          foreach ($instances as $field_name => $instance) {
+            $current_field = field_info_field($field_name);
+            // If this is the first time this field type is seen, check
+            // whether it references files.
+            if (!isset($field_columns[$current_field['type']])) {
+              $field_columns[$current_field['type']] = file_field_find_file_reference_column($current_field);
+            }
+            // If the field type does reference files then record it.
+            if ($field_columns[$current_field['type']]) {
+              $file_fields[$entity_type][$bundle][$field_name] = $field_columns[$current_field['type']];
+            }
+          }
+        }
+        foreach ($file_fields[$entity_type][$bundle] as $field_name => $field_column) {
+          $match = $match_entity_type;
+          // If we didn't match yet then iterate over the field items to find
+          // the referenced file. This will fail if the usage checked is in a
+          // non-current revision because field items are from the current
+          // revision.
+          if (!$match && ($field_items = field_get_items($entity_type, $entity, $field_name))) {
+            foreach ($field_items as $item) {
+              if ($file->fid == $item[$field_column]) {
+                $match = TRUE;
+                break;
+              }
+            }
+          }
+          if ($match) {
+            $references[$file->fid][$age][$field_name][$entity_type][$id] = $entity;
+          }
+        }
+      }
     }
   }
-
-  return isset($field) ? $references[$field['field_name']] : array_filter($references);
+  $return = $references[$file->fid][$age];
+  // Filter the static cache down to the requested entries. The usual static
+  // cache is very small so this will be very fast.
+  if ($field || $field_type) {
+    foreach ($return as $field_name => $data) {
+      $current_field = field_info_field($field_name);
+      if (($field_type && $current_field['type'] != $field_type) || ($field && $field['id'] != $current_field['id'])) {
+        unset($return[$field_name]);
+      }
+    }
+  }
+  return $return;
 }
 
 /**
diff --git a/modules/file/tests/file_module_test.info b/modules/file/tests/file_module_test.info
index fef211c..0941849 100644
--- a/modules/file/tests/file_module_test.info
+++ b/modules/file/tests/file_module_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/filter/filter.info b/modules/filter/filter.info
index 3fb5bda..7d26d47 100644
--- a/modules/filter/filter.info
+++ b/modules/filter/filter.info
@@ -7,8 +7,8 @@ files[] = filter.test
 required = TRUE
 configure = admin/config/content/formats
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/filter/filter.module b/modules/filter/filter.module
index 2afe901..5c2b8c9 100644
--- a/modules/filter/filter.module
+++ b/modules/filter/filter.module
@@ -739,8 +739,8 @@ function filter_list_format($format_id) {
  * @param $text
  *   The text to be filtered.
  * @param $format_id
- *   (optional) The format ID of the text to be filtered. If no format is
- *   assigned, the fallback format will be used. Defaults to NULL.
+ *   (optional) The machine name of the filter format to be used to filter the
+ *   text. Defaults to the fallback format. See filter_fallback_format().
  * @param $langcode
  *   (optional) The language code of the text to be filtered, e.g. 'en' for
  *   English. This allows filters to be language aware so language specific
diff --git a/modules/forum/forum.info b/modules/forum/forum.info
index 571f117..e28d10e 100644
--- a/modules/forum/forum.info
+++ b/modules/forum/forum.info
@@ -9,8 +9,8 @@ files[] = forum.test
 configure = admin/structure/forum
 stylesheets[all][] = forum.css
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/help/help.info b/modules/help/help.info
index 1c7ff99..f882a44 100644
--- a/modules/help/help.info
+++ b/modules/help/help.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 files[] = help.test
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/image/image.admin.inc b/modules/image/image.admin.inc
index 7e62621..cebe894 100644
--- a/modules/image/image.admin.inc
+++ b/modules/image/image.admin.inc
@@ -592,15 +592,15 @@ function image_crop_form($data) {
     '#type' => 'radios',
     '#title' => t('Anchor'),
     '#options' => array(
-      'left-top'      => t('Top') . ' ' . t('Left'),
-      'center-top'    => t('Top') . ' ' . t('Center'),
-      'right-top'     => t('Top') . ' ' . t('Right'),
-      'left-center'   => t('Center') . ' ' . t('Left'),
+      'left-top'      => t('Top left'),
+      'center-top'    => t('Top center'),
+      'right-top'     => t('Top right'),
+      'left-center'   => t('Center left'),
       'center-center' => t('Center'),
-      'right-center'  => t('Center') . ' ' . t('Right'),
-      'left-bottom'   => t('Bottom') . ' ' . t('Left'),
-      'center-bottom' => t('Bottom') . ' ' . t('Center'),
-      'right-bottom'  => t('Bottom') . ' ' . t('Right'),
+      'right-center'  => t('Center right'),
+      'left-bottom'   => t('Bottom left'),
+      'center-bottom' => t('Bottom center'),
+      'right-bottom'  => t('Bottom right'),
     ),
     '#theme' => 'image_anchor',
     '#default_value' => $data['anchor'],
diff --git a/modules/image/image.info b/modules/image/image.info
index 1d1151d..a1adc32 100644
--- a/modules/image/image.info
+++ b/modules/image/image.info
@@ -7,8 +7,8 @@ dependencies[] = file
 files[] = image.test
 configure = admin/config/media/image-styles
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/image/tests/image_module_test.info b/modules/image/tests/image_module_test.info
index 6a4e11b..21dfb92 100644
--- a/modules/image/tests/image_module_test.info
+++ b/modules/image/tests/image_module_test.info
@@ -6,8 +6,8 @@ core = 7.x
 files[] = image_module_test.module
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/locale/locale.info b/modules/locale/locale.info
index 8b0263f..b9868f3 100644
--- a/modules/locale/locale.info
+++ b/modules/locale/locale.info
@@ -6,8 +6,8 @@ core = 7.x
 files[] = locale.test
 configure = admin/config/regional/language
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/locale/tests/locale_test.info b/modules/locale/tests/locale_test.info
index 5b25fb5..868b683 100644
--- a/modules/locale/tests/locale_test.info
+++ b/modules/locale/tests/locale_test.info
@@ -5,8 +5,8 @@ package = Testing
 version = VERSION
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/menu/menu.info b/modules/menu/menu.info
index b1cfb62..f941c23 100644
--- a/modules/menu/menu.info
+++ b/modules/menu/menu.info
@@ -6,8 +6,8 @@ core = 7.x
 files[] = menu.test
 configure = admin/structure/menu
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/node/node.admin.inc b/modules/node/node.admin.inc
index 0d0bbc0..35f4c1d 100644
--- a/modules/node/node.admin.inc
+++ b/modules/node/node.admin.inc
@@ -471,6 +471,7 @@ function node_admin_nodes() {
   $header['operations'] = array('data' => t('Operations'));
 
   $query = db_select('node', 'n')->extend('PagerDefault')->extend('TableSort');
+  $query->addTag('node_admin_filter');
   node_build_filter_query($query);
 
   if (!user_access('bypass node access')) {
diff --git a/modules/node/node.api.php b/modules/node/node.api.php
index f8dcfde..9502676 100644
--- a/modules/node/node.api.php
+++ b/modules/node/node.api.php
@@ -1033,9 +1033,17 @@ function hook_node_type_delete($info) {
  * This hook is invoked only on the module that defines the node's content type
  * (use hook_node_delete() to respond to all node deletions).
  *
- * This hook is invoked from node_delete_multiple() after the node has been
- * removed from the node table in the database, before hook_node_delete() is
- * invoked, and before field_attach_delete() is called.
+ * This hook is invoked from node_delete_multiple() before hook_node_delete()
+ * is invoked and before field_attach_delete() is called.
+ *
+ * Note that when this hook is invoked, the changes have not yet been written
+ * to the database, because a database transaction is still in progress. The
+ * transaction is not finalized until the delete operation is entirely
+ * completed and node_delete_multiple() goes out of scope. You should not rely
+ * on data in the database at this time as it is not updated yet. You should
+ * also note that any write/update database queries executed from this hook are
+ * also not committed immediately. Check node_delete_multiple() and
+ * db_transaction() for more info.
  *
  * @param $node
  *   The node that is being deleted.
@@ -1063,21 +1071,19 @@ function hook_delete($node) {
  * @ingroup node_api_hooks
  */
 function hook_prepare($node) {
-  if ($file = file_check_upload($field_name)) {
-    $file = file_save_upload($field_name, _image_filename($file->filename, NULL, TRUE));
-    if ($file) {
-      if (!image_get_info($file->uri)) {
-        form_set_error($field_name, t('Uploaded file is not a valid image'));
-        return;
-      }
-    }
-    else {
+  $file = file_save_upload($field_name, _image_filename($file->filename, NULL, TRUE));
+  if ($file) {
+    if (!image_get_info($file->uri)) {
+      form_set_error($field_name, t('Uploaded file is not a valid image'));
       return;
     }
-    $node->images['_original'] = $file->uri;
-    _image_build_derivatives($node, TRUE);
-    $node->new_file = TRUE;
   }
+  else {
+    return;
+  }
+  $node->images['_original'] = $file->uri;
+  _image_build_derivatives($node, TRUE);
+  $node->new_file = TRUE;
 }
 
 /**
diff --git a/modules/node/node.info b/modules/node/node.info
index ea48787..f0acbc5 100644
--- a/modules/node/node.info
+++ b/modules/node/node.info
@@ -9,8 +9,8 @@ required = TRUE
 configure = admin/structure/types
 stylesheets[all][] = node.css
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/node/node.module b/modules/node/node.module
index 7de9377..57a4a2b 100644
--- a/modules/node/node.module
+++ b/modules/node/node.module
@@ -1683,7 +1683,7 @@ function node_search_admin() {
   );
   $form['content_ranking']['#theme'] = 'node_search_admin';
   $form['content_ranking']['info'] = array(
-    '#value' => '<em>' . t('The following numbers control which properties the content search should favor when ordering the results. Higher numbers mean more influence, zero means the property is ignored. Changing these numbers does not require the search index to be rebuilt. Changes take effect immediately.') . '</em>'
+    '#markup' => '<p><em>' . t('Influence is a numeric multiplier used in ordering search results. A higher number means the corresponding factor has more influence on search results; zero means the factor is ignored. Changing these numbers does not require the search index to be rebuilt. Changes take effect immediately.') . '</em></p>'
   );
 
   // Note: reversed to reflect that higher number = higher ranking.
@@ -1870,7 +1870,7 @@ function theme_node_search_admin($variables) {
 
   $output = drupal_render($form['info']);
 
-  $header = array(t('Factor'), t('Weight'));
+  $header = array(t('Factor'), t('Influence'));
   foreach (element_children($form['factors']) as $key) {
     $row = array();
     $row[] = $form['factors'][$key]['#title'];
@@ -3303,6 +3303,17 @@ function node_query_entity_field_access_alter(QueryAlterableInterface $query) {
 /**
  * Helper for node access functions.
  *
+ * Queries tagged with 'node_access' that are not against the {node} table
+ * should add the base table as metadata. For example:
+ * @code
+ *   $query
+ *     ->addTag('node_access')
+ *     ->addMetaData('base_table', 'taxonomy_index');
+ * @endcode
+ * If the query is not against the {node} table, an attempt is made to guess
+ * the table, but is not recommended to rely on this as it is deprecated and not
+ * allowed in Drupal 8. It is always safer to provide the table.
+ *
  * @param $query
  *   The query to add conditions to.
  * @param $type
diff --git a/modules/node/node.test b/modules/node/node.test
index 0479249..39dcb42 100644
--- a/modules/node/node.test
+++ b/modules/node/node.test
@@ -571,6 +571,8 @@ class NodeCreationTestCase extends DrupalWebTestCase {
     );
 
     try {
+      // An exception is generated by node_test_exception_node_insert() if the
+      // title is 'testing_transaction_exception'.
       node_save((object) $edit);
       $this->fail(t('Expected exception has not been thrown.'));
     }
@@ -1374,7 +1376,7 @@ class NodeSaveTestCase extends DrupalWebTestCase {
    * @see node_test_node_insert()
    */
   function testNodeSaveOnInsert() {
-    // node_test_node_insert() tiggers a save on insert if the title equals
+    // node_test_node_insert() triggers a save on insert if the title equals
     // 'new'.
     $node = $this->drupalCreateNode(array('title' => 'new'));
     $this->assertEqual($node->title, 'Node ' . $node->nid, 'Node saved on node insert.');
@@ -2444,6 +2446,35 @@ class NodeTokenReplaceTestCase extends DrupalWebTestCase {
       $output = token_replace($input, array('node' => $node), array('language' => $language, 'sanitize' => FALSE));
       $this->assertEqual($output, $expected, format_string('Unsanitized node token %token replaced.', array('%token' => $input)));
     }
+
+    // Repeat for a node without a summary.
+    $settings['body'] = array(LANGUAGE_NONE => array(array('value' => $this->randomName(32), 'summary' => '')));
+    $node = $this->drupalCreateNode($settings);
+
+    // Load node (without summary) so that the body and summary fields are
+    // structured properly.
+    $node = node_load($node->nid);
+    $instance = field_info_instance('node', 'body', $node->type);
+
+    // Generate and test sanitized token - use full body as expected value.
+    $tests = array();
+    $tests['[node:summary]'] = _text_sanitize($instance, $langcode, $node->body[$langcode][0], 'value');
+
+    // Test to make sure that we generated something for each token.
+    $this->assertFalse(in_array(0, array_map('strlen', $tests)), 'No empty tokens generated for node without a summary.');
+
+    foreach ($tests as $input => $expected) {
+      $output = token_replace($input, array('node' => $node), array('language' => $language));
+      $this->assertEqual($output, $expected, format_string('Sanitized node token %token replaced for node without a summary.', array('%token' => $input)));
+    }
+
+    // Generate and test unsanitized tokens.
+    $tests['[node:summary]'] = $node->body[$langcode][0]['value'];
+
+    foreach ($tests as $input => $expected) {
+      $output = token_replace($input, array('node' => $node), array('language' => $language, 'sanitize' => FALSE));
+      $this->assertEqual($output, $expected, format_string('Unsanitized node token %token replaced for node without a summary.', array('%token' => $input)));
+    }
   }
 }
 
diff --git a/modules/node/node.tokens.inc b/modules/node/node.tokens.inc
index e43db5e..e63c751 100644
--- a/modules/node/node.tokens.inc
+++ b/modules/node/node.tokens.inc
@@ -136,10 +136,29 @@ function node_tokens($type, $tokens, array $data = array(), array $options = arr
         case 'body':
         case 'summary':
           if ($items = field_get_items('node', $node, 'body', $language_code)) {
-            $column = ($name == 'body') ? 'value' : 'summary';
             $instance = field_info_instance('node', 'body', $node->type);
             $field_langcode = field_language('node', $node, 'body', $language_code);
-            $replacements[$original] = $sanitize ? _text_sanitize($instance, $field_langcode, $items[0], $column) : $items[0][$column];
+            // If the summary was requested and is not empty, use it.
+            if ($name == 'summary' && !empty($items[0]['summary'])) {
+              $output = $sanitize ? _text_sanitize($instance, $field_langcode, $items[0], 'summary') : $items[0]['summary'];
+            }
+            // Attempt to provide a suitable version of the 'body' field.
+            else {
+              $output = $sanitize ? _text_sanitize($instance, $field_langcode, $items[0], 'value') : $items[0]['value'];
+              // A summary was requested.
+              if ($name == 'summary') {
+                if (isset($instance['display']['teaser']['settings']['trim_length'])) {
+                  $trim_length = $instance['display']['teaser']['settings']['trim_length'];
+                }
+                else {
+                  // Use default value.
+                  $trim_length = NULL;
+                }
+                // Generate an optionally trimmed summary of the body field.
+                $output = text_summary($output, $instance['settings']['text_processing'] ? $items[0]['format'] : NULL, $trim_length);
+              }
+            }
+            $replacements[$original] = $output;
           }
           break;
 
diff --git a/modules/node/tests/node_access_test.info b/modules/node/tests/node_access_test.info
index 6742e8a..a221614 100644
--- a/modules/node/tests/node_access_test.info
+++ b/modules/node/tests/node_access_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/node/tests/node_test.info b/modules/node/tests/node_test.info
index 58bd6a9..5b28222 100644
--- a/modules/node/tests/node_test.info
+++ b/modules/node/tests/node_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/node/tests/node_test_exception.info b/modules/node/tests/node_test_exception.info
index 72a832f..92eba8f 100644
--- a/modules/node/tests/node_test_exception.info
+++ b/modules/node/tests/node_test_exception.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/openid/openid.info b/modules/openid/openid.info
index b917b29..b92aacd 100644
--- a/modules/openid/openid.info
+++ b/modules/openid/openid.info
@@ -5,8 +5,8 @@ package = Core
 core = 7.x
 files[] = openid.test
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/openid/tests/openid_test.info b/modules/openid/tests/openid_test.info
index a356dc4..b17175e 100644
--- a/modules/openid/tests/openid_test.info
+++ b/modules/openid/tests/openid_test.info
@@ -6,8 +6,8 @@ core = 7.x
 dependencies[] = openid
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/overlay/overlay.info b/modules/overlay/overlay.info
index fb8660f..e559572 100644
--- a/modules/overlay/overlay.info
+++ b/modules/overlay/overlay.info
@@ -4,8 +4,8 @@ package = Core
 version = VERSION
 core = 7.x
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/path/path.info b/modules/path/path.info
index 832307b..d4f5b55 100644
--- a/modules/path/path.info
+++ b/modules/path/path.info
@@ -6,8 +6,8 @@ core = 7.x
 files[] = path.test
 configure = admin/config/search/path
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/php/php.info b/modules/php/php.info
index c001f49..aa5f763 100644
--- a/modules/php/php.info
+++ b/modules/php/php.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 files[] = php.test
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/poll/poll.info b/modules/poll/poll.info
index cde15a3..fe99797 100644
--- a/modules/poll/poll.info
+++ b/modules/poll/poll.info
@@ -6,8 +6,8 @@ core = 7.x
 files[] = poll.test
 stylesheets[all][] = poll.css
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/profile/profile.info b/modules/profile/profile.info
index a4b684d..68a5f07 100644
--- a/modules/profile/profile.info
+++ b/modules/profile/profile.info
@@ -11,8 +11,8 @@ configure = admin/config/people/profile
 ; See user_system_info_alter().
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/rdf/rdf.info b/modules/rdf/rdf.info
index 626389c..dba2b8e 100644
--- a/modules/rdf/rdf.info
+++ b/modules/rdf/rdf.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 files[] = rdf.test
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/rdf/tests/rdf_test.info b/modules/rdf/tests/rdf_test.info
index 8c38d72..286b5cc 100644
--- a/modules/rdf/tests/rdf_test.info
+++ b/modules/rdf/tests/rdf_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/search/search.info b/modules/search/search.info
index 1c285a9..cdf9b20 100644
--- a/modules/search/search.info
+++ b/modules/search/search.info
@@ -8,8 +8,8 @@ files[] = search.test
 configure = admin/config/search/settings
 stylesheets[all][] = search.css
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/search/search.test b/modules/search/search.test
index 09c879b..19f4e55 100644
--- a/modules/search/search.test
+++ b/modules/search/search.test
@@ -11,6 +11,9 @@ define('SEARCH_TYPE', '_test_');
 define('SEARCH_TYPE_2', '_test2_');
 define('SEARCH_TYPE_JPN', '_test3_');
 
+/**
+ * Indexes content and queries it.
+ */
 class SearchMatchTestCase extends DrupalWebTestCase {
   public static function getInfo() {
     return array(
@@ -307,6 +310,9 @@ class SearchPageText extends DrupalWebTestCase {
   }
 }
 
+/**
+ * Indexes content and tests the advanced search form.
+ */
 class SearchAdvancedSearchForm extends DrupalWebTestCase {
   protected $node;
 
@@ -370,6 +376,9 @@ class SearchAdvancedSearchForm extends DrupalWebTestCase {
   }
 }
 
+/**
+ * Indexes content and tests ranking factors.
+ */
 class SearchRankingTestCase extends DrupalWebTestCase {
   public static function getInfo() {
     return array(
@@ -580,6 +589,9 @@ class SearchRankingTestCase extends DrupalWebTestCase {
   }
 }
 
+/**
+ * Tests the rendering of the search block.
+ */
 class SearchBlockTestCase extends DrupalWebTestCase {
   public static function getInfo() {
     return array(
@@ -727,7 +739,7 @@ class SearchCommentTestCase extends DrupalWebTestCase {
   public static function getInfo() {
     return array(
       'name' => 'Comment Search tests',
-      'description' => 'Verify text formats and filters used elsewhere.',
+      'description' => 'Test integration searching comments.',
       'group' => 'Search',
     );
   }
diff --git a/modules/search/tests/search_embedded_form.info b/modules/search/tests/search_embedded_form.info
index 0a608db..9f3d653 100644
--- a/modules/search/tests/search_embedded_form.info
+++ b/modules/search/tests/search_embedded_form.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/search/tests/search_extra_type.info b/modules/search/tests/search_extra_type.info
index 6c54d5d..c96e6ee 100644
--- a/modules/search/tests/search_extra_type.info
+++ b/modules/search/tests/search_extra_type.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/shortcut/shortcut.info b/modules/shortcut/shortcut.info
index a7af787..1ef4404 100644
--- a/modules/shortcut/shortcut.info
+++ b/modules/shortcut/shortcut.info
@@ -6,8 +6,8 @@ core = 7.x
 files[] = shortcut.test
 configure = admin/config/user-interface/shortcut
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/simpletest/drupal_web_test_case.php b/modules/simpletest/drupal_web_test_case.php
index d71b1e1..414a377 100644
--- a/modules/simpletest/drupal_web_test_case.php
+++ b/modules/simpletest/drupal_web_test_case.php
@@ -1145,7 +1145,7 @@ class DrupalWebTestCase extends DrupalTestCase {
   }
 
   /**
-   * Internal helper function; Create a role with specified permissions.
+   * Creates a role with specified permissions.
    *
    * @param $permissions
    *   Array of permission names to assign to role.
@@ -2294,6 +2294,14 @@ class DrupalWebTestCase extends DrupalTestCase {
     }
     $this->drupalSetContent($content);
     $this->drupalSetSettings($drupal_settings);
+
+    $verbose = 'AJAX POST request to: ' . $path;
+    $verbose .= '<br />AJAX callback path: ' . $ajax_path;
+    $verbose .= '<hr />Ending URL: ' . $this->getUrl();
+    $verbose .= '<hr />' . $this->content;
+
+    $this->verbose($verbose);
+
     return $return;
   }
 
diff --git a/modules/simpletest/simpletest.info b/modules/simpletest/simpletest.info
index 5a5e746..8c71aab 100644
--- a/modules/simpletest/simpletest.info
+++ b/modules/simpletest/simpletest.info
@@ -15,6 +15,7 @@ files[] = tests/bootstrap.test
 files[] = tests/cache.test
 files[] = tests/common.test
 files[] = tests/database_test.test
+files[] = tests/entity_crud.test
 files[] = tests/entity_crud_hook_test.test
 files[] = tests/entity_query.test
 files[] = tests/error.test
@@ -55,8 +56,8 @@ files[] = tests/upgrade/update.trigger.test
 files[] = tests/upgrade/update.field.test
 files[] = tests/upgrade/update.user.test
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/simpletest/tests/actions_loop_test.info b/modules/simpletest/tests/actions_loop_test.info
index ce5a3a4..a202dff 100644
--- a/modules/simpletest/tests/actions_loop_test.info
+++ b/modules/simpletest/tests/actions_loop_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/simpletest/tests/ajax_forms_test.info b/modules/simpletest/tests/ajax_forms_test.info
index 57d7632..b0e0b33 100644
--- a/modules/simpletest/tests/ajax_forms_test.info
+++ b/modules/simpletest/tests/ajax_forms_test.info
@@ -5,8 +5,8 @@ package = Testing
 version = VERSION
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/simpletest/tests/ajax_test.info b/modules/simpletest/tests/ajax_test.info
index 0d569b7..f464c09 100644
--- a/modules/simpletest/tests/ajax_test.info
+++ b/modules/simpletest/tests/ajax_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/simpletest/tests/batch_test.info b/modules/simpletest/tests/batch_test.info
index 521d2ab..4c00491 100644
--- a/modules/simpletest/tests/batch_test.info
+++ b/modules/simpletest/tests/batch_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/simpletest/tests/common.test b/modules/simpletest/tests/common.test
index 44eecdc..f6e03b0 100644
--- a/modules/simpletest/tests/common.test
+++ b/modules/simpletest/tests/common.test
@@ -1022,8 +1022,8 @@ class DrupalHTTPRequestTestCase extends DrupalWebTestCase {
     $result = drupal_http_request($auth);
 
     $this->drupalSetContent($result->data);
-    $this->assertRaw($username, '$_SERVER["PHP_AUTH_USER"] is passed correctly.');
-    $this->assertRaw($password, '$_SERVER["PHP_AUTH_PW"] is passed correctly.');
+    $this->assertRaw($username, 'Username is passed correctly.');
+    $this->assertRaw($password, 'Password is passed correctly.');
   }
 
   function testDrupalHTTPRequestRedirect() {
@@ -2785,3 +2785,28 @@ class ArrayDiffUnitTest extends DrupalUnitTestCase {
     $this->assertIdentical(drupal_array_diff_assoc_recursive($this->array1, $this->array2), $expected);
   }
 }
+
+/**
+ * Tests the functionality of drupal_get_query_array().
+ */
+class DrupalGetQueryArrayTestCase extends DrupalWebTestCase {
+
+  public static function getInfo() {
+    return array(
+      'name' => 'Query parsing using drupal_get_query_array()',
+      'description' => 'Tests that drupal_get_query_array() correctly parses query parameters.',
+      'group' => 'System',
+    );
+  }
+
+  /**
+   * Tests that drupal_get_query_array() correctly explodes query parameters.
+   */
+  public function testDrupalGetQueryArray() {
+    $url = "http://my.site.com/somepath?foo=/content/folder[@name='foo']/folder[@name='bar']";
+    $parsed = parse_url($url);
+    $result = drupal_get_query_array($parsed['query']);
+    $this->assertEqual($result['foo'], "/content/folder[@name='foo']/folder[@name='bar']", 'drupal_get_query_array() should only explode parameters on the first equals sign.');
+  }
+
+}
diff --git a/modules/simpletest/tests/common_test.info b/modules/simpletest/tests/common_test.info
index ab93552..51bd771 100644
--- a/modules/simpletest/tests/common_test.info
+++ b/modules/simpletest/tests/common_test.info
@@ -7,8 +7,8 @@ stylesheets[all][] = common_test.css
 stylesheets[print][] = common_test.print.css
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/simpletest/tests/common_test_cron_helper.info b/modules/simpletest/tests/common_test_cron_helper.info
index d842a29..7869526 100644
--- a/modules/simpletest/tests/common_test_cron_helper.info
+++ b/modules/simpletest/tests/common_test_cron_helper.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/simpletest/tests/database_test.info b/modules/simpletest/tests/database_test.info
index 3dd81dc..62b5933 100644
--- a/modules/simpletest/tests/database_test.info
+++ b/modules/simpletest/tests/database_test.info
@@ -5,8 +5,8 @@ package = Testing
 version = VERSION
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/simpletest/tests/database_test.test b/modules/simpletest/tests/database_test.test
index aa390bd..dba04b2 100644
--- a/modules/simpletest/tests/database_test.test
+++ b/modules/simpletest/tests/database_test.test
@@ -2622,6 +2622,52 @@ class DatabaseTaggingTestCase extends DatabaseTestCase {
   }
 
   /**
+   * Confirm that an extended query has a "tag" added to it.
+   */
+  function testExtenderHasTag() {
+    $query = db_select('test')
+      ->extend('SelectQueryExtender');
+    $query->addField('test', 'name');
+    $query->addField('test', 'age', 'age');
+
+    $query->addTag('test');
+
+    $this->assertTrue($query->hasTag('test'), 'hasTag() returned true.');
+    $this->assertFalse($query->hasTag('other'), 'hasTag() returned false.');
+  }
+
+  /**
+   * Test extended query tagging "has all of these tags" functionality.
+   */
+  function testExtenderHasAllTags() {
+    $query = db_select('test')
+      ->extend('SelectQueryExtender');
+    $query->addField('test', 'name');
+    $query->addField('test', 'age', 'age');
+
+    $query->addTag('test');
+    $query->addTag('other');
+
+    $this->assertTrue($query->hasAllTags('test', 'other'), 'hasAllTags() returned true.');
+    $this->assertFalse($query->hasAllTags('test', 'stuff'), 'hasAllTags() returned false.');
+  }
+
+  /**
+   * Test extended query tagging "has at least one of these tags" functionality.
+   */
+  function testExtenderHasAnyTag() {
+    $query = db_select('test')
+      ->extend('SelectQueryExtender');
+    $query->addField('test', 'name');
+    $query->addField('test', 'age', 'age');
+
+    $query->addTag('test');
+
+    $this->assertTrue($query->hasAnyTag('test', 'other'), 'hasAnyTag() returned true.');
+    $this->assertFalse($query->hasAnyTag('other', 'stuff'), 'hasAnyTag() returned false.');
+  }
+
+  /**
    * Test that we can attach meta data to a query object.
    *
    * This is how we pass additional context to alter hooks.
@@ -3091,6 +3137,15 @@ class DatabaseTemporaryQueryTestCase extends DrupalWebTestCase {
 
     $this->assertEqual($this->countTableRows($table_name_system), $this->countTableRows("system"), 'A temporary table was created successfully in this request.');
     $this->assertEqual($this->countTableRows($table_name_users), $this->countTableRows("users"), 'A second temporary table was created successfully in this request.');
+
+    // Check that leading whitespace and comments do not cause problems
+    // in the modified query.
+    $sql = "
+      -- Let's select some rows into a temporary table
+      SELECT name FROM {test}
+    ";
+    $table_name_test = db_query_temporary($sql, array());
+    $this->assertEqual($this->countTableRows($table_name_test), $this->countTableRows('test'), 'Leading white space and comments do not interfere with temporary table creation.');
   }
 }
 
diff --git a/modules/simpletest/tests/drupal_system_listing_compatible_test/drupal_system_listing_compatible_test.info b/modules/simpletest/tests/drupal_system_listing_compatible_test/drupal_system_listing_compatible_test.info
index 9fed28b..39fd955 100644
--- a/modules/simpletest/tests/drupal_system_listing_compatible_test/drupal_system_listing_compatible_test.info
+++ b/modules/simpletest/tests/drupal_system_listing_compatible_test/drupal_system_listing_compatible_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/simpletest/tests/drupal_system_listing_incompatible_test/drupal_system_listing_incompatible_test.info b/modules/simpletest/tests/drupal_system_listing_incompatible_test/drupal_system_listing_incompatible_test.info
index d41a0ab..87ed7d4 100644
--- a/modules/simpletest/tests/drupal_system_listing_incompatible_test/drupal_system_listing_incompatible_test.info
+++ b/modules/simpletest/tests/drupal_system_listing_incompatible_test/drupal_system_listing_incompatible_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/simpletest/tests/entity_cache_test.info b/modules/simpletest/tests/entity_cache_test.info
index 21b07a3..d9ecc8b 100644
--- a/modules/simpletest/tests/entity_cache_test.info
+++ b/modules/simpletest/tests/entity_cache_test.info
@@ -6,8 +6,8 @@ core = 7.x
 dependencies[] = entity_cache_test_dependency
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/simpletest/tests/entity_cache_test_dependency.info b/modules/simpletest/tests/entity_cache_test_dependency.info
index 1963dc9..0751b37 100644
--- a/modules/simpletest/tests/entity_cache_test_dependency.info
+++ b/modules/simpletest/tests/entity_cache_test_dependency.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/simpletest/tests/entity_crud.test b/modules/simpletest/tests/entity_crud.test
new file mode 100644
index 0000000..be15977
--- /dev/null
+++ b/modules/simpletest/tests/entity_crud.test
@@ -0,0 +1,49 @@
+<?php
+
+/**
+ * @file
+ * Tests for the Entity CRUD API.
+ */
+
+/**
+ * Tests the entity_load() function.
+ */
+class EntityLoadTestCase extends DrupalWebTestCase {
+  protected $profile = 'testing';
+
+  public static function getInfo() {
+    return array(
+      'name' => 'Entity loading',
+      'description' => 'Tests the entity_load() function.',
+      'group' => 'Entity API',
+    );
+  }
+
+  /**
+   * Tests the functionality for loading entities matching certain conditions.
+   */
+  public function testEntityLoadConditions() {
+    // Create a few nodes. One of them is given an edge-case title of "Array",
+    // because loading entities by an array of conditions is subject to PHP
+    // array-to-string conversion issues and we want to test those.
+    $node_1 = $this->drupalCreateNode(array('title' => 'Array'));
+    $node_2 = $this->drupalCreateNode(array('title' => 'Node 2'));
+    $node_3 = $this->drupalCreateNode(array('title' => 'Node 3'));
+
+    // Load all entities so that they are statically cached.
+    $all_nodes = entity_load('node', FALSE);
+
+    // Check that the first node can be loaded by title.
+    $nodes_loaded = entity_load('node', FALSE, array('title' => 'Array'));
+    $this->assertEqual(array_keys($nodes_loaded), array($node_1->nid));
+
+    // Check that the second and third nodes can be loaded by title using an
+    // array of conditions, and that the first node is not loaded from the
+    // cache along with them.
+    $nodes_loaded = entity_load('node', FALSE, array('title' => array('Node 2', 'Node 3')));
+    ksort($nodes_loaded);
+    $this->assertEqual(array_keys($nodes_loaded), array($node_2->nid, $node_3->nid));
+    $this->assertIdentical($nodes_loaded[$node_2->nid], $all_nodes[$node_2->nid], 'Loaded node 2 is identical to cached node.');
+    $this->assertIdentical($nodes_loaded[$node_3->nid], $all_nodes[$node_3->nid], 'Loaded node 3 is identical to cached node.');
+  }
+}
diff --git a/modules/simpletest/tests/entity_crud_hook_test.info b/modules/simpletest/tests/entity_crud_hook_test.info
index 09ac3bc..c2b90c7 100644
--- a/modules/simpletest/tests/entity_crud_hook_test.info
+++ b/modules/simpletest/tests/entity_crud_hook_test.info
@@ -5,8 +5,8 @@ package = Testing
 version = VERSION
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/simpletest/tests/entity_query_access_test.info b/modules/simpletest/tests/entity_query_access_test.info
index d9427db..7039eea 100644
--- a/modules/simpletest/tests/entity_query_access_test.info
+++ b/modules/simpletest/tests/entity_query_access_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/simpletest/tests/error_test.info b/modules/simpletest/tests/error_test.info
index de6c314..c42bc9e 100644
--- a/modules/simpletest/tests/error_test.info
+++ b/modules/simpletest/tests/error_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/simpletest/tests/file_test.info b/modules/simpletest/tests/file_test.info
index 3ef357b..771b3ca 100644
--- a/modules/simpletest/tests/file_test.info
+++ b/modules/simpletest/tests/file_test.info
@@ -6,8 +6,8 @@ core = 7.x
 files[] = file_test.module
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/simpletest/tests/filter_test.info b/modules/simpletest/tests/filter_test.info
index c7a2cc1..21110a3 100644
--- a/modules/simpletest/tests/filter_test.info
+++ b/modules/simpletest/tests/filter_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/simpletest/tests/form_test.info b/modules/simpletest/tests/form_test.info
index cab235c..b0303de 100644
--- a/modules/simpletest/tests/form_test.info
+++ b/modules/simpletest/tests/form_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/simpletest/tests/image_test.info b/modules/simpletest/tests/image_test.info
index ddf7a86..f46c00e 100644
--- a/modules/simpletest/tests/image_test.info
+++ b/modules/simpletest/tests/image_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/simpletest/tests/menu_test.info b/modules/simpletest/tests/menu_test.info
index 63cb261..c656a1b 100644
--- a/modules/simpletest/tests/menu_test.info
+++ b/modules/simpletest/tests/menu_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/simpletest/tests/module_test.info b/modules/simpletest/tests/module_test.info
index 8c6b05c..0d39525 100644
--- a/modules/simpletest/tests/module_test.info
+++ b/modules/simpletest/tests/module_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/simpletest/tests/path_test.info b/modules/simpletest/tests/path_test.info
index d01313c..ecc90be 100644
--- a/modules/simpletest/tests/path_test.info
+++ b/modules/simpletest/tests/path_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/simpletest/tests/psr_0_test/psr_0_test.info b/modules/simpletest/tests/psr_0_test/psr_0_test.info
index ddbf2ca..187a2cc 100644
--- a/modules/simpletest/tests/psr_0_test/psr_0_test.info
+++ b/modules/simpletest/tests/psr_0_test/psr_0_test.info
@@ -5,8 +5,8 @@ core = 7.x
 hidden = TRUE
 package = Testing
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/simpletest/tests/requirements1_test.info b/modules/simpletest/tests/requirements1_test.info
index 8bc1454..509bddc 100644
--- a/modules/simpletest/tests/requirements1_test.info
+++ b/modules/simpletest/tests/requirements1_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/simpletest/tests/requirements2_test.info b/modules/simpletest/tests/requirements2_test.info
index 341e212..a79154f 100644
--- a/modules/simpletest/tests/requirements2_test.info
+++ b/modules/simpletest/tests/requirements2_test.info
@@ -7,8 +7,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/simpletest/tests/session_test.info b/modules/simpletest/tests/session_test.info
index fc974e1..a4079fc 100644
--- a/modules/simpletest/tests/session_test.info
+++ b/modules/simpletest/tests/session_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/simpletest/tests/system_dependencies_test.info b/modules/simpletest/tests/system_dependencies_test.info
index 29f49ff..f43455e 100644
--- a/modules/simpletest/tests/system_dependencies_test.info
+++ b/modules/simpletest/tests/system_dependencies_test.info
@@ -6,8 +6,8 @@ core = 7.x
 hidden = TRUE
 dependencies[] = _missing_dependency
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/simpletest/tests/system_incompatible_core_version_dependencies_test.info b/modules/simpletest/tests/system_incompatible_core_version_dependencies_test.info
index 6011bed..e8ffcf2 100644
--- a/modules/simpletest/tests/system_incompatible_core_version_dependencies_test.info
+++ b/modules/simpletest/tests/system_incompatible_core_version_dependencies_test.info
@@ -6,8 +6,8 @@ core = 7.x
 hidden = TRUE
 dependencies[] = system_incompatible_core_version_test
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/simpletest/tests/system_incompatible_core_version_test.info b/modules/simpletest/tests/system_incompatible_core_version_test.info
index 36d5a74..4df3730 100644
--- a/modules/simpletest/tests/system_incompatible_core_version_test.info
+++ b/modules/simpletest/tests/system_incompatible_core_version_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 5.x
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/simpletest/tests/system_incompatible_module_version_dependencies_test.info b/modules/simpletest/tests/system_incompatible_module_version_dependencies_test.info
index ac034cf..7ec488b 100644
--- a/modules/simpletest/tests/system_incompatible_module_version_dependencies_test.info
+++ b/modules/simpletest/tests/system_incompatible_module_version_dependencies_test.info
@@ -7,8 +7,8 @@ hidden = TRUE
 ; system_incompatible_module_version_test declares version 1.0
 dependencies[] = system_incompatible_module_version_test (>2.0)
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/simpletest/tests/system_incompatible_module_version_test.info b/modules/simpletest/tests/system_incompatible_module_version_test.info
index c1bf6ed..cc61324 100644
--- a/modules/simpletest/tests/system_incompatible_module_version_test.info
+++ b/modules/simpletest/tests/system_incompatible_module_version_test.info
@@ -5,8 +5,8 @@ version = 1.0
 core = 7.x
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/simpletest/tests/system_test.info b/modules/simpletest/tests/system_test.info
index 2fea639..f55a689 100644
--- a/modules/simpletest/tests/system_test.info
+++ b/modules/simpletest/tests/system_test.info
@@ -6,8 +6,8 @@ core = 7.x
 files[] = system_test.module
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/simpletest/tests/system_test.module b/modules/simpletest/tests/system_test.module
index 8cb0e83..2eda351 100644
--- a/modules/simpletest/tests/system_test.module
+++ b/modules/simpletest/tests/system_test.module
@@ -114,8 +114,23 @@ function system_test_sleep($seconds) {
 }
 
 function system_test_basic_auth_page() {
-  $output = t('$_SERVER[\'PHP_AUTH_USER\'] is @username.', array('@username' => $_SERVER['PHP_AUTH_USER']));
-  $output .= t('$_SERVER[\'PHP_AUTH_PW\'] is @password.', array('@password' => $_SERVER['PHP_AUTH_PW']));
+  // The Authorization HTTP header is forwarded via Drupal's .htaccess file even
+  // for PHP CGI SAPIs.
+  if (isset($_SERVER['HTTP_AUTHORIZATION'])) {
+    $authorization_header = $_SERVER['HTTP_AUTHORIZATION'];
+  }
+  // If using CGI on Apache with mod_rewrite, the forwarded HTTP header appears
+  // in the redirected HTTP headers. See
+  // https://github.com/symfony/symfony/blob/master/src/Symfony/Component/HttpFoundation/ServerBag.php#L61
+  elseif (isset($_SERVER['REDIRECT_HTTP_AUTHORIZATION'])) {
+    $authorization_header = $_SERVER['REDIRECT_HTTP_AUTHORIZATION'];
+  }
+  // Resemble PHP_AUTH_USER and PHP_AUTH_PW for a Basic authentication from
+  // the HTTP_AUTHORIZATION header. See
+  // http://www.php.net/manual/features.http-auth.php
+  list($user, $pw) = explode(':', base64_decode(substr($authorization_header, 6)));
+  $output = t('Username is @username.', array('@username' => $user));
+  $output .= t('Password is @password.', array('@password' => $pw));
   return $output;
 }
 
diff --git a/modules/simpletest/tests/taxonomy_test.info b/modules/simpletest/tests/taxonomy_test.info
index 28655e4..293cb1f 100644
--- a/modules/simpletest/tests/taxonomy_test.info
+++ b/modules/simpletest/tests/taxonomy_test.info
@@ -6,8 +6,8 @@ core = 7.x
 hidden = TRUE
 dependencies[] = taxonomy
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/simpletest/tests/theme_test.info b/modules/simpletest/tests/theme_test.info
index f3e7ae1..d23d605 100644
--- a/modules/simpletest/tests/theme_test.info
+++ b/modules/simpletest/tests/theme_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/simpletest/tests/themes/test_basetheme/test_basetheme.info b/modules/simpletest/tests/themes/test_basetheme/test_basetheme.info
index 5b484e6..6eb3e0e 100644
--- a/modules/simpletest/tests/themes/test_basetheme/test_basetheme.info
+++ b/modules/simpletest/tests/themes/test_basetheme/test_basetheme.info
@@ -6,8 +6,8 @@ hidden = TRUE
 settings[basetheme_only] = base theme value
 settings[subtheme_override] = base theme value
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/simpletest/tests/themes/test_subtheme/test_subtheme.info b/modules/simpletest/tests/themes/test_subtheme/test_subtheme.info
index f4b6fb3..8163e62 100644
--- a/modules/simpletest/tests/themes/test_subtheme/test_subtheme.info
+++ b/modules/simpletest/tests/themes/test_subtheme/test_subtheme.info
@@ -6,8 +6,8 @@ hidden = TRUE
 
 settings[subtheme_override] = subtheme value
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/simpletest/tests/themes/test_theme/test_theme.info b/modules/simpletest/tests/themes/test_theme/test_theme.info
index e80435c..6edff7b 100644
--- a/modules/simpletest/tests/themes/test_theme/test_theme.info
+++ b/modules/simpletest/tests/themes/test_theme/test_theme.info
@@ -17,8 +17,8 @@ stylesheets[all][] = system.base.css
 
 settings[theme_test_setting] = default value
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/simpletest/tests/update_script_test.info b/modules/simpletest/tests/update_script_test.info
index aec438b..49f5c90 100644
--- a/modules/simpletest/tests/update_script_test.info
+++ b/modules/simpletest/tests/update_script_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/simpletest/tests/update_test_1.info b/modules/simpletest/tests/update_test_1.info
index 31146f9..d70f215 100644
--- a/modules/simpletest/tests/update_test_1.info
+++ b/modules/simpletest/tests/update_test_1.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/simpletest/tests/update_test_2.info b/modules/simpletest/tests/update_test_2.info
index 31146f9..d70f215 100644
--- a/modules/simpletest/tests/update_test_2.info
+++ b/modules/simpletest/tests/update_test_2.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/simpletest/tests/update_test_3.info b/modules/simpletest/tests/update_test_3.info
index 31146f9..d70f215 100644
--- a/modules/simpletest/tests/update_test_3.info
+++ b/modules/simpletest/tests/update_test_3.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/simpletest/tests/url_alter_test.info b/modules/simpletest/tests/url_alter_test.info
index 98ee98d..f4611d4 100644
--- a/modules/simpletest/tests/url_alter_test.info
+++ b/modules/simpletest/tests/url_alter_test.info
@@ -5,8 +5,8 @@ package = Testing
 version = VERSION
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/simpletest/tests/xmlrpc_test.info b/modules/simpletest/tests/xmlrpc_test.info
index 2f95ed5..3a641f4 100644
--- a/modules/simpletest/tests/xmlrpc_test.info
+++ b/modules/simpletest/tests/xmlrpc_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/statistics/statistics.info b/modules/statistics/statistics.info
index efb778d..df51af2 100644
--- a/modules/statistics/statistics.info
+++ b/modules/statistics/statistics.info
@@ -6,8 +6,8 @@ core = 7.x
 files[] = statistics.test
 configure = admin/config/system/statistics
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/syslog/syslog.info b/modules/syslog/syslog.info
index a8340f9..54c246b 100644
--- a/modules/syslog/syslog.info
+++ b/modules/syslog/syslog.info
@@ -6,8 +6,8 @@ core = 7.x
 files[] = syslog.test
 configure = admin/config/development/logging
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/system/form.api.php b/modules/system/form.api.php
new file mode 100644
index 0000000..3cfec86
--- /dev/null
+++ b/modules/system/form.api.php
@@ -0,0 +1,126 @@
+<?php
+
+/**
+ * @file
+ * Callbacks provided by the form system.
+ */
+
+/**
+ * @addtogroup callbacks
+ * @{
+ */
+
+/**
+ * Perform a single batch operation.
+ *
+ * Callback for batch_set().
+ *
+ * @param $MULTIPLE_PARAMS
+ *   Additional parameters specific to the batch. These are specified in the
+ *   array passed to batch_set().
+ * @param $context
+ *   The batch context array, passed by reference. This contains the following
+ *   properties:
+ *   - 'finished': A float number between 0 and 1 informing the processing
+ *     engine of the completion level for the operation. 1 (or no value
+ *     explicitly set) means the operation is finished: the operation will not
+ *     be called again, and execution passes to the next operation or the
+ *     callback_batch_finished() implementation. Any other value causes this
+ *     operation to be called again; however it should be noted that the value
+ *     set here does not persist between executions of this callback: each time
+ *     it is set to 1 by default by the batch system.
+ *   - 'sandbox': This may be used by operations to persist data between
+ *     successive calls to the current operation. Any values set in
+ *     $context['sandbox'] will be there the next time this function is called
+ *     for the current operation. For example, an operation may wish to store a
+ *     pointer in a file or an offset for a large query. The 'sandbox' array key
+ *     is not initially set when this callback is first called, which makes it
+ *     useful for determining whether it is the first call of the callback or
+ *     not:
+ *     @code
+ *       if (empty($context['sandbox'])) {
+ *         // Perform set-up steps here.
+ *       }
+ *     @endcode
+ *     The values in the sandbox are stored and updated in the database between
+ *     http requests until the batch finishes processing. This avoids problems
+ *     if the user navigates away from the page before the batch finishes.
+ *   - 'message': A text message displayed in the progress page.
+ *   - 'results': The array of results gathered so far by the batch processing.
+ *     This array is highly useful for passing data between operations. After
+ *     all operations have finished, this is passed to callback_batch_finished()
+ *     where results may be referenced to display information to the end-user,
+ *     such as how many total items were processed.
+ */
+function callback_batch_operation($MULTIPLE_PARAMS, &$context) {
+  if (!isset($context['sandbox']['progress'])) {
+    $context['sandbox']['progress'] = 0;
+    $context['sandbox']['current_node'] = 0;
+    $context['sandbox']['max'] = db_query('SELECT COUNT(DISTINCT nid) FROM {node}')->fetchField();
+  }
+
+  // For this example, we decide that we can safely process
+  // 5 nodes at a time without a timeout.
+  $limit = 5;
+
+  // With each pass through the callback, retrieve the next group of nids.
+  $result = db_query_range("SELECT nid FROM {node} WHERE nid > %d ORDER BY nid ASC", $context['sandbox']['current_node'], 0, $limit);
+  while ($row = db_fetch_array($result)) {
+
+    // Here we actually perform our processing on the current node.
+    $node = node_load($row['nid'], NULL, TRUE);
+    $node->value1 = $options1;
+    $node->value2 = $options2;
+    node_save($node);
+
+    // Store some result for post-processing in the finished callback.
+    $context['results'][] = check_plain($node->title);
+
+    // Update our progress information.
+    $context['sandbox']['progress']++;
+    $context['sandbox']['current_node'] = $node->nid;
+    $context['message'] = t('Now processing %node', array('%node' => $node->title));
+  }
+
+  // Inform the batch engine that we are not finished,
+  // and provide an estimation of the completion level we reached.
+  if ($context['sandbox']['progress'] != $context['sandbox']['max']) {
+    $context['finished'] = $context['sandbox']['progress'] / $context['sandbox']['max'];
+  }
+}
+
+/**
+ * Complete a batch process.
+ *
+ * Callback for batch_set().
+ *
+ * This callback may be specified in a batch to perform clean-up operations, or
+ * to analyze the results of the batch operations.
+ *
+ * @param $success
+ *   A boolean indicating whether the batch has completed successfully.
+ * @param $results
+ *   The value set in $context['results'] by callback_batch_operation().
+ * @param $operations
+ *   If $success is FALSE, contains the operations that remained unprocessed.
+ */
+function callback_batch_finished($success, $results, $operations) {
+  if ($success) {
+    // Here we do something meaningful with the results.
+    $message = t("!count items were processed.", array(
+      '!count' => count($results),
+      ));
+    $message .= theme('item_list', array('items' => $results));
+    drupal_set_message($message);
+  }
+  else {
+    // An error occurred.
+    // $operations contains the operations that remained unprocessed.
+    $error_operation = reset($operations);
+    $message = t('An error occurred while processing %error_operation with arguments: @arguments', array(
+      '%error_operation' => $error_operation[0],
+      '@arguments' => print_r($error_operation[1], TRUE)
+    ));
+    drupal_set_message($message, 'error');
+  }
+}
diff --git a/modules/system/image.gd.inc b/modules/system/image.gd.inc
index 91c0b05..d9035e4 100644
--- a/modules/system/image.gd.inc
+++ b/modules/system/image.gd.inc
@@ -56,13 +56,8 @@ function image_gd_settings_validate($form, &$form_state) {
  *   A boolean indicating if the GD toolkit is available on this machine.
  */
 function image_gd_check_settings() {
-  if ($check = get_extension_funcs('gd')) {
-    if (in_array('imagegd2', $check)) {
-      // GD2 support is available.
-      return TRUE;
-    }
-  }
-  return FALSE;
+  // GD2 support is available.
+  return function_exists('imagegd2');
 }
 
 /**
@@ -346,7 +341,7 @@ function image_gd_create_tmp(stdClass $image, $width, $height) {
  */
 function image_gd_get_info(stdClass $image) {
   $details = FALSE;
-  $data = getimagesize($image->source);
+  $data = @getimagesize($image->source);
 
   if (isset($data) && is_array($data)) {
     $extensions = array('1' => 'gif', '2' => 'jpg', '3' => 'png');
diff --git a/modules/system/system.admin.inc b/modules/system/system.admin.inc
index 465fd9f..c1e81f0 100644
--- a/modules/system/system.admin.inc
+++ b/modules/system/system.admin.inc
@@ -995,22 +995,28 @@ function _system_modules_build_row($info, $extra) {
   $status_short = '';
   $status_long = '';
 
+  // Initialize empty arrays of long and short reasons explaining why the
+  // module is incompatible.
+  // Add each reason as a separate element in both the arrays.
+  $reasons_short = array();
+  $reasons_long = array();
+
   // Check the core compatibility.
   if (!isset($info['core']) || $info['core'] != DRUPAL_CORE_COMPATIBILITY) {
     $compatible = FALSE;
-    $status_short .= t('Incompatible with this version of Drupal core.');
-    $status_long .= t('This version is not compatible with Drupal !core_version and should be replaced.', array('!core_version' => DRUPAL_CORE_COMPATIBILITY));
+    $reasons_short[] = t('Incompatible with this version of Drupal core.');
+    $reasons_long[] = t('This version is not compatible with Drupal !core_version and should be replaced.', array('!core_version' => DRUPAL_CORE_COMPATIBILITY));
   }
 
   // Ensure this module is compatible with the currently installed version of PHP.
   if (version_compare(phpversion(), $info['php']) < 0) {
     $compatible = FALSE;
-    $status_short .= t('Incompatible with this version of PHP');
+    $reasons_short[] = t('Incompatible with this version of PHP');
     $php_required = $info['php'];
     if (substr_count($info['php'], '.') < 2) {
       $php_required .= '.*';
     }
-    $status_long .= t('This module requires PHP version @php_required and is incompatible with PHP version !php_version.', array('@php_required' => $php_required, '!php_version' => phpversion()));
+    $reasons_long[] = t('This module requires PHP version @php_required and is incompatible with PHP version !php_version.', array('@php_required' => $php_required, '!php_version' => phpversion()));
   }
 
   // If this module is compatible, present a checkbox indicating
@@ -1026,6 +1032,8 @@ function _system_modules_build_row($info, $extra) {
     }
   }
   else {
+    $status_short = implode(' ', $reasons_short);
+    $status_long = implode(' ', $reasons_long);
     $form['enable'] = array(
       '#markup' =>  theme('image', array('path' => 'misc/watchdog-error.png', 'alt' => $status_short, 'title' => $status_short)),
     );
diff --git a/modules/system/system.api.php b/modules/system/system.api.php
index f54078b..fbcb173 100644
--- a/modules/system/system.api.php
+++ b/modules/system/system.api.php
@@ -875,7 +875,7 @@ function hook_css_alter(&$css) {
  *
  * @see ajax_render()
  */
-function hook_ajax_render_alter($commands) {
+function hook_ajax_render_alter(&$commands) {
   // Inject any new status messages into the content area.
   $commands[] = ajax_command_prepend('#block-system-main .content', theme('status_messages'));
 }
diff --git a/modules/system/system.info b/modules/system/system.info
index f5227d2..79b57d4 100644
--- a/modules/system/system.info
+++ b/modules/system/system.info
@@ -12,8 +12,8 @@ files[] = system.test
 required = TRUE
 configure = admin/config/system
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/system/system.module b/modules/system/system.module
index eada9ff..d4f3bc4 100644
--- a/modules/system/system.module
+++ b/modules/system/system.module
@@ -3422,30 +3422,32 @@ function system_image_toolkits() {
 /**
  * Attempts to get a file using drupal_http_request and to store it locally.
  *
- * @param $url
+ * @param string $url
  *   The URL of the file to grab.
- *
- * @param $destination
+ * @param string $destination
  *   Stream wrapper URI specifying where the file should be placed. If a
  *   directory path is provided, the file is saved into that directory under
  *   its original name. If the path contains a filename as well, that one will
  *   be used instead.
  *   If this value is omitted, the site's default files scheme will be used,
  *   usually "public://".
- *
- * @param $managed boolean
+ * @param bool $managed
  *   If this is set to TRUE, the file API hooks will be invoked and the file is
  *   registered in the database.
- *
- * @param $replace boolean
+ * @param int $replace
  *   Replace behavior when the destination file already exists:
  *   - FILE_EXISTS_REPLACE: Replace the existing file.
  *   - FILE_EXISTS_RENAME: Append _{incrementing number} until the filename is
  *     unique.
  *   - FILE_EXISTS_ERROR: Do nothing and return FALSE.
  *
- * @return
- *   On success the location the file was saved to, FALSE on failure.
+ * @return mixed
+ *   One of these possibilities:
+ *   - If it succeeds and $managed is FALSE, the location where the file was
+ *     saved.
+ *   - If it succeeds and $managed is TRUE, a \Drupal\file\FileInterface
+ *     object which describes the file.
+ *   - If it fails, FALSE.
  */
 function system_retrieve_file($url, $destination = NULL, $managed = FALSE, $replace = FILE_EXISTS_RENAME) {
   $parsed_url = parse_url($url);
diff --git a/modules/system/system.test b/modules/system/system.test
index f4fb047..cae5cc7 100644
--- a/modules/system/system.test
+++ b/modules/system/system.test
@@ -867,6 +867,44 @@ class CronRunTestCase extends DrupalWebTestCase {
   }
 }
 
+/**
+ * Test execution of the cron queue.
+ */
+class CronQueueTestCase extends DrupalWebTestCase {
+  /**
+   * Implement getInfo().
+   */
+  public static function getInfo() {
+    return array(
+      'name' => 'Cron queue functionality',
+      'description' => 'Tests the cron queue runner.',
+      'group' => 'System'
+    );
+  }
+
+  function setUp() {
+    parent::setUp(array('common_test', 'common_test_cron_helper'));
+  }
+
+  /**
+   * Tests that exceptions thrown by workers are handled properly.
+   */
+  function testExceptions() {
+    $queue = DrupalQueue::get('cron_queue_test_exception');
+
+    // Enqueue an item for processing.
+    $queue->createItem(array($this->randomName() => $this->randomName()));
+
+    // Run cron; the worker for this queue should throw an exception and handle
+    // it.
+    $this->cronRun();
+
+    // The item should be left in the queue.
+    $this->assertEqual($queue->numberOfItems(), 1, 'Failing item still in the queue after throwing an exception.');
+  }
+
+}
+
 class AdminMetaTagTestCase extends DrupalWebTestCase {
   /**
    * Implement getInfo().
diff --git a/modules/system/tests/cron_queue_test.info b/modules/system/tests/cron_queue_test.info
new file mode 100644
index 0000000..da0984a
--- /dev/null
+++ b/modules/system/tests/cron_queue_test.info
@@ -0,0 +1,12 @@
+name = Cron Queue test
+description = 'Support module for the cron queue runner.'
+package = Testing
+version = VERSION
+core = 7.x
+hidden = TRUE
+
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
+project = "drupal"
+datestamp = "1399522731"
+
diff --git a/modules/system/tests/cron_queue_test.module b/modules/system/tests/cron_queue_test.module
new file mode 100644
index 0000000..e95c6b6
--- /dev/null
+++ b/modules/system/tests/cron_queue_test.module
@@ -0,0 +1,15 @@
+<?php
+
+/**
+ * Implements hook_cron_queue_info().
+ */
+function cron_queue_test_cron_queue_info() {
+  $queues['cron_queue_test_exception'] = array(
+    'worker callback' => 'cron_queue_test_exception',
+  );
+  return $queues;
+}
+
+function cron_queue_test_exception($item) {
+  throw new Exception('That is not supposed to happen.');
+}
diff --git a/modules/taxonomy/taxonomy.info b/modules/taxonomy/taxonomy.info
index f63cb43..d8dcd98 100644
--- a/modules/taxonomy/taxonomy.info
+++ b/modules/taxonomy/taxonomy.info
@@ -8,8 +8,8 @@ files[] = taxonomy.module
 files[] = taxonomy.test
 configure = admin/structure/taxonomy
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/taxonomy/taxonomy.install b/modules/taxonomy/taxonomy.install
index e3603e1..ebd0084 100644
--- a/modules/taxonomy/taxonomy.install
+++ b/modules/taxonomy/taxonomy.install
@@ -903,13 +903,34 @@ function taxonomy_update_7010() {
 /**
  * Drop unpublished nodes from the index.
  */
-function taxonomy_update_7011() {
-  $nids = db_query('SELECT nid from {node} WHERE status = :status', array(':status' => NODE_NOT_PUBLISHED))->fetchCol();
+function taxonomy_update_7011(&$sandbox) {
+  // Initialize information needed by the batch update system.
+  if (!isset($sandbox['progress'])) {
+    $sandbox['progress'] = 0;
+    $sandbox['max'] = db_query('SELECT COUNT(DISTINCT n.nid) FROM {node} n INNER JOIN {taxonomy_index} t ON n.nid = t.nid WHERE n.status = :status', array(':status' => NODE_NOT_PUBLISHED))->fetchField();
+    // If there's no data, don't bother with the extra work.
+    if (empty($sandbox['max'])) {
+      return;
+    }
+  }
+
+  // Process records in groups of 5000.
+  $limit = 5000;
+  $nids = db_query_range('SELECT DISTINCT n.nid FROM {node} n INNER JOIN {taxonomy_index} t ON n.nid = t.nid WHERE n.status = :status', 0, $limit, array(':status' => NODE_NOT_PUBLISHED))->fetchCol();
   if (!empty($nids)) {
     db_delete('taxonomy_index')
       ->condition('nid', $nids)
       ->execute();
   }
+
+  // Update our progress information for the batch update.
+  $sandbox['progress'] += $limit;
+
+  // Indicate our current progress to the batch update system, if the update is
+  // not yet complete.
+  if ($sandbox['progress'] < $sandbox['max']) {
+    $sandbox['#finished'] = $sandbox['progress'] / $sandbox['max'];
+  }
 }
 
 /**
diff --git a/modules/taxonomy/taxonomy.module b/modules/taxonomy/taxonomy.module
index 7ad28e9..4191146 100644
--- a/modules/taxonomy/taxonomy.module
+++ b/modules/taxonomy/taxonomy.module
@@ -457,7 +457,12 @@ function taxonomy_vocabulary_save($vocabulary) {
 }
 
 /**
- * Delete a vocabulary.
+ * Deletes a vocabulary.
+ *
+ * This will update all Taxonomy fields so that they don't reference the
+ * deleted vocabulary. It also will delete fields that have no remaining
+ * vocabulary references. All taxonomy terms of the deleted vocabulary
+ * will be deleted as well.
  *
  * @param $vid
  *   A vocabulary ID.
@@ -748,7 +753,7 @@ function taxonomy_term_delete($tid) {
  * @param term
  *   A taxonomy term object.
  * @return
- *   A $page element suitable for use by drupal_page_render().
+ *   A $page element suitable for use by drupal_render().
  */
 function taxonomy_term_show($term) {
   return taxonomy_term_view_multiple(array($term->tid => $term), 'full');
diff --git a/modules/taxonomy/taxonomy.test b/modules/taxonomy/taxonomy.test
index 665f9ae..fdf354b 100644
--- a/modules/taxonomy/taxonomy.test
+++ b/modules/taxonomy/taxonomy.test
@@ -690,15 +690,20 @@ class TaxonomyTermTestCase extends TaxonomyWebTestCase {
       $term_objects[$key] = reset($term_objects[$key]);
     }
 
+    // Test editing the node.
+    $node = $this->drupalGetNodeByTitle($edit["title"]);
+    $this->drupalPost('node/' . $node->nid . '/edit', $edit, t('Save'));
+    foreach ($terms as $term) {
+      $this->assertText($term, 'The term was retained after edit and still appears on the node page.');
+    }
+
     // Delete term 1.
     $this->drupalPost('taxonomy/term/' . $term_objects['term1']->tid . '/edit', array(), t('Delete'));
     $this->drupalPost(NULL, NULL, t('Delete'));
     $term_names = array($term_objects['term2']->name, $term_objects['term3']->name);
 
-    // Get the node.
-    $node = $this->drupalGetNodeByTitle($edit["title"]);
+    // Get the node and verify that the terms that should be there still are.
     $this->drupalGet('node/' . $node->nid);
-
     foreach ($term_names as $term_name) {
       $this->assertText($term_name, format_string('The term %name appears on the node page after one term %deleted was deleted', array('%name' => $term_name, '%deleted' => $term_objects['term1']->name)));
     }
diff --git a/modules/toolbar/toolbar.info b/modules/toolbar/toolbar.info
index dbd79a4..7cf9fd0 100644
--- a/modules/toolbar/toolbar.info
+++ b/modules/toolbar/toolbar.info
@@ -4,8 +4,8 @@ core = 7.x
 package = Core
 version = VERSION
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/tracker/tracker.info b/modules/tracker/tracker.info
index 256575c..8582614 100644
--- a/modules/tracker/tracker.info
+++ b/modules/tracker/tracker.info
@@ -6,8 +6,8 @@ version = VERSION
 core = 7.x
 files[] = tracker.test
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/tracker/tracker.pages.inc b/modules/tracker/tracker.pages.inc
index baa9986..fa16b65 100644
--- a/modules/tracker/tracker.pages.inc
+++ b/modules/tracker/tracker.pages.inc
@@ -120,7 +120,6 @@ function tracker_page($account = NULL, $set_title = FALSE) {
   );
   $page['pager'] = array(
     '#theme' => 'pager',
-    '#quantity' => 25,
     '#weight' => 10,
   );
   $page['#sorted'] = TRUE;
diff --git a/modules/translation/tests/translation_test.info b/modules/translation/tests/translation_test.info
index 49753fb..c959a4c 100644
--- a/modules/translation/tests/translation_test.info
+++ b/modules/translation/tests/translation_test.info
@@ -5,8 +5,8 @@ package = Testing
 version = VERSION
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/translation/translation.info b/modules/translation/translation.info
index 87bd74f..fa53de3 100644
--- a/modules/translation/translation.info
+++ b/modules/translation/translation.info
@@ -6,8 +6,8 @@ version = VERSION
 core = 7.x
 files[] = translation.test
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/trigger/tests/trigger_test.info b/modules/trigger/tests/trigger_test.info
index 521941e..8a0a345 100644
--- a/modules/trigger/tests/trigger_test.info
+++ b/modules/trigger/tests/trigger_test.info
@@ -4,8 +4,8 @@ package = Testing
 core = 7.x
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/trigger/trigger.info b/modules/trigger/trigger.info
index a150a56..3ffb5f5 100644
--- a/modules/trigger/trigger.info
+++ b/modules/trigger/trigger.info
@@ -6,8 +6,8 @@ core = 7.x
 files[] = trigger.test
 configure = admin/structure/trigger
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/update/tests/aaa_update_test.info b/modules/update/tests/aaa_update_test.info
index 3847856..f5c804f 100644
--- a/modules/update/tests/aaa_update_test.info
+++ b/modules/update/tests/aaa_update_test.info
@@ -4,8 +4,8 @@ package = Testing
 core = 7.x
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/update/tests/bbb_update_test.info b/modules/update/tests/bbb_update_test.info
index 4afd33b..9d1a30c 100644
--- a/modules/update/tests/bbb_update_test.info
+++ b/modules/update/tests/bbb_update_test.info
@@ -4,8 +4,8 @@ package = Testing
 core = 7.x
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/update/tests/ccc_update_test.info b/modules/update/tests/ccc_update_test.info
index 65f4ffa..dbf63f6 100644
--- a/modules/update/tests/ccc_update_test.info
+++ b/modules/update/tests/ccc_update_test.info
@@ -4,8 +4,8 @@ package = Testing
 core = 7.x
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/update/tests/themes/update_test_basetheme/update_test_basetheme.info b/modules/update/tests/themes/update_test_basetheme/update_test_basetheme.info
index ede05d0..faa6cdf 100644
--- a/modules/update/tests/themes/update_test_basetheme/update_test_basetheme.info
+++ b/modules/update/tests/themes/update_test_basetheme/update_test_basetheme.info
@@ -3,8 +3,8 @@ description = Test theme which acts as a base theme for other test subthemes.
 core = 7.x
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/update/tests/themes/update_test_subtheme/update_test_subtheme.info b/modules/update/tests/themes/update_test_subtheme/update_test_subtheme.info
index 98f074d..dced67c 100644
--- a/modules/update/tests/themes/update_test_subtheme/update_test_subtheme.info
+++ b/modules/update/tests/themes/update_test_subtheme/update_test_subtheme.info
@@ -4,8 +4,8 @@ core = 7.x
 base theme = update_test_basetheme
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/update/tests/update_test.info b/modules/update/tests/update_test.info
index 548cd65..af28f50 100644
--- a/modules/update/tests/update_test.info
+++ b/modules/update/tests/update_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/update/update.info b/modules/update/update.info
index 44123a5..f416d5d 100644
--- a/modules/update/update.info
+++ b/modules/update/update.info
@@ -6,8 +6,8 @@ core = 7.x
 files[] = update.test
 configure = admin/reports/updates/settings
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/update/update.module b/modules/update/update.module
index d5728be..d1f0d85 100644
--- a/modules/update/update.module
+++ b/modules/update/update.module
@@ -71,7 +71,7 @@ define('UPDATE_MAX_FETCH_ATTEMPTS', 2);
 /**
  * Maximum number of seconds to try fetching available update data at a time.
  */
-define('UPDATE_MAX_FETCH_TIME', 5);
+define('UPDATE_MAX_FETCH_TIME', 30);
 
 /**
  * Implements hook_help().
diff --git a/modules/user/tests/user_form_test.info b/modules/user/tests/user_form_test.info
index 8306b8d..2639cff 100644
--- a/modules/user/tests/user_form_test.info
+++ b/modules/user/tests/user_form_test.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/user/user.info b/modules/user/user.info
index 6dc84af..c51b75b 100644
--- a/modules/user/user.info
+++ b/modules/user/user.info
@@ -9,8 +9,8 @@ required = TRUE
 configure = admin/config/people
 stylesheets[all][] = user.css
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/modules/user/user.module b/modules/user/user.module
index 9668d3b..b239799 100644
--- a/modules/user/user.module
+++ b/modules/user/user.module
@@ -737,8 +737,9 @@ function user_password($length = 10) {
  *   An array whose keys are the role IDs of interest, such as $user->roles.
  *
  * @return
- *   An array indexed by role ID. Each value is an array whose keys are the
- *   permission strings for the given role ID.
+ *   If $roles is a non-empty array, an array indexed by role ID is returned.
+ *   Each value is an array whose keys are the permission strings for the given
+ *   role ID. If $roles is empty nothing is returned.
  */
 function user_role_permissions($roles = array()) {
   $cache = &drupal_static(__FUNCTION__, array());
diff --git a/profiles/commons/.travis.yml b/profiles/commons/.travis.yml
index 1fc5174..c1798ad 100644
--- a/profiles/commons/.travis.yml
+++ b/profiles/commons/.travis.yml
@@ -10,6 +10,7 @@ mysql:
 
 env:
   - UPGRADE=none
+  - UPGRADE=7.x-3.10
   - UPGRADE=7.x-3.9
   - UPGRADE=7.x-3.8
   - UPGRADE=7.x-3.7
@@ -17,7 +18,9 @@ env:
   - UPGRADE=7.x-3.5
 
 matrix:
+  fast_finish: true
   allow_failures:
+    - env: UPGRADE=7.x-3.10
     - env: UPGRADE=7.x-3.9
     - env: UPGRADE=7.x-3.8
     - env: UPGRADE=7.x-3.7
@@ -35,7 +38,13 @@ install:
 
   # Install the latest Drush 6.
   - export PATH="$HOME/.composer/vendor/bin:$PATH"
-  - composer global require --prefer-source --no-interaction drush/drush:6.*
+  - pear channel-discover pear.drush.org
+  - pear install drush/drush-5.10.0.0
+  - phpenv rehash
+
+  # Install Drupal.org drush.
+  - drush dl -y drupalorg_drush-7.x-1.x-dev --destination=$HOME/.drush
+  - drush cc drush
 
   # Build Behat dependencies
   - cd ./tests/behat
@@ -52,7 +61,7 @@ install:
   - mkdir drupal
   - mv profiles drupal/
 
-  # Test the current branch
+  # Build the current branch.
   - cd drupal
   - drush make --yes profiles/commons/drupal-org-core.make --prepare-install
   - drush make --yes profiles/commons/drupal-org.make --no-core --contrib-destination=profiles/commons
@@ -61,6 +70,9 @@ install:
   - mkdir sites/default/private/temp
   - cd ../
 
+  # Verify that all the .make files will work on Drupal.org.
+  - drush verify-makefile drupal/profiles/commons/drupal-org.make
+
   # Download an old version to test upgrading from.
   - if [[ "$UPGRADE" != none ]]; then drush dl commons-$UPGRADE; fi
 
diff --git a/profiles/commons/commons.info b/profiles/commons/commons.info
index 6e95ff6..691e5f4 100644
--- a/profiles/commons/commons.info
+++ b/profiles/commons/commons.info
@@ -118,9 +118,9 @@ dependencies[] = commons_wysiwyg
 ; System Requirements.
 php_memory_limit = 128M
 
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/drupal-org-core.make b/profiles/commons/drupal-org-core.make
index 2862d2b..495ce83 100644
--- a/profiles/commons/drupal-org-core.make
+++ b/profiles/commons/drupal-org-core.make
@@ -3,7 +3,7 @@ core = 7.x
 
 ; Download Drupal core and apply core patches if needed.
 projects[drupal][type] = "core"
-projects[drupal][version] = 7.27
+projects[drupal][version] = 7.28
 
 ; This patch allows install profile to list requirements on the install page
 ; http://drupal.org/node/1971072
@@ -23,4 +23,8 @@ projects[drupal][patch][] = https://drupal.org/files/issues/drupal-optimize_node
 
 ; Statically cache node access grants
 ; https://drupal.org/comment/8495029#comment-8495029
-projects[drupal][patch][] = https://drupal.org/files/issues/node_access_grants-static-cache-11.patch
\ No newline at end of file
+projects[drupal][patch][] = https://drupal.org/files/issues/node_access_grants-static-cache-11.patch
+
+; File_get_file_references is slow and buggy
+; https://drupal.org/node/1805690#comment-8734045
+projects[drupal][patch][] = https://drupal.org/files/issues/1805690_11.patch
diff --git a/profiles/commons/drupal-org.make b/profiles/commons/drupal-org.make
index 5d8d0e3..6ae04b4 100644
--- a/profiles/commons/drupal-org.make
+++ b/profiles/commons/drupal-org.make
@@ -33,6 +33,10 @@ projects[apachesolr_og][download][url] = "http://git.drupal.org/project/apacheso
 projects[apachesolr_og][download][branch] = "7.x-1.x"
 projects[apachesolr_og][download][revision] = "49820b4a4fcff7c1c4efe449da033fb6d8711ac5"
 
+; Check the user object before trying to display a result.
+; https://drupal.org/node/2077281#comment-7807937
+projects[apachesolr_og][patch][] = "https://drupal.org/files/issues/apachesolr_og-check-for-anonymous.patch"
+
 projects[apachesolr_proximity][type] = "module"
 projects[apachesolr_proximity][subdir] = "contrib"
 projects[apachesolr_proximity][version] = "1.0-rc1"
@@ -121,7 +125,10 @@ projects[elements][version] = "1.4"
 
 projects[email_registration][type] = "module"
 projects[email_registration][subdir] = "contrib"
-projects[email_registration][version] = "1.2"
+projects[email_registration][download][type] = "git"
+projects[email_registration][download][url] = "http://git.drupal.org/project/email_registration.git"
+projects[email_registration][download][branch] = "7.x-1.x"
+projects[email_registration][download][revision] = "1656416"
 
 projects[entity][type] = "module"
 projects[entity][subdir] = "contrib"
@@ -211,7 +218,7 @@ projects[libraries][version] = "2.2"
 
 projects[lingotek][type] = "module"
 projects[lingotek][subdir] = "contrib"
-projects[lingotek][version] = "5.04"
+projects[lingotek][version] = "5.06"
 
 projects[link][type] = "module"
 projects[link][subdir] = "contrib"
@@ -270,7 +277,7 @@ projects[module_filter][version] = "1.8"
 
 projects[mollom][type] = "module"
 projects[mollom][subdir] = "contrib"
-projects[mollom][version] = "2.9"
+projects[mollom][version] = "2.10"
 
 projects[navbar][type] = "module"
 projects[navbar][subdir] = "contrib"
@@ -300,10 +307,7 @@ projects[oembed][download][revision] = "9aa5303"
 
 projects[og][type] = "module"
 projects[og][subdir] = "contrib"
-projects[og][download][type] = "git"
-projects[og][download][url] = "http://git.drupal.org/project/og.git"
-projects[og][download][branch] = "7.x-2.x"
-projects[og][download][revision] = "10647461ce6"
+projects[og][version] = "2.7"
 
 ; Auto-assign role to group manager broken on groups with overridden roles.
 ; https://drupal.org/node/2005800#comment-7684873
@@ -390,10 +394,7 @@ projects[r4032login][version] = "1.7"
 
 projects[radioactivity][type] = "module"
 projects[radioactivity][subdir] = "contrib"
-projects[radioactivity][download][type] = "git"
-projects[radioactivity][download][url] = "http://git.drupal.org/project/radioactivity.git"
-projects[radioactivity][download][branch] = "7.x-2.x"
-projects[radioactivity][download][revision] = "e3705c6ce9f07ec58fc6b7c66f39eb4f2fc51b68"
+projects[radioactivity][version] = "2.9"
 
 projects[rate][type] = "module"
 projects[rate][subdir] = "contrib"
@@ -429,7 +430,7 @@ projects[rich_snippets][version] = "1.0-beta3"
 
 projects[rules][type] = "module"
 projects[rules][subdir] = "contrib"
-projects[rules][version] = "2.6"
+projects[rules][version] = "2.7"
 
 projects[schemaorg][type] = "module"
 projects[schemaorg][subdir] = "contrib"
@@ -563,7 +564,7 @@ libraries[modernizr][download][url] = "https://github.com/Modernizr/Modernizr/ar
 
 libraries[timeago][download][type] = "get"
 libraries[timeago][type] = "libraries"
-libraries[timeago][download][url] = "https://raw.github.com/rmm5t/jquery-timeago/v1.4.0/jquery.timeago.js"
+libraries[timeago][download][url] = "https://raw.github.com/rmm5t/jquery-timeago/v1.4.1/jquery.timeago.js"
 
 libraries[underscore][download][type] = "get"
 libraries[underscore][type] = "libraries"
diff --git a/profiles/commons/libraries/timeago/jquery.timeago.js b/profiles/commons/libraries/timeago/jquery.timeago.js
index 44539a4..483be57 100644
--- a/profiles/commons/libraries/timeago/jquery.timeago.js
+++ b/profiles/commons/libraries/timeago/jquery.timeago.js
@@ -3,7 +3,7 @@
  * updating fuzzy timestamps (e.g. "4 minutes ago" or "about 1 day ago").
  *
  * @name timeago
- * @version 1.4.0
+ * @version 1.4.1
  * @requires jQuery v1.2.3+
  * @author Ryan McGeary
  * @license MIT License - http://www.opensource.org/licenses/mit-license.php
@@ -179,7 +179,7 @@
     var $s = $t.settings;
 
     if (!isNaN(data.datetime)) {
-      if ( $s.cutoff == 0 || distance(data.datetime) < $s.cutoff) {
+      if ( $s.cutoff == 0 || Math.abs(distance(data.datetime)) < $s.cutoff) {
         $(this).text(inWords(data.datetime));
       }
     }
diff --git a/profiles/commons/modules/commons/commons_activity_streams/commons_activity_page/commons_activity_page.info b/profiles/commons/modules/commons/commons_activity_streams/commons_activity_page/commons_activity_page.info
index 2cfb10e..3930cb7 100644
--- a/profiles/commons/modules/commons/commons_activity_streams/commons_activity_page/commons_activity_page.info
+++ b/profiles/commons/modules/commons/commons_activity_streams/commons_activity_page/commons_activity_page.info
@@ -10,9 +10,9 @@ features[ctools][] = page_manager:pages_default:1
 features[features_api][] = api:2
 features[page_manager_pages][] = commons_activity_streams_activity
 
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/modules/commons/commons_activity_streams/commons_activity_streams.info b/profiles/commons/modules/commons/commons_activity_streams/commons_activity_streams.info
index 01ea294..3b01652 100644
--- a/profiles/commons/modules/commons/commons_activity_streams/commons_activity_streams.info
+++ b/profiles/commons/modules/commons/commons_activity_streams/commons_activity_streams.info
@@ -38,9 +38,9 @@ features_exclude[field_base][field_target_nodes] = field_target_nodes
 features_exclude[field_base][field_target_comments] = field_target_comments
 features_exclude[views_view][commons_bw_all] = commons_bw_all
 
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/modules/commons/commons_activity_streams/commons_activity_streams.install b/profiles/commons/modules/commons/commons_activity_streams/commons_activity_streams.install
index bc0e8ec..4bfc7cf 100644
--- a/profiles/commons/modules/commons/commons_activity_streams/commons_activity_streams.install
+++ b/profiles/commons/modules/commons/commons_activity_streams/commons_activity_streams.install
@@ -52,3 +52,14 @@ function commons_activity_streams_update_3105() {
   features_revert($revert);
   return array();
 }
+
+/**
+ * Add empty text to Commons Activity Streams views.
+ */
+function commons_activity_streams_update_3106() {
+  $revert = array(
+    'commons_activity_streams' => array('views_view'),
+  );
+  features_revert($revert);
+  return array();
+}
diff --git a/profiles/commons/modules/commons/commons_activity_streams/commons_activity_streams.views_default.inc b/profiles/commons/modules/commons/commons_activity_streams/commons_activity_streams.views_default.inc
index f8d811d..a66e096 100644
--- a/profiles/commons/modules/commons/commons_activity_streams/commons_activity_streams.views_default.inc
+++ b/profiles/commons/modules/commons/commons_activity_streams/commons_activity_streams.views_default.inc
@@ -42,7 +42,7 @@ function commons_activity_streams_views_default_views() {
   $handler->display->display_options['empty']['area']['table'] = 'views';
   $handler->display->display_options['empty']['area']['field'] = 'area';
   $handler->display->display_options['empty']['area']['empty'] = TRUE;
-  $handler->display->display_options['empty']['area']['content'] = 'No activity matched the filters you selected.';
+  $handler->display->display_options['empty']['area']['content'] = 'Nobody has performed any activity on the site recently.';
   $handler->display->display_options['empty']['area']['format'] = 'filtered_html';
   /* Relationship: Entity Reference: Referenced Entity */
   $handler->display->display_options['relationships']['field_target_nodes_target_id']['id'] = 'field_target_nodes_target_id';
@@ -166,7 +166,7 @@ function commons_activity_streams_views_default_views() {
     t('‹ previous'),
     t('next ›'),
     t('last »'),
-    t('No activity matched the filters you selected.'),
+    t('Nobody has performed any activity on the site recently.'),
     t('Content entity referenced from field_target_nodes'),
     t('All'),
     t('Show'),
@@ -208,7 +208,7 @@ function commons_activity_streams_views_default_views() {
   $handler->display->display_options['empty']['area']['table'] = 'views';
   $handler->display->display_options['empty']['area']['field'] = 'area';
   $handler->display->display_options['empty']['area']['empty'] = TRUE;
-  $handler->display->display_options['empty']['area']['content'] = 'This person doesn\'t have any activity on the site yet.';
+  $handler->display->display_options['empty']['area']['content'] = 'This person hasn\'t performed any activities on the site yet.';
   $handler->display->display_options['empty']['area']['format'] = 'filtered_html';
   /* Relationship: Entity Reference: Referenced Entity */
   $handler->display->display_options['relationships']['field_target_nodes_target_id']['id'] = 'field_target_nodes_target_id';
@@ -307,7 +307,7 @@ function commons_activity_streams_views_default_views() {
     t('‹ previous'),
     t('next ›'),
     t('last »'),
-    t('This person doesn\'t have any activity on the site yet.'),
+    t('This person hasn\'t performed any activities on the site yet.'),
     t('Content entity referenced from field_target_nodes'),
     t('All'),
     t('Activity (Sidebar)'),
diff --git a/profiles/commons/modules/commons/commons_activity_streams/commons_activity_streams_groups/commons_activity_streams_groups.info b/profiles/commons/modules/commons/commons_activity_streams/commons_activity_streams_groups/commons_activity_streams_groups.info
index 0541619..eeb2ac9 100644
--- a/profiles/commons/modules/commons/commons_activity_streams/commons_activity_streams_groups/commons_activity_streams_groups.info
+++ b/profiles/commons/modules/commons/commons_activity_streams/commons_activity_streams_groups/commons_activity_streams_groups.info
@@ -10,9 +10,9 @@ features[ctools][] = views:views_default:3.0
 features[features_api][] = api:2
 features[views_view][] = activity_group
 
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/modules/commons/commons_activity_streams/commons_activity_streams_groups/commons_activity_streams_groups.install b/profiles/commons/modules/commons/commons_activity_streams/commons_activity_streams_groups/commons_activity_streams_groups.install
new file mode 100644
index 0000000..eacba80
--- /dev/null
+++ b/profiles/commons/modules/commons/commons_activity_streams/commons_activity_streams_groups/commons_activity_streams_groups.install
@@ -0,0 +1,12 @@
+<?php
+
+/**
+ * Add empty text to Commons Activity Streams Groups views.
+ */
+function commons_activity_streams_groups_update_3101() {
+  $revert = array(
+    'commons_activity_streams_groups' => array('views_view'),
+  );
+  features_revert($revert);
+  return array();
+}
diff --git a/profiles/commons/modules/commons/commons_activity_streams/commons_activity_streams_groups/commons_activity_streams_groups.views_default.inc b/profiles/commons/modules/commons/commons_activity_streams/commons_activity_streams_groups/commons_activity_streams_groups.views_default.inc
index 002e115..8f2a1ca 100644
--- a/profiles/commons/modules/commons/commons_activity_streams/commons_activity_streams_groups/commons_activity_streams_groups.views_default.inc
+++ b/profiles/commons/modules/commons/commons_activity_streams/commons_activity_streams_groups/commons_activity_streams_groups.views_default.inc
@@ -33,6 +33,13 @@ function commons_activity_streams_groups_views_default_views() {
   $handler->display->display_options['pager']['options']['offset'] = '0';
   $handler->display->display_options['style_plugin'] = 'default';
   $handler->display->display_options['row_plugin'] = 'fields';
+  /* No results behavior: Global: Text area */
+  $handler->display->display_options['empty']['area']['id'] = 'area';
+  $handler->display->display_options['empty']['area']['table'] = 'views';
+  $handler->display->display_options['empty']['area']['field'] = 'area';
+  $handler->display->display_options['empty']['area']['empty'] = TRUE;
+  $handler->display->display_options['empty']['area']['content'] = 'Nobody has performed any activity in this group recently.';
+  $handler->display->display_options['empty']['area']['format'] = 'filtered_html';
   /* Relationship: Entity Reference: Referenced Entity */
   $handler->display->display_options['relationships']['field_target_nodes_target_id']['id'] = 'field_target_nodes_target_id';
   $handler->display->display_options['relationships']['field_target_nodes_target_id']['table'] = 'field_data_field_target_nodes';
@@ -129,6 +136,7 @@ function commons_activity_streams_groups_views_default_views() {
     t('Sort by'),
     t('Asc'),
     t('Desc'),
+    t('Nobody has performed any activity in this group recently.'),
     t('Content entity referenced from field_target_nodes'),
     t('OG membership from node'),
     t('All'),
diff --git a/profiles/commons/modules/commons/commons_body/commons_body.info b/profiles/commons/modules/commons/commons_body/commons_body.info
index 87a7fef..90cae4e 100644
--- a/profiles/commons/modules/commons/commons_body/commons_body.info
+++ b/profiles/commons/modules/commons/commons_body/commons_body.info
@@ -8,9 +8,9 @@ dependencies[] = text
 features[features_api][] = api:2
 features[field_base][] = body
 
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/modules/commons/commons_bw/commons_bw.info b/profiles/commons/modules/commons/commons_bw/commons_bw.info
index d13ddb6..1630c40 100644
--- a/profiles/commons/modules/commons/commons_bw/commons_bw.info
+++ b/profiles/commons/modules/commons/commons_bw/commons_bw.info
@@ -12,9 +12,9 @@ features[field_base][] = title_field
 files[] = includes/views/handlers/commons_bw_handler_node_partial_form.inc
 ; Views handlers
 
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/modules/commons/commons_bw/commons_bw.module b/profiles/commons/modules/commons/commons_bw/commons_bw.module
index 0c32197..35bf1f2 100644
--- a/profiles/commons/modules/commons/commons_bw/commons_bw.module
+++ b/profiles/commons/modules/commons/commons_bw/commons_bw.module
@@ -243,6 +243,7 @@ function commons_bw_partial_node_form_validate($form, $form_state) {
  */
 function commons_bw_partial_node_form_submit($form, $form_state) {
   $node = $form['#entity'];
+  node_submit($node);
   // Mark the node as created with the partial form
   $node->partial_node_form = TRUE;
   field_attach_submit('node', $node, $form, $form_state);
diff --git a/profiles/commons/modules/commons/commons_content_moderation/commons_content_moderation.info b/profiles/commons/modules/commons/commons_content_moderation/commons_content_moderation.info
index 96459f9..e728a66 100644
--- a/profiles/commons/modules/commons/commons_content_moderation/commons_content_moderation.info
+++ b/profiles/commons/modules/commons/commons_content_moderation/commons_content_moderation.info
@@ -18,9 +18,9 @@ features[views_view][] = commons_content_moderation_reported_comments
 features[views_view][] = commons_content_moderation_reported_nodes
 features_exclude[dependencies][features] = features
 
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/modules/commons/commons_content_moderation/commons_content_moderation.module b/profiles/commons/modules/commons/commons_content_moderation/commons_content_moderation.module
index b76ff26..7078cb2 100644
--- a/profiles/commons/modules/commons/commons_content_moderation/commons_content_moderation.module
+++ b/profiles/commons/modules/commons/commons_content_moderation/commons_content_moderation.module
@@ -1,7 +1,7 @@
 <?php
 /**
  * @file
- * Drupal needs this blank file.
+ * Code for the Commons Content Moderation feature.
  */
 
 include_once 'commons_content_moderation.features.inc';
@@ -28,50 +28,78 @@ function commons_content_moderation_action_info() {
   );
 }
 
+/**
+ * Delete content and block the content author.
+ *
+ * @param $node
+ *   A node object.
+ * @param $context
+ *   (optional) Array of additional information about what triggered the action.
+ *   Not used for this action.
+ *
+ * @ingroup actions
+ */
+function commons_content_moderation_delete_node_block_user($node, $context = array()) {
+  // Don't block anonymous users or user 1.
+  if ($node->uid > 1) {
+    $author = user_load($node->uid);
 
-function commons_content_moderation_delete_node_block_user(&$entity, $context = array()) {
-  // Block users other than the anonymous user and UID 1.
-  if ($entity->uid > 1) {
-    $author = user_load($entity->uid);
+    // Block the user if they aren't already.
     if ($author->status) {
       $author = user_save($author, array('status' => 0));
-      watchdog('action', 'Blocked user %name.', array('%name' => $author->name));
+      watchdog('commons_content_moderation', 'Blocked user %name.', array('%name' => format_username($author)));
     }
   }
-  // If the Mollom module is enabled and configured, report
-  // the content to Mollom.
-  if (module_exists('mollom') && _mollom_status()) {
-    $mollom_return = mollom_data_report('node', $entity->nid, 'spam');
+
+  // Report the content to Mollom when possible.
+  if (module_exists('mollom') && _mollom_flag_access('node', $node)) {
+    mollom_data_report('node', $node->nid, 'spam');
   }
-  // We're done with this node. We can delete it.
-  node_delete($entity->nid);
-  watchdog('action', 'Deleted @type %title.', array('@type' => node_type_get_name($entity), '%title' => $entity->title));
+
+  // Delete the node.
+  node_delete($node->nid);
+  watchdog('commons_content_moderation', 'Deleted @type %title.', array('@type' => node_type_get_name($node), '%title' => $node->title));
 }
 
-function commons_content_moderation_delete_comment_block_user(&$entity, $context = array()) {
- // Block users other than the anonymous user and UID 1.
-  if ($entity->uid > 1) {
-    $author = user_load($entity->uid);
+/**
+ * Delete comment and block the comment author.
+ *
+ * @param $comment
+ *   A comment object.
+ * @param $context
+ *   (optional) Array of additional information about what triggered the action.
+ *   Not used for this action.
+ *
+ * @ingroup actions
+ */
+function commons_content_moderation_delete_comment_block_user($comment, $context = array()) {
+  // Don't block anonymous users or user 1.
+  if ($comment->uid > 1) {
+    $author = user_load($comment->uid);
+
+    // Block the user if they aren't already.
     if ($author->status) {
       $author = user_save($author, array('status' => 0));
-      watchdog('action', 'Blocked user %name.', array('%name' => $author->name));
+      watchdog('commons_content_moderation', 'Blocked user %name.', array('%name' => format_username($author)));
     }
   }
-  // If the Mollom module is enabled and configured, report
-  // the content to Mollom.
-  if (module_exists('mollom') && _mollom_status()) {
-    $mollom_return = mollom_data_report('comment', $comment->cid, 'spam');
+
+  // Report the content to Mollom when possible.
+  if (module_exists('mollom') && _mollom_flag_access('comment', $comment)) {
+    mollom_data_report('comment', $comment->cid, 'spam');
   }
-  // We're done with this node. We can delete it.
-  comment_delete($entity->cid);
-  watchdog('action', 'Deleted comment %title.', array('@type' => node_type_get_name($entity), '%title' => $entity->title));
+
+  // Delete the comment.
+  comment_delete($comment->cid);
+  watchdog('commons_content_moderation', 'Deleted comment %title.', array('%title' => $comment->title));
 }
 
 /**
  * Implements hook_views_default_views_alter().
  */
 function commons_content_moderation_views_default_views_alter(&$views) {
-  // We're providing alternatives to these views.
+  // Disable default node and comment abuse views in favor of Commons-specific
+  // views included with Commons Content Moderation.
   foreach (array('all_flag_abuse_node', 'all_flag_abuse_comment') as $view_name) {
     if (!empty($views[$view_name])) {
       $views[$view_name]->disabled = TRUE;
@@ -81,15 +109,11 @@ function commons_content_moderation_views_default_views_alter(&$views) {
 
 /**
  * Implements hook_views_pre_build().
- *
- * A check when VBO is being used on the content moderation views, make sure
- * the user has the correct permissions.
  */
 function commons_content_moderation_views_pre_build(&$view) {
-
-  if ($view->name == 'commons_content_moderation_reported_nodes'
-    && !module_exists('actions_permissions')
-    && (!user_access('administer content') || !user_access('administer users'))) {
+  // Disable bulk content moderation operations if the user does not have
+  // appropriate access.
+  if ($view->name == 'commons_content_moderation_reported_nodes' && !module_exists('actions_permissions') && (!user_access('administer content') || !user_access('administer users'))) {
     unset($view->field['views_bulk_operations']);
     unset($view->display_handler->handlers['field']['views_bulk_operations']);
   }
@@ -99,19 +123,17 @@ function commons_content_moderation_views_pre_build(&$view) {
  * Implements hook_views_bulk_operations_form_alter().
  */
 function commons_content_moderation_views_bulk_operations_form_alter(&$form, $form_state, $vbo) {
+  // Only proceed if the 'delete_node_block_user' operation is available.
   if (!isset($vbo->options['vbo_operations']['action::commons_content_moderation_delete_node_block_user'])) {
     return;
   }
+
+  // Notify the user that the deleted content will be reported to Mollom.
   if ($form_state['step'] == 'views_form_views_form' && $vbo->options['vbo_operations']['action::commons_content_moderation_delete_node_block_user']['selected'] == 1) {
-    if (module_exists('mollom') && _mollom_status()) {
+    if (module_exists('mollom') && _mollom_access('report to mollom')) {
       $form['mollom_text'] = array(
-        '#markup' => t('Deleted content will be reported to Mollom.'),
-      );
-    }
-    else {
-     $form['mollom_text'] = array(
-        '#markup' => t('When the !mollom module is installed and configured, content deleted here will also be reported to Mollom.', array('!mollom' => l('Mollom', 'http://drupal.org/project/mollom'))),
+        '#markup' => '<p>' . t('Deleted content will be reported to Mollom.') . '</p>',
       );
     }
   }
-}
\ No newline at end of file
+}
diff --git a/profiles/commons/modules/commons/commons_documents/commons_documents.info b/profiles/commons/modules/commons/commons_documents/commons_documents.info
index e1daaba..5281dce 100644
--- a/profiles/commons/modules/commons/commons_documents/commons_documents.info
+++ b/profiles/commons/modules/commons/commons_documents/commons_documents.info
@@ -45,9 +45,9 @@ features[variable][] = node_preview_document
 features[variable][] = node_submitted_document
 features[views_view][] = commons_bw_documents
 
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/modules/commons/commons_documents/commons_documents.install b/profiles/commons/modules/commons/commons_documents/commons_documents.install
index 3b00af8..63b7865 100644
--- a/profiles/commons/modules/commons/commons_documents/commons_documents.install
+++ b/profiles/commons/modules/commons/commons_documents/commons_documents.install
@@ -76,3 +76,14 @@ function commons_documents_update_7006() {
   features_revert($revert);
   return array();
 }
+
+/**
+ * Improve the browsing widget empty text.
+ */
+function commons_documents_update_7007() {
+  $revert = array(
+    'commons_documents' => array('views_view'),
+  );
+  features_revert($revert);
+  return array();
+}
diff --git a/profiles/commons/modules/commons/commons_documents/commons_documents.module b/profiles/commons/modules/commons/commons_documents/commons_documents.module
index ec586e2..5d73e4b 100644
--- a/profiles/commons/modules/commons/commons_documents/commons_documents.module
+++ b/profiles/commons/modules/commons/commons_documents/commons_documents.module
@@ -7,12 +7,25 @@
 include_once 'commons_documents.features.inc';
 
 /**
+ * Implements hook_commons_entity_integration().
+ */
+function commons_documents_commons_entity_integration() {
+  return array(
+    'node' => array(
+      'document' => array(
+        'is_group_content' => TRUE,
+      ),
+    ),
+  );
+}
+
+/**
  * Implements hook_commons_bw_group_widget().
  */
 function commons_documents_commons_bw_group_widget() {
   return array(
     'commons_documents' => array(
-      'title' => t('Documents'),
+      'title' => t('Docs'),
       'type' => 'view',
       'vid' => 'commons_bw_documents',
       'display' => 'default',
@@ -73,26 +86,12 @@ function commons_documents_views_default_views_alter(&$views) {
 
 /**
  * Implements hook_views_pre_render().
- *
- * Correct the empty text when commons_bw_wikis is shown without group context.
  */
 function commons_documents_views_pre_render(&$view) {
-  // TODO: Would have been better to enable og_context to check for missing
-  // group context instead of checking for empty first argument.
+  // Improve the browsing widget empty text when displayed outside of a group.
+  // TODO: Enable og_context and check group context instead of looking for an
+  // empty first argument.
   if (empty($view->args[0]) && $view->name == 'commons_bw_documents') {
     $view->display_handler->handlers['empty']['area']->options['content'] = t('No documents have been created.');
   }
 }
-
-/**
- * Implements hook_commons_entity_integration().
- */
-function commons_documents_commons_entity_integration() {
-  return array(
-    'node' => array(
-      'document' => array(
-        'is_group_content' => TRUE,
-      ),
-    ),
-  );
-}
diff --git a/profiles/commons/modules/commons/commons_documents/commons_documents.views_default.inc b/profiles/commons/modules/commons/commons_documents/commons_documents.views_default.inc
index faa8352..79abadc 100644
--- a/profiles/commons/modules/commons/commons_documents/commons_documents.views_default.inc
+++ b/profiles/commons/modules/commons/commons_documents/commons_documents.views_default.inc
@@ -45,8 +45,9 @@ function commons_documents_views_default_views() {
   $handler->display->display_options['empty']['area']['id'] = 'area';
   $handler->display->display_options['empty']['area']['table'] = 'views';
   $handler->display->display_options['empty']['area']['field'] = 'area';
+  $handler->display->display_options['empty']['area']['empty'] = TRUE;
   $handler->display->display_options['empty']['area']['content'] = 'No documents have been added to this group.';
-  $handler->display->display_options['empty']['area']['format'] = 'plain_text';
+  $handler->display->display_options['empty']['area']['format'] = 'filtered_html';
   /* Relationship: OG membership: OG membership from Node */
   $handler->display->display_options['relationships']['og_membership_rel']['id'] = 'og_membership_rel';
   $handler->display->display_options['relationships']['og_membership_rel']['table'] = 'node';
diff --git a/profiles/commons/modules/commons/commons_events/commons_events.features.field_instance.inc b/profiles/commons/modules/commons/commons_events/commons_events.features.field_instance.inc
index 168e0a2..9526fd9 100644
--- a/profiles/commons/modules/commons/commons_events/commons_events.features.field_instance.inc
+++ b/profiles/commons/modules/commons/commons_events/commons_events.features.field_instance.inc
@@ -12,7 +12,7 @@ function commons_events_field_default_field_instances() {
 
   // Because the 'site_default_country' variable gets set, but is empty when no
   // default country is set, we'll need to do some checks to see if its empty
-  // and display a default country on our own. 
+  // and display a default country on our own.
   // See https://drupal.org/node/2068957#comment-7773019 for more info.
   $default_country = variable_get('site_default_country', 'US');
 
@@ -516,6 +516,208 @@ function commons_events_field_default_field_instances() {
     ),
   );
 
+    // Exported field_instance: 'message-commons_events_event_node_created-field_message_rendered_body'
+  $field_instances['message-commons_events_event_node_created-field_message_rendered_body'] = array(
+    'bundle' => 'commons_events_event_node_created',
+    'default_value' => NULL,
+    'deleted' => 0,
+    'description' => '',
+    'display' => array(
+      'default' => array(
+        'label' => 'above',
+        'module' => 'text',
+        'settings' => array(),
+        'type' => 'text_default',
+        'weight' => 2,
+      ),
+      'message_notify_email_body' => array(
+        'label' => 'above',
+        'settings' => array(),
+        'type' => 'hidden',
+        'weight' => 4,
+      ),
+      'message_notify_email_subject' => array(
+        'label' => 'above',
+        'settings' => array(),
+        'type' => 'hidden',
+        'weight' => 4,
+      ),
+    ),
+    'entity_type' => 'message',
+    'field_name' => 'field_message_rendered_body',
+    'label' => 'Body',
+    'required' => 0,
+    'settings' => array(
+      'text_processing' => 0,
+      'user_register_form' => FALSE,
+    ),
+    'widget' => array(
+      'active' => 1,
+      'module' => 'text',
+      'settings' => array(
+        'rows' => 5,
+      ),
+      'type' => 'text_textarea',
+      'weight' => 6,
+    ),
+  );
+
+  // Exported field_instance: 'message-commons_events_event_node_created-field_message_rendered_subject'
+  $field_instances['message-commons_events_event_node_created-field_message_rendered_subject'] = array(
+    'bundle' => 'commons_events_event_node_created',
+    'default_value' => NULL,
+    'deleted' => 0,
+    'description' => '',
+    'display' => array(
+      'default' => array(
+        'label' => 'above',
+        'module' => 'text',
+        'settings' => array(),
+        'type' => 'text_default',
+        'weight' => 3,
+      ),
+      'message_notify_email_body' => array(
+        'label' => 'above',
+        'settings' => array(),
+        'type' => 'hidden',
+        'weight' => 3,
+      ),
+      'message_notify_email_subject' => array(
+        'label' => 'above',
+        'settings' => array(),
+        'type' => 'hidden',
+        'weight' => 3,
+      ),
+    ),
+    'entity_type' => 'message',
+    'field_name' => 'field_message_rendered_subject',
+    'label' => 'Subject',
+    'required' => FALSE,
+    'settings' => array(
+      'text_processing' => 0,
+      'user_register_form' => FALSE,
+    ),
+    'widget' => array(
+      'module' => 'text',
+      'settings' => array(
+        'size' => 60,
+      ),
+      'type' => 'text_textfield',
+      'weight' => 8,
+    ),
+  );
+
+
+  // Exported field_instance: 'message-commons_events_event_node_created-field_target_comments'
+  $field_instances['message-commons_events_event_node_created-field_target_comments'] = array(
+    'bundle' => 'commons_events_event_node_created',
+    'default_value' => NULL,
+    'default_value_function' => '',
+    'deleted' => 0,
+    'description' => '',
+    'display' => array(
+      'default' => array(
+        'label' => 'above',
+        'module' => 'entityreference',
+        'settings' => array(
+          'link' => FALSE,
+        ),
+        'type' => 'entityreference_label',
+        'weight' => 1,
+      ),
+      'message_notify_email_body' => array(
+        'label' => 'above',
+        'settings' => array(),
+        'type' => 'hidden',
+        'weight' => 5,
+      ),
+      'message_notify_email_subject' => array(
+        'label' => 'above',
+        'settings' => array(),
+        'type' => 'hidden',
+        'weight' => 5,
+      ),
+    ),
+    'entity_type' => 'message',
+    'field_name' => 'field_target_comments',
+    'label' => 'Target comment',
+    'required' => 1,
+    'settings' => array(
+      'behaviors' => array(
+        'prepopulate' => array(
+          'status' => 0,
+        ),
+      ),
+      'user_register_form' => FALSE,
+    ),
+    'widget' => array(
+      'active' => 1,
+      'module' => 'entityreference',
+      'settings' => array(
+        'match_operator' => 'CONTAINS',
+        'path' => '',
+        'size' => 60,
+      ),
+      'type' => 'entityreference_autocomplete',
+      'weight' => 4,
+    ),
+  );
+
+  // Exported field_instance: 'message-commons_events_event_node_created-field_target_nodes'
+  $field_instances['message-commons_events_event_node_created-field_target_nodes'] = array(
+    'bundle' => 'commons_events_event_node_created',
+    'default_value' => NULL,
+    'default_value_function' => '',
+    'deleted' => 0,
+    'description' => '',
+    'display' => array(
+      'default' => array(
+        'label' => 'above',
+        'module' => 'entityreference',
+        'settings' => array(
+          'link' => FALSE,
+        ),
+        'type' => 'entityreference_label',
+        'weight' => 0,
+      ),
+      'message_notify_email_body' => array(
+        'label' => 'above',
+        'settings' => array(),
+        'type' => 'hidden',
+        'weight' => 6,
+      ),
+      'message_notify_email_subject' => array(
+        'label' => 'above',
+        'settings' => array(),
+        'type' => 'hidden',
+        'weight' => 6,
+      ),
+    ),
+    'entity_type' => 'message',
+    'field_name' => 'field_target_nodes',
+    'label' => 'Target nodes',
+    'required' => 0,
+    'settings' => array(
+      'behaviors' => array(
+        'prepopulate' => array(
+          'status' => 0,
+        ),
+      ),
+      'user_register_form' => FALSE,
+    ),
+    'widget' => array(
+      'active' => 1,
+      'module' => 'entityreference',
+      'settings' => array(
+        'match_operator' => 'CONTAINS',
+        'path' => '',
+        'size' => 60,
+      ),
+      'type' => 'entityreference_autocomplete',
+      'weight' => 2,
+    ),
+  );
+
   // Translatables
   // Included for use with string extractors like potx.
   t('Address');
diff --git a/profiles/commons/modules/commons/commons_events/commons_events.features.inc b/profiles/commons/modules/commons/commons_events/commons_events.features.inc
index 7bbc0c4..816d0ff 100644
--- a/profiles/commons/modules/commons/commons_events/commons_events.features.inc
+++ b/profiles/commons/modules/commons/commons_events/commons_events.features.inc
@@ -141,3 +141,38 @@ function commons_events_rdf_default_mappings() {
 
   return $schemaorg;
 }
+
+/**
+ * Implements hook_default_message_type().
+ */
+function commons_events_default_message_type() {
+  $items = array();
+  $items['commons_events_event_node_created'] = entity_import('message_type', '{
+    "name" : "commons_events_event_node_created",
+    "description" : "The notification sent when a user creates an event",
+    "argument_keys" : [],
+    "argument" : [],
+    "category" : "commons_notify",
+    "data" : {
+      "token options" : { "clear" : 0 },
+      "purge" : { "override" : 0, "enabled" : 0, "quota" : "", "days" : "" }
+    },
+    "language" : "",
+    "arguments" : null,
+    "message_text" : { "und" : [
+        {
+          "value" : "New Event on [site:name]: [message:field-target-nodes:0:title_field]",
+          "format" : "plain_text",
+          "safe_value" : "\u003Cp\u003ENew Event on [site:name]: [message:field-target-nodes:0:title_field]\u003C\/p\u003E\n"
+        },
+        {
+          "value" : "Hi [message:user:name],\r\n\r\n[message:field-target-nodes:0:author] created the event \u201c[message:field-target-nodes:0:title_field]\u201d on [site:name] [commons-groups:in-groups-text] on [message:field-target-nodes:0:created]:\r\n\r\nWhat: [message:field-target-nodes:0:title_field]\r\nWhen: [message:field-target-nodes:0:field_date]\r\nWhere (If applicable): [message:field-target-nodes:0:field_address]\r\n\r\n[message:field-target-nodes:0:body]\r\n\r\n\r\nPermalink: [message:field-target-nodes:0:url]\r\nAdd a comment at [message:field-target-nodes:0:url]#comment-form\r\n\r\nChange email notifications at [site:url]user\/[message:user:uid]\/notification-settings",
+          "format" : "plain_text",
+          "safe_value" : "\u003Cp\u003EHi [message:user:name],\u003C\/p\u003E\n\u003Cp\u003E[message:field-target-nodes:0:author] created the event \u201c[message:field-target-nodes:0:title_field]\u201d on [site:name] [commons-groups:in-groups-text] on [message:field-target-nodes:0:created]:\u003C\/p\u003E\n\u003Cp\u003EWhat: [message:field-target-nodes:0:title_field]\u003Cbr \/\u003E\nWhen: [message:field-target-nodes:0:field_date]\u003Cbr \/\u003E\nWhere (If applicable): [message:field-target-nodes:0:field_address]\u003C\/p\u003E\n\u003Cp\u003E[message:field-target-nodes:0:body]\u003C\/p\u003E\n\u003Cp\u003EPermalink: [message:field-target-nodes:0:url]\u003Cbr \/\u003E\nAdd a comment at [message:field-target-nodes:0:url]#comment-form\u003C\/p\u003E\n\u003Cp\u003EChange email notifications at [site:url]user\/[message:user:uid]\/notification-settings\u003C\/p\u003E\n"
+        }
+      ]
+    },
+    "rdf_mapping" : []
+  }');
+  return $items;
+}
\ No newline at end of file
diff --git a/profiles/commons/modules/commons/commons_events/commons_events.info b/profiles/commons/modules/commons/commons_events/commons_events.info
index 44a12d3..22a45bf 100644
--- a/profiles/commons/modules/commons/commons_events/commons_events.info
+++ b/profiles/commons/modules/commons/commons_events/commons_events.info
@@ -8,6 +8,7 @@ dependencies[] = block
 dependencies[] = commons_body
 dependencies[] = commons_follow_node
 dependencies[] = commons_groups
+dependencies[] = commons_notify
 dependencies[] = commons_location
 dependencies[] = commons_topics
 dependencies[] = ctools
@@ -58,7 +59,11 @@ features[field_instance][] = node-event-field_offsite_url
 features[field_instance][] = node-event-field_organizers
 features[field_instance][] = node-event-field_registration
 features[field_instance][] = node-event-field_registration_type
+features[field_instance][] = message-commons_events_event_node_created-field_message_rendered_body
+features[field_instance][] = message-commons_events_event_node_created-field_message_rendered_subject
+features[field_instance][] = message-commons_events_event_node_created-field_target_nodes
 features[menu_links][] = main-menu:events
+features[message_type][] = commons_events_event_node_created
 features[node][] = event
 features[og_features_permission][] = node:group:create event content
 features[og_features_permission][] = node:group:delete any event content
@@ -100,9 +105,9 @@ files[] = commons_events.strongarm.inc
 files[] = includes/commons_events.forms.inc
 files[] = includes/commons_events.theme.inc
 
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/modules/commons/commons_events/commons_events.install b/profiles/commons/modules/commons/commons_events/commons_events.install
index 5e3359a..803e4fa 100644
--- a/profiles/commons/modules/commons/commons_events/commons_events.install
+++ b/profiles/commons/modules/commons/commons_events/commons_events.install
@@ -212,3 +212,25 @@ function commons_events_update_7010() {
   features_revert($revert);
   return array();
 }
+
+/**
+ * Add empty text to Commons Events views.
+ */
+function commons_events_update_7011() {
+  $revert = array(
+    'commons_events' => array('views_view'),
+  );
+  features_revert($revert);
+  return array();
+}
+
+/**
+ * Add an event specific message_type feature.
+ */
+function commons_events_update_7012() {
+  $revert = array(
+    'commons_events' => array('message_type', 'field_instance'),
+  );
+  features_revert($revert);
+  return array();
+}
\ No newline at end of file
diff --git a/profiles/commons/modules/commons/commons_events/commons_events.module b/profiles/commons/modules/commons/commons_events/commons_events.module
index 592955a..3bf1d19 100644
--- a/profiles/commons/modules/commons/commons_events/commons_events.module
+++ b/profiles/commons/modules/commons/commons_events/commons_events.module
@@ -185,7 +185,10 @@ function commons_events_entity_view_alter(&$build, $type) {
   if ($build['#entity_type'] == 'node' && $build['#bundle'] == 'event') {
 
     $build['attending'] = array(
-      0 => theme('commons_events_attending_event', array('event' => $build['#node'], 'attendee_count' => commons_events_get_raw_attendee_count($build['#node']))),
+      0 => theme('commons_events_attending_event', array(
+          'event' => $build['#node'],
+          'attendee_count' => commons_events_get_raw_attendee_count($build['#node']),
+        )),
       '#weight' => -10,
     );
     $vars = array(
@@ -300,11 +303,12 @@ function commons_events_node_form_validate($form, &$form_state) {
       // Max attendees must be entered if the registration status is open and
       // registration is done onsite.
       if ((int) $form_state['values']['field_status'] == 1
-        && (!is_numeric($form_state['values']['field_number_of_attendees'][$lng]['0']['value']))) {
-          form_set_error('field_number_of_attendees',
-            t('Maximum number of attendees must be set for registrations to be accepted.'));
-          return FALSE;
-        }
+        && (!is_numeric($form_state['values']['field_number_of_attendees'][$lng]['0']['value']))
+      ) {
+        form_set_error('field_number_of_attendees',
+          t('Maximum number of attendees must be set for registrations to be accepted.'));
+        return FALSE;
+      }
       break;
   }
   return TRUE;
@@ -323,7 +327,8 @@ function commons_events_node_form_submit($form, $form_state) {
       $settings['status'] = 0;
     }
     if (!empty($form_state['values']['field_number_of_attendees'][$lng]['0']['value'])
-      && is_numeric($form_state['values']['field_number_of_attendees'][$lng]['0']['value'])) {
+      && is_numeric($form_state['values']['field_number_of_attendees'][$lng]['0']['value'])
+    ) {
       $settings['capacity'] = (int) $form_state['values']['field_number_of_attendees'][$lng]['0']['value'];
     }
     $settings['settings'] = serialize($settings['settings']);
@@ -343,7 +348,8 @@ function commons_events_node_form_submit($form, $form_state) {
       $uid = $node->uid;
     }
     if ($settings['status'] == 1
-      && !registration_is_registered($registration, NULL, $uid)) {
+      && !registration_is_registered($registration, NULL, $uid)
+    ) {
       $registration->user_uid = $uid;
       $registration->author_uid = $uid;
       $registration->state = NULL;
@@ -368,8 +374,11 @@ function commons_events_token_info_alter(&$tokens) {
  */
 function commons_events_commons_bw_create_all_widget($group) {
   if (og_user_access('node', $group->nid, 'create event content')) {
-    $link = l(t('List an event'),'node/add/event',
-      array('attributes' => array('class' => 'commons-events-create'), 'query' => array('og_group_ref' => $group->nid))
+    $link = l(t('List an event'), 'node/add/event',
+      array(
+        'attributes' => array('class' => 'commons-events-create'),
+        'query' => array('og_group_ref' => $group->nid),
+      )
     );
     return array(
       'commons_events' => array(
@@ -390,7 +399,10 @@ function commons_events_tokens($type, $tokens, array $data = array(), array $opt
     $event = $data['node'];
     foreach ($tokens as $name => $original) {
       if ($name == 'attend-form') {
-        $replacements[$original] = theme('commons_events_attending_event', array('event' => $event, 'attendee_count' => commons_events_get_raw_attendee_count($event)));
+        $replacements[$original] = theme('commons_events_attending_event', array(
+            'event' => $event,
+            'attendee_count' => commons_events_get_raw_attendee_count($event),
+          ));
       }
     }
   }
@@ -422,12 +434,16 @@ function commons_events_upcoming_more_link($group_id) {
  */
 function commons_events_views_post_execute(&$view) {
   if ($view->name == 'commons_events_upcoming'
-    && $view->current_display == 'panel_pane_1') {
+    && $view->current_display == 'panel_pane_1'
+  ) {
     $view->attachment_after = '<div class="more-link">' . commons_events_upcoming_more_link($view->args[0]) . '</div>';
   }
-  else if ($view->name == 'commons_events_upcoming'
-    && $view->current_display == 'panel_pane_2') {
-    $view->attachment_before = '<div class="commons-event-count">' . format_plural(count($view->result), '1 event', '@count events') . '</div>';
+  else {
+    if ($view->name == 'commons_events_upcoming'
+      && $view->current_display == 'panel_pane_2'
+    ) {
+      $view->attachment_before = '<div class="commons-event-count">' . format_plural(count($view->result), '1 event', '@count events') . '</div>';
+    }
   }
 }
 
@@ -454,7 +470,8 @@ function commons_events_block_info() {
 function commons_events_block_view($delta = '') {
   global $user;
   if ($delta == 'commons_events_create_event_link'
-    && node_access('create', 'event')) {
+    && node_access('create', 'event')
+  ) {
     $options = array(
       'query' => array(
         'destination' => 'events',
@@ -465,17 +482,21 @@ function commons_events_block_view($delta = '') {
       'content' => l(t('List an event'), 'node/add/event', $options),
     );
   }
-  else if ($delta == 'commons_events_anonymous_login'
-    && empty($user->uid)) {
-    return array(
-      'subject' => NULL,
-      'content' => t('You must !login in order to list events.', array('!login' => l(t('log in'), 'user'))),
-    );
+  else {
+    if ($delta == 'commons_events_anonymous_login'
+      && empty($user->uid)
+    ) {
+      return array(
+        'subject' => NULL,
+        'content' => t('You must !login in order to list events.', array('!login' => l(t('log in'), 'user'))),
+      );
+    }
   }
 }
 
 /**
  * Returns specific HTML for a date element formatted with the event formatter M j Y - g:ia.
+ *
  * We the do some awesome stuff with regular expressions to take all the
  * different formats available to us and format it pretty.
  */
@@ -490,7 +511,7 @@ function theme_commons_events_date_display_range_simple($variables) {
   $attributes_start = $variables['attributes_start'];
   $attributes_end = $variables['attributes_end'];
 
-  if($date1 == $date2) {
+  if ($date1 == $date2) {
     // Wrap the result with the attributes.
     return t('!start-time - !end-time', array(
       '!start-time' => '<span class="date-display-start"' . drupal_attributes($attributes_start) . '>' . $time1 . '</span>',
@@ -510,8 +531,10 @@ function theme_commons_events_date_display_range_simple($variables) {
 function theme_commons_events_date_display_single($variables) {
   return $variables['date'];
 }
+
 /**
  * Returns specific HTML for a date element formatted with the event formatter.
+ *
  * We parse the date segments and return it at the bottom, or use the simple
  * formatter (above) if parts of the date are too complicated.
  */
@@ -526,42 +549,48 @@ function theme_commons_events_date_display_range_advanced($variables) {
 
   // See date.theme line 168 -- regarding formatting time for same date events.
   if ($variables['dates']['value']['formatted_date'] === $variables['dates']['value2']['formatted_date']) {
-    return theme('commons_events_date_display_range_simple',$variables);
+    return theme('commons_events_date_display_range_simple', $variables);
   }
   // If the difference is over a year, use the simple formatter.
   if ($variables['dates']['value']['db']['object']->difference($variables['dates']['value2']['db']['object'], 'years') > 0) {
-    return theme('commons_events_date_display_range_simple',$variables);
-  }
-  else if ($variables['dates']['value']['db']['object']->difference($variables['dates']['value2']['db']['object'], 'months') > 0) {
-    $variables['dates']['value']['db']['object']->limitGranularity(array('day','month'));
-    $variables['dates']['value2']['db']['object']->limitGranularity(array('day','month', 'year'));
-
-    $date1 = $variables['dates']['value']['db']['object']->format($variables['dates']['format'],FALSE);
-    $date2 = $variables['dates']['value2']['db']['object']->format($variables['dates']['format'],FALSE);
+    return theme('commons_events_date_display_range_simple', $variables);
   }
-  else if ($variables['dates']['value']['db']['object']->difference($variables['dates']['value2']['db']['object'], 'days') > 0) {
-    // If the Day is before the month (Europe, etc) then switch the granularity.
-    if (strpos($variables['dates']['format'],'M') != 0 || strpos($variables['dates']['format'],'m') != 0 ||
-       strpos($variables['dates']['format'],'F') != 0 || strpos($variables['dates']['format'],'n') != 0) {
-      $variables['dates']['value']['db']['object']->limitGranularity(array('day'));
+  else {
+    if ($variables['dates']['value']['db']['object']->difference($variables['dates']['value2']['db']['object'], 'months') > 0) {
+      $variables['dates']['value']['db']['object']->limitGranularity(array('day', 'month'));
       $variables['dates']['value2']['db']['object']->limitGranularity(array('day', 'month', 'year'));
-    } else {
-      $variables['dates']['value']['db']['object']->limitGranularity(array('month','day'));
-      $variables['dates']['value2']['db']['object']->limitGranularity(array('day', 'year'));
+
+      $date1 = $variables['dates']['value']['db']['object']->format($variables['dates']['format'], FALSE);
+      $date2 = $variables['dates']['value2']['db']['object']->format($variables['dates']['format'], FALSE);
     }
+    else {
+      if ($variables['dates']['value']['db']['object']->difference($variables['dates']['value2']['db']['object'], 'days') > 0) {
+        // If the Day is before the month (Europe, etc) then switch the granularity.
+        if (strpos($variables['dates']['format'], 'M') != 0 || strpos($variables['dates']['format'], 'm') != 0 ||
+          strpos($variables['dates']['format'], 'F') != 0 || strpos($variables['dates']['format'], 'n') != 0
+        ) {
+          $variables['dates']['value']['db']['object']->limitGranularity(array('day'));
+          $variables['dates']['value2']['db']['object']->limitGranularity(array('day', 'month', 'year'));
+        }
+        else {
+          $variables['dates']['value']['db']['object']->limitGranularity(array('month', 'day'));
+          $variables['dates']['value2']['db']['object']->limitGranularity(array('day', 'year'));
+        }
 
-    $date1 = $variables['dates']['value']['db']['object']->format($variables['dates']['format'],FALSE);
-    $date2 = $variables['dates']['value2']['db']['object']->format($variables['dates']['format'],FALSE);
+        $date1 = $variables['dates']['value']['db']['object']->format($variables['dates']['format'], FALSE);
+        $date2 = $variables['dates']['value2']['db']['object']->format($variables['dates']['format'], FALSE);
 
-    // If we are match 'D' or 'l', then we have a 'day' in there (eg Monday),
-    // we want the whole date because it looks funky otherwise.
-    if (strpbrk($variables['dates']['format'], 'Dl')) {
-      return theme('commons_events_date_display_range_simple',$variables);
+        // If we are match 'D' or 'l', then we have a 'day' in there (eg Monday),
+        // we want the whole date because it looks funky otherwise.
+        if (strpbrk($variables['dates']['format'], 'Dl')) {
+          return theme('commons_events_date_display_range_simple', $variables);
+        }
+      }
+      else {
+        return theme('commons_events_date_display_range_simple', $variables);
+      }
     }
   }
-  else {
-    return theme('commons_events_date_display_range_simple',$variables);
-  }
   // Wrap the result with the attributes.
   return t('!start-date to !end-date, !start-time - !end-time', array(
     '!start-date' => '<span class="date-display-start"' . drupal_attributes($attributes_start) . '>' . $date1 . '</span>',
@@ -572,6 +601,17 @@ function theme_commons_events_date_display_range_advanced($variables) {
 }
 
 /**
+ * Implements commons_notify_message_selection_alter().
+ */
+function commons_events_commons_notify_message_selection_alter(&$message_type, $hook, $node) {
+  // Provide a special message type that describes the event details
+  // when a new event node is created.
+  if ($hook == 'node_insert' && $node->type == 'event') {
+    $message_type = 'commons_events_event_node_created';
+  }
+}
+
+/**
  * Check whether to allow switching the event's registration type.
  * If there are registrations for the event, disallow changing the type. This
  * keeps registrations for an event consistent.
diff --git a/profiles/commons/modules/commons/commons_events/commons_events.views_default.inc b/profiles/commons/modules/commons/commons_events/commons_events.views_default.inc
index 539a764..0fc6f36 100644
--- a/profiles/commons/modules/commons/commons_events/commons_events.views_default.inc
+++ b/profiles/commons/modules/commons/commons_events/commons_events.views_default.inc
@@ -422,6 +422,14 @@ function commons_events_views_default_views() {
   $handler->display->display_options['row_plugin'] = 'node';
   $handler->display->display_options['defaults']['row_options'] = FALSE;
   $handler->display->display_options['defaults']['header'] = FALSE;
+  $handler->display->display_options['defaults']['empty'] = FALSE;
+  /* No results behavior: Global: Text area */
+  $handler->display->display_options['empty']['area']['id'] = 'area';
+  $handler->display->display_options['empty']['area']['table'] = 'views';
+  $handler->display->display_options['empty']['area']['field'] = 'area';
+  $handler->display->display_options['empty']['area']['empty'] = TRUE;
+  $handler->display->display_options['empty']['area']['content'] = 'No events have been created yet.';
+  $handler->display->display_options['empty']['area']['format'] = 'filtered_html';
   $handler->display->display_options['defaults']['sorts'] = FALSE;
   /* Sort criterion: Content: Promoted to front page */
   $handler->display->display_options['sorts']['promote']['id'] = 'promote';
@@ -465,6 +473,7 @@ function commons_events_views_default_views() {
     t('All'),
     t('Commons'),
     t('Landing Page pane'),
+    t('No events have been created yet.'),
     t('Featured'),
     t('Date'),
     t('View panes'),
diff --git a/profiles/commons/modules/commons/commons_events/modules/commons_events_pages/commons_events_pages.info b/profiles/commons/modules/commons/commons_events/modules/commons_events_pages/commons_events_pages.info
index e328eaf..101d3a8 100644
--- a/profiles/commons/modules/commons/commons_events/modules/commons_events_pages/commons_events_pages.info
+++ b/profiles/commons/modules/commons/commons_events/modules/commons_events_pages/commons_events_pages.info
@@ -13,9 +13,9 @@ features[variable][] = panelizer_defaults_node_event
 files[] = commons_events_pages.features.inc
 files[] = commons_events_pages.strongarm.inc
 
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/modules/commons/commons_events/modules/commons_events_solr/commons_events_solr.info b/profiles/commons/modules/commons/commons_events/modules/commons_events_solr/commons_events_solr.info
index 1515a83..c323eef 100644
--- a/profiles/commons/modules/commons/commons_events/modules/commons_events_solr/commons_events_solr.info
+++ b/profiles/commons/modules/commons/commons_events/modules/commons_events_solr/commons_events_solr.info
@@ -20,9 +20,9 @@ features[page_manager_existing_pages][] = solr_events_search
 features[page_manager_handlers][] = pm_existing_pages_solr_events_search_panel_context
 features[variable][] = pm_existing_pages_disabled_solr_events_search
 
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/modules/commons/commons_featured/commons_featured.info b/profiles/commons/modules/commons/commons_featured/commons_featured.info
index ad240ea..70bf948 100644
--- a/profiles/commons/modules/commons/commons_featured/commons_featured.info
+++ b/profiles/commons/modules/commons/commons_featured/commons_featured.info
@@ -8,9 +8,9 @@ features[ctools][] = views:views_default:3.0
 features[features_api][] = api:2
 features[views_view][] = commons_featured
 
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/modules/commons/commons_featured/commons_featured.module b/profiles/commons/modules/commons/commons_featured/commons_featured.module
index dd3bf33..ba68f13 100644
--- a/profiles/commons/modules/commons/commons_featured/commons_featured.module
+++ b/profiles/commons/modules/commons/commons_featured/commons_featured.module
@@ -7,11 +7,11 @@
 include_once 'commons_featured.features.inc';
 
 /**
-* Implements hook_form_alter().
-*/
-function commons_featured_form_alter(&$form, &$form_state, $form_id) {
+ * Implements hook_form_BASE_FORM_ID_alter().
+ */
+function commons_featured_form_node_form_alter(&$form, &$form_state, $form_id) {
   // Change "Promoted to front page" to "Featured".
-  if (isset($form['#node']) && substr($form_id, -10) == '_node_form' && isset($form['options']['promote'])) {
+  if (isset($form['options']['promote'])) {
     $form['options']['promote']['#title'] = t('Featured');
   }
 }
diff --git a/profiles/commons/modules/commons/commons_follow/commons_follow.info b/profiles/commons/modules/commons/commons_follow/commons_follow.info
index e0793bf..c4fffac 100644
--- a/profiles/commons/modules/commons/commons_follow/commons_follow.info
+++ b/profiles/commons/modules/commons/commons_follow/commons_follow.info
@@ -23,9 +23,9 @@ files[] = includes/views/handlers/commons_follow_plugin_argument_default_message
 files[] = includes/views/handlers/commons_follow_user_follow_filter.inc
 files[] = includes/views/handlers/commons_follow_user_follow_filter_message.inc
 files[] = includes/views/handlers/commons_follow_handler_field_ops.inc
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/modules/commons/commons_follow/commons_follow.module b/profiles/commons/modules/commons/commons_follow/commons_follow.module
index e301be2..094e346 100644
--- a/profiles/commons/modules/commons/commons_follow/commons_follow.module
+++ b/profiles/commons/modules/commons/commons_follow/commons_follow.module
@@ -302,6 +302,10 @@ function commons_follow_views_data_alter(&$data) {
 }
 
 function commons_follow_views_query_alter(&$view, &$query) {
+  // Only act on the notifications page.
+  if (arg(2) != 'notification-settings') {
+    return;
+  }
   global $user;
   $prefix = variable_get('message_subscribe_flag_prefix', 'subscribe') . '_';
   if(strpos($view->name, $prefix) === 0 && isset($view->args[0]) && $user->uid != $view->args[0]) {
diff --git a/profiles/commons/modules/commons/commons_follow/commons_follow_group/commons_follow_group.info b/profiles/commons/modules/commons/commons_follow/commons_follow_group/commons_follow_group.info
index 889989e..751c568 100644
--- a/profiles/commons/modules/commons/commons_follow/commons_follow_group/commons_follow_group.info
+++ b/profiles/commons/modules/commons/commons_follow/commons_follow_group/commons_follow_group.info
@@ -12,9 +12,9 @@ features[flag][] = commons_follow_group
 features[flag][] = email_group
 features[variable][] = message_subscribe_og
 
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/modules/commons/commons_follow/commons_follow_node/commons_follow_node.info b/profiles/commons/modules/commons/commons_follow/commons_follow_node/commons_follow_node.info
index abed419..e4ebb9b 100644
--- a/profiles/commons/modules/commons/commons_follow/commons_follow_node/commons_follow_node.info
+++ b/profiles/commons/modules/commons/commons_follow/commons_follow_node/commons_follow_node.info
@@ -12,9 +12,9 @@ features[flag][] = email_node
 features[views_view][] = commons_follow_node
 features_exclude[dependencies][views] = views
 
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/modules/commons/commons_follow/commons_follow_term/commons_follow_term.info b/profiles/commons/modules/commons/commons_follow/commons_follow_term/commons_follow_term.info
index 6483d68..dfb5e31 100644
--- a/profiles/commons/modules/commons/commons_follow/commons_follow_term/commons_follow_term.info
+++ b/profiles/commons/modules/commons/commons_follow/commons_follow_term/commons_follow_term.info
@@ -12,9 +12,9 @@ features[flag][] = email_term
 features[views_view][] = commons_follow_taxonomy_term
 features_exclude[dependencies][ctools] = ctools
 
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/modules/commons/commons_follow/commons_follow_ui/commons_follow_ui.info b/profiles/commons/modules/commons/commons_follow/commons_follow_ui/commons_follow_ui.info
index f8e3541..5d836c4 100644
--- a/profiles/commons/modules/commons/commons_follow/commons_follow_ui/commons_follow_ui.info
+++ b/profiles/commons/modules/commons/commons_follow/commons_follow_ui/commons_follow_ui.info
@@ -6,9 +6,9 @@ dependencies[] = commons_follow
 dependencies[] = message_subscribe_ui
 dependencies[] = quicktabs
 
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/modules/commons/commons_follow/commons_follow_ui/commons_follow_ui.module b/profiles/commons/modules/commons/commons_follow/commons_follow_ui/commons_follow_ui.module
index 56973cb..6a900b5 100644
--- a/profiles/commons/modules/commons/commons_follow/commons_follow_ui/commons_follow_ui.module
+++ b/profiles/commons/modules/commons/commons_follow/commons_follow_ui/commons_follow_ui.module
@@ -1,5 +1,9 @@
 <?php
 
+/**
+ * @file
+ * Providers a user interface for configuring notification settings.
+ */
 
 /**
  * Implements hook_menu_alter().
@@ -14,6 +18,7 @@ function commons_follow_ui_menu_alter(&$items) {
     'user/%user/message-subscribe/commons_follow_node',
     'user/%user/message-subscribe/commons_follow_term',
   );
+
   foreach ($paths as $path) {
     if (isset($items[$path])) {
       $items[$path]['access callback'] = FALSE;
@@ -25,106 +30,26 @@ function commons_follow_ui_menu_alter(&$items) {
  * Implements hook_menu().
  */
 function commons_follow_ui_menu() {
-  $items = array();
   $items['user/%user/notification-settings'] = array(
     'title' => 'Notification settings',
     'page callback' => 'drupal_get_form',
     'page arguments' => array('commons_follow_ui_notification_settings_form', 1),
     'access callback' => 'message_subscribe_ui_tab_access',
     'access arguments' => array(1),
+    'file' => 'commons_follow_ui.pages.inc',
     'type' => MENU_LOCAL_TASK,
   );
+
   return $items;
 }
 
 /**
- * Implements hook_form_alter().
+ * Implements hook_form_FORM_ID_alter.
  */
-function commons_follow_ui_form_alter(&$form, &$form_state, $form_id) {
+function commons_follow_ui_form_edit_profile_user_profile_form_alter(&$form, &$form_state, $form_id) {
   // We have a dedicated form for the "Send email by default" checkbox.
   // Hide it from the user profile edit form.
-  if ($form_id == 'edit_profile_user_profile_form') {
-    $form['message_subscribe_email']['#access'] = FALSE;
-  }
-}
-
-function commons_follow_ui_notification_settings_form($form, &$form_state, $account) {
-  global $user;
-  if (empty($account)) {
-    $account = $user;
-  }
-  drupal_set_title(t('Notification settings'));
-  $form['#submit'][] = 'commons_follow_message_subscribe_email_setting_submit';
-  $form['uid'] = array(
-    '#type' => 'value',
-    '#value' => $account->uid,
-  );
-  $form['explanation'] = array(
-    '#markup' => t("Control how you are notified of new content and activity. When you follow a group, topic, user, or other content, you'll see updates in your content and activity streams, and you will automatically get email updates unlesss you disable emails or unfollow."),
-    '#weight' => 0,
-  );
-
-  $form['message_subscribe_email'] = array(
-    '#type' => 'checkbox',
-    '#title' => t('Send email notifications by default.'),
-    '#description' => t("If checked, you'll automatically sign up for email notifications when you follow something. Leave unchecked to default to signing up only for activity stream notifications"),
-    '#ajax' => array(
-      'callback' => 'commons_follow_message_subscribe_email_setting_submit',
-    ),
-    '#default_value' => isset($account->message_subscribe_email[LANGUAGE_NONE][0]['value']) ? $account->message_subscribe_email[LANGUAGE_NONE][0]['value'] : FALSE,
-    '#weight' => 1,
-  );
-  if ($account->uid != $user->uid) {
-    $form['message_subscribe_email']['#disabled'] = TRUE;
-  }
-
-  $form['submit'] = array(
-    '#type' => 'submit',
-    '#value' => t('Save email notification settings'),
-    '#attributes' => array(
-      'class' => array('js-hide'),
-    ),
-    '#weight' => 2,
-  );
-
-  $tabs = commons_follow_ui_generate_tabs($account);
-  $form['tabs'] = array(
-    '#markup' => drupal_render($tabs),
-    '#weight' => 3,
-  );
-
-  return $form;
-}
-
-function commons_follow_message_subscribe_email_setting_submit($form, &$form_state) {
-  // If the user has changed the value for this checkbox,
-  // save her account in order to save the change.
-  if ($form_state['values']['message_subscribe_email'] != $form['message_subscribe_email']['#default_value']) {
-    $account = user_load($form_state['values']['uid']);
-    $account->message_subscribe_email[LANGUAGE_NONE][0]['value'] = $form_state['values']['message_subscribe_email'];
-    user_save($account);
-  }
-}
-
-/**
- * Generates the QuickTab title for the subscription UI.
- * Replaces message_subscribe_tab_title().
- */
-function commons_follow_ui_tab_title($account, $flag_name = NULL, $count = 0) {
-  global $user;
-
-  if (!$flag_name) {
-    // We are inside /message-subscribe so get the first flag.
-    $flag_name = key(message_subscribe_flag_get_flags(NULL, NULL, $account, FALSE));
-  }
-  $flag = flag_get_flag($flag_name);
-
-  $params = array(
-    '@flag' => $flag->get_title(),
-    '@count' => $count,
-    '@name' => format_username($account),
-  );
-  return $account->uid == $user->uid ? t('@flag you follow <span class="user-follow-count">@count</span>', $params) : t('@flag @name follows <span class="user-follow-count">@count</span>', $params);
+  $form['message_subscribe_email']['#access'] = FALSE;
 }
 
 /*
@@ -132,41 +57,64 @@ function commons_follow_ui_tab_title($account, $flag_name = NULL, $count = 0) {
  */
 function commons_follow_ui_generate_tabs($account) {
   $tabs = array();
+
+  // Create a separate tab for each subscribe flag.
   foreach (array_keys(message_subscribe_flag_get_flags(NULL, NULL, $account, FALSE)) as $flag_name) {
+    // Grab the view object of a message subscribe page.
     if ($view = message_subscribe_ui_get_view($account, $flag_name)) {
-
-      // We have to do some 'verbose' view loading here, otherwise we will get a
-      // pager when looking at an empty view result.
-      $view->get_total_rows = TRUE;
-      $view->pre_execute();
-      $view->execute();
-      if ($view->total_rows == '0') {
-        unset($view->query->pager);
-      }
-      $preview = $view->preview();
-      $count = $view->total_rows;
+      $tabs[$flag_name] = array(
+        'title' => commons_follow_ui_tab_title($account, $flag_name),
+        'contents' => array(
+          '#markup' => $view->preview(),
+        ),
+      );
     }
-    else {
-      $count = 0;
-    }
-    $tabs[$flag_name] = array(
-      'title' => commons_follow_ui_tab_title($account, $flag_name, $count),
-      'contents' => array('#markup' => $preview),
-    );
   }
 
   if (!empty($tabs)) {
+    // Sort the tabs alphabetically.
+    ksort($tabs);
+
     $settings = array(
       'style' => 'Commons Tabs',
       'ajax' => FALSE,
       'html' => TRUE,
-      'title' => 'test',
       'default_tab' => 'commons_follow_group',
     );
-    $built_tabs = quicktabs_build_quicktabs('commons_follow_ui', $settings, $tabs);
-    return $built_tabs;
+
+    $tabs = quicktabs_build_quicktabs('commons_follow_ui', $settings, $tabs);
+  }
+
+  return $tabs;
+}
+
+/**
+ * Title callback; Return the flag name and flagging count.
+ *
+ * Replaces message_subscribe_ui_tab_title().
+ *
+ * @param $account
+ *   The user object.
+ * @param $flag_name
+ *   (optional) The flag name. The first subscribe flag will be used by default.
+ *
+ * @return
+ *   A translated string containing the flag name and flagging count.
+ */
+function commons_follow_ui_tab_title($account, $flag_name = NULL) {
+  if (!$flag_name) {
+    // We are inside /message-subscribe so get the first flag.
+    $flag_name = key(message_subscribe_flag_get_flags());
   }
-  else {
-    return array();
+  $flag = flag_get_flag($flag_name);
+
+  $count = 0;
+  // Get the message subscribe count from the page view.
+  if ($view = message_subscribe_ui_get_view($account, $flag_name)) {
+    $view->get_total_rows = TRUE;
+    $view->preview();
+    $count = $view->total_rows;
   }
+
+  return t('@flag <span class="user-follow-count">@count</span>', array('@flag' => $flag->get_title(), '@count' => $count));
 }
diff --git a/profiles/commons/modules/commons/commons_follow/commons_follow_ui/commons_follow_ui.pages.inc b/profiles/commons/modules/commons/commons_follow/commons_follow_ui/commons_follow_ui.pages.inc
new file mode 100644
index 0000000..167bf2c
--- /dev/null
+++ b/profiles/commons/modules/commons/commons_follow/commons_follow_ui/commons_follow_ui.pages.inc
@@ -0,0 +1,60 @@
+<?php
+
+/**
+ * @file
+ * Menu callbacks for the Commons Follow UI pages.
+ */
+
+/**
+ * Form callback for configuring notification settings.
+ */
+function commons_follow_ui_notification_settings_form($form, &$form_state, $account) {
+  $form['uid'] = array(
+    '#type' => 'value',
+    '#value' => $account->uid,
+  );
+
+  $form['explanation'] = array(
+    '#markup' => '<p>' . t("Control how you are notified of new content and activity. When you follow a group, topic, user, or other content, you'll see updates in your content and activity streams, and you will automatically get email updates unlesss you disable emails or unfollow.") . '</p>',
+  );
+
+  $form['message_subscribe_email'] = array(
+    '#type' => 'checkbox',
+    '#title' => t('Send email notifications by default.'),
+    '#description' => t("If checked, you'll automatically sign up for email notifications when you follow something. Leave unchecked to default to signing up only for activity stream notifications"),
+    '#ajax' => array(
+      'callback' => 'commons_follow_message_subscribe_email_setting_submit',
+    ),
+    '#default_value' => isset($account->message_subscribe_email[LANGUAGE_NONE][0]['value']) ? $account->message_subscribe_email[LANGUAGE_NONE][0]['value'] : FALSE,
+  );
+
+  $form['submit'] = array(
+    '#type' => 'submit',
+    '#value' => t('Save email notification settings'),
+    '#attributes' => array(
+      'class' => array('js-hide'),
+    ),
+  );
+
+  $tabs = commons_follow_ui_generate_tabs($account);
+
+  $form['tabs'] = array(
+    '#markup' => drupal_render($tabs),
+  );
+
+  $form['#submit'][] = 'commons_follow_message_subscribe_email_setting_submit';
+
+  return $form;
+}
+
+/**
+ * Submit handler for commons_follow_ui_notification_settings_form().
+ */
+function commons_follow_message_subscribe_email_setting_submit($form, &$form_state) {
+  // Save any changes to the email notifications setting.
+  if ($form_state['values']['message_subscribe_email'] != $form['message_subscribe_email']['#default_value']) {
+    $account = user_load($form_state['values']['uid']);
+    $account->message_subscribe_email[LANGUAGE_NONE][0]['value'] = $form_state['values']['message_subscribe_email'];
+    user_save($account);
+  }
+}
diff --git a/profiles/commons/modules/commons/commons_follow/commons_follow_user/commons_follow_user.info b/profiles/commons/modules/commons/commons_follow/commons_follow_user/commons_follow_user.info
index a924fd7..a7c6fe7 100644
--- a/profiles/commons/modules/commons/commons_follow/commons_follow_user/commons_follow_user.info
+++ b/profiles/commons/modules/commons/commons_follow/commons_follow_user/commons_follow_user.info
@@ -20,9 +20,9 @@ features[views_view][] = commons_follow_user
 features[views_view][] = commons_follow_user_followers
 features[views_view][] = commons_follow_user_following
 
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/modules/commons/commons_groups/commons_groups.info b/profiles/commons/modules/commons/commons_groups/commons_groups.info
index 0d24040..94a685d 100644
--- a/profiles/commons/modules/commons/commons_groups/commons_groups.info
+++ b/profiles/commons/modules/commons/commons_groups/commons_groups.info
@@ -73,9 +73,9 @@ features[views_view][] = commons_groups_user_groups
 features_exclude[field][node-group-group_group] = node-group-group_group
 features_exclude[field][node-group-group_access] = node-group-group_access
 
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/modules/commons/commons_groups/commons_groups.install b/profiles/commons/modules/commons/commons_groups/commons_groups.install
index f4ec12b..bee25d7 100644
--- a/profiles/commons/modules/commons/commons_groups/commons_groups.install
+++ b/profiles/commons/modules/commons/commons_groups/commons_groups.install
@@ -188,3 +188,25 @@ function commons_groups_update_3114() {
   features_revert($revert);
   return array();
 }
+
+/**
+ * Add empty text to Commons Groups views.
+ */
+function commons_groups_update_3115() {
+  $revert = array(
+    'commons_groups' => array('views_view'),
+  );
+  features_revert($revert);
+  return array();
+}
+
+/**
+ * Improve the browsing widget empty text.
+ */
+function commons_groups_update_3116() {
+  $revert = array(
+    'commons_groups' => array('views_view'),
+  );
+  features_revert($revert);
+  return array();
+}
diff --git a/profiles/commons/modules/commons/commons_groups/commons_groups.module b/profiles/commons/modules/commons/commons_groups/commons_groups.module
index 39e0290..133307f 100644
--- a/profiles/commons/modules/commons/commons_groups/commons_groups.module
+++ b/profiles/commons/modules/commons/commons_groups/commons_groups.module
@@ -626,12 +626,12 @@ function commons_groups_message_partial_default() {
 function commons_groups_related_groups_text($related_groups) {
   // In 1 group: "in the x group"
   if (count($related_groups) == 1) {
-    return ' ' . t('in the !group group', array('!group' => l($related_groups[0]->title, 'node/' . $related_groups[0]->nid)));
+    return t(' in the !group group', array('!group' => l($related_groups[0]->title, 'node/' . $related_groups[0]->nid)));
   }
 
   // In 2 groups: "in the x and y groups"
   if (count($related_groups) == 2) {
-    return ' ' . t('in the !group-0 and !group-1 groups', array(
+    return t(' in the !group-0 and !group-1 groups', array(
       '!group-0' => l($related_groups[0]->title, 'node/' . $related_groups[0]->nid),
       '!group-1' => l($related_groups[1]->title, 'node/' . $related_groups[1]->nid),
     ));
@@ -1149,3 +1149,15 @@ function commons_groups_field_formatter_view($entity_type, $entity, $field, $ins
     return $element;
   }
 }
+
+/**
+ * Implements hook_views_pre_render().
+ */
+function commons_groups_views_pre_render(&$view) {
+  // Improve the browsing widget empty text when displayed outside of a group.
+  // TODO: Enable og_context and check group context instead of looking for an
+  // empty first argument.
+  if (empty($view->args[0]) && $view->name == 'commons_bw_all') {
+    $view->display_handler->handlers['empty']['area']->options['content'] = t('Nobody has posted yet.');
+  }
+}
diff --git a/profiles/commons/modules/commons/commons_groups/commons_groups.views_default.inc b/profiles/commons/modules/commons/commons_groups/commons_groups.views_default.inc
index d7d4671..455073c 100644
--- a/profiles/commons/modules/commons/commons_groups/commons_groups.views_default.inc
+++ b/profiles/commons/modules/commons/commons_groups/commons_groups.views_default.inc
@@ -47,7 +47,7 @@ function commons_groups_views_default_views() {
   $handler->display->display_options['empty']['area']['field'] = 'area';
   $handler->display->display_options['empty']['area']['empty'] = TRUE;
   $handler->display->display_options['empty']['area']['content'] = 'Nobody has posted into this group yet.';
-  $handler->display->display_options['empty']['area']['format'] = 'plain_text';
+  $handler->display->display_options['empty']['area']['format'] = 'filtered_html';
   /* Relationship: OG membership: OG membership from Node */
   $handler->display->display_options['relationships']['og_membership_rel']['id'] = 'og_membership_rel';
   $handler->display->display_options['relationships']['og_membership_rel']['table'] = 'node';
@@ -987,6 +987,13 @@ function commons_groups_views_default_views() {
   $handler->display->display_options['pager']['options']['offset'] = '0';
   $handler->display->display_options['style_plugin'] = 'grid';
   $handler->display->display_options['row_plugin'] = 'fields';
+  /* No results behavior: Global: Text area */
+  $handler->display->display_options['empty']['area']['id'] = 'area';
+  $handler->display->display_options['empty']['area']['table'] = 'views';
+  $handler->display->display_options['empty']['area']['field'] = 'area';
+  $handler->display->display_options['empty']['area']['empty'] = TRUE;
+  $handler->display->display_options['empty']['area']['content'] = 'Nobody has contributed any site content yet.';
+  $handler->display->display_options['empty']['area']['format'] = 'filtered_html';
   /* Relationship: OG membership: OG membership from User */
   $handler->display->display_options['relationships']['og_membership_rel']['id'] = 'og_membership_rel';
   $handler->display->display_options['relationships']['og_membership_rel']['table'] = 'users';
@@ -1081,7 +1088,7 @@ function commons_groups_views_default_views() {
   $handler->display->display_options['empty']['area']['table'] = 'views';
   $handler->display->display_options['empty']['area']['field'] = 'area';
   $handler->display->display_options['empty']['area']['empty'] = TRUE;
-  $handler->display->display_options['empty']['area']['content'] = 'No groups matched the text you entered.';
+  $handler->display->display_options['empty']['area']['content'] = 'No groups have been created yet.';
   $handler->display->display_options['empty']['area']['format'] = 'filtered_html';
   /* Field: Content: Title */
   $handler->display->display_options['fields']['title']['id'] = 'title';
@@ -1157,7 +1164,7 @@ function commons_groups_views_default_views() {
     t('‹ previous'),
     t('next ›'),
     t('last »'),
-    t('No groups matched the text you entered.'),
+    t('No groups have been created yet.'),
     t('Limit to'),
     t('Feed'),
     t('Content pane'),
@@ -1251,6 +1258,7 @@ function commons_groups_views_default_views() {
     t('Sort by'),
     t('Asc'),
     t('Desc'),
+    t('Nobody has contributed any site content yet.'),
     t('OG membership from node'),
     t('All'),
     t('Block'),
@@ -1281,6 +1289,13 @@ function commons_groups_views_default_views() {
   $handler->display->display_options['pager']['options']['quantity'] = '9';
   $handler->display->display_options['style_plugin'] = 'default';
   $handler->display->display_options['row_plugin'] = 'fields';
+  /* No results behavior: Global: Text area */
+  $handler->display->display_options['empty']['area']['id'] = 'area';
+  $handler->display->display_options['empty']['area']['table'] = 'views';
+  $handler->display->display_options['empty']['area']['field'] = 'area';
+  $handler->display->display_options['empty']['area']['empty'] = TRUE;
+  $handler->display->display_options['empty']['area']['content'] = 'This person hasn\'t contributed to any groups yet.';
+  $handler->display->display_options['empty']['area']['format'] = 'filtered_html';
   /* Relationship: OG membership: Group Node from OG membership */
   $handler->display->display_options['relationships']['og_membership_related_node_group']['id'] = 'og_membership_related_node_group';
   $handler->display->display_options['relationships']['og_membership_related_node_group']['table'] = 'og_membership';
@@ -1359,6 +1374,7 @@ function commons_groups_views_default_views() {
     t('‹ previous'),
     t('next ›'),
     t('last »'),
+    t('This person hasn\'t contributed to any groups yet.'),
     t('Group node from OG membership'),
     t('All'),
     t('Content pane'),
diff --git a/profiles/commons/modules/commons/commons_groups/modules/commons_groups_directory/commons_groups_directory.info b/profiles/commons/modules/commons/commons_groups/modules/commons_groups_directory/commons_groups_directory.info
index eded4db..88728f2 100644
--- a/profiles/commons/modules/commons/commons_groups/modules/commons_groups_directory/commons_groups_directory.info
+++ b/profiles/commons/modules/commons/commons_groups/modules/commons_groups_directory/commons_groups_directory.info
@@ -12,9 +12,9 @@ features[ctools][] = views:views_default:3.0
 features[features_api][] = api:2
 features[page_manager_pages][] = groups_directory
 
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/modules/commons/commons_groups/modules/commons_groups_pages/commons_groups_pages.info b/profiles/commons/modules/commons/commons_groups/modules/commons_groups_pages/commons_groups_pages.info
index 6ef8d63..17654d3 100644
--- a/profiles/commons/modules/commons/commons_groups/modules/commons_groups_pages/commons_groups_pages.info
+++ b/profiles/commons/modules/commons/commons_groups/modules/commons_groups_pages/commons_groups_pages.info
@@ -16,9 +16,9 @@ features[panelizer_defaults][] = node:group:default
 features[panelizer_defaults][] = node:group:default:teaser
 features[variable][] = panelizer_defaults_node_group
 
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/modules/commons/commons_images/commons_images.info b/profiles/commons/modules/commons/commons_images/commons_images.info
index 624fef3..d9a4677 100644
--- a/profiles/commons/modules/commons/commons_images/commons_images.info
+++ b/profiles/commons/modules/commons/commons_images/commons_images.info
@@ -44,9 +44,9 @@ features[picture_mapping][] = commons_default
 features[picture_mapping][] = commons_full
 features[picture_mapping][] = commons_teaser
 
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/modules/commons/commons_kissmetrics/commons_kissmetrics.info b/profiles/commons/modules/commons/commons_kissmetrics/commons_kissmetrics.info
index 296df8e..4abc48e 100644
--- a/profiles/commons/modules/commons/commons_kissmetrics/commons_kissmetrics.info
+++ b/profiles/commons/modules/commons/commons_kissmetrics/commons_kissmetrics.info
@@ -30,9 +30,9 @@ features[rules_config][] = rules_commons_kissmetrics_user_registers
 features[rules_config][] = rules_commons_kissmetrics_user_replies_to_private_message_thread
 features[rules_config][] = rules_commons_kissmetrics_user_starts_new_private_message_thread
 
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/modules/commons/commons_like/commons_like.info b/profiles/commons/modules/commons/commons_like/commons_like.info
index 4df79c8..b6e0e1a 100644
--- a/profiles/commons/modules/commons/commons_like/commons_like.info
+++ b/profiles/commons/modules/commons/commons_like/commons_like.info
@@ -13,9 +13,9 @@ features[features_api][] = api:2
 features[field_instance][] = message-commons_like_user_likes_node-field_target_nodes
 features[message_type][] = commons_like_user_likes_node
 features[variable][] = rate_widgets
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/modules/commons/commons_location/commons_location.info b/profiles/commons/modules/commons/commons_location/commons_location.info
index 017041b..9ab8573 100644
--- a/profiles/commons/modules/commons/commons_location/commons_location.info
+++ b/profiles/commons/modules/commons/commons_location/commons_location.info
@@ -8,9 +8,9 @@ dependencies[] = field_sql_storage
 features[features_api][] = api:2
 features[field_base][] = field_address
 
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/modules/commons/commons_media/commons_media.info b/profiles/commons/modules/commons/commons_media/commons_media.info
index 844d4db..b826e74 100644
--- a/profiles/commons/modules/commons/commons_media/commons_media.info
+++ b/profiles/commons/modules/commons/commons_media/commons_media.info
@@ -23,9 +23,9 @@ features[variable][] = file_entity_file_upload_wizard_skip_file_type
 features[variable][] = file_entity_file_upload_wizard_skip_scheme
 features[variable][] = media_dialog_theme
 
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/modules/commons/commons_misc/commons_misc.info b/profiles/commons/modules/commons/commons_misc/commons_misc.info
index 131ab13..6153bb5 100644
--- a/profiles/commons/modules/commons/commons_misc/commons_misc.info
+++ b/profiles/commons/modules/commons/commons_misc/commons_misc.info
@@ -25,9 +25,9 @@ features[variable][] = theme_commons_origins_settings
 features[variable][] = user_register
 features_exclude[dependencies][page_manager] = page_manager
 
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/modules/commons/commons_notices/commons_notices.info b/profiles/commons/modules/commons/commons_notices/commons_notices.info
index f81325b..c19d6b6 100644
--- a/profiles/commons/modules/commons/commons_notices/commons_notices.info
+++ b/profiles/commons/modules/commons/commons_notices/commons_notices.info
@@ -28,9 +28,9 @@ features[variable][] = node_preview_notice
 features[variable][] = node_submitted_notice
 features[views_view][] = commons_notices_latest_notices
 
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/modules/commons/commons_notify/commons_notify.info b/profiles/commons/modules/commons/commons_notify/commons_notify.info
index 0073b36..7fa7041 100644
--- a/profiles/commons/modules/commons/commons_notify/commons_notify.info
+++ b/profiles/commons/modules/commons/commons_notify/commons_notify.info
@@ -49,9 +49,9 @@ features_exclude[field_base][message_text] = message_text
 features_exclude[field_base][field_target_nodes] = field_target_nodes
 features_exclude[field_base][field_target_comments] = field_target_comments
 
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/modules/commons/commons_pages/commons_pages.info b/profiles/commons/modules/commons/commons_pages/commons_pages.info
index 64c241c..ea5514a 100644
--- a/profiles/commons/modules/commons/commons_pages/commons_pages.info
+++ b/profiles/commons/modules/commons/commons_pages/commons_pages.info
@@ -26,9 +26,9 @@ features[variable][] = node_preview_page
 features[variable][] = node_submitted_page
 features[variable][] = pathauto_node_page_pattern
 
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/modules/commons/commons_polls/commons_polls.info b/profiles/commons/modules/commons/commons_polls/commons_polls.info
index 6e265fc..b2104e7 100644
--- a/profiles/commons/modules/commons/commons_polls/commons_polls.info
+++ b/profiles/commons/modules/commons/commons_polls/commons_polls.info
@@ -45,9 +45,9 @@ features[variable][] = node_preview_poll
 features[variable][] = node_submitted_poll
 features[views_view][] = commons_bw_polls
 
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/modules/commons/commons_polls/commons_polls.install b/profiles/commons/modules/commons/commons_polls/commons_polls.install
index e196d60..661fbef 100644
--- a/profiles/commons/modules/commons/commons_polls/commons_polls.install
+++ b/profiles/commons/modules/commons/commons_polls/commons_polls.install
@@ -54,3 +54,14 @@ function commons_polls_update_7004() {
   features_revert($revert);
   return array();
 }
+
+/**
+ * Improve the browsing widget empty text.
+ */
+function commons_polls_update_7005() {
+  $revert = array(
+    'commons_polls' => array('views_view'),
+  );
+  features_revert($revert);
+  return array();
+}
diff --git a/profiles/commons/modules/commons/commons_polls/commons_polls.module b/profiles/commons/modules/commons/commons_polls/commons_polls.module
index 7e1ec8d..d3f07ee 100644
--- a/profiles/commons/modules/commons/commons_polls/commons_polls.module
+++ b/profiles/commons/modules/commons/commons_polls/commons_polls.module
@@ -7,22 +7,6 @@
 include_once 'commons_polls.features.inc';
 
 /**
-* Implements hook_commons_bw_group_widget().
-*/
-function commons_polls_commons_bw_group_widget() {
-  return array(
-    'commons_polls' => array(
-      'title' => t('Polls'),
-      'type' => 'view',
-      'vid' => 'commons_bw_polls',
-      'display' => 'default',
-      'weight' => 10,
-      'bundle' => 'poll',
-    ),
-  );
-}
-
-/**
  * Implements hook_commons_entity_integration().
  */
 function commons_polls_commons_entity_integration() {
@@ -37,6 +21,22 @@ function commons_polls_commons_entity_integration() {
 }
 
 /**
+ * Implements hook_commons_bw_group_widget().
+ */
+function commons_polls_commons_bw_group_widget() {
+  return array(
+    'commons_polls' => array(
+      'title' => t('Polls'),
+      'type' => 'view',
+      'vid' => 'commons_bw_polls',
+      'display' => 'default',
+      'weight' => 10,
+      'bundle' => 'poll',
+    ),
+  );
+}
+
+/**
 * Implements hook_strongarm_alter().
 */
  function commons_polls_strongarm_alter(&$items) {
@@ -157,3 +157,15 @@ function commons_polls_form_commons_bw_partial_node_form_after_build($form) {
 
   return $form;
 }
+
+/**
+ * Implements hook_views_pre_render().
+ */
+function commons_polls_views_pre_render(&$view) {
+  // Improve the browsing widget empty text when displayed outside of a group.
+  // TODO: Enable og_context and check group context instead of looking for an
+  // empty first argument.
+  if (empty($view->args[0]) && $view->name == 'commons_bw_polls') {
+    $view->display_handler->handlers['empty']['area']->options['content'] = t('No polls have been created.');
+  }
+}
diff --git a/profiles/commons/modules/commons/commons_polls/commons_polls.views_default.inc b/profiles/commons/modules/commons/commons_polls/commons_polls.views_default.inc
index ff5609c..fdc0e3f 100644
--- a/profiles/commons/modules/commons/commons_polls/commons_polls.views_default.inc
+++ b/profiles/commons/modules/commons/commons_polls/commons_polls.views_default.inc
@@ -45,8 +45,9 @@ function commons_polls_views_default_views() {
   $handler->display->display_options['empty']['area']['id'] = 'area';
   $handler->display->display_options['empty']['area']['table'] = 'views';
   $handler->display->display_options['empty']['area']['field'] = 'area';
+  $handler->display->display_options['empty']['area']['empty'] = TRUE;
   $handler->display->display_options['empty']['area']['content'] = 'No polls have been added to this group.';
-  $handler->display->display_options['empty']['area']['format'] = 'plain_text';
+  $handler->display->display_options['empty']['area']['format'] = 'filtered_html';
   /* Relationship: OG membership: OG membership from Node */
   $handler->display->display_options['relationships']['og_membership_rel']['id'] = 'og_membership_rel';
   $handler->display->display_options['relationships']['og_membership_rel']['table'] = 'node';
diff --git a/profiles/commons/modules/commons/commons_posts/commons_posts.info b/profiles/commons/modules/commons/commons_posts/commons_posts.info
index 2d6edd4..d21e68c 100644
--- a/profiles/commons/modules/commons/commons_posts/commons_posts.info
+++ b/profiles/commons/modules/commons/commons_posts/commons_posts.info
@@ -51,9 +51,9 @@ features[variable][] = node_preview_post
 features[variable][] = node_submitted_post
 features[views_view][] = commons_bw_posts
 
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/modules/commons/commons_posts/commons_posts.install b/profiles/commons/modules/commons/commons_posts/commons_posts.install
index 688c79f..b39a48c 100644
--- a/profiles/commons/modules/commons/commons_posts/commons_posts.install
+++ b/profiles/commons/modules/commons/commons_posts/commons_posts.install
@@ -65,3 +65,14 @@ function commons_posts_update_7005() {
   features_revert($revert);
   return array();
 }
+
+/**
+ * Improve the browsing widget empty text.
+ */
+function commons_posts_update_7006() {
+  $revert = array(
+    'commons_posts' => array('views_view'),
+  );
+  features_revert($revert);
+  return array();
+}
diff --git a/profiles/commons/modules/commons/commons_posts/commons_posts.module b/profiles/commons/modules/commons/commons_posts/commons_posts.module
index 8c3b11d..fe6772f 100644
--- a/profiles/commons/modules/commons/commons_posts/commons_posts.module
+++ b/profiles/commons/modules/commons/commons_posts/commons_posts.module
@@ -7,6 +7,20 @@
 include_once 'commons_posts.features.inc';
 
 /**
+ * Implements hook_commons_entity_integration().
+ */
+function commons_posts_commons_entity_integration() {
+  return array(
+    'node' => array(
+      'post' => array(
+        'media' => TRUE,
+        'is_group_content' => TRUE,
+      ),
+    ),
+  );
+}
+
+/**
 * Implements hook_commons_bw_group_widget().
 */
 function commons_posts_commons_bw_group_widget() {
@@ -92,20 +106,6 @@ function commons_posts_commons_activity_streams_message_selection_alter(&$messag
 }
 
 /**
- * Implements hook_commons_entity_integration().
- */
-function commons_posts_commons_entity_integration() {
-  return array(
-    'node' => array(
-      'post' => array(
-        'media' => TRUE,
-        'is_group_content' => TRUE,
-      ),
-    ),
-  );
-}
-
-/**
 * Implements hook_strongarm_alter().
 */
  function commons_posts_strongarm_alter(&$items) {
@@ -142,3 +142,15 @@ function commons_posts_views_default_views_alter(&$views) {
     $views['commons_bw_all']->display['default']->display_options['filters']['type']['value']['post'] = 'post';
   }
 }
+
+/**
+ * Implements hook_views_pre_render().
+ */
+function commons_posts_views_pre_render(&$view) {
+  // Improve the browsing widget empty text when displayed outside of a group.
+  // TODO: Enable og_context and check group context instead of looking for an
+  // empty first argument.
+  if (empty($view->args[0]) && $view->name == 'commons_bw_posts') {
+    $view->display_handler->handlers['empty']['area']->options['content'] = t('No posts have been created.');
+  }
+}
diff --git a/profiles/commons/modules/commons/commons_posts/commons_posts.views_default.inc b/profiles/commons/modules/commons/commons_posts/commons_posts.views_default.inc
index fb7c0ea..89b786b 100644
--- a/profiles/commons/modules/commons/commons_posts/commons_posts.views_default.inc
+++ b/profiles/commons/modules/commons/commons_posts/commons_posts.views_default.inc
@@ -47,7 +47,7 @@ function commons_posts_views_default_views() {
   $handler->display->display_options['empty']['area']['field'] = 'area';
   $handler->display->display_options['empty']['area']['empty'] = TRUE;
   $handler->display->display_options['empty']['area']['content'] = 'No posts have been added to this group.';
-  $handler->display->display_options['empty']['area']['format'] = 'plain_text';
+  $handler->display->display_options['empty']['area']['format'] = 'filtered_html';
   /* Relationship: OG membership: OG membership from Node */
   $handler->display->display_options['relationships']['og_membership_rel']['id'] = 'og_membership_rel';
   $handler->display->display_options['relationships']['og_membership_rel']['table'] = 'node';
diff --git a/profiles/commons/modules/commons/commons_profile_base/commons_profile_base.info b/profiles/commons/modules/commons/commons_profile_base/commons_profile_base.info
index d8ac93a..6dc83d3 100644
--- a/profiles/commons/modules/commons/commons_profile_base/commons_profile_base.info
+++ b/profiles/commons/modules/commons/commons_profile_base/commons_profile_base.info
@@ -23,9 +23,9 @@ features[variable][] = user_picture_file_size
 features[variable][] = user_picture_style
 features[variable][] = user_pictures
 
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/modules/commons/commons_profile_social/commons_profile_social.info b/profiles/commons/modules/commons/commons_profile_social/commons_profile_social.info
index ab2fbc8..7687364 100644
--- a/profiles/commons/modules/commons/commons_profile_social/commons_profile_social.info
+++ b/profiles/commons/modules/commons/commons_profile_social/commons_profile_social.info
@@ -12,9 +12,9 @@ features[field_base][] = field_twitter_url
 features[field_instance][] = user-user-field_facebook_url
 features[field_instance][] = user-user-field_linkedin_url
 features[field_instance][] = user-user-field_twitter_url
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/modules/commons/commons_q_a/commons_q_a.info b/profiles/commons/modules/commons/commons_q_a/commons_q_a.info
index 7640a51..0fea478 100644
--- a/profiles/commons/modules/commons/commons_q_a/commons_q_a.info
+++ b/profiles/commons/modules/commons/commons_q_a/commons_q_a.info
@@ -77,6 +77,7 @@ features[variable][] = node_preview_answer
 features[variable][] = node_preview_question
 features[variable][] = node_submitted_answer
 features[variable][] = node_submitted_question
+features[variable][] = pathauto_node_answer_pattern
 features[views_view][] = commons_bw_q_a
 features[views_view][] = commons_question_answers
 features_exclude[dependencies][message] = message
@@ -94,9 +95,9 @@ features_exclude[field_instance][og_group_ref] = og_group_ref
 features_exclude[field_instance][node-answer-og_group_ref] = node-answer-og_group_ref
 features_exclude[field_instance][node-question-og_group_ref] = node-question-og_group_ref
 
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/modules/commons/commons_q_a/commons_q_a.install b/profiles/commons/modules/commons/commons_q_a/commons_q_a.install
index 32a6078..aa6ec72 100644
--- a/profiles/commons/modules/commons/commons_q_a/commons_q_a.install
+++ b/profiles/commons/modules/commons/commons_q_a/commons_q_a.install
@@ -125,3 +125,25 @@ function commons_q_a_update_3110() {
   features_revert($revert);
   return array();
 }
+
+/**
+ * Change the Answer URL alias to be a subpath of the question.
+ */
+function commons_q_a_update_3111() {
+  $revert = array(
+    'commons_q_a' => array('variable'),
+  );
+  features_revert($revert);
+  return array();
+}
+
+/**
+ * Improve the browsing widget empty text.
+ */
+function commons_q_a_update_3112() {
+  $revert = array(
+    'commons_q_a' => array('views_view'),
+  );
+  features_revert($revert);
+  return array();
+}
diff --git a/profiles/commons/modules/commons/commons_q_a/commons_q_a.module b/profiles/commons/modules/commons/commons_q_a/commons_q_a.module
index b406183..3fc37fd 100644
--- a/profiles/commons/modules/commons/commons_q_a/commons_q_a.module
+++ b/profiles/commons/modules/commons/commons_q_a/commons_q_a.module
@@ -7,21 +7,27 @@
 include_once 'commons_q_a.features.inc';
 
 /**
- * Implements hook_theme().
+ * Implements hook_commons_entity_integration().
  */
-function commons_q_a_theme() {
+function commons_q_a_commons_entity_integration() {
   return array(
-    'rate_template_commons_thumbs_up_down' => array(
-      'variables' => array('links' => NULL, 'results' => NULL, 'mode' => NULL, 'just_voted' => FALSE, 'content_type' => NULL, 'content_id' => NULL, 'display_options' => NULL),
-      'template' => 'commons-thumbs-up-down',
+    'node' => array(
+      'question' => array(
+        'media' => TRUE,
+        'is_group_content' => TRUE,
+      ),
+      'answer' => array(
+        'exclude_topics' => TRUE,
+        'exclude_rate' => TRUE,
+        'is_group_content' => TRUE,
+      ),
     ),
   );
 }
 
-
 /**
-* Implements hook_commons_bw_group_widget().
-*/
+ * Implements hook_commons_bw_group_widget().
+ */
 function commons_q_a_commons_bw_group_widget() {
   return array(
     'commons_q_a' => array(
@@ -36,6 +42,18 @@ function commons_q_a_commons_bw_group_widget() {
 }
 
 /**
+ * Implements hook_theme().
+ */
+function commons_q_a_theme() {
+  return array(
+    'rate_template_commons_thumbs_up_down' => array(
+      'variables' => array('links' => NULL, 'results' => NULL, 'mode' => NULL, 'just_voted' => FALSE, 'content_type' => NULL, 'content_id' => NULL, 'display_options' => NULL),
+      'template' => 'commons-thumbs-up-down',
+    ),
+  );
+}
+
+/**
  * Implements hook_node_view().
  *
  * Provides an answer button to bring a user down to the answer form.
@@ -144,6 +162,13 @@ function commons_q_a_check_answer_access($question) {
  * Implements hook_views_pre_render().
  */
 function commons_q_a_views_pre_render(&$view) {
+  // Improve the browsing widget empty text when displayed outside of a group.
+  // TODO: Enable og_context and check group context instead of looking for an
+  // empty first argument.
+  if (empty($view->args[0]) && $view->name == 'commons_bw_q_a') {
+    $view->display_handler->handlers['empty']['area']->options['content'] = t('No questions have been created.');
+  }
+
   if ($view->name == 'commons_question_answers' && !empty($view->args[0])) {
     // If the user has access to post into any of the groups associated
     // with the question, embed a simplified answer node form.
@@ -283,26 +308,6 @@ function commons_q_a_commons_bw_create_all_widget($group) {
 }
 
 /**
- * Implements hook_commons_entity_integration().
- */
-function commons_q_a_commons_entity_integration() {
-  return array(
-    'node' => array(
-      'question' => array(
-        'media' => TRUE,
-        'is_group_content' => TRUE,
-      ),
-      'answer' => array(
-        'exclude_topics' => TRUE,
-        'exclude_rate' => TRUE,
-        'is_group_content' => TRUE,
-      ),
-    ),
-  );
-}
-
-
-/**
  * Submit handler for the submit button on the answer node form.
  */
 function commons_q_a_answer_submit($form, &$form_state) {
diff --git a/profiles/commons/modules/commons/commons_q_a/commons_q_a.strongarm.inc b/profiles/commons/modules/commons/commons_q_a/commons_q_a.strongarm.inc
index 623db62..f800d2b 100644
--- a/profiles/commons/modules/commons/commons_q_a/commons_q_a.strongarm.inc
+++ b/profiles/commons/modules/commons/commons_q_a/commons_q_a.strongarm.inc
@@ -319,5 +319,12 @@ function commons_q_a_strongarm() {
   $strongarm->value = 1;
   $export['node_submitted_question'] = $strongarm;
 
+  $strongarm = new stdClass();
+  $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
+  $strongarm->api_version = 1;
+  $strongarm->name = "pathauto_node_answer_pattern";
+  $strongarm->value = 'groups/[node:og-group-ref:0:title-field]/[node:field-related-question:title-field]/[node:title-field]';
+  $export["pathauto_node_answer_pattern"] = $strongarm;
+
   return $export;
 }
diff --git a/profiles/commons/modules/commons/commons_q_a/commons_q_a.views_default.inc b/profiles/commons/modules/commons/commons_q_a/commons_q_a.views_default.inc
index 8d70d39..33d6be9 100644
--- a/profiles/commons/modules/commons/commons_q_a/commons_q_a.views_default.inc
+++ b/profiles/commons/modules/commons/commons_q_a/commons_q_a.views_default.inc
@@ -46,7 +46,7 @@ function commons_q_a_views_default_views() {
   $handler->display->display_options['empty']['area']['table'] = 'views';
   $handler->display->display_options['empty']['area']['field'] = 'area';
   $handler->display->display_options['empty']['area']['empty'] = TRUE;
-  $handler->display->display_options['empty']['area']['content'] = 'No questions have been asked in this group.';
+  $handler->display->display_options['empty']['area']['content'] = 'No questions have been added to this group.';
   $handler->display->display_options['empty']['area']['format'] = 'filtered_html';
   /* Relationship: OG membership: OG membership from Node */
   $handler->display->display_options['relationships']['og_membership_rel']['id'] = 'og_membership_rel';
diff --git a/profiles/commons/modules/commons/commons_q_a/modules/commons_q_a_pages/commons_q_a_pages.info b/profiles/commons/modules/commons/commons_q_a/modules/commons_q_a_pages/commons_q_a_pages.info
index 414b0cd..0a63625 100644
--- a/profiles/commons/modules/commons/commons_q_a/modules/commons_q_a_pages/commons_q_a_pages.info
+++ b/profiles/commons/modules/commons/commons_q_a/modules/commons_q_a_pages/commons_q_a_pages.info
@@ -12,9 +12,9 @@ features[panelizer_defaults][] = node:question:default
 features[variable][] = panelizer_defaults_node_answer
 features[variable][] = panelizer_defaults_node_question
 
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/modules/commons/commons_radioactivity/commons_radioactivity.info b/profiles/commons/modules/commons/commons_radioactivity/commons_radioactivity.info
index 7c5f397..f242350 100644
--- a/profiles/commons/modules/commons/commons_radioactivity/commons_radioactivity.info
+++ b/profiles/commons/modules/commons/commons_radioactivity/commons_radioactivity.info
@@ -17,9 +17,9 @@ features[radioactivity_decay_profile][] = commons_ra_node
 features[variable][] = commons_radioactivity_entity_types
 features[views_view][] = commons_radioactivity_admin
 
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/modules/commons/commons_radioactivity/commons_radioactivity_groups/commons_radioactivity_groups.info b/profiles/commons/modules/commons/commons_radioactivity/commons_radioactivity_groups/commons_radioactivity_groups.info
index 0838d68..d7c978b 100644
--- a/profiles/commons/modules/commons/commons_radioactivity/commons_radioactivity_groups/commons_radioactivity_groups.info
+++ b/profiles/commons/modules/commons/commons_radioactivity/commons_radioactivity_groups/commons_radioactivity_groups.info
@@ -11,9 +11,9 @@ features[features_api][] = api:2
 features[views_view][] = commons_radioactivity_groups_active_in_group
 features[views_view][] = commons_radioactivity_groups_most_active
 
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/modules/commons/commons_search/commons_search.info b/profiles/commons/modules/commons/commons_search/commons_search.info
index 967b0ab..6a1dd30 100644
--- a/profiles/commons/modules/commons/commons_search/commons_search.info
+++ b/profiles/commons/modules/commons/commons_search/commons_search.info
@@ -61,9 +61,9 @@ features[variable][] = custom_search_type_selector_all
 features[variable][] = custom_search_type_selector_label
 features[variable][] = custom_search_type_selector_label_visibility
 features[views_view][] = group_search
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/modules/commons/commons_search/modules/commons_search_core/commons_search_core.info b/profiles/commons/modules/commons/commons_search/modules/commons_search_core/commons_search_core.info
index fda0510..1c32e53 100644
--- a/profiles/commons/modules/commons/commons_search/modules/commons_search_core/commons_search_core.info
+++ b/profiles/commons/modules/commons/commons_search/modules/commons_search_core/commons_search_core.info
@@ -30,9 +30,9 @@ features[variable][] = search_active_modules
 features[variable][] = search_default_module
 features_exclude[dependencies][ctools] = ctools
 
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/modules/commons/commons_search/modules/commons_search_solr/commons_search_solr.info b/profiles/commons/modules/commons/commons_search/modules/commons_search_solr/commons_search_solr.info
index a501b47..d910652 100644
--- a/profiles/commons/modules/commons/commons_search/modules/commons_search_solr/commons_search_solr.info
+++ b/profiles/commons/modules/commons/commons_search/modules/commons_search_solr/commons_search_solr.info
@@ -28,9 +28,9 @@ features[variable][] = pm_existing_pages_disabled_solr_search
 features[variable][] = search_active_modules
 features[variable][] = search_default_module
 
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/modules/commons/commons_search/modules/commons_search_solr_user/commons_search_solr_user.info b/profiles/commons/modules/commons/commons_search/modules/commons_search_solr_user/commons_search_solr_user.info
index 12f89b9..8a2a952 100644
--- a/profiles/commons/modules/commons/commons_search/modules/commons_search_solr_user/commons_search_solr_user.info
+++ b/profiles/commons/modules/commons/commons_search/modules/commons_search_solr_user/commons_search_solr_user.info
@@ -12,9 +12,9 @@ features[apachesolr_search_page][] = user_search
 features[ctools][] = apachesolr_search:apachesolr_search_defaults:3
 features[features_api][] = api:1
 features[menu_links][] = main-menu:people
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/modules/commons/commons_search/modules/commons_search_solr_user/commons_search_solr_user.module b/profiles/commons/modules/commons/commons_search/modules/commons_search_solr_user/commons_search_solr_user.module
index 319e9fe..d003bfe 100644
--- a/profiles/commons/modules/commons/commons_search/modules/commons_search_solr_user/commons_search_solr_user.module
+++ b/profiles/commons/modules/commons/commons_search/modules/commons_search_solr_user/commons_search_solr_user.module
@@ -256,12 +256,14 @@ function commons_search_solr_user_form_alter(&$form, &$form_state, $form_id) {
 function commons_search_solr_user_form_apachesolr_search_custom_page_search_form_alter(&$form, &$form_state) {
   if ($form['#search_page']['page_id'] == 'user_search') {
     $form['#attributes']['class'][] = 'user-search-form';
-    $form['basic']['flagged'] = array(
-      '#type' => 'checkbox',
-      '#title' => t('Following'),
-      '#default_value' => (empty($_GET['flagged']) ? FALSE : TRUE),
-      '#attributes' => array('onclick' => 'this.form.submit();'),
-    );
+    if (!user_is_anonymous()) {
+      $form['basic']['flagged'] = array(
+        '#type' => 'checkbox',
+        '#title' => t('Following'),
+        '#default_value' => (empty($_GET['flagged']) ? FALSE : TRUE),
+        '#attributes' => array('onclick' => 'this.form.submit();'),
+      );
+    }
     $form['basic']['retain-filters']['#type'] = 'hidden';
     $form['basic']['retain-filters']['#value'] = 0;
     $form['basic']['keys']['#title'] = t('Limit to');
diff --git a/profiles/commons/modules/commons/commons_site_homepage/commons_site_homepage.info b/profiles/commons/modules/commons/commons_site_homepage/commons_site_homepage.info
index 3283de9..26fb889 100644
--- a/profiles/commons/modules/commons/commons_site_homepage/commons_site_homepage.info
+++ b/profiles/commons/modules/commons/commons_site_homepage/commons_site_homepage.info
@@ -20,9 +20,9 @@ features[variable][] = site_frontpage
 features[views_view][] = commons_homepage_content
 features_exclude[dependencies][views_content] = views_content
 
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/modules/commons/commons_site_homepage/commons_site_homepage.module b/profiles/commons/modules/commons/commons_site_homepage/commons_site_homepage.module
index 4b6c52c..4210348 100644
--- a/profiles/commons/modules/commons/commons_site_homepage/commons_site_homepage.module
+++ b/profiles/commons/modules/commons/commons_site_homepage/commons_site_homepage.module
@@ -41,24 +41,56 @@ function commons_homepage_user_register_login_submit($form, &$form_state) {
  */
 function commons_site_homepage_block_info() {
   $blocks['commons_site_homepage'] = array(
-    'info' => t('Commons anonymous homepage Sign up/login buttons'),
+    'info' => t('Commons anonymous homepage sign up/log in buttons'),
     'cache' => DRUPAL_NO_CACHE,
   );
+
   return $blocks;
 }
 
 /**
  * Implements hook_block_view().
- *  Defines a simple "Signup or Login" block for use
- *  on the anonymous site homepage.
  */
-function commons_site_homepage_block_view() {
-  $block['content'] = '';
-  if (variable_get('user_register', USER_REGISTER_VISITORS_ADMINISTRATIVE_APPROVAL)) {
-    $block['content'] .= l(t('Signup'), 'user/register', array('attributes' => array('class' => 'commons-sign-up', 'title' => t('Sign up')))) . ' ';
+function commons_site_homepage_block_view($delta = '') {
+  $block = array();
+
+  switch ($delta) {
+    case 'commons_site_homepage':
+      // The block does not have a default title.
+      $block['subject'] = NULL;
+
+      $links = array();
+
+      // Display a 'sign up' link if visitors can create accounts.
+      if (variable_get('user_register', USER_REGISTER_VISITORS_ADMINISTRATIVE_APPROVAL)) {
+        $links[] = array(
+          'title' => t('Sign up'),
+          'href' => 'user/register',
+          'attributes' => array(
+            'class' => array('commons-sign-up'),
+          ),
+        );
+      }
+
+      // Always display a 'log in' link.
+      $links[] = array(
+        'title' => t('Log in'),
+        'href' => 'user/login',
+        'attributes' => array(
+          'class' => array('commons-login'),
+        ),
+      );
+
+      $block['content'] = array(
+        '#theme' => 'links',
+        '#links' => $links,
+        '#attributes' => array(
+          'class' => array('links', 'inline'),
+        ),
+      );
+      break;
   }
-  $block['content'] .= l(t('Login'), 'user/login', array('attributes' => array('class' => 'commons-login')));
-  $block['subject'] = '';
+
   return $block;
 }
 
diff --git a/profiles/commons/modules/commons/commons_social_sharing/commons_social_sharing.info b/profiles/commons/modules/commons/commons_social_sharing/commons_social_sharing.info
index e20d084..230dfdc 100644
--- a/profiles/commons/modules/commons/commons_social_sharing/commons_social_sharing.info
+++ b/profiles/commons/modules/commons/commons_social_sharing/commons_social_sharing.info
@@ -17,9 +17,9 @@ features[variable][] = sharethis_teaser_option
 features[variable][] = sharethis_weight
 features[variable][] = sharethis_widget_option
 
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/modules/commons/commons_social_sharing/commons_social_sharing.module b/profiles/commons/modules/commons/commons_social_sharing/commons_social_sharing.module
index 2a0bc9e..928a28b 100644
--- a/profiles/commons/modules/commons/commons_social_sharing/commons_social_sharing.module
+++ b/profiles/commons/modules/commons/commons_social_sharing/commons_social_sharing.module
@@ -5,39 +5,3 @@
  */
 
 include_once 'commons_social_sharing.features.inc';
-
-
-/**
- * Implements hook_features_export_alter().
- */
-function commons_social_sharing_features_export_alter(&$export, $module_name) {
-  // Prevent
-  if($module_name == 'commons_social_sharing' && isset($export['features']['variable'])) {
-    unset($export['features']['variable']);
-  }
-}
-
-/**
- * Implements hook_strongarm_alter().
- */
- function commons_social_sharing_strongarm_alter(&$items) {
-  // Expose the Post content type for 'liking' via the Commons_social_sharing module
-  // by altering the configuration for the Rate.module widget that it provides.
-  if (!empty($items['rate_widgets']->value)) {
-    foreach($items['rate_widgets']->value as $key => $widget) {
-      if ($widget->name == 'commons_social_sharing') {
-        $commons_entity_integrations = commons_entity_integration_info();
-        if (!empty($commons_entity_integrations['node'])) {
-          foreach ($commons_entity_integrations['node'] as $bundle => $options) {
-            if (!isset($options['exclude_rate']) || $options['exclude_rate'] != TRUE) {
-              $items['rate_widgets']->value[$key]->node_types[] = $bundle;
-            }
-            if (!isset($options['exclude_rate_comments']) || $options['exclude_rate_comments'] != TRUE) {
-              $items['rate_widgets']->value[$key]->comment_types[] = $bundle;
-            }
-          }
-        }
-      }
-    }
-  }
-}
\ No newline at end of file
diff --git a/profiles/commons/modules/commons/commons_topics/commons_topics.info b/profiles/commons/modules/commons/commons_topics/commons_topics.info
index f8bad64..4c9ff0a 100644
--- a/profiles/commons/modules/commons/commons_topics/commons_topics.info
+++ b/profiles/commons/modules/commons/commons_topics/commons_topics.info
@@ -7,9 +7,9 @@ features[features_api][] = api:2
 features[field_base][] = field_topics
 features[taxonomy][] = topics
 
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/modules/commons/commons_trusted_contacts/commons_trusted_contacts.info b/profiles/commons/modules/commons/commons_trusted_contacts/commons_trusted_contacts.info
index 724b5a6..832d0dc 100644
--- a/profiles/commons/modules/commons/commons_trusted_contacts/commons_trusted_contacts.info
+++ b/profiles/commons/modules/commons/commons_trusted_contacts/commons_trusted_contacts.info
@@ -53,9 +53,9 @@ features_exclude[field][message-trusted_contact_request_approved-field_approving
 features_exclude[field][message-trusted_contact_request_pending-field_requesting_user] = message-trusted_contact_request_pending-field_requesting_user
 files[] = views/handlers/commons_groups_handler_send_message.inc
 
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/modules/commons/commons_trusted_contacts/commons_trusted_contacts.install b/profiles/commons/modules/commons/commons_trusted_contacts/commons_trusted_contacts.install
index 79b4148..b00c346 100644
--- a/profiles/commons/modules/commons/commons_trusted_contacts/commons_trusted_contacts.install
+++ b/profiles/commons/modules/commons/commons_trusted_contacts/commons_trusted_contacts.install
@@ -48,6 +48,13 @@ function commons_trusted_contacts_install() {
 }
 
 /**
+ * Implements hook_uninstall().
+ */
+function commons_trusted_contacts_uninstall() {
+  variable_delete('commons_trusted_contacts_restrict_messaging');
+}
+
+/**
  * Use absolute URLs for pending invitation emails.
  */
 function commons_trusted_contacts_update_3100() {
diff --git a/profiles/commons/modules/commons/commons_trusted_contacts/commons_trusted_contacts.module b/profiles/commons/modules/commons/commons_trusted_contacts/commons_trusted_contacts.module
index 4f6b97c..f860433 100644
--- a/profiles/commons/modules/commons/commons_trusted_contacts/commons_trusted_contacts.module
+++ b/profiles/commons/modules/commons/commons_trusted_contacts/commons_trusted_contacts.module
@@ -210,6 +210,11 @@ function commons_trusted_contacts_form_user_admin_settings_alter(&$form, &$form_
     '#default_value' => variable_get('commons_trusted_contacts_limit', 1000),
     '#description' => t('This setting defaults to 1000 maximum contacts for performance reasons, and should be sufficient for most sites. Set to 0 for no limit.'),
   );
+  $form['commons_trusted_contacts']['commons_trusted_contacts_global_messaging'] = array(
+    '#type' => 'checkbox',
+    '#title' => t('Allow users to message each other regardless if they are a trusted contact'),
+    '#default_value' => variable_get('commons_trusted_contacts_global_messaging', FALSE),
+  );
 }
 
 /**
@@ -314,6 +319,11 @@ function commons_trusted_contacts_field_formatter_view($entity_type, $entity, $f
   global $user;
 
   $element = array();
+  $element[0] = array(
+    '#type' => 'container',
+    '#attributes' => array(),
+  );
+  $links = array();
   $settings = $display['settings'];
 
   switch ($display['type']) {
@@ -336,93 +346,92 @@ function commons_trusted_contacts_field_formatter_view($entity_type, $entity, $f
       }
 
 
-      if ($user_is_active_member) {
-        $links['title'] = t('Message');
-        $links['href'] = 'user/' . $user->uid . '/contacts/messages/popup/' . $id;
+      if (variable_get('commons_trusted_contacts_global_messaging', FALSE) || $user_is_active_member) {
+        $link = array('#type' => 'link');
+        $link['#title'] = t('Message');
+        $link['#href'] = 'user/' . $user->uid . '/contacts/messages/popup/' . $id;
+        // without an #options array template.php doesn't assign classes
+        $link['#options'] = array();
+        $element[0][] = $link;
       }
-      else {
-        if (og_is_member($entity_type, $id, 'user', $account, array(OG_STATE_PENDING))) {
-          // If user is pending, they should not be able to apply for
-          // membership.
-          $element[0] = array(
-            '#theme' => 'html_tag__request_pending',
-            '#tag' => 'span',
-            '#value' => t('Awaiting confirmation'),
-            '#attributes' => array(
-              'class' => array('trusted-request-pending'),
+      if (og_is_member($entity_type, $id, 'user', $account, array(OG_STATE_BLOCKED))) {
+        // If user is blocked, they should not be able to apply for
+        // membership.
+        return;
+      }
+      elseif (og_is_member($entity_type, $id, 'user', $account, array(OG_STATE_PENDING))) {
+        // If user is pending, they should not be able to apply for
+        // membership.
+        $link = array(
+          '#theme' => 'html_tag__request_pending',
+          '#tag' => 'span',
+          '#value' => t('Awaiting confirmation'),
+          '#attributes' => array(
+            'class' => array('trusted-request-pending'),
+          ),
+        );
+        $element[0][] = $link;
+      }
+      elseif (!og_is_member($entity_type, $id, 'user', $account, array(OG_STATE_ACTIVE))) {
+        // Check if user can subscribe to the field.
+        if (empty($settings['field_name']) && $audience_field_name = og_get_best_group_audience_field('user', $account, $entity_type, $bundle)) {
+          $settings['field_name'] = $audience_field_name;
+        }
+        if (!$settings['field_name']) {
+          return;
+        }
+
+        $field_info = field_info_field($settings['field_name']);
+
+        // Check if entity is referencable.
+        if ($field_info['settings']['target_type'] != $entity_type) {
+          // Group type doesn't match.
+          return;
+        }
+        if (!empty($field_info['settings']['handler_settings']['target_bundles']) && !in_array($bundle, $field_info['settings']['handler_settings']['target_bundles'])) {
+          // Bundles don't match.
+          return;
+        }
+
+        if (!og_check_field_cardinality('user', $account, $settings['field_name'])) {
+          $element[0] = array('#markup' => format_plural($field_info['cardinality'], 'You are already registered to another group', 'You are already registered to @count groups'));
+          return $element;
+        }
+
+        $token = drupal_get_token('request' . ':' . $id . ':' . $account->uid);
+        $url = "request-trust/$id/$token/nojs";
+
+        $link = array('#type' => 'link');
+        $link['#title'] = t('Add as trusted contact');
+        if ($account->uid) {
+          $link['#href'] = $url;
+          $link['#options'] = array(
+            'attributes' => array(
+              'class' => array('use-ajax'),
+              'id' => 'user-' . $entity->uid
+            )
+          );
+          $element[0][] = $link;
+
+          // Ensure that the drupal.ajax and jquery.form libraries are always
+          // loaded for AJAX toggle links.
+          $element['#attached'] = array(
+            'library' => array(
+              array('system', 'drupal.ajax'),
+              array('system', 'jquery.form'),
             ),
           );
-          return $element;
         }
         else {
-          if (og_is_member($entity_type, $id, 'user', $account, array(OG_STATE_BLOCKED))) {
-            // If user is blocked, they should not be able to apply for
-            // membership.
-            return;
-          }
-
-          // Check if user can subscribe to the field.
-          if (empty($settings['field_name']) && $audience_field_name = og_get_best_group_audience_field('user', $account, $entity_type, $bundle)) {
-            $settings['field_name'] = $audience_field_name;
-          }
-          if (!$settings['field_name']) {
-            return;
-          }
-
-          $field_info = field_info_field($settings['field_name']);
-
-          // Check if entity is referencable.
-          if ($field_info['settings']['target_type'] != $entity_type) {
-            // Group type doesn't match.
-            return;
-          }
-          if (!empty($field_info['settings']['handler_settings']['target_bundles']) && !in_array($bundle, $field_info['settings']['handler_settings']['target_bundles'])) {
-            // Bundles don't match.
-            return;
-          }
-
-          if (!og_check_field_cardinality('user', $account, $settings['field_name'])) {
-            $element[0] = array('#markup' => format_plural($field_info['cardinality'], 'You are already registered to another group', 'You are already registered to @count groups'));
-            return $element;
-          }
-
-          $token = drupal_get_token('request' . ':' . $id . ':' . $account->uid);
-          $url = "request-trust/$id/$token/nojs";
-
-          $links['title'] = t('Add as trusted contact');
-          if ($account->uid) {
-            $links['href'] = $url;
-            $links['options'] = array(
-              'attributes' => array(
-                'class' => array('use-ajax'),
-                'id' => 'user-' . $entity->uid
-              )
-            );
-
-            // Ensure that the drupal.ajax and jquery.form libraries are always
-            // loaded for AJAX toggle links.
-            $element['#attached'] = array(
-              'library' => array(
-                array('system', 'drupal.ajax'),
-                array('system', 'jquery.form'),
-              ),
-            );
-          }
-          else {
-            $links['href'] = 'user/login';
-            $links['options'] = array('query' => array('destination' => $url));
-          }
+          $link = array('#type' => 'link');
+          $link['#href'] = 'user/login';
+          $link['#options'] = array('query' => array('destination' => $url));
+          $element[0][] = $link;
         }
       }
 
-      if (!empty($links['title'])) {
-        $links += array('options' => array());
-        $element[0] = array(
-          '#type' => 'link',
-          '#title' => $links['title'],
-          '#href' => $links['href'],
-          '#options' => $links['options'],
-        );
+      // If we provided any links in the container
+      if (count(element_children($element[0]))) {
         return $element;
       }
       // User didn't have permissions.
@@ -665,7 +674,8 @@ function commons_trusted_contacts_request_trust($account, $ajax) {
         ),
       ),
     );
-    $commands[] = ajax_command_replace('#user-' . $account->uid, theme('html_tag__request_pending', $element));
+    // We trip due to https://api.drupal.org/comment/32698#comment-32698
+    $commands[] = ajax_command_replace('#user-' . $account->uid, trim(theme('html_tag__request_pending', $element)));
     $page = array('#type' => 'ajax', '#commands' => $commands);
     ajax_deliver($page);
   }
@@ -931,7 +941,7 @@ function commons_trusted_contacts_privatemsg_write_access($account) {
 
   $uid = isset($account->uid) ? $account->uid : $account;
 
-  return (privatemsg_user_access('write privatemsg') && commons_group_is_trusted_contact($uid));
+  return (privatemsg_user_access('write privatemsg') && (commons_group_is_trusted_contact($uid) || variable_get('commons_trusted_contacts_global_messaging', FALSE)));
 }
 
 /**
@@ -992,11 +1002,15 @@ function commons_trusted_contacts_form_commons_bw_partial_node_form_alter(&$form
  * Adds privacy toggle to a node edit/add form.
  */
 function commons_trusted_contacts_form_add_privacy_toggle(&$form, &$form_state) {
+  $is_group_content = FALSE;
+  if (!empty($form[OG_AUDIENCE_FIELD][LANGUAGE_NONE][0]['default']['#default_value']) || !empty($form[OG_AUDIENCE_FIELD][LANGUAGE_NONE][0]['admin']['#default_value'])) {
+    $is_group_content = TRUE;
+  }
   $form['group_audience_type'] = array(
     '#type' => 'radios',
     '#title' => t('Post to'),
     '#title_display' => 'invisible',
-    '#default_value' => empty($form[OG_AUDIENCE_FIELD][LANGUAGE_NONE][0]['default']['#default_value']) ? 'private' : 'custom',
+    '#default_value' => $is_group_content ? 'custom' : 'private',
     '#options' => array(
       'custom' => t('Post to specific groups'),
       'private' => t('Post privately to all trusted contacts'),
diff --git a/profiles/commons/modules/commons/commons_user_profile_pages/commons_user_profile_pages.info b/profiles/commons/modules/commons/commons_user_profile_pages/commons_user_profile_pages.info
index 6ba34bc..efe831f 100644
--- a/profiles/commons/modules/commons/commons_user_profile_pages/commons_user_profile_pages.info
+++ b/profiles/commons/modules/commons/commons_user_profile_pages/commons_user_profile_pages.info
@@ -12,9 +12,9 @@ features[ctools][] = page_manager:pages_default:1
 features[features_api][] = api:2
 features[page_manager_handlers][] = user_view_panel_context
 
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/modules/commons/commons_utility_links/commons_utility_links.commons_utility_links.inc b/profiles/commons/modules/commons/commons_utility_links/commons_utility_links.commons_utility_links.inc
index abe465c..e4825be 100644
--- a/profiles/commons/modules/commons/commons_utility_links/commons_utility_links.commons_utility_links.inc
+++ b/profiles/commons/modules/commons/commons_utility_links/commons_utility_links.commons_utility_links.inc
@@ -19,7 +19,7 @@ function commons_utility_links_commons_utility_links() {
     );
     $links['logout'] = array(
       'href' => 'user/logout',
-      'title' => t('Logout'),
+      'title' => t('Log out'),
       'weight' => 9,
     );
   }
@@ -27,13 +27,13 @@ function commons_utility_links_commons_utility_links() {
     if (variable_get('user_register', USER_REGISTER_VISITORS_ADMINISTRATIVE_APPROVAL)) {
       $links['signup'] = array(
         'href' => 'user/register',
-        'title' => t('Signup'),
+        'title' => t('Sign up'),
         'weight' => -10,
       );
     }
     $links['login'] = array(
       'href' => 'user/login',
-      'title' => t('Login'),
+      'title' => t('Log in'),
       'weight' => -9,
     );
   }
diff --git a/profiles/commons/modules/commons/commons_utility_links/commons_utility_links.info b/profiles/commons/modules/commons/commons_utility_links/commons_utility_links.info
index ddf3862..d7e05da 100644
--- a/profiles/commons/modules/commons/commons_utility_links/commons_utility_links.info
+++ b/profiles/commons/modules/commons/commons_utility_links/commons_utility_links.info
@@ -1,9 +1,9 @@
 core = 7.x
 name = Commons Utility links block
 package = "Commons - Building blocks"
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/modules/commons/commons_wikis/commons_wikis.info b/profiles/commons/modules/commons/commons_wikis/commons_wikis.info
index d9bd63b..cfe5f84 100644
--- a/profiles/commons/modules/commons/commons_wikis/commons_wikis.info
+++ b/profiles/commons/modules/commons/commons_wikis/commons_wikis.info
@@ -62,9 +62,9 @@ features[views_view][] = commons_bw_wikis
 features[views_view][] = commons_wikis_contributor_list
 features_exclude[dependencies][commons_trusted_contacts] = commons_trusted_contacts
 
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/modules/commons/commons_wikis/commons_wikis.install b/profiles/commons/modules/commons/commons_wikis/commons_wikis.install
index c2bb6df..b35cade 100644
--- a/profiles/commons/modules/commons/commons_wikis/commons_wikis.install
+++ b/profiles/commons/modules/commons/commons_wikis/commons_wikis.install
@@ -83,3 +83,14 @@ function commons_wikis_update_7007() {
   features_revert($revert);
   return array();
 }
+
+/**
+ * Improve the browsing widget empty text.
+ */
+function commons_wikis_update_7008() {
+  $revert = array(
+    'commons_wikis' => array('views_view'),
+  );
+  features_revert($revert);
+  return array();
+}
diff --git a/profiles/commons/modules/commons/commons_wikis/commons_wikis.module b/profiles/commons/modules/commons/commons_wikis/commons_wikis.module
index c6e9ce4..7ba2211 100644
--- a/profiles/commons/modules/commons/commons_wikis/commons_wikis.module
+++ b/profiles/commons/modules/commons/commons_wikis/commons_wikis.module
@@ -7,6 +7,36 @@
 include_once 'commons_wikis.features.inc';
 
 /**
+ * Implements hook_commons_entity_integration().
+ */
+function commons_wikis_commons_entity_integration() {
+  return array(
+    'node' => array(
+      'wiki' => array(
+        'auto_title_instance' => FALSE,
+        'is_group_content' => TRUE,
+      ),
+    ),
+  );
+}
+
+/**
+ * Implements hook_commons_bw_group_widget().
+ */
+function commons_wikis_commons_bw_group_widget() {
+  return array(
+    'commons_wikis' => array(
+      'title' => t('Wikis'),
+      'type' => 'view',
+      'vid' => 'commons_bw_wikis',
+      'display' => 'default',
+      'weight' => 8,
+      'bundle' => 'wiki',
+    ),
+  );
+}
+
+/**
 * Implements hook_module_implements_alter().
 */
 function commons_wikis_module_implements_alter(&$implementations, $hook) {
@@ -147,36 +177,6 @@ function commons_wikis_form_commons_bw_partial_node_form_after_build($form) {
 }
 
 /**
- * Implements hook_commons_bw_group_widget().
- */
-function commons_wikis_commons_bw_group_widget() {
-  return array(
-    'commons_wikis' => array(
-      'title' => t('Wikis'),
-      'type' => 'view',
-      'vid' => 'commons_bw_wikis',
-      'display' => 'default',
-      'weight' => 8,
-      'bundle' => 'wiki',
-    ),
-  );
-}
-
-/**
- * Implements hook_commons_entity_integration().
- */
-function commons_wikis_commons_entity_integration() {
-  return array(
-    'node' => array(
-      'wiki' => array(
-        'auto_title_instance' => FALSE,
-        'is_group_content' => TRUE,
-      ),
-    ),
-  );
-}
-
-/**
  * Implements hook_strongarm_alter().
  */
  function commons_wikis_strongarm_alter(&$items) {
@@ -220,3 +220,15 @@ function commons_wikis_node_update($node) {
     $wrapper->save();
   }
 }
+
+/**
+ * Implements hook_views_pre_render().
+ */
+function commons_wikis_views_pre_render(&$view) {
+  // Improve the browsing widget empty text when displayed outside of a group.
+  // TODO: Enable og_context and check group context instead of looking for an
+  // empty first argument.
+  if (empty($view->args[0]) && $view->name == 'commons_bw_wikis') {
+    $view->display_handler->handlers['empty']['area']->options['content'] = t('No wikis have been created.');
+  }
+}
diff --git a/profiles/commons/modules/commons/commons_wikis/modules/commons_wikis_pages/commons_wikis_pages.info b/profiles/commons/modules/commons/commons_wikis/modules/commons_wikis_pages/commons_wikis_pages.info
index 046a6cf..48426b0 100644
--- a/profiles/commons/modules/commons/commons_wikis/modules/commons_wikis_pages/commons_wikis_pages.info
+++ b/profiles/commons/modules/commons/commons_wikis/modules/commons_wikis_pages/commons_wikis_pages.info
@@ -12,9 +12,9 @@ features[features_api][] = api:2
 features[panelizer_defaults][] = node:wiki:default
 features[variable][] = panelizer_defaults_node_wiki
 
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/modules/commons/commons_wysiwyg/commons_wysiwyg.info b/profiles/commons/modules/commons/commons_wysiwyg/commons_wysiwyg.info
index 12c8407..2812ffb 100644
--- a/profiles/commons/modules/commons/commons_wysiwyg/commons_wysiwyg.info
+++ b/profiles/commons/modules/commons/commons_wysiwyg/commons_wysiwyg.info
@@ -12,9 +12,9 @@ features[filter][] = filtered_html
 features[filter][] = full_html
 features[user_permission][] = use text format filtered_html
 
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/modules/contrib/admin_icons/admin_icons.info b/profiles/commons/modules/contrib/admin_icons/admin_icons.info
index 079f6a9..3f68413 100644
--- a/profiles/commons/modules/contrib/admin_icons/admin_icons.info
+++ b/profiles/commons/modules/contrib/admin_icons/admin_icons.info
@@ -4,8 +4,8 @@ core = 7.x
 
 
 
-; Information added by drush on 2014-04-23
+; Information added by drush on 2014-05-08
 version = ""
 project = "admin_icons"
-datestamp = "1398289209"
+datestamp = "1399579148"
 
diff --git a/profiles/commons/modules/contrib/apachesolr_og/PATCHES.txt b/profiles/commons/modules/contrib/apachesolr_og/PATCHES.txt
new file mode 100644
index 0000000..e6e8696
--- /dev/null
+++ b/profiles/commons/modules/contrib/apachesolr_og/PATCHES.txt
@@ -0,0 +1,4 @@
+The following patches have been applied to this project:
+- https://drupal.org/files/issues/apachesolr_og-check-for-anonymous.patch
+
+This file was automatically generated by Drush Make (http://drupal.org/project/drush).
\ No newline at end of file
diff --git a/profiles/commons/modules/contrib/apachesolr_og/apachesolr_og.info b/profiles/commons/modules/contrib/apachesolr_og/apachesolr_og.info
index f9f41a6..d050ce9 100644
--- a/profiles/commons/modules/contrib/apachesolr_og/apachesolr_og.info
+++ b/profiles/commons/modules/contrib/apachesolr_og/apachesolr_og.info
@@ -7,9 +7,9 @@ dependencies[] = apachesolr
 dependencies[] = og
 
 
-; Information added by drush on 2014-04-23
+; Information added by drush on 2014-05-08
 version = "7.x-1.0+2-dev"
 core = "7.x"
 project = "apachesolr_og"
-datestamp = "1398289209"
+datestamp = "1399579147"
 
diff --git a/profiles/commons/modules/contrib/apachesolr_og/apachesolr_og.module b/profiles/commons/modules/contrib/apachesolr_og/apachesolr_og.module
index 30d26c6..947b57b 100644
--- a/profiles/commons/modules/contrib/apachesolr_og/apachesolr_og.module
+++ b/profiles/commons/modules/contrib/apachesolr_og/apachesolr_og.module
@@ -7,11 +7,11 @@
 
 /**
  * Implements hook_apachesolr_field_mappings_alter().
- * 
+ *
  * Adds some special facets for the Audience Field as defined by OG
  */
 function apachesolr_og_apachesolr_field_mappings_alter(&$mappings) {
-  $mappings['per-field'][OG_AUDIENCE_FIELD] = $mappings['entityreference'];  
+  $mappings['per-field'][OG_AUDIENCE_FIELD] = $mappings['entityreference'];
   $mappings['per-field'][OG_AUDIENCE_FIELD]['alter callbacks'][] = 'apachesolr_og_alter_callback';
   $mappings['per-field'][OG_AUDIENCE_FIELD]['map callback'] = 'apachesolr_og_map_gid_label';
 }
@@ -19,7 +19,7 @@ function apachesolr_og_apachesolr_field_mappings_alter(&$mappings) {
 /**
  * Alters the build array of the OG_AUDIENCE_FIELD filter.
  * Adds a filter that allows the user to filter on his groups.
- * 
+ *
  * @global type $user
  * @param array $build
  * @param FacetapiAdapter $adapter
@@ -40,18 +40,23 @@ function apachesolr_og_alter_callback(&$build, FacetapiAdapter $adapter, $facet)
     }
 
     $search_string = apachesolr_og_get_my_groups_filter();
-    $build[$search_string] = array('#count' => $count);    
+    $build[$search_string] = array('#count' => $count);
   }
 }
 
 /**
  * Creates a special filter for filtering on the content for the current
  * users groups
- * 
+ *
  * @global type $user
  * @return type
  */
 function apachesolr_og_get_my_groups_filter() {
+  // No need to filter for anonymous users.
+  if (user_is_anonymous()) {
+    return;
+  }
+
   global $user;
   $user_groups = og_get_groups_by_user($user);
 
@@ -89,4 +94,4 @@ function apachesolr_og_map_gid_label(array $ids, array $options) {
   $map = apachesolr_entityreference_facet_map_callback($ids, $options);
   $map[$my_groups_filter_string] = t('Your groups');
   return $map;
-}
\ No newline at end of file
+}
diff --git a/profiles/commons/modules/contrib/apachesolr_user/apachesolr_user.info b/profiles/commons/modules/contrib/apachesolr_user/apachesolr_user.info
index 97a3b96..496cce4 100644
--- a/profiles/commons/modules/contrib/apachesolr_user/apachesolr_user.info
+++ b/profiles/commons/modules/contrib/apachesolr_user/apachesolr_user.info
@@ -6,8 +6,8 @@ package = Search Toolkit
 core = 7.x
 
 
-; Information added by drush on 2014-04-23
+; Information added by drush on 2014-05-08
 version = ""
 project = "apachesolr_user"
-datestamp = "1398289209"
+datestamp = "1399579147"
 
diff --git a/profiles/commons/modules/contrib/breakpoints/breakpoints.info b/profiles/commons/modules/contrib/breakpoints/breakpoints.info
index bf6b9e5..296354f 100644
--- a/profiles/commons/modules/contrib/breakpoints/breakpoints.info
+++ b/profiles/commons/modules/contrib/breakpoints/breakpoints.info
@@ -6,9 +6,9 @@ files[] = breakpoints.module
 files[] = breakpoints.test
 configure = admin/config/media/breakpoints
 
-; Information added by drush on 2014-04-23
+; Information added by drush on 2014-05-08
 version = "7.x-1.1+1-dev"
 core = "7.x"
 project = "breakpoints"
-datestamp = "1398289208"
+datestamp = "1399579147"
 
diff --git a/profiles/commons/modules/contrib/breakpoints/tests/breakpoints_theme_test.info b/profiles/commons/modules/contrib/breakpoints/tests/breakpoints_theme_test.info
index 63ba2cd..63dfd09 100644
--- a/profiles/commons/modules/contrib/breakpoints/tests/breakpoints_theme_test.info
+++ b/profiles/commons/modules/contrib/breakpoints/tests/breakpoints_theme_test.info
@@ -5,9 +5,9 @@ core = 7.x
 hidden = TRUE
 
 
-; Information added by drush on 2014-04-23
+; Information added by drush on 2014-05-08
 version = "7.x-1.1+1-dev"
 core = "7.x"
 project = "breakpoints"
-datestamp = "1398289208"
+datestamp = "1399579147"
 
diff --git a/profiles/commons/modules/contrib/breakpoints/tests/themes/breakpoints_test_theme/breakpoints_test_theme.info b/profiles/commons/modules/contrib/breakpoints/tests/themes/breakpoints_test_theme/breakpoints_test_theme.info
index 56fc81e..3ee1588 100644
--- a/profiles/commons/modules/contrib/breakpoints/tests/themes/breakpoints_test_theme/breakpoints_test_theme.info
+++ b/profiles/commons/modules/contrib/breakpoints/tests/themes/breakpoints_test_theme/breakpoints_test_theme.info
@@ -10,9 +10,9 @@ breakpoints[wide] = (min-width: 851px)
 breakpoints[tv] = only screen and (min-width: 3456px)
 
 
-; Information added by drush on 2014-04-23
+; Information added by drush on 2014-05-08
 version = "7.x-1.1+1-dev"
 core = "7.x"
 project = "breakpoints"
-datestamp = "1398289208"
+datestamp = "1399579147"
 
diff --git a/profiles/commons/modules/contrib/ckeditor/ckeditor.info b/profiles/commons/modules/contrib/ckeditor/ckeditor.info
index fa9fd78..b1b917c 100644
--- a/profiles/commons/modules/contrib/ckeditor/ckeditor.info
+++ b/profiles/commons/modules/contrib/ckeditor/ckeditor.info
@@ -5,9 +5,9 @@ package     = User interface
 configure   = admin/config/content/ckeditor
 
 
-; Information added by drush on 2014-04-23
+; Information added by drush on 2014-05-08
 version = "7.x-1.13+11-dev"
 core = "7.x"
 project = "ckeditor"
-datestamp = "1398289209"
+datestamp = "1399579147"
 
diff --git a/profiles/commons/modules/contrib/ctools/bulk_export/bulk_export.info b/profiles/commons/modules/contrib/ctools/bulk_export/bulk_export.info
index 0a30fe0..4bee683 100644
--- a/profiles/commons/modules/contrib/ctools/bulk_export/bulk_export.info
+++ b/profiles/commons/modules/contrib/ctools/bulk_export/bulk_export.info
@@ -5,9 +5,9 @@ dependencies[] = ctools
 package = Chaos tool suite
 
 
-; Information added by drush on 2014-04-23
+; Information added by drush on 2014-05-08
 version = "7.x-1.4+4-dev"
 core = "7.x"
 project = "ctools"
-datestamp = "1398289209"
+datestamp = "1399579147"
 
diff --git a/profiles/commons/modules/contrib/ctools/ctools.info b/profiles/commons/modules/contrib/ctools/ctools.info
index d54e7ec..9ec6699 100644
--- a/profiles/commons/modules/contrib/ctools/ctools.info
+++ b/profiles/commons/modules/contrib/ctools/ctools.info
@@ -7,9 +7,9 @@ files[] = includes/math-expr.inc
 files[] = includes/stylizer.inc
 
 
-; Information added by drush on 2014-04-23
+; Information added by drush on 2014-05-08
 version = "7.x-1.4+4-dev"
 core = "7.x"
 project = "ctools"
-datestamp = "1398289209"
+datestamp = "1399579147"
 
diff --git a/profiles/commons/modules/contrib/ctools/ctools_access_ruleset/ctools_access_ruleset.info b/profiles/commons/modules/contrib/ctools/ctools_access_ruleset/ctools_access_ruleset.info
index 77a7d88..8a6188b 100644
--- a/profiles/commons/modules/contrib/ctools/ctools_access_ruleset/ctools_access_ruleset.info
+++ b/profiles/commons/modules/contrib/ctools/ctools_access_ruleset/ctools_access_ruleset.info
@@ -5,9 +5,9 @@ package = Chaos tool suite
 dependencies[] = ctools
 
 
-; Information added by drush on 2014-04-23
+; Information added by drush on 2014-05-08
 version = "7.x-1.4+4-dev"
 core = "7.x"
 project = "ctools"
-datestamp = "1398289209"
+datestamp = "1399579147"
 
diff --git a/profiles/commons/modules/contrib/ctools/ctools_ajax_sample/ctools_ajax_sample.info b/profiles/commons/modules/contrib/ctools/ctools_ajax_sample/ctools_ajax_sample.info
index c58f075..e2c1c6e 100644
--- a/profiles/commons/modules/contrib/ctools/ctools_ajax_sample/ctools_ajax_sample.info
+++ b/profiles/commons/modules/contrib/ctools/ctools_ajax_sample/ctools_ajax_sample.info
@@ -5,9 +5,9 @@ dependencies[] = ctools
 core = 7.x
 
 
-; Information added by drush on 2014-04-23
+; Information added by drush on 2014-05-08
 version = "7.x-1.4+4-dev"
 core = "7.x"
 project = "ctools"
-datestamp = "1398289209"
+datestamp = "1399579147"
 
diff --git a/profiles/commons/modules/contrib/ctools/ctools_custom_content/ctools_custom_content.info b/profiles/commons/modules/contrib/ctools/ctools_custom_content/ctools_custom_content.info
index 186d3fa..d3ef419 100644
--- a/profiles/commons/modules/contrib/ctools/ctools_custom_content/ctools_custom_content.info
+++ b/profiles/commons/modules/contrib/ctools/ctools_custom_content/ctools_custom_content.info
@@ -5,9 +5,9 @@ package = Chaos tool suite
 dependencies[] = ctools
 
 
-; Information added by drush on 2014-04-23
+; Information added by drush on 2014-05-08
 version = "7.x-1.4+4-dev"
 core = "7.x"
 project = "ctools"
-datestamp = "1398289209"
+datestamp = "1399579147"
 
diff --git a/profiles/commons/modules/contrib/ctools/ctools_plugin_example/ctools_plugin_example.info b/profiles/commons/modules/contrib/ctools/ctools_plugin_example/ctools_plugin_example.info
index b1e6abd..f48aad3 100644
--- a/profiles/commons/modules/contrib/ctools/ctools_plugin_example/ctools_plugin_example.info
+++ b/profiles/commons/modules/contrib/ctools/ctools_plugin_example/ctools_plugin_example.info
@@ -8,9 +8,9 @@ dependencies[] = advanced_help
 core = 7.x
 
 
-; Information added by drush on 2014-04-23
+; Information added by drush on 2014-05-08
 version = "7.x-1.4+4-dev"
 core = "7.x"
 project = "ctools"
-datestamp = "1398289209"
+datestamp = "1399579147"
 
diff --git a/profiles/commons/modules/contrib/ctools/page_manager/page_manager.info b/profiles/commons/modules/contrib/ctools/page_manager/page_manager.info
index 4f2ace9..c13753c 100644
--- a/profiles/commons/modules/contrib/ctools/page_manager/page_manager.info
+++ b/profiles/commons/modules/contrib/ctools/page_manager/page_manager.info
@@ -5,9 +5,9 @@ dependencies[] = ctools
 package = Chaos tool suite
 
 
-; Information added by drush on 2014-04-23
+; Information added by drush on 2014-05-08
 version = "7.x-1.4+4-dev"
 core = "7.x"
 project = "ctools"
-datestamp = "1398289209"
+datestamp = "1399579147"
 
diff --git a/profiles/commons/modules/contrib/ctools/stylizer/stylizer.info b/profiles/commons/modules/contrib/ctools/stylizer/stylizer.info
index 2a54673..d4ab665 100644
--- a/profiles/commons/modules/contrib/ctools/stylizer/stylizer.info
+++ b/profiles/commons/modules/contrib/ctools/stylizer/stylizer.info
@@ -6,9 +6,9 @@ dependencies[] = ctools
 dependencies[] = color
 
 
-; Information added by drush on 2014-04-23
+; Information added by drush on 2014-05-08
 version = "7.x-1.4+4-dev"
 core = "7.x"
 project = "ctools"
-datestamp = "1398289209"
+datestamp = "1399579147"
 
diff --git a/profiles/commons/modules/contrib/ctools/term_depth/term_depth.info b/profiles/commons/modules/contrib/ctools/term_depth/term_depth.info
index ee3b8c1..d03b991 100644
--- a/profiles/commons/modules/contrib/ctools/term_depth/term_depth.info
+++ b/profiles/commons/modules/contrib/ctools/term_depth/term_depth.info
@@ -4,9 +4,9 @@ core = 7.x
 dependencies[] = ctools
 package = Chaos tool suite
 
-; Information added by drush on 2014-04-23
+; Information added by drush on 2014-05-08
 version = "7.x-1.4+4-dev"
 core = "7.x"
 project = "ctools"
-datestamp = "1398289209"
+datestamp = "1399579147"
 
diff --git a/profiles/commons/modules/contrib/ctools/tests/ctools_export_test/ctools_export_test.info b/profiles/commons/modules/contrib/ctools/tests/ctools_export_test/ctools_export_test.info
index 61da909..6cdfe34 100644
--- a/profiles/commons/modules/contrib/ctools/tests/ctools_export_test/ctools_export_test.info
+++ b/profiles/commons/modules/contrib/ctools/tests/ctools_export_test/ctools_export_test.info
@@ -8,9 +8,9 @@ hidden = TRUE
 files[] = ctools_export.test
 
 
-; Information added by drush on 2014-04-23
+; Information added by drush on 2014-05-08
 version = "7.x-1.4+4-dev"
 core = "7.x"
 project = "ctools"
-datestamp = "1398289209"
+datestamp = "1399579147"
 
diff --git a/profiles/commons/modules/contrib/ctools/tests/ctools_plugin_test.info b/profiles/commons/modules/contrib/ctools/tests/ctools_plugin_test.info
index 2d1d63e..b42c287 100644
--- a/profiles/commons/modules/contrib/ctools/tests/ctools_plugin_test.info
+++ b/profiles/commons/modules/contrib/ctools/tests/ctools_plugin_test.info
@@ -12,9 +12,9 @@ files[] = math_expression_stack.test
 hidden = TRUE
 
 
-; Information added by drush on 2014-04-23
+; Information added by drush on 2014-05-08
 version = "7.x-1.4+4-dev"
 core = "7.x"
 project = "ctools"
-datestamp = "1398289209"
+datestamp = "1399579147"
 
diff --git a/profiles/commons/modules/contrib/ctools/views_content/views_content.info b/profiles/commons/modules/contrib/ctools/views_content/views_content.info
index 916a980..dd2bb2c 100644
--- a/profiles/commons/modules/contrib/ctools/views_content/views_content.info
+++ b/profiles/commons/modules/contrib/ctools/views_content/views_content.info
@@ -10,9 +10,9 @@ files[] = plugins/views/views_content_plugin_display_panel_pane.inc
 files[] = plugins/views/views_content_plugin_style_ctools_context.inc
 
 
-; Information added by drush on 2014-04-23
+; Information added by drush on 2014-05-08
 version = "7.x-1.4+4-dev"
 core = "7.x"
 project = "ctools"
-datestamp = "1398289209"
+datestamp = "1399579147"
 
diff --git a/profiles/commons/modules/contrib/email_registration/email_registration.info b/profiles/commons/modules/contrib/email_registration/email_registration.info
index 82afb1f..b38265a 100644
--- a/profiles/commons/modules/contrib/email_registration/email_registration.info
+++ b/profiles/commons/modules/contrib/email_registration/email_registration.info
@@ -3,9 +3,10 @@ description = Allows users to register with an e-mail address as their username.
 files[] = email_registration.test
 core = 7.x
 
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-1.2"
+
+; Information added by drush on 2014-05-08
+version = "7.x-1.2+1-dev"
 core = "7.x"
 project = "email_registration"
-datestamp = "1398265775"
+datestamp = "1399579145"
 
diff --git a/profiles/commons/modules/contrib/email_registration/email_registration.install b/profiles/commons/modules/contrib/email_registration/email_registration.install
index 3522ae1..1190491 100644
--- a/profiles/commons/modules/contrib/email_registration/email_registration.install
+++ b/profiles/commons/modules/contrib/email_registration/email_registration.install
@@ -23,3 +23,10 @@ function email_registration_requirements() {
 
   return $requirements;
 }
+
+/**
+ * Implements hook_uninstall().
+ */
+function email_registration_uninstall() {
+  variable_del('email_registration_login_with_username');
+}
diff --git a/profiles/commons/modules/contrib/email_registration/email_registration.module b/profiles/commons/modules/contrib/email_registration/email_registration.module
index 65c34cc..d2e9641 100644
--- a/profiles/commons/modules/contrib/email_registration/email_registration.module
+++ b/profiles/commons/modules/contrib/email_registration/email_registration.module
@@ -135,8 +135,12 @@ function email_registration_form_user_pass_alter(&$form, &$form_state) {
  * Implements hook_form_FORM_ID_alter().
  */
 function email_registration_form_user_login_alter(&$form, &$form_state) {
-  $form['name']['#title'] = t('E-mail');
-  $form['name']['#description'] = t('Enter your e-mail address.');
+  $form['name']['#title'] = variable_get('email_registration_login_with_username', TRUE)
+    ? t('E-mail or username')
+    : t('E-mail');
+  $form['name']['#description'] = variable_get('email_registration_login_with_username', TRUE)
+      ? t('Enter your e-mail address or username.')
+      : t('Enter your e-mail address.');
   $form['name']['#element_validate'][] = 'email_registration_user_login_validate';
   $form['pass']['#description'] = t('Enter the password that accompanies your e-mail.');
 }
@@ -145,11 +149,36 @@ function email_registration_form_user_login_alter(&$form, &$form_state) {
  * Implements hook_form_FORM_ID_alter().
  */
 function email_registration_form_user_login_block_alter(&$form, &$form_state) {
-  $form['name']['#title'] = t('E-mail');
+  $form['name']['#title'] = variable_get('email_registration_login_with_username', TRUE)
+    ? t('E-mail or username')
+    : t('E-mail');
   $form['name']['#element_validate'][] = 'email_registration_user_login_validate';
 }
 
 /**
+ * Implements hook_form_FORM_ID_alter().
+ */
+function email_registration_form_user_admin_settings_alter(&$form, &$form_state) {
+  $form['registration_cancellation']['email_registration_login_with_username'] = array(
+    '#type' => 'checkbox',
+    '#title' => t('Allow users login with e-mail or username.'),
+    '#description' => t('Allow users to login with their username in addition to their e-mail.'),
+    '#default_value' => variable_get('email_registration_login_with_username', TRUE),
+    );
+  $form['#submit'][] = 'email_registration_form_user_admin_settings_submit';
+}
+
+/**
+ * Submit function for user_admin_settings to save our variable.
+ *
+ * @see email_registration_form_user_admin_settings_alter().
+ */
+function email_registration_form_user_admin_settings_submit($form, &$form_state) {
+  variable_set('email_registration_login_with_username', $form_state['values']['email_registration_login_with_username']);
+}
+
+
+/**
  * Form element validation handler for the user login form.
  *
  * Allows users to authenticate by email, which is our preferred method.
@@ -158,9 +187,25 @@ function email_registration_user_login_validate($form, &$form_state) {
   if (isset($form_state['values']['name'])) {
     // Keep the email value in form state for further validation.
     $form_state['values']['email'] = $form_state['values']['name'];
-    if ($name = db_query('SELECT name FROM {users} WHERE LOWER(mail) = LOWER(:name)', array(':name' => $form_state['values']['name']))->fetchField()) {
+
+    // First, assume that the given value is an e-mail, and try to load the
+    // username matching it, if any.
+    $name = db_query('SELECT name FROM {users} WHERE LOWER(mail) = LOWER(:name)', array(':name' => $form_state['values']['name']))->fetchField();
+    if (!empty($name)) {
+      // If the name matches an e-mail, assume that it's the desired name and
+      // set the username in the form values.
       $form_state['values']['name'] = $name;
     }
+    elseif (!variable_get('email_registration_login_with_username', TRUE)) {
+      // If no username was found for the e-mail, and registration with username
+      // is not allowed, unset the name from the form. This prevents
+      // user_login_authenticate_validate() from trying to load a user from the
+      // value as a username, which in turn causes user_login_final_validate()
+      // to set a form error telling the user that no account has been found.
+      // We have to set this to NULL rather than FALSE, because
+      // user_login_name_validate() uses isset() rather than empty().
+      $form_state['values']['name'] = NULL;
+    }
   }
 }
 
diff --git a/profiles/commons/modules/contrib/email_registration/email_registration.test b/profiles/commons/modules/contrib/email_registration/email_registration.test
index 3362b80..c55fa72 100644
--- a/profiles/commons/modules/contrib/email_registration/email_registration.test
+++ b/profiles/commons/modules/contrib/email_registration/email_registration.test
@@ -68,6 +68,23 @@ class EmailRegistrationTestCase extends DrupalWebTestCase {
     );
     $this->drupalPost('/user/register', $register, t('Create new account'));
     $this->assertRaw('Registration successful. You are now logged in.', t('User properly created, immediately logged in.'));
+
+    // Try to login with just username, should succeed by default.
+    $this->drupalLogout();
+
+    $login = array(
+      'name' => $name,
+      'pass' => $pass,
+    );
+    $this->drupalPost('user/login', $login, t('Log in'));
+    $this->assertRaw('<title>' . $name . ' | Drupal</title>', t('By default, username can log in.'));
+    $this->drupalLogout();
+
+    // Disallow logins with username and try to login with just username, should fail.
+    variable_set('email_registration_login_with_username', FALSE);
+    $this->drupalPost('user/login', $login, t('Log in'));
+    $this->assertRaw('<title>User account | Drupal</title>', t('When disabled, a user cannot login with just their username.'));
+
   }
 
 }
diff --git a/profiles/commons/modules/contrib/gravatar/gravatar.info b/profiles/commons/modules/contrib/gravatar/gravatar.info
index f05932c..ffde689 100644
--- a/profiles/commons/modules/contrib/gravatar/gravatar.info
+++ b/profiles/commons/modules/contrib/gravatar/gravatar.info
@@ -7,9 +7,9 @@ files[] = gravatar.admin.inc
 configure = admin/config/people/gravatar
 
 
-; Information added by drush on 2014-04-23
+; Information added by drush on 2014-05-08
 version = "7.x-1.1+5-dev"
 core = "7.x"
 project = "gravatar"
-datestamp = "1398289205"
+datestamp = "1399579144"
 
diff --git a/profiles/commons/modules/contrib/i18nviews/i18nviews.info b/profiles/commons/modules/contrib/i18nviews/i18nviews.info
index 33dcf8a..a6524d7 100644
--- a/profiles/commons/modules/contrib/i18nviews/i18nviews.info
+++ b/profiles/commons/modules/contrib/i18nviews/i18nviews.info
@@ -27,8 +27,8 @@ files[] = includes/i18nviews_handler_filter_term_node_tid_depth.inc
 files[] = includes/i18nviews_plugin_argument_validate_i18n_taxonomy_term.inc
 files[] = includes/i18nviews_plugin_localization_i18nstrings.inc
 
-; Information added by drush on 2014-04-23
+; Information added by drush on 2014-05-08
 version = ""
 project = "i18nviews"
-datestamp = "1398289205"
+datestamp = "1399579144"
 
diff --git a/profiles/commons/modules/contrib/lingotek/README.txt b/profiles/commons/modules/contrib/lingotek/README.txt
index 5aa70ab..451d834 100644
--- a/profiles/commons/modules/contrib/lingotek/README.txt
+++ b/profiles/commons/modules/contrib/lingotek/README.txt
@@ -17,7 +17,6 @@ REQUIREMENTS
 Dependencies:
   Chaos Tools
   Internationalization Suite
-  Internationalization Views
   Localization update
   Title
   Translation template extractor
@@ -26,6 +25,7 @@ Dependencies:
 
 Modules that we integrate with (optional):
   Entity Translation - version beta1 or greater
+  Internationalization Views
   Workbench Moderation
 
 
diff --git a/profiles/commons/modules/contrib/lingotek/js/lingotek.admin.js b/profiles/commons/modules/contrib/lingotek/js/lingotek.admin.js
index 17364be..111b697 100644
--- a/profiles/commons/modules/contrib/lingotek/js/lingotek.admin.js
+++ b/profiles/commons/modules/contrib/lingotek/js/lingotek.admin.js
@@ -62,6 +62,72 @@ Drupal.behaviors.lingotekAdminForm = {
       }
     });
 
+    //check/uncheck dependent-function boxes when select-all checkbox is checked
+    $('.select-all').change( function () {
+      if ($(this).children().first().is(':checked')) {
+        $('.field.form-checkbox').removeAttr('disabled').attr('checked',true);
+      } else {
+        $('.field.form-checkbox').removeAttr('checked').attr('disabled',true);
+      }
+    });
+
+    //uncheck dependent-function boxes when primary is not checked
+    $('#edit-config-lingotek-translate-config-builtins').change( function () {
+      if ($('#edit-config-lingotek-translate-config-builtins').is(':checked')) {
+        $('#lingotek_use_translation_from_drupal').removeAttr('disabled');
+      } else {
+        $('#lingotek_use_translation_from_drupal').removeAttr('checked').attr('disabled',true);
+      }
+    });
+    $('#edit-config-lingotek-translate-config-blocks').change( function () {
+      if ($('#edit-config-lingotek-translate-config-blocks').is(':checked')) {
+        $('#lingotek_prepare_config_blocks').removeAttr('disabled').attr('checked',true);
+      } else {
+        $('#lingotek_prepare_config_blocks').removeAttr('checked').attr('disabled',true);
+      }
+    });
+    $('#edit-config-lingotek-translate-config-taxonomies').change( function () {
+      if ($('#edit-config-lingotek-translate-config-taxonomies').is(':checked')) {
+        $('#lingotek_prepare_config_taxonomies').removeAttr('disabled').attr('checked',true);
+      } else {
+        $('#lingotek_prepare_config_taxonomies').removeAttr('checked').attr('disabled',true);
+      }
+    });
+    $('#edit-config-lingotek-translate-config-menus').change( function () {
+      if ($('#edit-config-lingotek-translate-config-menus').is(':checked')) {
+        $('#lingotek_prepare_config_menus').removeAttr('disabled').attr('checked',true);
+      } else {
+        $('#lingotek_prepare_config_menus').removeAttr('checked').attr('disabled',true);
+      }
+    });
+
+    // set prep functions to disabled/enabled on initial page load
+    $( function () {
+      if ($('#edit-config-lingotek-translate-config-builtins').is(':checked')) {
+        $('#lingotek_use_translation_from_drupal').removeAttr('disabled');
+      } else {
+        $('#lingotek_use_translation_from_drupal').attr('disabled',true);
+      }
+      
+      if ($('#edit-config-lingotek-translate-config-blocks').is(':checked')) {
+        $('#lingotek_prepare_config_blocks').removeAttr('disabled');
+      } else {
+        $('#lingotek_prepare_config_blocks').attr('disabled',true);
+      }
+
+      if ($('#edit-config-lingotek-translate-config-taxonomies').is(':checked')) {
+        $('#lingotek_prepare_config_taxonomies').removeAttr('disabled');
+      } else {
+        $('#lingotek_prepare_config_taxonomies').attr('disabled',true);
+      }
+
+      if ($('#edit-config-lingotek-translate-config-menus').is(':checked')) {
+        $('#lingotek_prepare_config_menus').removeAttr('disabled');
+      } else {
+        $('#lingotek_prepare_config_menus').attr('disabled',true);
+      }
+    });
+
     //ensure that there is a vertical tab set
     if($('.vertical-tabs').length != 0) {
 
@@ -154,48 +220,11 @@ Drupal.behaviors.lingotekAdminForm = {
         }
       });
 
-      //uncheck dependent-function boxes when primary is not checked
-      $('#edit-config-lingotek-translate-config-builtins').change( function () {
-        if ($('#edit-config-lingotek-translate-config-builtins').is(':checked')) {
-          $('#lingotek_use_translation_from_drupal').removeAttr('disabled');
-        } else {
-          $('#lingotek_use_translation_from_drupal').removeAttr('checked').attr('disabled',true);
-        }
-      });
-      $('#edit-config-lingotek-translate-config-blocks').change( function () {
-        if ($('#edit-config-lingotek-translate-config-blocks').is(':checked')) {
-          $('#lingotek_prepare_config_blocks').removeAttr('disabled').attr('checked',true);
-        } else {
-          $('#lingotek_prepare_config_blocks').removeAttr('checked').attr('disabled',true);
-        }
-      });
-      $('#edit-config-lingotek-translate-config-taxonomies').change( function () {
-        if ($('#edit-config-lingotek-translate-config-taxonomies').is(':checked')) {
-          $('#lingotek_prepare_config_taxonomies').removeAttr('disabled').attr('checked',true);
-        } else {
-          $('#lingotek_prepare_config_taxonomies').removeAttr('checked').attr('disabled',true);
-        }
-      });
-      $('#edit-config-lingotek-translate-config-menus').change( function () {
-        if ($('#edit-config-lingotek-translate-config-menus').is(':checked')) {
-          $('#lingotek_prepare_config_menus').removeAttr('disabled').attr('checked',true);
-        } else {
-          $('#lingotek_prepare_config_menus').removeAttr('checked').attr('disabled',true);
-        }
-      });
-
       // profiles summary
       $('fieldset#ltk-profiles', context).drupalSetSummary(function (context){
         return $(context).find('tbody tr').length + ' ' + Drupal.t('profiles')
       });
 
-      // set prep functions to disabled on initial page load
-      $( function () {
-        $('#lingotek_prepare_config_blocks').attr('disabled', true);
-        $('#lingotek_prepare_config_taxonomies').attr('disabled', true);
-        $('#lingotek_prepare_config_menus').attr('disabled', true);
-      });
-
       /*
       // prefs summary
       $('fieldset#ltk-prefs', context).drupalSetSummary(function (context) {
diff --git a/profiles/commons/modules/contrib/lingotek/lib/Drupal/lingotek/LingotekApi.php b/profiles/commons/modules/contrib/lingotek/lib/Drupal/lingotek/LingotekApi.php
index c52eee0..60afc9e 100644
--- a/profiles/commons/modules/contrib/lingotek/lib/Drupal/lingotek/LingotekApi.php
+++ b/profiles/commons/modules/contrib/lingotek/lib/Drupal/lingotek/LingotekApi.php
@@ -150,7 +150,7 @@ class LingotekApi {
 
     $this->addAdvancedParameters($parameters, $translatable_object);
 
-    $result = $this->request('updateContentDocument', $parameters);
+    $result = $this->request('updateContentDocumentAsync', $parameters);
 
     if ($result) {
       if (get_class($translatable_object) == 'LingotekConfigChunk') {
diff --git a/profiles/commons/modules/contrib/lingotek/lib/Drupal/lingotek/LingotekConfigChunk.php b/profiles/commons/modules/contrib/lingotek/lib/Drupal/lingotek/LingotekConfigChunk.php
index 46ccaec..1df7b2a 100644
--- a/profiles/commons/modules/contrib/lingotek/lib/Drupal/lingotek/LingotekConfigChunk.php
+++ b/profiles/commons/modules/contrib/lingotek/lib/Drupal/lingotek/LingotekConfigChunk.php
@@ -87,7 +87,7 @@ class LingotekConfigChunk implements LingotekTranslatableEntity {
    *   The status of the target locale for the given chunk_id
    */
   public static function getTargetStatusById($chunk_id, $target_locale) {
-    $result = db_select('lingotek_config_metadata', 'meta')
+    $result = db_select('{lingotek_config_metadata}', 'meta')
         ->fields('meta', array('value'))
         ->condition('id', $chunk_id)
         ->condition('config_key', 'target_sync_status_' . $target_locale)
@@ -208,7 +208,7 @@ class LingotekConfigChunk implements LingotekTranslatableEntity {
     // except for the i18n_status field, which should preserve its
     // currently-set flags, and the plid and plural fields which just
     // take default values for now.
-    db_merge('locales_target')
+    db_merge('{locales_target}')
         ->key(array('lid' => $lid, 'language' => $target_language,))
         ->fields(array(
           'lid' => $lid,
@@ -229,7 +229,7 @@ class LingotekConfigChunk implements LingotekTranslatableEntity {
    *   the ID of a chunk of configuration segments
    */
   public static function getIdByDocId($doc_id) {
-    $query = db_select('lingotek_config_metadata', 'meta');
+    $query = db_select('{lingotek_config_metadata}', 'meta');
     $query->fields('meta', array('id'));
     $query->condition('config_key', 'document_id');
     $query->condition('value', $doc_id);
@@ -334,7 +334,7 @@ class LingotekConfigChunk implements LingotekTranslatableEntity {
    *   An array containing anything for the chunk_id from table lingotek_config_metadata
    */
   protected static function getChunkMeta($chunk_id) {
-    $query = db_select('lingotek_config_metadata', 'l');
+    $query = db_select('{lingotek_config_metadata}', 'l');
     $query->fields('l', array('id', 'config_key', 'value'));
     $query->condition('l.id', $chunk_id);
     $result = $query->execute();
@@ -400,7 +400,7 @@ class LingotekConfigChunk implements LingotekTranslatableEntity {
     $chunk = FALSE;
 
     // Get the Chunk entries in the system associated with the document ID.
-    $query = db_select('lingotek_config_metadata', 'meta')
+    $query = db_select('{lingotek_config_metadata}', 'meta')
         ->fields('meta', array('id'))
         ->condition('config_key', 'document_id')
         ->condition('value', $lingotek_document_id)
@@ -480,7 +480,7 @@ class LingotekConfigChunk implements LingotekTranslatableEntity {
   protected function metadata() {
     $metadata = array();
 
-    $results = db_select('lingotek_config_metadata', 'meta')
+    $results = db_select('{lingotek_config_metadata}', 'meta')
         ->fields('meta')
         ->condition('id', $this->cid)
         ->execute();
@@ -509,7 +509,7 @@ class LingotekConfigChunk implements LingotekTranslatableEntity {
    * Get the chunk's target translation status for the given locale
    */
   public function getTargetStatus($lingotek_locale) {
-    $result = db_select('lingotek_config_metadata', 'meta')
+    $result = db_select('{lingotek_config_metadata}', 'meta')
         ->fields('meta', array('value'))
         ->condition('id', $this->cid)
         ->condition('config_key', 'target_sync_status_' . $lingotek_locale)
@@ -603,7 +603,7 @@ class LingotekConfigChunk implements LingotekTranslatableEntity {
    *   The value for the specified key, if it exists.
    */
   public function getMetadataValue($key) {
-    return db_select('lingotek_config_metadata', 'meta')
+    return db_select('{lingotek_config_metadata}', 'meta')
             ->fields('meta', array('value'))
             ->condition('config_key', $key)
             ->condition('id', $this->cid)
@@ -623,7 +623,7 @@ class LingotekConfigChunk implements LingotekTranslatableEntity {
     $metadata = $this->metadata();
     $timestamp = time();
     if (!isset($metadata[$key])) {
-      db_insert('lingotek_config_metadata')
+      db_insert('{lingotek_config_metadata}')
           ->fields(array(
             'id' => $this->cid,
             'config_key' => $key,
@@ -634,7 +634,7 @@ class LingotekConfigChunk implements LingotekTranslatableEntity {
           ->execute();
     }
     else {
-      db_update('lingotek_config_metadata')
+      db_update('{lingotek_config_metadata}')
           ->fields(array(
             'value' => $value,
             'modified' => $timestamp
@@ -654,8 +654,8 @@ class LingotekConfigChunk implements LingotekTranslatableEntity {
   public function deleteMetadataValue($key) {
     $metadata = $this->metadata();
     if (isset($metadata[$key])) {
-      db_delete('lingotek_config_metadata')
-        ->condition('id', $this->cid)
+      db_delete('{lingotek_config_metadata}')
+          ->condition('id', $this->cid)
         ->condition('config_key', $key, 'LIKE')
         ->execute();
     }
@@ -735,7 +735,7 @@ class LingotekConfigChunk implements LingotekTranslatableEntity {
    *    the language code for which to get the segments that need updating
    */
   public static function getDirtyLidsByChunkIdAndLanguage($chunk_id, $language) {
-    $result = db_select('locales_target', 'lt')
+    $result = db_select('{locales_target}', 'lt')
         ->fields('lt', array('lid'))
         ->condition('lid', self::minLid($chunk_id), '>=')
         ->condition('lid', self::maxLid($chunk_id), '<=')
@@ -770,7 +770,7 @@ class LingotekConfigChunk implements LingotekTranslatableEntity {
    *    the language code for which to delete target segments
    */
   public static function deleteSegmentTranslationsByChunkIdAndLanguage($chunk_id, $target_language) {
-    db_delete('locales_target')
+    db_delete('{locales_target}')
         ->condition('language', $target_language)
         ->condition('lid', self::minLid($chunk_id), '>=')
         ->condition('lid', self::maxLid($chunk_id), '<=')
@@ -782,7 +782,7 @@ class LingotekConfigChunk implements LingotekTranslatableEntity {
    * Get lingotek translation agent ID
    */
   public static function getLingotekTranslationAgentId() {
-    $result = db_select('lingotek_translation_agent', 'lta')
+    $result = db_select('{lingotek_translation_agent}', 'lta')
         ->fields('lta', array('id'))
         ->condition('name', 'Lingotek')
         ->execute();
@@ -797,7 +797,7 @@ class LingotekConfigChunk implements LingotekTranslatableEntity {
     foreach ($document_xml as $drupal_field_name => $xml_obj) {
       $lids[] = self::getLidFromTag($drupal_field_name);
     }
-    $result = db_select('locales_target', 'lt')
+    $result = db_select('{locales_target}', 'lt')
         ->fields('lt', array('lid'))
         ->condition('lid', $lids, 'IN')
         ->condition('language', $target_language)
@@ -826,7 +826,7 @@ class LingotekConfigChunk implements LingotekTranslatableEntity {
       $lid = self::getLidFromTag($drupal_field_name);
       if (!in_array($lid, $non_lingotek_locales_targets)) {
         $content = (string) $xml_obj->element;
-        $content = lingotek_unfilter_placeholders(decode_entities($content));
+        $content = lingotek_unfilter_placeholders($content);
         $plural_lid = array_key_exists($lid, $plural_mapping);
         $rows += array(
           ":l_$icount" => $lid,
@@ -933,8 +933,8 @@ class LingotekConfigChunk implements LingotekTranslatableEntity {
   }
   
   public static function getLidBySource($source_string) {
-    return db_select('locales_source', 's')
-        ->fields('s', array('lid'))
+    return db_select('{locales_source}', 's')
+            ->fields('s', array('lid'))
         ->condition('s.source', $source_string)
         ->execute()
         ->fetchField();
@@ -946,8 +946,8 @@ class LingotekConfigChunk implements LingotekTranslatableEntity {
  */
 
   public static function getAllDocumentIds() {
-  $result = db_select('lingotek_config_metadata', 'c')
-      ->fields('c', array('value'))
+  $result = db_select('{lingotek_config_metadata}', 'c')
+        ->fields('c', array('value'))
       ->condition('c.config_key', 'document_id')
       ->execute();
   return $result->fetchCol();
diff --git a/profiles/commons/modules/contrib/lingotek/lib/Drupal/lingotek/LingotekEntity.php b/profiles/commons/modules/contrib/lingotek/lib/Drupal/lingotek/LingotekEntity.php
index 611af55..8915c45 100644
--- a/profiles/commons/modules/contrib/lingotek/lib/Drupal/lingotek/LingotekEntity.php
+++ b/profiles/commons/modules/contrib/lingotek/lib/Drupal/lingotek/LingotekEntity.php
@@ -43,6 +43,7 @@ class LingotekEntity implements LingotekTranslatableEntity {
     $this->language = $entity->language;
     $this->language_targets = Lingotek::getLanguagesWithoutSource($this->language);
     $this->entity_type = $entity_type;
+    $this->info = entity_get_info($this->entity_type);
   }
   
   /**
@@ -82,7 +83,7 @@ class LingotekEntity implements LingotekTranslatableEntity {
   public static function loadByLingotekDocumentId($lingotek_document_id) {
     $entity = FALSE;
     
-    $query = db_select('lingotek_entity_metadata', 'l')->fields('l');
+    $query = db_select('{lingotek_entity_metadata}', 'l')->fields('l');
     $query->condition('entity_key', 'document_id');
     $query->condition('value', $lingotek_document_id);
     $result = $query->execute();
@@ -151,8 +152,8 @@ class LingotekEntity implements LingotekTranslatableEntity {
   protected function metadata() {
     $metadata = array();
 
-    $results = db_select('lingotek_entity_metadata', 'meta')
-      ->fields('meta')
+    $results = db_select('{lingotek_entity_metadata}', 'meta')
+        ->fields('meta')
       ->condition('entity_id', $this->getId())
       ->condition('entity_type', $this->entity_type)
       ->execute();
@@ -174,8 +175,8 @@ class LingotekEntity implements LingotekTranslatableEntity {
    *   The value for the specified key, if it exists.
    */
   public function getMetadataValue($key) {
-    return db_select('lingotek_entity_metadata', 'meta')
-      ->fields('meta', array('value'))
+    return db_select('{lingotek_entity_metadata}', 'meta')
+            ->fields('meta', array('value'))
       ->condition('entity_key', $key)
       ->condition('entity_id', $this->getId())
       ->condition('entity_type', $this->getEntityType())
@@ -194,8 +195,8 @@ class LingotekEntity implements LingotekTranslatableEntity {
   public function setMetadataValue($key, $value) {
     $metadata = $this->metadata();
     if (!isset($metadata[$key])) {
-      db_insert('lingotek_entity_metadata')
-        ->fields(array(
+      db_insert('{lingotek_entity_metadata}')
+          ->fields(array(
           'entity_id' => $this->getId(),
           'entity_type' => $this->getEntityType(),
           'entity_key' => $key,
@@ -205,8 +206,8 @@ class LingotekEntity implements LingotekTranslatableEntity {
 
     }
     else {
-      db_update('lingotek_entity_metadata')
-        ->fields(array(
+      db_update('{lingotek_entity_metadata}')
+          ->fields(array(
           'value' => $value
         ))
         ->condition('entity_id', $this->getId())
@@ -225,8 +226,8 @@ class LingotekEntity implements LingotekTranslatableEntity {
   public function deleteMetadataValue($key) {
     $metadata = $this->metadata();
     if (isset($metadata[$key])) {
-      db_delete('lingotek_entity_metadata')
-        ->condition('entity_id', $this->getId())
+      db_delete('{lingotek_entity_metadata}')
+          ->condition('entity_id', $this->getId())
         ->condition('entity_type', $this->getEntityType())
         ->condition('entity_key', $key, 'LIKE')
         ->execute();
@@ -261,11 +262,15 @@ class LingotekEntity implements LingotekTranslatableEntity {
   }
   
   public function getTitle() {
-    if ($this->entity_type == 'node') {
-      return $this->entity->title;
-    } else if ($this->entity_type == 'comment') {
+    if (!empty($this->info['entity keys']['label']) && !empty($this->entity->{$this->info['entity keys']['label']})) {
+      return $this->entity->{$this->info['entity keys']['label']};
+    }
+    if ($this->entity_type == 'comment') {
       return $this->entity->subject;
     }
+    LingotekLog::info('Did not find a label for @entity_type #!entity_id, using default label.',
+        array('@entity_type' => $this->entity_type, '@entity_id' => $this->entity_id));
+    return $this->entity_type . " #" . $this->entity_id;
   }
   
   public function getDescription() {
@@ -293,7 +298,7 @@ class LingotekEntity implements LingotekTranslatableEntity {
    *   The ID associated with this object
    */
   public function getId() {
-    list($id, $vid, $bundle) = entity_extract_ids($this->entity_type, $this->entity);
+    list($id, $vid, $bundle) = lingotek_entity_extract_ids($this->entity_type, $this->entity);
     return $id;
   }
   
diff --git a/profiles/commons/modules/contrib/lingotek/lib/Drupal/lingotek/LingotekSync.php b/profiles/commons/modules/contrib/lingotek/lib/Drupal/lingotek/LingotekSync.php
index b21c792..7280a58 100644
--- a/profiles/commons/modules/contrib/lingotek/lib/Drupal/lingotek/LingotekSync.php
+++ b/profiles/commons/modules/contrib/lingotek/lib/Drupal/lingotek/LingotekSync.php
@@ -48,8 +48,8 @@ class LingotekSync {
   }
 
   public static function getAllTargetStatusNotCurrent($nid) {
-    $query = db_select('lingotek_entity_metadata', 'l')
-      ->fields('l', array('entity_key', 'value'))
+    $query = db_select('{lingotek_entity_metadata}', 'l')
+        ->fields('l', array('entity_key', 'value'))
       ->condition('entity_type', 'node')
       ->condition('entity_key', 'target_sync_status_%', 'LIKE')
       ->condition('value', 'CURRENT', '!=')
@@ -58,14 +58,14 @@ class LingotekSync {
     return $result;
   }
 
-  public static function setTargetStatus($entity_type, $entity_id, $lingotek_locale, $status) {
+  public static function setTargetStatus($entity_type, $entity_id, $lingotek_locale, $status, $update_on_dup = TRUE) {
     $key = 'target_sync_status_' . $lingotek_locale;
-    return lingotek_keystore($entity_type, $entity_id, $key, $status);
+    return lingotek_keystore($entity_type, $entity_id, $key, $status, $update_on_dup);
   }
   
   public static function setAllTargetStatus($entity_type, $entity_id, $status) {
-    $query = db_update('lingotek_entity_metadata')
-      ->condition('entity_type', $entity_type)
+    $query = db_update('{lingotek_entity_metadata}')
+        ->condition('entity_type', $entity_type)
       ->condition('entity_id', $entity_id)
       ->condition('entity_key', 'target_sync_status%', 'LIKE')
       ->fields(array('value' => $status, 'modified' => time()))
@@ -77,7 +77,7 @@ class LingotekSync {
   }
 
   public static function getSyncProjects() {
-    $query = db_select('lingotek_entity_metadata', 'l');
+    $query = db_select('{lingotek_entity_metadata}', 'l');
     $query->fields('l', array('value'));
     $query->condition('entity_type', 'node');
     $query->condition('entity_key', 'project_id');
@@ -93,7 +93,7 @@ class LingotekSync {
 
   public static function insertTargetEntriesForAllChunks($lingotek_locale) {
     // insert/update a target language for all chunks
-    $query = db_select('lingotek_config_metadata', 'meta')
+    $query = db_select('{lingotek_config_metadata}', 'meta')
         ->fields('meta', array('id'))
         ->groupBy('id');
     $ids = $query->execute()->fetchCol();
@@ -105,17 +105,29 @@ class LingotekSync {
     }
   }
 
+  public static function insertTargetEntriesForAllEntities($lingotek_locale) {
+    // insert/update a target language for all entities
+    $query = db_select('{lingotek_entity_metadata}', 'meta')
+        ->fields('meta', array('entity_id', 'entity_type'))
+        ->condition('meta.entity_key', 'document_id');
+    $entities = $query->execute()->fetchAll();
+
+    foreach ($entities as $e) {
+      self::setTargetStatus($e->entity_type, $e->entity_id, $lingotek_locale, self::STATUS_PENDING);
+    }
+  }
+
   // Remove the node sync target language entries from the lingotek table lingotek_delete_target_sync_status_for_all_nodes
   public static function deleteTargetEntriesForAllEntities($lingotek_locale) {
     $keys = array(
       'target_sync_status_' . $lingotek_locale,
     );
-    db_delete('lingotek_entity_metadata')->condition('entity_key', $keys, 'IN')->execute();
+    db_delete('{lingotek_entity_metadata}')->condition('entity_key', $keys, 'IN')->execute();
   }
 
   public static function deleteTargetEntriesForAllChunks($lingotek_locale) {
     $key = 'target_sync_status_' . $lingotek_locale;
-    db_delete('lingotek_config_metadata')->condition('config_key', $key)->execute();
+    db_delete('{lingotek_config_metadata}')->condition('config_key', $key)->execute();
   }
 
   public static function deleteTargetEntriesForAllDocs($lingotek_locale) {
@@ -133,7 +145,7 @@ class LingotekSync {
    */
   public static function getTargetsByStatus($entity_type, $status, $include_doc_ids = FALSE) {
     $target_language_search = '%';
-    $query = db_select('lingotek_entity_metadata', 'l');
+    $query = db_select('{lingotek_entity_metadata}', 'l');
     $query->fields('l', array('entity_id', 'entity_key', 'value'));
     $query->condition('entity_type', $entity_type);
     $query->condition('entity_key', 'target_sync_status_' . $target_language_search, 'LIKE');
@@ -264,7 +276,7 @@ class LingotekSync {
         continue;
       }
       $entity_base_table = $properties['base table'];
-      $query = db_select($entity_base_table, 't')->condition('t.language', $drupal_language_code);
+      $query = db_select('{' . $entity_base_table . '}', 't')->condition('t.language', $drupal_language_code);
 
       // exclude translation sets (only for nodes)
       if ($entity_base_table == 'node') {
@@ -274,10 +286,10 @@ class LingotekSync {
         $query->condition($tnid_query);
       }
 
-      // exclude disabled nodes (including those that have disabled bundles)
-      $disabled_entity_ids = lingotek_get_entities_by_profile_id(LingotekSync::PROFILE_DISABLED, $entity_base_table);
+      // exclude disabled entities (including those that have disabled bundles)
+      $disabled_entity_ids = lingotek_get_entities_by_profile_id(LingotekSync::PROFILE_DISABLED, $entity_type);
       if (count($disabled_entity_ids)) {
-        $enabled_entity_ids = lingotek_get_enabled_entities_by_type($entity_base_table);
+        $enabled_entity_ids = lingotek_get_enabled_entities_by_type($entity_type);
         if (count($disabled_entity_ids) < count($enabled_entity_ids)) {
           $query->condition($properties['entity keys']['id'], array_merge(array(-1), array_keys($disabled_entity_ids)), "NOT IN"); //exclude disabled entities
         }
@@ -332,10 +344,9 @@ class LingotekSync {
         continue;
       }
       $entity_base_table = $properties['base table'];
-      $query = db_select($entity_base_table, 't');
-      $query->leftJoin('lingotek_entity_metadata', 'l',
-       'l.entity_id = '.$properties['entity keys']['id'].
-       ' AND l.entity_type = \''.$entity_base_table.'\''.
+      $query = db_select('{' . $entity_base_table . '}', 't');
+      $query->leftJoin('{lingotek_entity_metadata}', 'l', 'l.entity_id = '.$properties['entity keys']['id'].
+       ' AND l.entity_type = \''.$m_entity_type.'\''.
        ' AND l.entity_key = \''.$target_key.'\' '
       );
 
@@ -393,7 +404,7 @@ class LingotekSync {
     $target_prefix = 'target_sync_status_';
     $target_key = $target_prefix . $lingotek_locale;
 
-    $query = db_select('lingotek_entity_metadata', 'l')->fields('l');
+    $query = db_select('{lingotek_entity_metadata}', 'l')->fields('l');
     $query->condition('entity_type', 'node');
     $query->condition('entity_key', $target_key);
     $query->condition('value', $status);
@@ -407,8 +418,8 @@ class LingotekSync {
     // count nodes having this language as the source as current
     if ($status == LingotekSync::STATUS_CURRENT) {
       $drupal_language_code = Lingotek::convertLingotek2Drupal($lingotek_locale, TRUE);
-      $query = db_select('node', 'n');
-      $query->leftJoin('lingotek_entity_metadata', 'l', 'l.entity_id = n.nid
+      $query = db_select('{node}', 'n');
+      $query->leftJoin('{lingotek_entity_metadata}', 'l', 'l.entity_id = n.nid
         AND l.entity_type = \'node\'
         AND l.entity_key = \'profile\'
            AND l.value != \'DISABLED\'');
@@ -424,7 +435,7 @@ class LingotekSync {
     $target_prefix = 'target_sync_status_';
     $target_key = $target_prefix . $lingotek_locale;
 
-    $query = db_select('lingotek_config_metadata', 'l')->fields('l');
+    $query = db_select('{lingotek_config_metadata}', 'l')->fields('l');
     $query->condition('value', $status);
     $query->condition('config_key', $target_key);
 
@@ -460,12 +471,12 @@ class LingotekSync {
     if (!is_array($document_ids)) {
       $document_ids = array($document_ids);
     }
-    $subquery = db_select('lingotek_entity_metadata', 'l1')
-      ->fields('l1', array('entity_id'))
+    $subquery = db_select('{lingotek_entity_metadata}', 'l1')
+        ->fields('l1', array('entity_id'))
       ->condition('l1.entity_type', 'node')
       ->condition('l1.entity_key', 'document_id')
       ->condition('l1.value', $document_ids, 'IN');
-    $query = db_select('lingotek_entity_metadata', 'l');
+    $query = db_select('{lingotek_entity_metadata}', 'l');
     $query->addField('l', 'entity_id', 'nid');
     $query->condition('l.entity_type', 'node');
     $query->condition('l.entity_key', 'target_sync_status_%', 'LIKE');
@@ -507,7 +518,7 @@ class LingotekSync {
     $primary_or = db_or()
         ->condition('lt0.i18n_status', 0)
         ->condition('lt0.translation_agent_id', $lingotek_id, '!=');
-    $query = db_select('locales_target', "lt0")
+    $query = db_select('{locales_target}', "lt0")
         ->fields('lt0', array('lid'))
         ->condition('lt0.language', $first_lang)
         ->condition($primary_or);
@@ -519,7 +530,7 @@ class LingotekSync {
       $addtl_joins++;
       $ja = "lt$addtl_joins"; // join alias
       $join_str = "$ja.lid = lt0.lid and $ja.language = '$new_join' and ($ja.i18n_status = 0 or $ja.translation_agent_id != $lingotek_id)";
-      $query->join('locales_target', $ja, $join_str);
+      $query->join('{locales_target}', $ja, $join_str);
     }
     return $query;
   }
@@ -532,7 +543,7 @@ class LingotekSync {
 
   public static function getAllChunkLids() {
     // return the list of all lids
-    $query = db_select('locales_source', 'ls')
+    $query = db_select('{locales_source}', 'ls')
         ->fields('ls', array('lid'));
     return $query->execute()->fetchCol();
   }
@@ -557,7 +568,7 @@ class LingotekSync {
     // that belong to the textgroups the user wants translated
     $textgroups = array_merge(array(-1), LingotekConfigChunk::getTextgroupsForTranslation());
     $max_length = variable_get('lingotek_config_max_source_length', LINGOTEK_CONFIG_MAX_SOURCE_LENGTH);
-    $query = db_select('locales_source', 'ls');
+    $query = db_select('{locales_source}', 'ls');
     $query->fields('ls', array('lid'))
         ->condition('ls.source', '', '!=')
         ->condition('ls.lid', self::getQueryCompletedConfigTranslations($drupal_codes), 'NOT IN')
@@ -598,7 +609,7 @@ class LingotekSync {
 
   protected static function getChunksWithPendingTranslations() {
     // get the list of chunks with pending translations
-    $result = db_select('lingotek_config_metadata', 'meta')
+    $result = db_select('{lingotek_config_metadata}', 'meta')
         ->fields('meta', array('id', 'id'))
         ->condition('config_key', 'target_sync_status_%', 'LIKE')
         ->condition('value', array(self::STATUS_PENDING, self::STATUS_READY), 'IN')
@@ -635,7 +646,7 @@ class LingotekSync {
   }
 
   public static function getNodeIdsByStatus($status, $source) {
-    $query = db_select('lingotek_entity_metadata', 'l');
+    $query = db_select('{lingotek_entity_metadata}', 'l');
     $query->condition('entity_type', 'node');
     $query->addField('l', 'entity_id', 'nid');
     if($source) {
@@ -651,7 +662,7 @@ class LingotekSync {
   }
 
   public static function getEntityIdsToUpload($entity_type) {
-//    $query = db_select('lingotek_entity_metadata', 'l')
+//    $query = db_select('{lingotek_entity_metadata}', 'l')
 //      ->distinct()
 //      ->condition('entity_type', $entity_type)
 //      ->condition('entity_key', 'node_sync_status')
@@ -659,9 +670,9 @@ class LingotekSync {
 //    $query->addField('l', 'entity_id');
     $info = entity_get_info($entity_type);
     $id_key = $info['entity keys']['id'];
-    $query = db_select($info['base table'], 'base');
+    $query = db_select('{' . $info['base table'] . '}', 'base');
     $query->addField('base', $id_key);
-    $query->leftJoin('lingotek_entity_metadata', 'upload', 'upload.entity_id = base.'.$id_key.' and upload.entity_type =\'' . $entity_type . '\' and upload.entity_key = \'node_sync_status\'');
+    $query->leftJoin('{lingotek_entity_metadata}', 'upload', 'upload.entity_id = base.' . $id_key . ' and upload.entity_type =\'' . $entity_type . '\' and upload.entity_key = \'node_sync_status\'');
 
     $or = db_or();
     $or->condition('upload.value', LingotekSync::STATUS_EDITED);
@@ -673,8 +684,8 @@ class LingotekSync {
   }
   
   public static function getEntityIdsByStatusAndTarget($entity_type, $status, $target_language = '%') {
-    $query = db_select('lingotek_entity_metadata', 'l')
-      ->distinct()
+    $query = db_select('{lingotek_entity_metadata}', 'l')
+        ->distinct()
       ->condition('entity_type', $entity_type)
       ->condition('entity_key', 'target_sync_status_' . $target_language, 'LIKE')
       ->condition('value', $status);
@@ -684,8 +695,8 @@ class LingotekSync {
   }
 
   public static function getEntityIdsByProfileStatus($entity_type, $status) {
-    $query = db_select('lingotek_entity_metadata', 'l')
-      ->distinct()
+    $query = db_select('{lingotek_entity_metadata}', 'l')
+        ->distinct()
       ->condition('entity_type', $entity_type)
       ->condition('entity_key', 'profile')
       ->condition('value', $status);
@@ -701,7 +712,7 @@ class LingotekSync {
       // retrieve document IDs from config chunks
       $cids = self::getChunkIdsByStatus($status);
       if (!empty($cids)) {
-        $query = db_select('lingotek_config_metadata', 'meta');
+        $query = db_select('{lingotek_config_metadata}', 'meta');
         $query->fields('meta', array('value'));
         $query->condition('config_key', 'document_id');
         $query->condition('id', $cids);
@@ -714,7 +725,7 @@ class LingotekSync {
   }
 
   public static function getChunkIdsByStatus($status) {
-    $query = db_select('lingotek_config_metadata', 'meta');
+    $query = db_select('{lingotek_config_metadata}', 'meta');
     $query->fields('meta', array('id'));
     $query->condition('config_key', 'target_sync_status_%', 'LIKE');
     $query->condition('value', $status);
@@ -725,24 +736,24 @@ class LingotekSync {
   }
 
   public static function disassociateAllEntities() {
-    db_truncate('lingotek_entity_metadata')->execute();
+    db_truncate('{lingotek_entity_metadata}')->execute();
   }
 
   public static function disassociateAllChunks() {
-    db_truncate('lingotek_config_metadata')->execute();
+    db_truncate('{lingotek_config_metadata}')->execute();
   }
 
   public static function disassociateEntities($document_ids = array()) {
     $eids = self::getNodeIdsFromDocIds($document_ids);
-    db_delete('lingotek_entity_metadata')
-      ->condition('entity_type', 'node')
+    db_delete('{lingotek_entity_metadata}')
+        ->condition('entity_type', 'node')
       ->condition('entity_id', $eids, 'IN')
       ->execute();
   }
 
   public static function getAllLocalDocIds() {
     // entity-related doc IDs
-    $query = db_select('lingotek_entity_metadata', 'l');
+    $query = db_select('{lingotek_entity_metadata}', 'l');
     $query->fields('l', array('value'));
     $query->condition('entity_key', 'document_id');
     $query->distinct();
@@ -750,7 +761,7 @@ class LingotekSync {
     $doc_ids = $result->fetchCol();
 
     // config-related doc IDs
-    $query = db_select('lingotek_config_metadata', 'l')
+    $query = db_select('{lingotek_config_metadata}', 'l')
         ->fields('l', array('value'))
         ->condition('config_key', 'document_id')
         ->distinct();
@@ -762,7 +773,7 @@ class LingotekSync {
 
   public static function getAllNodeIds() { // This query is broken - it also gets things without doc ids
     // all node ids having document_ids in lingotek table
-    $query = db_select('lingotek_entity_metadata', 'l');
+    $query = db_select('{lingotek_entity_metadata}', 'l');
     $query->addField('l', 'entity_id');
     //$query->condition('lingokey', 'document_id');
     $query->distinct('entity_id');
@@ -774,7 +785,7 @@ class LingotekSync {
   public static function getEntityIdFromDocId($lingotek_document_id, $entity_type = NULL) {
     $key = 'document_id';
 
-    $query = db_select('lingotek_entity_metadata', 'l')->fields('l');
+    $query = db_select('{lingotek_entity_metadata}', 'l')->fields('l');
     if ($entity_type) {
       $query->condition('entity_type', $entity_type);
     }
@@ -800,7 +811,7 @@ class LingotekSync {
 
   public static function getNodeIdsFromDocIds($lingotek_document_ids) {
     $nids = array();
-    $query = db_select('lingotek_entity_metadata', 'l')
+    $query = db_select('{lingotek_entity_metadata}', 'l')
         ->fields('l', array('nid'))
         ->condition('entity_type', 'node')
         ->condition('entity_key', $key)
@@ -816,7 +827,7 @@ class LingotekSync {
   public static function getDocIdFromEntityId($entity_type, $entity_id) {
     $found = FALSE;
 
-    $query = db_select('lingotek_entity_metadata', 'l')->fields('l');
+    $query = db_select('{lingotek_entity_metadata}', 'l')->fields('l');
     $query->condition('entity_type', $entity_type);
     $query->condition('entity_id', $entity_id);
     $query->condition('entity_key', 'document_id');
@@ -831,7 +842,7 @@ class LingotekSync {
 
   public static function getDocIdsFromEntityIds($entity_type, $entity_ids, $associate = FALSE) {
 
-    $query = db_select('lingotek_entity_metadata', 'l');
+    $query = db_select('{lingotek_entity_metadata}', 'l');
     $query->addField('l', 'value', 'doc_id');
     $query->condition('entity_type', $entity_type);
     $query->condition('entity_id', $entity_ids, 'IN');
@@ -849,7 +860,7 @@ class LingotekSync {
   }
 
   public static function getEntityIdSubsetByTargetStatusReady($entity_type, $nids, $lingotek_locale) {
-    $query = db_select('lingotek_entity_metadata', 'l')
+    $query = db_select('{lingotek_entity_metadata}', 'l')
         ->fields('l', array('entity_id'))
         ->condition('entity_type', $entity_type)
         ->condition('entity_id', $nids, 'IN')
diff --git a/profiles/commons/modules/contrib/lingotek/lingotek.admin.inc b/profiles/commons/modules/contrib/lingotek/lingotek.admin.inc
index 1f5c162..6e9f4f8 100644
--- a/profiles/commons/modules/contrib/lingotek/lingotek.admin.inc
+++ b/profiles/commons/modules/contrib/lingotek/lingotek.admin.inc
@@ -277,7 +277,7 @@ function lingotek_admin_add_entity_specific_changes(&$form, &$form_state, $entit
   // Warning note when enabling nodes with existing Lingotek translations
   $overwrite_markup = '<div id="edit-lingotek-overwrite-warning"></div>';
   if ($entity_type != 'field_collection_item' && lingotek_previously_managed_translations($entity_type)) {
-    $overwrite_markup = '<div id="edit-lingotek-overwrite-warning" style="color: red;">Note: If edits have been made to the local copy of translations since disabling Lingotek, those edits will be lost when synchronizing with Lingotek.</div>';
+    $overwrite_markup = '<div id="edit-lingotek-overwrite-warning" style="color: red;">' . t('Note: If edits have been made to the local copy of translations since disabling Lingotek, those edits will be lost when synchronizing with Lingotek') . '</div>';
   }
   $form['translation_' . $entity_type]['container']['overwrite_warning'] = array(
     '#markup' => $overwrite_markup,
@@ -313,7 +313,7 @@ function lingotek_admin_add_entity_specific_changes(&$form, &$form_state, $entit
       );
     case 'field_collection_item':
       // add note about field collections being coupled with their parent entities
-      $form['translation_' . $entity_type]['types']['#suffix'] = t('Note: Field collections will be uploaded and downloaded at the same time as their parent.');
+      $form['translation_' . $entity_type]['types']['#suffix'] = t('Note: changing the profile will update all settings for existing nodes except for the project, workflow, vault, and storage method (e.g. node/field).');
       break;
   }
 }
@@ -489,6 +489,7 @@ function lingotek_admin_additional_translation_settings_form($form, &$form_state
         '#value' => t('Save')
       )
     ),
+    '#validate' => array('lingotek_admin_additional_translation_settings_form_validate'),
     '#submit' => array('lingotek_admin_additional_translation_settings_form_submit'),
   );
 
@@ -522,7 +523,7 @@ function lingotek_admin_additional_translation_settings_form($form, &$form_state
   $prep_taxonomy_chbx = array(
     '#id' => 'lingotek_prepare_config_taxonomies',
     '#type' => 'checkbox',
-    '#title' => t('Update all taxonomy vocabularies to use translation mode \'Localize\' in the Multilingual Options.'),
+    '#title' => t('Update all taxonomy vocabularies to use translation mode \'Localize\' in the Multilingual Options. (Note: This will prevent translation of custom fields within taxonomy terms.)'),
     '#attributes' => array(
       'id' => array('lingotek_prepare_config_taxonomies'),
       'name' => 'lingotek_prepare_config_taxonomies',
@@ -542,7 +543,7 @@ function lingotek_admin_additional_translation_settings_form($form, &$form_state
     '#default_value' => 1,
   );
 
-  if (variable_get('lingotek_use_translation_from_drupal', 1)) {
+  if (variable_get('lingotek_use_translation_from_drupal', 0)) {
     $fr['#attributes']['checked'] = 'checked';
   }
 
@@ -608,6 +609,14 @@ function lingotek_verify_modules_enabled($module_list) {
   return TRUE;
 }
 
+function lingotek_admin_additional_translation_settings_form_validate($form, &$form_state) {
+  // check for required modules if config translation is enabled
+  $conf_opt_part = $form['additional_translation']['config'];
+  if (isset($conf_opt_part['lingotek_translate_config_views']['#value']) && $conf_opt_part['lingotek_translate_config_views']['#value'] !== 0) {
+    lingotek_verify_modules_enabled(array('i18nviews'));
+  }
+}
+
 function lingotek_admin_additional_translation_settings_form_submit($form, &$form_state, $additional_operations=array()) {
   $form_state['values'] = array_merge($form_state['values'], $form_state['values']['config']);
 
@@ -804,7 +813,7 @@ function lingotek_admin_index_plural_targets(&$context=NULL) {
   if ($context) {
     $context['message'] = t('Indexing translation targets to preserve plurality');
   }
-  $plurals = db_select('locales_target', 't')
+  $plurals = db_select('{locales_target}', 't')
       ->fields('t', array('lid', 'plid', 'plural'))
       ->condition('plid', 0, '!=')
       ->execute()
@@ -930,7 +939,7 @@ function lingotek_admin_module_indexing_finished($success, $results) {
 }
 
 function lingotek_admin_get_enabled_modules() {
-  $query = db_select('system', 's')
+  $query = db_select('{system}', 's')
       ->fields('s', array('name', 'filename', 'type'))
       ->condition('s.type', array('module', 'theme'), 'IN')
       ->condition('s.status', '0', '!=')
@@ -941,7 +950,7 @@ function lingotek_admin_get_enabled_modules() {
 
 function lingotek_admin_prepare_blocks() {
   // update all blocks to be translatable in the Languages settings
-  $result = db_update('block')
+  $result = db_update('{block}')
       ->fields(array('i18n_mode' => LINGOTEK_I18N_ENABLED_VALUE))
       ->execute();
   if ($result) {
@@ -955,7 +964,7 @@ function lingotek_admin_prepare_blocks() {
 
 function lingotek_admin_prepare_taxonomies() {
   // update all taxonomies to be updated to use translation mode 'Localize'
-  $result = db_update('taxonomy_vocabulary')
+  $result = db_update('{taxonomy_vocabulary}')
       ->fields(array('i18n_mode' => LINGOTEK_TAXONOMY_LOCALIZE_VALUE))
       ->execute();
   if ($result) {
@@ -969,7 +978,7 @@ function lingotek_admin_prepare_taxonomies() {
 
 function lingotek_admin_prepare_menus() {
   // update all menus to use 'Translate and Localize' in the Multilingual Options
-  $result = db_update('menu_custom')
+  $result = db_update('{menu_custom}')
       ->fields(array('i18n_mode' => LINGOTEK_MENU_LOCALIZE_TRANSLATE_VALUE))
       ->execute();
   if ($result) {
@@ -982,7 +991,7 @@ function lingotek_admin_prepare_menus() {
   // find all menu links that are not language-neutral and not part of a
   // translation set and update them to be language-neutral (so they will
   // be added to the locales_source table as a string to be translated)
-  $result = db_update('menu_links')
+  $result = db_update('{menu_links}')
       ->fields(array('language' => LANGUAGE_NONE))
       ->condition('language', LANGUAGE_NONE, '!=')
       ->condition('i18n_tsid', 0)
@@ -1109,7 +1118,7 @@ function lingotek_admin_prefs_form($form, &$form_state, $show_fieldset = FALSE)
 
   $current_theme = variable_get('theme_default', 'none'); //global $theme_key;
 
-  $query = db_select('block', 'b');
+  $query = db_select('{block}', 'b');
   $query->fields('b');
   $query->condition('module', 'locale');
   $query->condition('delta', 'language');
@@ -1166,6 +1175,13 @@ function lingotek_admin_prefs_form($form, &$form_state, $show_fieldset = FALSE)
     ),
   );
 
+  $form['prefs']['lingotek_advanced_taxonomy_terms'] = array(
+    '#type' => 'checkbox',
+    '#title' => t('Enable advanced handling of taxonomy terms'),
+    '#description' => t('This option is used to handle translation of custom fields assigned to taxonomy terms.'),
+    '#default_value' => variable_get('lingotek_advanced_taxonomy_terms', FALSE),
+  );
+
   $form['prefs']['lingotek_hide_tlmi'] = array(
     '#type' => 'checkbox',
     '#title' => t('Hide top-level menu item'),
@@ -1469,6 +1485,15 @@ function lingotek_admin_profile_form($form, &$form_state, $show_fieldset = FALSE
     '#disabled' => $is_custom_profile_id ? FALSE : TRUE,
   );
 
+  // URL Alias Translation.
+  $form['defaults']['url_alias_translation'] = array(
+    '#type' => 'select',
+    '#title' => t('URL Alias Translation'),
+    '#description' => t("Choose how you would like to translate the URL alias. The last option requires that you install both the Title and Pathauto modules, and define a path pattern."),
+    '#options' => lingotek_get_url_alias_translations(),
+    '#default_value' => $form_state['values']['url_alias_translation'],
+  );
+
   if ($show_advanced) {
 
     // Community Translation
@@ -1478,19 +1503,6 @@ function lingotek_admin_profile_form($form, &$form_state, $show_fieldset = FALSE
       '#description' => t('When enabled, anonymous site visitors will be presented with a link allowing them to contribute translations for this node.'),
       '#default_value' => $form_state['values']['allow_community_translation'],
     );
-
-    /*
-     * Misc. Options
-     */
-
-    // URL Alias Translation.
-    $form['defaults']['url_alias_translation'] = array(
-      '#type' => 'select',
-      '#title' => t('URL Alias Translation'),
-      '#description' => t("Choose how you would like to translate the URL alias. The last option requires that you install both the Title and Pathauto modules, and define a path pattern."),
-      '#options' => lingotek_get_url_alias_translations(),
-      '#default_value' => $form_state['values']['url_alias_translation'],
-    );
   }
   
   
@@ -1546,7 +1558,7 @@ function lingotek_admin_profile_form($form, &$form_state, $show_fieldset = FALSE
 
   $content_translation_note = '';
   if (!lingotek_node_based_trans_ready()) {
-    $content_translation_note = t("Note: Requires Content Translation module (translation) and Node Translation module (i18n_node).");
+    $content_translation_note = t("Note: Requires Content Translation module (translation) and Multilingual content module (i18n_node).");
   }
   
   $form['defaults']['lingotek_nodes_translation_method'] = array(
@@ -1905,6 +1917,20 @@ function lingotek_admin_cleanup_form($form, &$form_state, $show_fieldset = FALSE
     );
   }
 
+  if (module_exists('fieldable_panels_panes')) {
+    $cleanup_functions['lingotek_cleanup_field_languages_for_fieldable_panels_panes'] = array(
+      'title' => t('Prepare FPPs'),
+      'desc' => t('Sets all <i>language neutral</i> fieldable panels panes (FPPs) to be @lang', array('@lang' => language_default('name'))),
+    );
+  }
+
+  if (module_exists('taxonomy') && variable_get('lingotek_advanced_taxonomy_terms', FALSE)) {
+    $cleanup_functions['lingotek_cleanup_field_languages_for_taxonomy_terms'] = array(
+      'title' => t('Prepare taxonomy terms with custom fields'),
+      'desc' => t('Sets all <i>language neutral</i> taxonomy terms managed by Lingotek (and underlying fields) to be @lang', array('@lang' => language_default('name'))),
+    );
+  }
+
   $cleanup_functions['lingotek_admin_prepare_blocks'] = array(
     'title' => t('Prepare blocks'),
     'desc' => t('Update all blocks to be translatable in the <i>Languages</i> settings.'),
@@ -1965,7 +1991,7 @@ function lingotek_admin_cleanup_form_submit($form, &$form_state) {
   // and their return value should be a set batch.
   $cleanup_batch = array(
     'title' => t('Lingotek Cleanup Utility Batch'),
-    'operations' => array('lingotek_cleanup_batch_init', array()),
+    'operations' => array(array('lingotek_cleanup_batch_init', array())),
     'file' => 'lingotek.util.inc',
   );
   batch_set($cleanup_batch);
@@ -2030,32 +2056,24 @@ function lingotek_admin_configuration_view($form_short_id = NULL, $show_fieldset
 
   $output['lingotek'][] = lingotek_wrap_in_fieldset($account_summary, t('Account'), array('id' => 'ltk-account'));
 
-  $connected = $api->testAuthentication();
-
-  if ($connected) {
-
-    foreach (lingotek_managed_entity_types($include_all = TRUE) as $machine_name => $entity_type) {
-      $entity_settings = drupal_get_form('lingotek_admin_entity_bundle_profiles_form', $machine_name, $show_fieldset);
-      $output['lingotek'][] = lingotek_wrap_in_fieldset($entity_settings, t('Translate @type', array('@type' => $entity_type['label'])), array('class' => array('ltk-entity')));
-    }
-
-    $output['lingotek'][] = lingotek_wrap_in_fieldset(drupal_get_form('lingotek_admin_additional_translation_settings_form', $show_fieldset), t('Translate Configuration'), array('id' => 'ltk-config'));
-    $output['lingotek'][] = lingotek_wrap_in_fieldset(drupal_get_form('lingotek_admin_profiles_form', $show_fieldset), t('Translation Profiles'), array('id' => 'ltk-profiles'));
-    if ($show_advanced) {
-      $output['lingotek'][] = lingotek_wrap_in_fieldset(drupal_get_form('lingotek_admin_advanced_parsing_form', TRUE), t('Advanced Content Parsing'), array('id' => 'ltk-advanced-content-parsing'));
-    }
-
-    $output['lingotek'][] = lingotek_wrap_in_fieldset(drupal_get_form('lingotek_admin_prefs_form', $show_fieldset), t('Preferences'), array('id' => 'ltk-prefs'));
-    $output['lingotek'][] = lingotek_wrap_in_fieldset(drupal_get_form('lingotek_admin_logging_form', $show_fieldset), 'Logging');
-
-    $utilities = array(
-      drupal_get_form('lingotek_admin_cleanup_form', $show_fieldset),
-      drupal_get_form('lingotek_admin_utilities_form', $show_fieldset),
-    );
-    $output['lingotek'][] = lingotek_wrap_in_fieldset($utilities, t('Utilities'));
+  foreach (lingotek_managed_entity_types($include_all = TRUE) as $machine_name => $entity_type) {
+    $entity_settings = drupal_get_form('lingotek_admin_entity_bundle_profiles_form', $machine_name, $show_fieldset);
+    $output['lingotek'][] = lingotek_wrap_in_fieldset($entity_settings, t('Translate @type', array('@type' => $entity_type['label'])), array('class' => array('ltk-entity')));
+  }
+  $output['lingotek'][] = lingotek_wrap_in_fieldset(drupal_get_form('lingotek_admin_additional_translation_settings_form', $show_fieldset), t('Translate Configuration'), array('id' => 'ltk-config'));
+  $output['lingotek'][] = lingotek_wrap_in_fieldset(drupal_get_form('lingotek_admin_profiles_form', $show_fieldset), t('Translation Profiles'), array('id' => 'ltk-profiles'));
+  if ($show_advanced) {
+    $output['lingotek'][] = lingotek_wrap_in_fieldset(drupal_get_form('lingotek_admin_advanced_parsing_form', TRUE), t('Advanced Content Parsing'), array('id' => 'ltk-advanced-content-parsing'));
   }
 
+  $output['lingotek'][] = lingotek_wrap_in_fieldset(drupal_get_form('lingotek_admin_prefs_form', $show_fieldset), t('Preferences'), array('id' => 'ltk-prefs'));
+  $output['lingotek'][] = lingotek_wrap_in_fieldset(drupal_get_form('lingotek_admin_logging_form', $show_fieldset), 'Logging');
 
+  $utilities = array(
+    drupal_get_form('lingotek_admin_cleanup_form', $show_fieldset),
+    drupal_get_form('lingotek_admin_utilities_form', $show_fieldset),
+  );
+  $output['lingotek'][] = lingotek_wrap_in_fieldset($utilities, t('Utilities'));
 
   return $output;
 }
@@ -2082,7 +2100,7 @@ function lingotek_admin_language_switcher_form_submit($form, $form_state) {
     'theme' => $form_state['values']['theme']
   );
 
-  db_update('block')
+  db_update('{block}')
       ->fields(array(
         'status' => $block['status'],
         'weight' => $block['weight'],
@@ -2121,7 +2139,7 @@ function lingotek_admin_language_switcher_form_submit($form, $form_state) {
  */
 function lingotek_handle_advanced_xml_upgrade($form, $form_state) {
   if ($form_state['values']['lingotek_advanced_parsing']) {
-    $results = db_select('lingotek', 'l')->fields('l', array('nid'))->distinct()->execute();
+    $results = db_select('{lingotek}', 'l')->fields('l', array('nid'))->distinct()->execute();
     $operations = array();
     foreach ($results as $result) {
       $node = lingotek_node_load_default($result->nid, NULL, TRUE);
diff --git a/profiles/commons/modules/contrib/lingotek/lingotek.api.inc b/profiles/commons/modules/contrib/lingotek/lingotek.api.inc
index bfd5665..1604efd 100644
--- a/profiles/commons/modules/contrib/lingotek/lingotek.api.inc
+++ b/profiles/commons/modules/contrib/lingotek/lingotek.api.inc
@@ -20,8 +20,8 @@ function lingotek_get_translated_node($node, $drupal_language_code) {
 
   if ($node->tnid == 0) {
     $node->tnid = $node->nid;
-    db_update('node')
-      ->fields(array('tnid' => $node->nid))
+    db_update('{node}')
+        ->fields(array('tnid' => $node->nid))
       ->condition('nid', $node->nid)
       ->execute();
   }
@@ -68,7 +68,7 @@ function lingotek_get_translated_node($node, $drupal_language_code) {
 }
 
 function lingotek_process_entity_xml($xml, $entity, $entity_type, $drupal_language_code, $url_alias_translation = 0) {
-  list($id, $vid, $bundle) = entity_extract_ids($entity_type, $entity);
+  list($id, $vid, $bundle) = lingotek_entity_extract_ids($entity_type, $entity);
 
   // Add revision_id to be the same as the entity_id if it was not found or if
   // it is a comment.
@@ -177,11 +177,9 @@ function lingotek_process_entity_xml($xml, $entity, $entity_type, $drupal_langua
             }
             $array_key = $target_key[$index];
             $db_field_name = $field['field_name'] . '_' . $array_key;
-            $insert_array[$db_field_name] = lingotek_unfilter_placeholders(decode_entities($text));
-            //$node_field[$drupal_language_code][$delta][$array_key] = decode_entities($text);
+            $insert_array[$db_field_name] = lingotek_unfilter_placeholders($text);
             if (array_key_exists($entity->language, $node_field)) {
               if (array_key_exists('format', $node_field[$entity->language][0])) {
-                //$node_field[$drupal_language_code][$index]['format'] = $node_field[$node->language][0]['format'];
                 $format_db_field_name = $field['field_name'] . '_format';
                 $insert_array[$format_db_field_name] = $node_field[$entity->language][0]['format'];
               }
diff --git a/profiles/commons/modules/contrib/lingotek/lingotek.batch.inc b/profiles/commons/modules/contrib/lingotek/lingotek.batch.inc
index adb225f..ea1c8be 100644
--- a/profiles/commons/modules/contrib/lingotek/lingotek.batch.inc
+++ b/profiles/commons/modules/contrib/lingotek/lingotek.batch.inc
@@ -29,8 +29,9 @@ function lingotek_field_language_data_cleanup_batch_create($entity_type, $autose
   // undefined to the source language.
   $query1 = new EntityFieldQuery();
   $entities1 = $query1->entityCondition('entity_type', $entity_type)
-      ->propertyCondition('language', 'und', '=')
+      ->propertyCondition('language', LANGUAGE_NONE, '=')
       ->execute();
+  unset($query1);
   if (isset($entities1[$entity_type])) {
     foreach ($entities1[$entity_type] as $entity) {
       $entity_id = $entity->{$info['entity keys']['id']};
@@ -44,6 +45,7 @@ function lingotek_field_language_data_cleanup_batch_create($entity_type, $autose
   $query2 = new EntityFieldQuery();
   $entities2 = $query2->entityCondition('entity_type', $entity_type)
       ->execute();
+  unset($query2);
   if (isset($entities2[$entity_type])) {
     foreach ($entities2[$entity_type] as $entity) {
       $entity_id = $entity->{$info['entity keys']['id']};
@@ -54,7 +56,7 @@ function lingotek_field_language_data_cleanup_batch_create($entity_type, $autose
   }
 
   // Add missing URL aliases
-  $query = db_select('url_alias', 'ua')
+  $query = db_select('{url_alias}', 'ua')
       ->fields('ua', array('source'))
       ->condition('ua.source', "$entity_type/%", 'LIKE')
       ->condition('ua.language', LANGUAGE_NONE)
@@ -193,7 +195,7 @@ function lingotek_get_sync_download_batch_elements($download_targets = NULL, $sy
 
       // get all nodes that have pending translations
       $key = 'target_sync_status_' . $lingotek_locale;
-      $query = db_select('lingotek_entity_metadata', 'l')->fields('l');
+      $query = db_select('{lingotek_entity_metadata}', 'l')->fields('l');
       $query->condition('entity_type', 'node');
       $query->condition('entity_key', $key);
       $status_or = db_or()
@@ -206,7 +208,7 @@ function lingotek_get_sync_download_batch_elements($download_targets = NULL, $sy
       }
       // get all config chunks that have pending translations
       $key = 'target_sync_status_' . $lingotek_locale;
-      $query = db_select('lingotek_config_metadata', 'meta')->fields('meta');
+      $query = db_select('{lingotek_config_metadata}', 'meta')->fields('meta');
       $query->condition('config_key', $key);
       $status_or = db_or()
         ->condition('value', LingotekSync::STATUS_PENDING)
@@ -267,7 +269,6 @@ function lingotek_batch_disassociate_content() {
   $operations[] = array('lingotek_batch_disassociate_content_worker', array($api, $doc_ids));
 
 
-  $operations[] = array('LingotekSync::disassociateAllNodes', array());
   $operations[] = array('LingotekSync::disassociateAllEntities', array());
   $operations[] = array('LingotekSync::disassociateAllChunks', array());
   drupal_set_message(t('All local translations have been disassociated from Lingotek.'));
@@ -392,20 +393,21 @@ function lingotek_sync_download_target_finished($success, $results, $operations)
  */
 function lingotek_source_language_cleanup_batch_worker($entity_type, $entity_id, $source_language, &$context) {
 
-  $context['message'] = t("Setting language for @entity_type #@id to '@source_language", array('@entity_type' => $entity_type, '@id' => $entity_id, '@source_language' => $source_language));
+  $context['message'] = t("Setting language for @entity_type #@id to '@source_language'", array('@entity_type' => $entity_type, '@id' => $entity_id, '@source_language' => $source_language));
 
   $loaded_entity = lingotek_entity_load_single($entity_type, $entity_id);
   $info = entity_get_info($entity_type);
-  if (!empty($info['entity keys']['language']) && isset($loaded_entity->{$info['entity keys']['language']})) {
-    $loaded_entity->{$info['entity keys']['language']} = $source_language;
-  }
-  $loaded_entity->lingotek_upload_override = FALSE; // Set 0 : Ensure that uploading does not occur. Set 1 : Force uploading to occur
-  entity_save($entity_type, $loaded_entity);
-
-  if (!isset($context['results']['entity_cleanup'])) {
-    $context['results']['entity_cleanup'] = 0;
+  // Default to string 'language' if no language-related entity key is found.
+  $language_field = !empty($info['entity keys']['language']) ? $info['entity keys']['language'] : 'language';
+  if (isset($loaded_entity->$language_field) && $loaded_entity->$language_field != $source_language) {
+    $loaded_entity->$language_field = $source_language;
+    $loaded_entity->lingotek_upload_override = FALSE; // Set 0 : Ensure that uploading does not occur. Set 1 : Force uploading to occur
+    entity_save($entity_type, $loaded_entity);
+    if (!isset($context['results']['entity_cleanup'])) {
+      $context['results']['entity_cleanup'] = 0;
+    }
+    $context['results']['entity_cleanup'] ++;
   }
-  $context['results']['entity_cleanup'] ++;
 }
 
 /**
@@ -480,9 +482,10 @@ function lingotek_field_language_data_cleanup_update_entity($entity_type, $entit
   }
   $info = entity_get_info($entity_type);
   $label_field = $info['entity keys']['label'];
-  $language_field = $info['entity keys']['language'];
+  // Use 'language' as a fallback in case the entity doesn't give lang field.
+  $language_field = isset($info['entity keys']['language']) ? $info['entity keys']['language'] : 'language';
   $context['message'] = t('Preparing translatable content for @entity_type: @entity_title', array('@entity_type' => $entity_type, '@entity_title' => $entity->$label_field));
-  if (entity_language($entity_type, $entity) != 'und') {
+  if ($entity->$language_field != 'und') {
     $translatable_fields = lingotek_translatable_fields();
     foreach ($translatable_fields as $field_name) {
       if (!empty($entity->{$field_name}['und']) && empty($entity->{$field_name}[$entity->{$language_field}])) {
diff --git a/profiles/commons/modules/contrib/lingotek/lingotek.bulk_grid.inc b/profiles/commons/modules/contrib/lingotek/lingotek.bulk_grid.inc
index 751ddaa..20b151b 100644
--- a/profiles/commons/modules/contrib/lingotek/lingotek.bulk_grid.inc
+++ b/profiles/commons/modules/contrib/lingotek/lingotek.bulk_grid.inc
@@ -103,7 +103,7 @@ function lingotek_bulk_grid_form($form, $form_state) {
       if (is_array($value)) {
         $keys = array_keys($value);
         if (count($keys) == 1) {
-          if ($keys[0] != '' && $keys[0] != 'all') {
+          if ($keys[0] !== '' && $keys[0] !== 'all') {
             $filter_set = TRUE;
           }
         }
@@ -113,7 +113,7 @@ function lingotek_bulk_grid_form($form, $form_state) {
       }
       else {
         // $value === '0' accounts for the case of the automatic profile
-        if ((!empty($value) && $value != 'all') || $value === '0') {
+        if ((!empty($value) && $value !== 'all') || $value === '0') {
           $filter_set = TRUE;
         }
       }
@@ -382,7 +382,7 @@ function lingotek_popup($form_id, $entity_type = 'node', $entity_ids = array(),
   $output = ctools_modal_form_wrapper('lingotek_' . $form_id . '_form', $form_state);
 
   if (!empty($form_state['executed'])) {
-    lingotek_grid_action_submit($form, $form_state);
+    lingotek_grid_action_submit(NULL, $form_state);
     // Create ajax command array, dismiss the modal window.
     $commands = array();
     $commands[] = ctools_modal_command_dismiss();
@@ -517,8 +517,8 @@ function lingotek_grid_filter_submit($form, $form_state) {
  */
 function lingotek_grid_action_submit($form, $form_state) {
   $entity_ids = array();
-  $entity_type = $form_state['values']['entity_type'];
-  
+  $entity_type = isset($form_state['entity_type']) ? $form_state['entity_type'] : (isset($form_state['values']['entity_type']) ? $form_state['values']['entity_type'] : NULL);
+
   if (isset($form_state['clicked_button']) && $form_state['clicked_button']['#name'] == 'actions_submit') { // If submitting an action
     foreach ($form_state['values']['the_grid'] as $value) {
       if ($value != 0) {
@@ -836,7 +836,7 @@ function lingotek_grid_build_filters($form_state) {
   foreach ($profile_defaults as $key => $p) {
     $profiles[$key] = $p['name'];
   }
-  
+
   $filters = array(
     'nid' => array(
       '#type' => 'textfield',
@@ -885,15 +885,23 @@ function lingotek_grid_build_filters($form_state) {
         LingotekSync::STATUS_CURRENT => t('In Sync'),
       ),
       '#multiple' => FALSE,
-    ),
-    'content_type' => array(
+    )
+  );
+
+  // Include a content-type filter if there are bundles by which to filter.
+  $entity_info = entity_get_info($_SESSION['grid_entity_type']);
+  if (!empty($entity_info['bundles'])) {
+    $grid_bundles = array_map(function($val) {
+      return $val['label'];
+    }, $entity_info['bundles']);
+    $filters['content_type'] = array(
       '#type' => 'select',
       '#default_value' => isset($_SESSION['grid_filters']['content_type']) ? $_SESSION['grid_filters']['content_type'] : 'all',
       '#title' => t('Content Type(s)'),
-      '#options' => array('all' => t('All')) + node_type_get_names(),
+      '#options' => array('all' => t('All')) + $grid_bundles,
       '#multiple' => TRUE
-    ),
-  );
+    );
+  }
 
   return lingotek_grid_process_elements($filters, '', '__filter'); // Add prefix and suffix to the name of each filter element
 }
@@ -957,7 +965,7 @@ function lingotek_grid_process_elements($elements, $prefix, $suffix) {
  *    Returns array of rows
  *    Populates The Grid
  */
-function lingotek_grid_get_rows($entity_type, $form, &$form_state, $count_only=FALSE) {
+function lingotek_grid_get_rows($entity_type, $form, &$form_state, $count_only = FALSE) {
   $info = entity_get_info($entity_type);
   $entity_id_key = $info['entity keys']['id'];
   $eid = 'n.' . $entity_id_key;
@@ -996,13 +1004,18 @@ function lingotek_grid_get_rows($entity_type, $form, &$form_state, $count_only=F
     'translate_link' => array('data' => t('Translate')),
   );
   
-  if (!isset($entity_properties['changed']))
+  if (!isset($entity_properties['changed'])) {
     unset($header['changed']);
-  if (!$label_col)
+  }
+  if (!$label_col) {
     unset($header['title']);
-  if (!$bundle_col)
+  }
+  // Taxonomy terms require special handling of bundles because they do not
+  // have a bundle column in their table.
+  if (!$bundle_col && $entity_type != 'taxonomy_term') {
     unset($header['content_type']);
-  
+  }
+
   if (isset($entity_properties['changed'])) {
     $header['changed']['sort'] = 'desc';
   }
@@ -1015,17 +1028,17 @@ function lingotek_grid_get_rows($entity_type, $form, &$form_state, $count_only=F
 
   // Initialize Query and extend paginator and tablesort if necessary
   if ($count_only) {
-    $query = db_select($base_table, 'n');
+    $query = db_select('{' . $base_table . '}', 'n');
   }
   else {
-    $query = db_select($base_table, 'n')
+    $query = db_select('{' . $base_table . '}', 'n')
         ->extend('PagerDefault')
         ->extend('TableSort');
     $query->limit($limit)
         ->orderByHeader($form_state['values']['grid_header']);
   }
   if ($base_table == 'node') {
-    $query->innerJoin('node', 'node2', '(n.nid = node2.nid) AND (node2.tnid = 0 OR node2.tnid = node2.nid)');
+    $query->innerJoin('{node}', 'node2', '(n.nid = node2.nid) AND (node2.tnid = 0 OR node2.tnid = node2.nid)');
   }
 
   // Entity Title and Name of Content Type (type)
@@ -1044,10 +1057,15 @@ function lingotek_grid_get_rows($entity_type, $form, &$form_state, $count_only=F
   }
 
   if ($entity_type == 'comment') {
-    $query->leftJoin('node', 'nn', 'nn.nid = n.nid');
+    $query->leftJoin('{node}', 'nn', 'nn.nid = n.nid');
     $query->addExpression("CONCAT('comment_node_',nn.type)", 'type');
     $query->addExpression("CONCAT('comment_node_',nn.type)", 'node_type');
   }
+  elseif ($entity_type == 'taxonomy_term') {
+    $query->innerJoin('{taxonomy_vocabulary}', 'tv', 'n.vid = tv.vid');
+    $query->addField('tv', 'name', 'tv_name');
+    $query->addField('tv', 'machine_name', 'type');
+  }
   elseif ($bundle_col) {
     if ($info['entity keys']['bundle'] != 'type') {
       $query->addField('n', $info['entity keys']['bundle']);
@@ -1055,13 +1073,13 @@ function lingotek_grid_get_rows($entity_type, $form, &$form_state, $count_only=F
     $query->addField('n', $info['entity keys']['bundle'], 'type');
   }
 
-  $query->addExpression("(SELECT COUNT(entity_id) FROM lingotek_entity_metadata WHERE entity_type='" . $entity_type . "' AND entity_id=" . $eid . " AND entity_key LIKE 'target_sync_status_%' AND value='CURRENT')", 't_current_c');
+  $query->addExpression("(SELECT COUNT(entity_id) FROM {lingotek_entity_metadata} WHERE entity_type='" . $entity_type . "' AND entity_id=" . $eid . " AND entity_key LIKE 'target_sync_status_%' AND value='CURRENT')", 't_current_c');
 
-  $query->addExpression("(SELECT GROUP_CONCAT(SUBSTRING(entity_key, 20, 10)) FROM lingotek_entity_metadata WHERE entity_type='" . $entity_type . "' AND entity_id=" . $eid . " AND entity_key LIKE 'target_sync_status_%' AND value='PENDING')", 't_pending');
-  $query->addExpression("(SELECT GROUP_CONCAT(SUBSTRING(entity_key, 20, 10)) FROM lingotek_entity_metadata WHERE entity_type='" . $entity_type . "' AND entity_id=" . $eid . " AND entity_key LIKE 'target_sync_status_%' AND value='READY')", 't_ready');
-  $query->addExpression("(SELECT GROUP_CONCAT(SUBSTRING(entity_key, 20, 10)) FROM lingotek_entity_metadata WHERE entity_type='" . $entity_type . "' AND entity_id=" . $eid . " AND entity_key LIKE 'target_sync_status_%' AND value='CURRENT')", 't_current');
-  $query->addExpression("(SELECT GROUP_CONCAT(SUBSTRING(entity_key, 20, 10)) FROM lingotek_entity_metadata WHERE entity_type='" . $entity_type . "' AND entity_id=" . $eid . " AND entity_key LIKE 'target_sync_status_%' AND value='EDITED')", 't_edited');
-  $query->addExpression("(SELECT GROUP_CONCAT(SUBSTRING(entity_key, 20, 10)) FROM lingotek_entity_metadata WHERE entity_type='" . $entity_type . "' AND entity_id=" . $eid . " AND entity_key LIKE 'target_sync_status_%' AND value='UNTRACKED')", 't_untracked');
+  $query->addExpression("(SELECT GROUP_CONCAT(SUBSTRING(entity_key, 20, 10)) FROM {lingotek_entity_metadata} WHERE entity_type='" . $entity_type . "' AND entity_id=" . $eid . " AND entity_key LIKE 'target_sync_status_%' AND value='PENDING')", 't_pending');
+  $query->addExpression("(SELECT GROUP_CONCAT(SUBSTRING(entity_key, 20, 10)) FROM {lingotek_entity_metadata} WHERE entity_type='" . $entity_type . "' AND entity_id=" . $eid . " AND entity_key LIKE 'target_sync_status_%' AND value='READY')", 't_ready');
+  $query->addExpression("(SELECT GROUP_CONCAT(SUBSTRING(entity_key, 20, 10)) FROM {lingotek_entity_metadata} WHERE entity_type='" . $entity_type . "' AND entity_id=" . $eid . " AND entity_key LIKE 'target_sync_status_%' AND value='CURRENT')", 't_current');
+  $query->addExpression("(SELECT GROUP_CONCAT(SUBSTRING(entity_key, 20, 10)) FROM {lingotek_entity_metadata} WHERE entity_type='" . $entity_type . "' AND entity_id=" . $eid . " AND entity_key LIKE 'target_sync_status_%' AND value='EDITED')", 't_edited');
+  $query->addExpression("(SELECT GROUP_CONCAT(SUBSTRING(entity_key, 20, 10)) FROM {lingotek_entity_metadata} WHERE entity_type='" . $entity_type . "' AND entity_id=" . $eid . " AND entity_key LIKE 'target_sync_status_%' AND value='UNTRACKED')", 't_untracked');
 
   $filters = isset($_SESSION['grid_filters']) ? $_SESSION['grid_filters'] : array();
 
@@ -1069,34 +1087,34 @@ function lingotek_grid_get_rows($entity_type, $form, &$form_state, $count_only=F
   $localized_label_table = 'field_data_' . $label_col . '_field';
 
   if ($label_col && language_default()->language != $language->language && db_table_exists($localized_label_table)) {
-    $query->leftJoin($localized_label_table, 't_title', 't_title.entity_id = ' . $eid . ' and t_title.entity_type = \'' . $entity_type . '\' and t_title.language=\'' . $language->language . '\'');
+    $query->leftJoin('{' . $localized_label_table . '}', 't_title', 't_title.entity_id = ' . $eid . ' and t_title.entity_type = \'' . $entity_type . '\' and t_title.language=\'' . $language->language . '\'');
     $query->addField('t_title', $label_col . '_field_value', 'localized_title');
   }
 
   // left joins are necessary here because some lingotek table keys might not exist
   // Lingotek Document ID
-  $query->leftJoin('lingotek_entity_metadata', 'lingo_document_id', 'lingo_document_id.entity_type =\'' . $entity_type . '\' AND lingo_document_id.entity_id = ' . $eid . ' and lingo_document_id.entity_key = \'document_id\'');
+  $query->leftJoin('{lingotek_entity_metadata}', 'lingo_document_id', 'lingo_document_id.entity_type =\'' . $entity_type . '\' AND lingo_document_id.entity_id = ' . $eid . ' and lingo_document_id.entity_key = \'document_id\'');
   $query->addField('lingo_document_id', 'value', 'document_id');
 
   // Entity Upload Status
-  $query->leftJoin('lingotek_entity_metadata', 'lingo_upload_status', 'lingo_upload_status.entity_type =\'' . $entity_type . '\' AND lingo_upload_status.entity_id = ' . $eid . ' and lingo_upload_status.entity_key = \'node_sync_status\' and lingo_upload_status.value <> \'' . LingotekSync::STATUS_TARGET . '\'');
-  //$query->leftJoin('lingotek_entity_metadata', 'lingo_upload_status', 'lingo_upload_status.nid = ' . $eid . ' and lingo_upload_status.entity_key = \'node_sync_status\'');
+  $query->leftJoin('{lingotek_entity_metadata}', 'lingo_upload_status', 'lingo_upload_status.entity_type =\'' . $entity_type . '\' AND lingo_upload_status.entity_id = ' . $eid . ' and lingo_upload_status.entity_key = \'node_sync_status\' and lingo_upload_status.value <> \'' . LingotekSync::STATUS_TARGET . '\'');
+  //$query->leftJoin('{lingotek_entity_metadata}', 'lingo_upload_status', 'lingo_upload_status.nid = ' . $eid . ' and lingo_upload_status.entity_key = \'node_sync_status\'');
   //$query->condition('lingo_upload_status.value', LingotekSync::STATUS_TARGET, '<>');
   $query->addField('lingo_upload_status', 'value', 'upload_status');
 
   // Profile Settings
-  $query->leftJoin('lingotek_entity_metadata', 'lingo_profile', 'lingo_profile.entity_type =\'' . $entity_type . '\' AND lingo_profile.entity_id = ' . $eid . ' and lingo_profile.entity_key = \'profile\'');
+  $query->leftJoin('{lingotek_entity_metadata}', 'lingo_profile', 'lingo_profile.entity_type =\'' . $entity_type . '\' AND lingo_profile.entity_id = ' . $eid . ' and lingo_profile.entity_key = \'profile\'');
   $query->addField('lingo_profile', 'value', 'profile');
 
   // Last Uploaded Timestamp
-  $query->leftJoin('lingotek_entity_metadata', 'lingo_last_uploaded', 'lingo_last_uploaded.entity_type =\'' . $entity_type . '\' AND lingo_last_uploaded.entity_id = ' . $eid . ' and lingo_last_uploaded.entity_key = \'last_uploaded\'');
+  $query->leftJoin('{lingotek_entity_metadata}', 'lingo_last_uploaded', 'lingo_last_uploaded.entity_type =\'' . $entity_type . '\' AND lingo_last_uploaded.entity_id = ' . $eid . ' and lingo_last_uploaded.entity_key = \'last_uploaded\'');
   $query->addField('lingo_last_uploaded', 'value', 'last_uploaded');
 
   // Any Upload Errors
-  $query->leftJoin('lingotek_entity_metadata', 'lingo_last_sync_error', 'lingo_last_sync_error.entity_type =\'' . $entity_type . '\' AND lingo_last_sync_error.entity_id = ' . $eid . ' and lingo_last_sync_error.entity_key = \'last_sync_error\'');
+  $query->leftJoin('{lingotek_entity_metadata}', 'lingo_last_sync_error', 'lingo_last_sync_error.entity_type =\'' . $entity_type . '\' AND lingo_last_sync_error.entity_id = ' . $eid . ' and lingo_last_sync_error.entity_key = \'last_sync_error\'');
   $query->addField('lingo_last_sync_error', 'value', 'last_sync_error');
 
-  $query->leftJoin('lingotek_entity_metadata', 'lingo_workflow', '' . $eid . ' = lingo_workflow.entity_id and lingo_workflow.entity_type =\'' . $entity_type . '\' and lingo_workflow.entity_key = \'workflow_id\'');
+  $query->leftJoin('{lingotek_entity_metadata}', 'lingo_workflow', '' . $eid . ' = lingo_workflow.entity_id and lingo_workflow.entity_type =\'' . $entity_type . '\' and lingo_workflow.entity_key = \'workflow_id\'');
   $query->addField('lingo_workflow', 'value', 'workflow');
 
   if (isset($filters['search_type']) && $filters['search_type'] == 'all') {
@@ -1104,14 +1122,14 @@ function lingotek_grid_get_rows($entity_type, $form, &$form_state, $count_only=F
   }
 
   if (isset($filters['title'])) {
-    $title_query = db_select('field_data_title_field', 'tf')
+    $title_query = db_select('{field_data_title_field}', 'tf')
         ->distinct()
         ->fields('tf', array('entity_id'))
         ->condition('tf.title_field_value', '%' . $filters['title'] . '%', 'LIKE');
   }
 
   if (isset($filters['body'])) {
-    $body_query = db_select('field_data_body', 'tb')
+    $body_query = db_select('{field_data_body}', 'tb')
         ->distinct()
         ->fields('tb', array('entity_id'))
         ->condition('tb.body_value', '%' . $filters['body'] . '%', 'LIKE');
@@ -1178,7 +1196,13 @@ function lingotek_grid_get_rows($entity_type, $form, &$form_state, $count_only=F
 
   //  Content Type
   if (isset($filters['content_type']) && !in_array('all', $filters['content_type'])) {
-    $query->condition('n.' . $info['entity keys']['bundle'], $filters['content_type'], 'IN');
+    // Special-case handling of taxonomy_term pseudo-entities
+    if ($entity_type == 'taxonomy_term') {
+      $query->condition('tv.machine_name', $filters['content_type'], 'IN');
+    }
+    else {
+      $query->condition('n.' . $info['entity keys']['bundle'], $filters['content_type'], 'IN');
+    }
   }
 
   if (isset($filters['profile']) && !in_array('all', $filters['profile'])) {
@@ -1347,7 +1371,7 @@ function lingotek_grid_get_rows($entity_type, $form, &$form_state, $count_only=F
 
 
     $actions = '';
-    $actions .= l('<i title="' . t('Edit') . '" class="fa fa-edit"></i>', $entity_type . '/' . $entity_id . '/edit', array('html' => TRUE, 'attributes' => array('target' => '_blank')));
+    $actions .= lingotek_get_entity_edit_link($entity_type, $entity_id);
     $actions .= empty($disabled_class) ? $pm_link : $pm_icon;
     $actions .= ' ' . l('<i title="' . t('Set Lingotek Settings') . '" class="fa fa-gear"></i>', '', array('html' => TRUE, 'attributes' => array('onclick' => 'lingotek_perform_action(' . $entity_id . ',"edit"); return false;')));
 
@@ -1393,6 +1417,26 @@ function lingotek_grid_get_rows($entity_type, $form, &$form_state, $count_only=F
   return $table_data;
 }
 
+function lingotek_get_entity_edit_link($entity_type, $entity_id, $url_only = FALSE) {
+  $edit_link = "";
+  $query = array();
+  $query['destination'] = 'admin/settings/lingotek/manage/' . $entity_type;
+  switch ($entity_type) {
+    case 'fieldable_panels_pane':
+      $edit_link = 'admin/structure/fieldable-panels-panes/view/' . $entity_id . '/edit';
+      break;
+    case 'taxonomy_term':
+      $edit_link = 'taxonomy/term/' . $entity_id . '/edit';
+      break;
+    case 'message_type':
+      return '';
+    default:
+      $edit_link = $entity_type . '/' . $entity_id . '/edit';
+      break;
+  }
+  return $url_only ? url($edit_link, array('query' => $query)) : l('<i title="' . t('Edit') . '" class="fa fa-edit"></i>', $edit_link, array('html' => TRUE, 'attributes' => array('target' => '_blank'), 'query' => $query));
+}
+
 function lingotek_lang_icons($entity_type, $languages, $locales, $statuses, $entity_id = NULL, $disabled = FALSE, $source_language = NULL) {
   $html = "";
 
@@ -1622,7 +1666,7 @@ function lingotek_entity_delete_form_submit($form, &$form_state) {
   if (!empty($entity_ids)) {
     entity_delete_multiple($entity_type, $entity_ids);
     $count = count($entity_ids);
-    watchdog('content', 'Deleted @count entities.', array('@count' => $count));
+    watchdog('content', format_plural($count, 'Deleted 1 entity.', 'Deleted @count entities.'));
     drupal_set_message(format_plural($count, 'Deleted 1 entity.', 'Deleted @count entities.'));
     $form_state['executed'] = TRUE;
   }
diff --git a/profiles/commons/modules/contrib/lingotek/lingotek.info b/profiles/commons/modules/contrib/lingotek/lingotek.info
index d4a81f9..0862d2c 100644
--- a/profiles/commons/modules/contrib/lingotek/lingotek.info
+++ b/profiles/commons/modules/contrib/lingotek/lingotek.info
@@ -21,7 +21,6 @@ dependencies[] = i18n_taxonomy
 dependencies[] = i18n_translation
 dependencies[] = i18n_variable
 dependencies[] = views
-dependencies[] = i18nviews
 dependencies[] = l10n_update
 dependencies[] = ctools
 dependencies[] = potx
@@ -45,9 +44,9 @@ files[] = lingotek_views_handler_workbench_link.inc
 
 stylesheets[all][] = style/base.css
 
-; Information added by Drupal.org packaging script on 2014-03-11
-version = "7.x-5.04"
+; Information added by Drupal.org packaging script on 2014-05-05
+version = "7.x-5.06"
 core = "7.x"
 project = "lingotek"
-datestamp = "1394566406"
+datestamp = "1399330130"
 
diff --git a/profiles/commons/modules/contrib/lingotek/lingotek.install b/profiles/commons/modules/contrib/lingotek/lingotek.install
index 91d92cb..6db2243 100644
--- a/profiles/commons/modules/contrib/lingotek/lingotek.install
+++ b/profiles/commons/modules/contrib/lingotek/lingotek.install
@@ -63,10 +63,10 @@ function lingotek_uninstall() {
   db_drop_field('languages', 'lingotek_enabled');
   db_drop_field('languages', 'lingotek_locale');
   db_drop_field('locales_target', 'translation_agent_id');
-  db_drop_table('lingotek');// leave this here until we move it to an update function
-  db_drop_table('lingotek_config_metadata');
-  db_drop_table('lingotek_entity_metadata');
-  db_drop_table('lingotek_translation_agent');
+  db_drop_table('{lingotek}'); // leave this here until we move it to an update function
+  db_drop_table('{lingotek_config_metadata}');
+  db_drop_table('{lingotek_entity_metadata}');
+  db_drop_table('{lingotek_translation_agent}');
 }
 
 /**
@@ -102,14 +102,14 @@ function lingotek_schema() {
       'entity_type' => array(
         'description' => 'The entity type (node, comment, etc.).',
         'type' => 'varchar',
-        'length' => 255,
+        'length' => 128,
         'not null' => TRUE,
         'default' => '',
       ),
       'entity_key' => array(
         'description' => 'The ID for the Lingotek-associated value.',
         'type' => 'varchar',
-        'length' => 255,
+        'length' => 128,
         'not null' => TRUE,
         'default' => '',
       ),
@@ -247,6 +247,33 @@ function lingotek_schema_alter(&$schema) {
 
 }
 
+function lingotek_extend_metadata_tables() {
+  $tables = array('lingotek_entity_metadata', 'lingotek_config_metadata');
+  $fields = array('created', 'modified');
+  $spec = array(
+    'created' => array(
+      'type' => 'int',
+    'description' => "created timestamp",
+    'default' => 0,
+    'not null' => TRUE,
+  ),
+    'modified' => array(
+      'type' => 'int',
+      'description' => "last modified timestamp",
+      'default' => 0,
+      'not null' => TRUE,
+  ));
+  foreach ($tables as $table) {
+    foreach ($fields as $field) {
+      try {
+        db_add_field($table, $field, $spec[$field]);
+      } catch (Exception $ex) {
+        // already exists (no need to do anything)
+      }
+    }
+  }
+}
+
 /*
  * Update
  * 1. Create the mt-queue
@@ -257,7 +284,7 @@ function lingotek_update_7200(&$sandbox) {
   drupal_load('module', 'lingotek');
 
   if (!isset($sandbox['progress'])) {
-    $result = db_select('lingotek', 'n')->distinct(TRUE)->fields('n', array(db_escape_field('nid')))->execute();
+    $result = db_select('{lingotek}', 'n')->distinct(TRUE)->fields('n', array(db_escape_field('nid')))->execute();
     $nodes = array();
     foreach ($result as $row) {
       array_push($nodes, $row->nid);
@@ -298,7 +325,7 @@ function lingotek_update_7201(&$sandbox) {
 
   if ($default_lingotek_project) {
     if (!isset($sandbox['progress'])) {
-      $result = db_select('lingotek', 'l')
+      $result = db_select('{lingotek}', 'l')
           ->distinct(TRUE)
           ->fields('l', array('nid'))
           ->execute();
@@ -488,7 +515,7 @@ function lingotek_update_7401(&$sandbox) {
   );
 
   foreach ($agents as $a) {
-    db_merge('lingotek_translation_agent')
+    db_merge('{lingotek_translation_agent}')
         ->key(array('id' => $a['id']))
         ->fields(array('id' => $a['id'], 'name' => $a['name']))
         ->execute();
@@ -546,8 +573,9 @@ function lingotek_update_7403(&$sandbox) {
  */
 function lingotek_update_7404(&$sandbox) {
   LingotekSync::updateNotifyUrl();
+  lingotek_extend_metadata_tables();
 
-  $query = db_select('lingotek', 'l');
+  $query = db_select('{lingotek}', 'l');
   $query->fields('l', array('nid'));
   $query->distinct('nid');
   $result = $query->execute();
@@ -590,10 +618,11 @@ function lingotek_update_7406(&$sandbox) {
  * Creates an upgrade path for existing translated content to be inserted into entity_translation module table if necessary
  */
 function lingotek_update_7408(&$sandbox) {
+  lingotek_extend_metadata_tables();
   if (module_exists('entity_translation')) {
     $nid_list = array();
-    $results = db_select('lingotek', 'l')
-      ->fields('l', array('nid', 'lingokey'))
+    $results = db_select('{lingotek}', 'l')
+        ->fields('l', array('nid', 'lingokey'))
       ->condition('lingokey', 'target_sync_status_%', 'LIKE')
       ->condition('lingovalue', LingotekSync::STATUS_CURRENT)
       ->execute();
@@ -616,9 +645,10 @@ function lingotek_update_7408(&$sandbox) {
  * Adds support for translating additional entity types
  */
 function lingotek_update_7500(&$sandbox) {
-  db_query("INSERT IGNORE INTO lingotek_entity_metadata (entity_id, entity_type, entity_key, value)
+  lingotek_extend_metadata_tables();
+  db_query("INSERT IGNORE INTO {lingotek_entity_metadata} (entity_id, entity_type, entity_key, value)
 SELECT nid as entity_id, 'node' as entity_type, lingokey as entity_key, lingovalue as value
-FROM lingotek");
+FROM {lingotek}");
   //db_drop_table('lingotek');// as soon as this is running in an update function remove it from the uninstall function above
 }
 
@@ -626,6 +656,7 @@ FROM lingotek");
  * Updates 'lingotek_account_plan_type' to be 'advanced' when 'enterprise'
  */
 function lingotek_update_7501(&$sandbox) { 
+  lingotek_extend_metadata_tables();
   $current_plan_type = variable_get('lingotek_account_plan_type');
   if ($current_plan_type == 'enterprise') {
     variable_set('lingotek_account_plan_type', 'advanced');
@@ -636,6 +667,7 @@ function lingotek_update_7501(&$sandbox) {
  * Migrates comment profile settings
  */
 function lingotek_update_7502(&$sandbox) {
+  lingotek_extend_metadata_tables();
   // migrate the old variable to the new
   $comment_settings = variable_get('lingotek_translate_comments_node_types'); // old variable
   if (!is_null($comment_settings)) {
@@ -653,7 +685,7 @@ function lingotek_update_7502(&$sandbox) {
   // set assumed status of CURRENT for all comment translations
   // select all comment entity ids in the lingotek_entity_metadata table
   $entity_type = 'comment';
-  $query = db_select('lingotek_entity_metadata', 'l');
+  $query = db_select('{lingotek_entity_metadata}', 'l');
   $query->fields('l', array('entity_id'))->condition('entity_type', $entity_type);
   $query->distinct('entity_id');
   $result = $query->execute();
@@ -681,6 +713,7 @@ function lingotek_update_7502(&$sandbox) {
  * Migrate any CUSTOM profile usage within entity_profiles
  */
 function lingotek_update_7503(&$sandbox) {
+  lingotek_extend_metadata_tables();
   $profiles = variable_get('lingotek_entity_profiles');
   foreach ($profiles as $profile_key => $profile) {
     foreach ($profile as $bundle => $profile_id) {
@@ -696,6 +729,7 @@ function lingotek_update_7503(&$sandbox) {
  * Add indexes to the lingotek_entity_metadata table
  */
 function lingotek_update_7504(&$sandbox) {
+  lingotek_extend_metadata_tables();
   $table = 'lingotek_entity_metadata';
   $indexes = array(
     'idx_entity_id' => array('entity_id'),
@@ -715,7 +749,8 @@ function lingotek_update_7504(&$sandbox) {
  * Remove unused entries from lingotek_entity_metadata table
  */
 function lingotek_update_7505(&$sandbox) {
-  $delete = db_delete('lingotek_entity_metadata');
+  lingotek_extend_metadata_tables();
+  $delete = db_delete('{lingotek_entity_metadata}');
   $or = db_or();
   $or->condition('entity_key', 'target_sync_progress_%', 'LIKE');
   $or->condition('entity_key', 'target_sync_last_progress_updated_%', 'LIKE');
@@ -728,41 +763,24 @@ function lingotek_update_7505(&$sandbox) {
 /**
  * Add created and modified timestamps to lingotek schemas.
  */
-function lingotek_update_7506() {
-  $tables = array('lingotek_entity_metadata', 'lingotek_config_metadata');
-  $fields = array('created', 'modified');
-  $spec = array(
-    'created' => array(
-      'type' => 'int',
-    'description' => "created timestamp",
-    'default' => 0,
-    'not null' => TRUE,
-  ),
-    'modified' => array(
-      'type' => 'int',
-      'description' => "last modified timestamp",
-      'default' => 0,
-      'not null' => TRUE,
-  ));
-  $total = 0;
-  foreach ($tables as $table) {
-    foreach ($fields as $field) {
-      try {
-        db_add_field($table, $field, $spec[$field]);
-      } catch (Exception $ex) {
-        // already exists (no need to do anything)
-      }
-      $total++;
-    }
-  }
-  $message = "Creation and modification timestamps for Lingotek metadata have successfully been added ($total/$total).";
+function lingotek_update_7506(&$sandbox) {
+
+  // lingotek_keystore() was modified as of update #7506 to
+  // require two additional fields: created and modified.  So, that
+  // update function is called in all previous update functions prior to 
+  // running lingotek_keystore() as a forward-compatibility, since these
+  // fields are missing at the point of previous updates, while the db
+  // schema includes the fields already.  This is the final call to it.
+  lingotek_extend_metadata_tables();
+
+  $message = "Creation and modification timestamps for Lingotek metadata have successfully been added.";
   return $message;
 }
 
 /**
  * Reset any bundles currently set to legacy profile 'CUSTOM' to be 'MANUAL'.
  */
-function lingotek_update_7507() {
+function lingotek_update_7507(&$sandbox) {
   $entity_profiles = variable_get('lingotek_entity_profiles', NULL);
   $custom_bundles = array();
   foreach ($entity_profiles as $entity_type => $bundles) {
@@ -779,3 +797,49 @@ function lingotek_update_7507() {
     return $message;
   }
 }
+
+/**
+ * Reduce the size of current entity_type and entity_key fields in the lingotek_entity_metadata table
+ */
+function lingotek_update_7508(&$sandbox) {
+  $table = 'lingotek_entity_metadata';
+  $entity_type_spec = array(
+        'description' => 'The entity type (node, comment, etc.).',
+        'type' => 'varchar',
+        'length' => 128,
+        'not null' => TRUE,
+        'default' => '',
+  );
+  $entity_key_spec = array(
+        'description' => 'The ID for the Lingotek-associated value.',
+        'type' => 'varchar',
+        'length' => 128,
+        'not null' => TRUE,
+        'default' => '',
+  );
+  $primary_key = array(
+    'entity_id',
+    'entity_type',
+    'entity_key',
+  );
+  $indexes = array(
+    'idx_entity_key' => array('entity_key'),
+    'idx_entity_type_and_key' => array('entity_type', 'entity_key'),
+    'idx_entity_key_and_value' => array('entity_key', 'value'),
+  );
+
+  // drop the related keys and indices
+  db_drop_primary_key($table);
+  foreach ($indexes as $index_name => $fields) {
+    db_drop_index($table, $index_name);
+  }
+  // update the fields to be 128 instead of 255
+  db_change_field($table, 'entity_type', 'entity_type', $entity_type_spec);
+  db_change_field($table, 'entity_key', 'entity_key', $entity_key_spec);
+  // add back related keys and indices
+  db_add_primary_key($table, $primary_key);
+  foreach ($indexes as $index_name => $fields) {
+    db_add_index($table, $index_name, $fields);
+  }
+  return t('Reduced field size of entity types and keys in the Lingotek entity metadata table.');
+}
diff --git a/profiles/commons/modules/contrib/lingotek/lingotek.module b/profiles/commons/modules/contrib/lingotek/lingotek.module
index 05202aa..537f6f6 100644
--- a/profiles/commons/modules/contrib/lingotek/lingotek.module
+++ b/profiles/commons/modules/contrib/lingotek/lingotek.module
@@ -307,10 +307,10 @@ function lingotek_menu() {
   $items[LINGOTEK_MENU_MAIN_BASE_URL . '/manage/change-workflow/%/%'] = array(
     'access arguments' => array('administer lingotek'),
     'file' => 'lingotek.bulk_grid.inc',
-    //'page callback' => 'lingotek_change_workflow',
-    //'page arguments' => array(5, 6),
-    'page callback' => 'lingotek_popup',
-    'page arguments' => array('change_workflow', 5, 6),
+    'page callback' => 'lingotek_change_workflow',
+    'page arguments' => array(5, 6),
+    //'page callback' => 'lingotek_popup',
+    //'page arguments' => array('get_change_workflow', 5, 6),
     'type' => MENU_CALLBACK,
   );
 
@@ -620,7 +620,7 @@ function lingotek_permission() {
 function lingotek_form_node_form_alter(&$form, $form_state, $form_id) {
   // On node create, set the language select box to our source language, if this is a node content type that we translate for, if the form is in Add mode.
   if (!isset($form['nid']['#value'])) { // add mode (no node id set)
-    if (lingotek_supported_type($form['type']['#value'])) { // lingotek translated content type
+    if (lingotek_supported_type($form['type']['#value']) && !lingotek_is_node_translation()) { // lingotek translated content type
       $form['language']['#default_value'] = lingotek_get_source_language();
     }
   }
@@ -796,6 +796,25 @@ function lingotek_form_node_form_alter(&$form, $form_state, $form_id) {
 
 }
 
+/**
+ * Display the Lingotek node-settings form
+ *
+ * This form is used both in a tab at the bottom of each node's edit form
+ * (Translation management) and in the bulk-action select box on the translation
+ * manage page (Edit Translation Settings).
+ *
+ * @param array $form
+ *   the passed form elements
+ *
+ * @param array $form_state
+ *   the form state, including submitted values if any
+ *
+ * @param object $node
+ *   an optional node on which to act
+ *
+ * @return array
+ *   the modified form
+ */
 function lingotek_get_node_settings_form($form, &$form_state, $node = NULL) {
   $second_run = isset($form_state['input']['op']);
 
@@ -826,9 +845,15 @@ function lingotek_get_node_settings_form($form, &$form_state, $node = NULL) {
 
   $show_advanced = LingotekAccount::instance()->showAdvanced();
 
+  // Vertical Tab.
+  // (When the Lingotek module is enabled, then show the translation tab unless
+  // the node is *not* managed by Lingotek *and* it is a node-based translation
+  // of a different (source) node.
+  if (lingotek_is_node_translation($node) && isset($node->translation_source->lingotek['profile']) && $node->translation_source->lingotek['profile'] === LingotekSync::PROFILE_DISABLED) {
+    return $form;
+  }
   $title = t('Translation Management');
 
-  // Vertical Tab.
   $form['lingotek'] = array(
     '#title' => t('Translation management'),
     '#type' => 'fieldset',
@@ -843,12 +868,14 @@ function lingotek_get_node_settings_form($form, &$form_state, $node = NULL) {
     '#tree' => TRUE,
   );
 
-  if (isset($node->tnid) && $node->tnid != 0 && $node->tnid != $node->nid) {
+  if (lingotek_is_node_translation($node)) {
     $form['lingotek']['note'] = array(
       '#markup' => t('This is a target node for the language code: @lang. To change
         the Lingotek settings please edit the source node.', array('@lang' => $node->language)),
     );
-
+    $form['lingotek']['content_begin'] = array(
+      '#markup' => '<div id="edit-lingotek-content" class="form-wrapper">',
+    );
     return $form; //this is a target node and thus should not have lingotek settings
   }
 
@@ -905,9 +932,9 @@ function lingotek_get_node_settings_form($form, &$form_state, $node = NULL) {
 
   $content_translation_note = '';
   if (!lingotek_node_based_trans_ready()) {
-    $content_translation_note = t("Note: Requires Content Translation module (translation) and Node Translation module (i18n_node).");
+    $content_translation_note = t("Note: Requires Content Translation module (translation) and Multilingual content module (i18n_node).");
   }
-  
+
   if (!$bulk_grid) {
     $form['lingotek']['lingotek_nodes_translation_method'] = array(
       '#type' => 'radios',
@@ -949,17 +976,17 @@ function lingotek_get_node_settings_form($form, &$form_state, $node = NULL) {
       '#description' => t('When enabled, anonymous site visitors will be presented with a link allowing them to contribute translations for this node.'),
       '#default_value' => $node->lingotek['allow_community_translation'],
     );
-
-    // URL Alias Translation.
-    $form['lingotek']['url_alias_translation'] = array(
-      '#type' => 'select',
-      '#title' => t('URL Alias Translation'),
-      '#default_value' => $node->lingotek['url_alias_translation'],
-      '#options' => lingotek_get_url_alias_translations(),
-      '#description' => t('Choose how you would like to translate the URL alias. The last option requires that you install both the Title and Pathauto modules, and define a path pattern.'),
-    );
   }
 
+  // URL Alias Translation.
+  $form['lingotek']['url_alias_translation'] = array(
+    '#type' => 'select',
+    '#title' => t('URL Alias Translation'),
+    '#default_value' => $node->lingotek['url_alias_translation'],
+    '#options' => lingotek_get_url_alias_translations(),
+    '#description' => t('Choose how you would like to translate the URL alias. The last option requires that you install both the Title and Pathauto modules, and define a path pattern.'),
+  );
+
   if ($bulk_grid) {
     $form['submit'] = array(
       '#type' => 'submit',
@@ -998,13 +1025,13 @@ function lingotek_entity_save($entity, $entity_type) {
     return $entity;
   }
   
-  list($id, $vid, $bundle) = entity_extract_ids($entity_type, $entity);
+  list($id, $vid, $bundle) = lingotek_entity_extract_ids($entity_type, $entity);
 
   $has_not_been_uploaded = !isset($entity->lingotek['document_id']) || empty($entity->lingotek['document_id']);
 
   $remove = lingotek_get_profile_fields($has_not_been_uploaded, TRUE);
 
-  db_delete('lingotek_entity_metadata')
+  db_delete('{lingotek_entity_metadata}')
       ->condition('entity_type', $entity_type)
       ->condition('entity_id', $id)
       ->condition('entity_key', $remove, 'IN')
@@ -1014,7 +1041,7 @@ function lingotek_entity_save($entity, $entity_type) {
   $entity_changed = TRUE;
 
   if ($entity->lingotek['profile'] == LingotekSync::PROFILE_CUSTOM) {
-    $query = db_insert('lingotek_entity_metadata')->fields(array('entity_type', 'entity_id', 'entity_key', 'value'));
+    $query = db_insert('{lingotek_entity_metadata}')->fields(array('entity_type', 'entity_id', 'entity_key', 'value'));
 
     foreach ($remove as $key) {
       if (isset($entity->lingotek[$key])) {
@@ -1253,7 +1280,7 @@ function lingotek_node_presave($node) {
  */
 function lingotek_node_load_default($nid, $vid = NULL, $reset = FALSE) {
   if ($vid == NULL) {
-    $query = db_select('node_revision', 'nr')
+    $query = db_select('{node_revision}', 'nr')
         ->condition('nid', $nid, '=');
     $query->addExpression('MAX(vid)', 'max_vid');
     $vid = $query->execute()->fetchField();
@@ -1296,9 +1323,9 @@ function lingotek_entity_load($entities, $entity_type) {
       lingotek_normalize_field_collection_language($entity_type, $e);
     }
   }
-  if ($entity_type == 'message_type') {
+  if ($entity_type == 'message_type' || $entity_type == 'taxonomy_term') {
     foreach ($entities as $e) {
-      lingotek_normalize_language($e);
+      lingotek_normalize_language($entity_type, $e);
     }
   }
 
@@ -1306,7 +1333,7 @@ function lingotek_entity_load($entities, $entity_type) {
   $node_profile_defaults = lingotek_load_profile_defaults($entity_type); // return assoc array by node type
   $profiles_list = lingotek_get_profiles();
 
-  $result = db_select('lingotek_entity_metadata', 'l')
+  $result = db_select('{lingotek_entity_metadata}', 'l')
       ->fields('l', array('entity_id', 'entity_key', 'value'))
       ->condition('l.entity_id', array_keys($entities), 'IN')
       ->condition('l.entity_type', $entity_type)
@@ -1322,7 +1349,7 @@ function lingotek_entity_load($entities, $entity_type) {
 //    if (!lingotek_supported_type($entity->type)) {
 //      continue;
 //    }
-    list($id, $vid, $bundle) = entity_extract_ids($entity_type, $entity);
+    list($id, $vid, $bundle) = lingotek_entity_extract_ids($entity_type, $entity);
 
     // Node profile inheritance heirarchy
     // Step 1: get global profile
@@ -1356,23 +1383,23 @@ function lingotek_entity_insert($entity, $type) {
 /**
  * Implements hook_entity_update().
  */
-function lingotek_entity_update($entity, $type) {  
+function lingotek_entity_update($entity, $entity_type) {
   $managed_entity_types = array_keys(lingotek_managed_entity_types());
-  if (!in_array($type, $managed_entity_types)) {
+  if (!in_array($entity_type, $managed_entity_types)) {
     // nothing to do here
     return;
   }
-  if ($type == 'node' && !empty($entity->tnid) && ($entity->nid != $entity->tnid)) {//check to make sure it is not a target node
+  if ($entity_type == 'node' && !empty($entity->tnid) && ($entity->nid != $entity->tnid)) {//check to make sure it is not a target node
     return;
   }
 
-  list($id, $vid, $bundle) = entity_extract_ids($type, $entity);
+  list($id, $vid, $bundle) = lingotek_entity_extract_ids($entity_type, $entity);
 
-  lingotek_entity_save($entity, $type);
+  lingotek_entity_save($entity, $entity_type);
 }
 
 function lingotek_entity_upload_triggered($entity, $entity_type, $changed = TRUE, &$context = array()) {
-  list($id, $vid, $bundle) = entity_extract_ids($entity_type, $entity);
+  list($id, $vid, $bundle) = lingotek_entity_extract_ids($entity_type, $entity);
 
   if (isset($entity->lingotek_upload_override)) {
     if ($entity->lingotek_upload_override) {
@@ -1409,7 +1436,7 @@ function lingotek_entity_upload($entity, $entity_type, &$context = array()) {
     $entity = lingotek_entity_load_single($entity_type, $entity);
   }
   
-  list($id, $vid, $bundle) = entity_extract_ids($entity_type, $entity);
+  list($id, $vid, $bundle) = lingotek_entity_extract_ids($entity_type, $entity);
   
   LingotekLog::trace('Uploading @type @id for translation', array('@type' => $entity_type, '@id' => $id));
 
@@ -1428,13 +1455,13 @@ function lingotek_entity_upload($entity, $entity_type, &$context = array()) {
   }
 
   // Items that are only accessible on node add or edit forms for nodes not yet sent to Lingotek.
-  if (!isset($entity->lingotek['document_id']) || empty($entity->lingotek['document_id'])) {
-    $ln = LingotekEntity::load($entity, $entity_type);
-    $success = LingotekApi::instance()->addContentDocument($ln, TRUE);
+  $ln = LingotekEntity::load($entity, $entity_type);
+  $entity_has_doc_id = $ln->getMetadataValue('document_id');
+  if ($entity_has_doc_id) {
+    $success = LingotekApi::instance()->updateContentDocument($ln);
   }
   else {
-    $ln = LingotekEntity::load($entity, $entity_type);
-    $success = LingotekApi::instance()->updateContentDocument($ln);
+    $success = LingotekApi::instance()->addContentDocument($ln, TRUE);
   }
 
   if ($empty_context) {
@@ -1524,7 +1551,7 @@ function lingotek_entity_download($entity, $entity_type, $lingotek_locale, &$con
     return FALSE;
   }
 
-  list($id, $vid, $bundle) = entity_extract_ids($entity_type, $entity);
+  list($id, $vid, $bundle) = lingotek_entity_extract_ids($entity_type, $entity);
 
   if (module_exists('rules')) {
     rules_invoke_event('lingotek_entity_translation_pre_download', new EntityDrupalWrapper($entity_type, $entity));
@@ -1603,7 +1630,7 @@ function lingotek_entity_download($entity, $entity_type, $lingotek_locale, &$con
   }
 
   if (module_exists('rules')) {
-    rules_invoke_event('lingotek_entity_translation_post_download', new EntityDrupalWrapper($entity_type, $entity));
+    rules_invoke_event('lingotek_entity_translation_post_download', new EntityDrupalWrapper($entity_type, $storage_entity));
   }
 
   return TRUE;
@@ -1772,20 +1799,41 @@ function lingotek_entity_info_alter(&$entity_info) {
   if (isset($entity_info['message_type'])) {
     $entity_info['message_type']['translation']['lingotek'] = TRUE;
   }
+  if (isset($entity_info['taxonomy_term'])) {
+    $entity_info['taxonomy_term']['translation']['lingotek'] = TRUE;
+  }
 }
 
-function lingotek_normalize_language($entity, $from_language_none = TRUE) {
+function lingotek_normalize_language($entity_type, $entity, $read_only = TRUE) {
   $language = language_default();
   $site_lang = $language->language;
-  
-  foreach ($entity as $key => $value) {
-    if (is_array($value) && array_key_exists(LANGUAGE_NONE, $value)) {
-      if ($from_language_none) {
+
+  if ($read_only) {
+    foreach ($entity as $key => $value) {
+      if (is_array($value) && array_key_exists(LANGUAGE_NONE, $value)) {
         $entity->{$key}[$site_lang] = $value[LANGUAGE_NONE];
       }
-      elseif (isset($value[$site_lang])) {
+    }
+  }
+  else {
+    // Prepare the entity for saving.
+    if ($entity_type == 'taxonomy_term') {
+      // Prevent the term's name and description fields from being empty.
+      if (empty($entity->name) && !empty($entity->name_field[$site_lang][0]['value'])) {
+        $entity->name = $entity->name_field[$site_lang][0]['value'];
+      }
+      if (empty($entity->description) && !empty($entity->description_field[$site_lang][0]['value'])) {
+        $entity->description = $entity->description_field[$site_lang][0]['value'];
+      }
+    }
+
+    foreach ($entity as $key => $value) {
+      if (is_array($value) && array_key_exists($site_lang, $value)) {
         $entity->{$key}[LANGUAGE_NONE] = $value[$site_lang];
       }
+      else if (is_array($value) && array_key_exists(LANGUAGE_NONE, $value)) {
+        $entity->{$key}[$site_lang] = $value[LANGUAGE_NONE];
+      }
     }
   }
 }
@@ -1922,13 +1970,13 @@ function lingotek_normalize_field_collection_language($entity_type, $entity, $re
 
 /**
  * Implements hook_entity_presave().
-  */
-function lingotek_entity_presave($entity, $type) {
+ */
+function lingotek_entity_presave($entity, $entity_type) {
   if (module_exists('field_collection')) {
-    lingotek_normalize_field_collection_language($type, $entity, FALSE);
+    lingotek_normalize_field_collection_language($entity_type, $entity, FALSE);
   }
-  if ($type == 'message_type') {
-    lingotek_normalize_language($entity, FALSE);
+  if ($entity_type == 'message_type' || $entity_type == 'taxonomy_term') {
+    lingotek_normalize_language($entity_type, $entity, FALSE);
   }
 }
 
@@ -1991,10 +2039,20 @@ function lingotek_form_comment_form_alter(&$form, $form_state) {
  * Implements hook_field_language_alter().
  */
 function lingotek_field_language_alter(&$display_language, $context) {
-  // If we have no language set on the entity itself, do nothing.
-  if (!isset($context['entity']->language) || empty($context['entity']->language)) {
+
+  $entity = $context['entity'];
+  $entity_type = $context['entity_type'];
+  // If no language is set on the entity itself, do nothing.
+  if (!isset($entity->language) || empty($entity->language)) {
+    return;
+  }
+
+  // If site admins have specifically excluded fallback behavior, or if the entity
+  // type is not handled by the Lingotek Translation module, then do nothing.
+  if (!variable_get('locale_field_language_fallback', TRUE) || !lingotek_managed_entity($entity_type, $entity)) {
     return;
   }
+
   // Comments may be in a state where content only exists in the source language
   // because Lingotek translation hasn't finished yet, or synchonization with
   // Lingotek hasn't yet occurred. In this case, fall back to displaying
@@ -2006,8 +2064,8 @@ function lingotek_field_language_alter(&$display_language, $context) {
     if ($is_field_collection) {
       continue;
     }
-    if (!isset($context['entity']->{$field}[$display_language_code])) {
-      $display_language[$field] = $context['entity']->language;
+    if (!isset($entity->{$field}[$display_language_code])) {
+      $display_language[$field] = $entity->language;
     }
   }
 }
@@ -2023,9 +2081,9 @@ function lingotek_entity_delete($entity, $type) {
     $api = LingotekApi::instance();
     $api->removeDocument($entity->lingotek['document_id'], FALSE);
   }
-  db_delete('lingotek_entity_metadata')
-    ->condition('entity_type', $type)
-    ->condition('entity_id', entity_extract_ids($type, $entity))
+  db_delete('{lingotek_entity_metadata}')
+      ->condition('entity_type', $type)
+    ->condition('entity_id', lingotek_entity_extract_ids($type, $entity))
     ->execute();
 }
 
@@ -2374,7 +2432,7 @@ function lingotek_translate_menu_link($link) {
  *   the two-digit language code to be set for the menu link
  */
 function lingotek_set_menu_link_language($link_id, $langcode) {
-  $updated = db_update('menu_links')
+  $updated = db_update('{menu_links}')
       ->fields(array('language' => $langcode))
       ->condition('mlid', $link_id)
       ->execute();
diff --git a/profiles/commons/modules/contrib/lingotek/lingotek.rules.inc b/profiles/commons/modules/contrib/lingotek/lingotek.rules.inc
index 64a7c6e..0de0f23 100644
--- a/profiles/commons/modules/contrib/lingotek/lingotek.rules.inc
+++ b/profiles/commons/modules/contrib/lingotek/lingotek.rules.inc
@@ -197,7 +197,7 @@ function lingotek_rules_entity_all_translations_of_status($wrapper, $status) {
   if (empty($target_status_keys)) {
     return FALSE;
   }
-  $query = db_select('lingotek_entity_metadata', 'lem')
+  $query = db_select('{lingotek_entity_metadata}', 'lem')
       ->fields('lem', array('entity_id'))
       ->condition('lem.entity_id', $entity_id)
       ->condition('lem.entity_type', $entity_type)
@@ -235,13 +235,13 @@ function lingotek_rules_event_info() {
   ),
     ),
     'lingotek_entity_translation_pre_download' => $defaults + array(
-  'label' => t('Before a translation is downloaded'),
+  'label' => t('Before a translation is downloaded (acting on source entity)'),
   'variables' => array(
     'entity' => array('type' => 'entity', 'label' => t('entity translation downloaded')),
   ),
     ),
     'lingotek_entity_translation_post_download' => $defaults + array(
-  'label' => t('After a translation was downloaded'),
+  'label' => t('After a translation was downloaded (acting on translated entity)'),
   'variables' => array(
     'entity' => array('type' => 'entity', 'label' => t('entity translation downloaded')),
   ),
@@ -253,4 +253,4 @@ function lingotek_rules_event_info() {
   ),
     ),
   );
-}
\ No newline at end of file
+}
diff --git a/profiles/commons/modules/contrib/lingotek/lingotek.session.inc b/profiles/commons/modules/contrib/lingotek/lingotek.session.inc
index 1eabbe1..dcb2139 100644
--- a/profiles/commons/modules/contrib/lingotek/lingotek.session.inc
+++ b/profiles/commons/modules/contrib/lingotek/lingotek.session.inc
@@ -120,6 +120,7 @@ class LingotekSession {
       'data' => $query,
       'timeout' => $timeout,
         );
+
     $response = drupal_http_request($api_url, $params);
     
     $message_params = array(
@@ -235,33 +236,16 @@ class LingotekSession {
   /*
    * login to the lingotek platform
    */
-  private function login($version = "3.11", $xml = FALSE) {
+  private function login() {
 
     if ($this->key == "") {
       $params = array(
-        'userLogin' => $this->login_id,
+        'loginId' => $this->login_id,
         'password' => $this->password,
-        'version' => $version,
         'community' => $this->community,
       );
       $login = 'login';
     }
-    else {
-      $arr = array(
-        'community' => $this->community,
-        'login_id' => $this->login_id,
-        'time' => time(),
-      );
-      $json_str = json_encode($arr);
-
-      $params = array(
-        "auth_json" => $json_str,
-        "hmac" => LingotekSession::create_mac($json_str),
-        "version" => $version,
-        "returnXML" => $xml,
-      );
-      $login = 'keyLogin';
-    }
 
     $error = 'unknown error';
     $success = FALSE;
diff --git a/profiles/commons/modules/contrib/lingotek/lingotek.setup.inc b/profiles/commons/modules/contrib/lingotek/lingotek.setup.inc
index 9ffd4a1..8b2e641 100644
--- a/profiles/commons/modules/contrib/lingotek/lingotek.setup.inc
+++ b/profiles/commons/modules/contrib/lingotek/lingotek.setup.inc
@@ -72,7 +72,7 @@ function lingotek_setup_new_account_form() {
     '#type' => 'submit',
     '#value' => t('Next') // Create Account
   );
-  $form['lingotek_back_button'] = lingotek_setup_link('admin/config/lingotek/account-settings', t('Already have an account?'));
+  $form['lingotek_back_button'] = lingotek_setup_link('admin/config/lingotek/account-settings', t('Enterprise Customers - Connect Here'));
   $form['lingotek_support_footer'] = lingotek_support_footer();
 
   return $form;
@@ -245,7 +245,7 @@ function lingotek_setup_account_settings_form() {
   $form['lingotek_user_directions_1'] = array(
     '#type' => 'item',
     '#title' => 'Account Login',
-    '#description' => 'Connect an existing Lingotek account.'
+    '#description' => 'Connect an existing Lingotek account. This option is for users with an active paid TMS subscription.'
   );
 
   $form['lingotek_lid'] = array(
@@ -273,7 +273,7 @@ function lingotek_setup_account_settings_form() {
     '#type' => 'submit',
     '#value' => t('Next'), // Login
   );
-  $form['lingotek_back_button'] = lingotek_setup_link('admin/config/lingotek/new-account', t('Need to create an account?'));
+  $form['lingotek_back_button'] = lingotek_setup_link('admin/config/lingotek/new-account', t('No subscription? Go back and register for free.'));
   $form['lingotek_support_footer'] = lingotek_support_footer();
 
   return $form;
@@ -619,7 +619,7 @@ function lingotek_project_vault_select_form_submit($form, $form_state) {
 function lingotek_setup_language_switcher_form($form, $form_state) {
   $current_theme = variable_get('theme_default', 'none'); //global $theme_key;
 
-  $query = db_select('block', 'b');
+  $query = db_select('{block}', 'b');
   $query->fields('b');
   $query->condition('module', 'locale');
   $query->condition('delta', 'language');
@@ -706,8 +706,8 @@ function lingotek_setup_node_translation_settings_form($form, $form_state) {
   $form['lingotek_nodes_translation_method'] = $content_defaults['defaults']['lingotek_nodes_translation_method'];
   $form['lingotek_nodes_translation_method']['#weight'] = -3;
   
-  $c = db_select('node', 'n')
-    ->fields('n', array('tnid'))
+  $c = db_select('{node}', 'n')
+      ->fields('n', array('tnid'))
     ->condition('n.tnid', 0, '<>')
     ->distinct()
     ->countQuery()
@@ -764,8 +764,8 @@ function lingotek_setup_node_translation_settings_form_submit($form, &$form_stat
   lingotek_admin_entity_bundle_profiles_form_submit($form, $form_state);
   
   if ($form_state['values']['lingotek_nodes_translation_method'] == 'node' && $form_state['values']['lingotek_overwrite']) {
-    $nodes = db_select('node', 'n')
-      ->fields('n', array('nid', 'tnid'))
+    $nodes = db_select('{node}', 'n')
+        ->fields('n', array('nid', 'tnid'))
         ->where('n.nid <> n.tnid AND n.tnid <> 0')
         ->execute()
         ->fetchAll();
@@ -820,6 +820,7 @@ function lingotek_setup_comment_translation_settings_form_submit($form, &$form_s
 }
 
 function lingotek_setup_additional_translation_settings_form($form, &$form_state) {
+  drupal_add_js(drupal_get_path('module', 'lingotek') . '/js/lingotek.admin.js');
   $form = lingotek_admin_additional_translation_settings_form($form, $form_state);
 
   if (is_array($_SESSION['lingotek_setup_path'])) {
@@ -996,7 +997,7 @@ function lingotek_get_community_settings($community_identity, $return_complete =
   $options['project'] = array();
   $complete['project'] = array();
   $list_projects = $api->request("listProjects", array('community' => $community_identity));
-  if ($list_projects->results == "success") {
+  if (isset($list_projects->results) && $list_projects->results == "success") {
     foreach ($list_projects->projects as $project) {
       $complete['project'][$project->id] = $project;
       if ($project->state == 'Active') {
diff --git a/profiles/commons/modules/contrib/lingotek/lingotek.sync.inc b/profiles/commons/modules/contrib/lingotek/lingotek.sync.inc
index a3e2546..9fe4f2f 100644
--- a/profiles/commons/modules/contrib/lingotek/lingotek.sync.inc
+++ b/profiles/commons/modules/contrib/lingotek/lingotek.sync.inc
@@ -563,8 +563,8 @@ function lingotek_get_and_update_target_progress($entity_type, $document_ids) {
       $entity_id = (isset($record['entity_id']) ? $record['entity_id'] : $record[1]);
       $entity_key = (isset($record['entity_key']) ? $record['entity_key'] : $record[2]);
       $value = (isset($record['value']) ? $record['value'] : $record[3]);
-      $query = db_merge('lingotek_entity_metadata')
-        ->key(array('entity_id' => $entity_id, 'entity_type' => $entity_type, 'entity_key' => $entity_key))
+      $query = db_merge('{lingotek_entity_metadata}')
+          ->key(array('entity_id' => $entity_id, 'entity_type' => $entity_type, 'entity_key' => $entity_key))
         ->fields(array(
             'entity_type' => $entity_type,
             'entity_id' => $entity_id,
@@ -656,8 +656,8 @@ function lingotek_update_config_progress($document_ids) {
 
     // insert status info for config
     foreach ($cfg_values as $record) {
-      $query = db_merge('lingotek_config_metadata')
-        ->key(array('id' => $record[0], 'config_key' => $record[1]))
+      $query = db_merge('{lingotek_config_metadata}')
+          ->key(array('id' => $record[0], 'config_key' => $record[1]))
         ->fields(array(
             'id' => $record[0],
             'config_key' => $record[1],
diff --git a/profiles/commons/modules/contrib/lingotek/lingotek.util.inc b/profiles/commons/modules/contrib/lingotek/lingotek.util.inc
index f1967bd..70f2cc6 100644
--- a/profiles/commons/modules/contrib/lingotek/lingotek.util.inc
+++ b/profiles/commons/modules/contrib/lingotek/lingotek.util.inc
@@ -47,8 +47,8 @@ function lingotek_json_output_cors($var = NULL, $status = "200", $params = array
 function lingotek_keystore($entity_type, $entity_id, $key = "", $value = "", $update_on_dup = TRUE) {
   if ($entity_id == 'all') {
     $lingo_node = array();
-    $result = db_select('lingotek_entity_metadata', 'n')
-      ->condition('entity_type', $entity_type)
+    $result = db_select('{lingotek_entity_metadata}', 'n')
+        ->condition('entity_type', $entity_type)
       ->fields('n', array(db_escape_field('entity_id'), db_escape_field('entity_key'), db_escape_field('value')))
       ->execute();
     foreach ($result as $row) {
@@ -65,8 +65,8 @@ function lingotek_keystore($entity_type, $entity_id, $key = "", $value = "", $up
     if ($key === "") {
       $lingo_node = array();
 
-      $result = db_select('lingotek_entity_metadata', 'n')
-        ->fields('n', array(db_escape_field('entity_key'), db_escape_field('value')))
+      $result = db_select('{lingotek_entity_metadata}', 'n')
+          ->fields('n', array(db_escape_field('entity_key'), db_escape_field('value')))
           ->condition('entity_type', $entity_type)
         ->condition(db_escape_field('entity_id'), $entity_id)
         ->execute();
@@ -78,8 +78,8 @@ function lingotek_keystore($entity_type, $entity_id, $key = "", $value = "", $up
     }
     //Get value for the specified key, only returns the first match
     elseif ($value === "") {
-      $result = db_select('lingotek_entity_metadata', 'n')
-        ->fields('n', array(db_escape_field('value')))
+      $result = db_select('{lingotek_entity_metadata}', 'n')
+          ->fields('n', array(db_escape_field('value')))
         ->condition('entity_type', $entity_type)
         ->condition(db_escape_field('entity_id'), $entity_id)
         ->condition(db_escape_field('entity_key'), $key)
@@ -106,13 +106,13 @@ function lingotek_keystore($entity_type, $entity_id, $key = "", $value = "", $up
       );
       $existing_value = lingotek_keystore($entity_type, $entity_id, $key);
       if ($existing_value === FALSE) { // insert
-        drupal_write_record('lingotek_entity_metadata', $row);
-        return "$entity_id : $key => $value (INSERTED)";
+        $success = drupal_write_record('lingotek_entity_metadata', $row);
+        return $success ? "$entity_id : $key => $value (INSERTED)" : "$entity_id : $key !=> $value (INSERT FAILED)";
       }
       elseif ($update_on_dup) { // key exists -> update
         unset($row[db_escape_field('created')]); // retain original created timestamp
-        drupal_write_record('lingotek_entity_metadata', $row, array(db_escape_field('entity_type'), db_escape_field('entity_id'), db_escape_field('entity_key')));
-        return "$entity_id : $key => $value (UPDATED)";
+        $success = drupal_write_record('lingotek_entity_metadata', $row, array(db_escape_field('entity_type'), db_escape_field('entity_id'), db_escape_field('entity_key')));
+        return $success ? "$entity_id : $key => $value (UPDATED)" : "$entity_id : $key !=> $value (UPDATE FAILED)";
       }
       else { // key exists -> ignore (ignore on duplicate key)
         return "$entity_id : $key => $existing_value (IGNORED)";
@@ -137,11 +137,11 @@ function lingotek_keystore($entity_type, $entity_id, $key = "", $value = "", $up
  */
 
 function lingotek_keystore_delete($entity_type, $id, $key) {
-  $query = db_delete('lingotek_entity_metadata');
+  $query = db_delete('{lingotek_entity_metadata}');
   $query->condition('entity_type', $entity_type);
   $query->condition('entity_id', $id);
   $query->condition('entity_key', $key);
-  $query->execute();
+  return $query->execute();
 }
 
 /**
@@ -163,7 +163,7 @@ function lingotek_keystore_delete_multiple($entity_type, $entity_ids, $lingokey,
     $entity_ids = array($entity_ids);
   }
 
-  $query = db_select('lingotek_entity_metadata', 'l') // Make sure that the variable exists in the table for every input nid
+  $query = db_select('{lingotek_entity_metadata}', 'l') // Make sure that the variable exists in the table for every input nid
       ->fields('l', array('entity_id'))
       ->condition('entity_type', $entity_type)
       ->condition('entity_id', $entity_ids, 'IN')
@@ -171,7 +171,7 @@ function lingotek_keystore_delete_multiple($entity_type, $entity_ids, $lingokey,
   $delete_nids = $query->execute()->fetchCol();
 
   if (!empty($delete_nids)) {
-    $delete = db_delete('lingotek_entity_metadata') // delete for every input nid where the variable exists
+    $delete = db_delete('{lingotek_entity_metadata}') // delete for every input nid where the variable exists
         ->condition('entity_type', $entity_type)
         ->condition('entity_id', $delete_nids, 'IN')
         ->condition('entity_key', $lingokey, $condition)
@@ -180,14 +180,14 @@ function lingotek_keystore_delete_multiple($entity_type, $entity_ids, $lingokey,
 }
 
 function lingotek_keystore_delete_all($entity_type, $id) {
-  db_delete('lingotek_entity_metadata')
-    ->condition('entity_type', $entity_type)
+  db_delete('{lingotek_entity_metadata}')
+      ->condition('entity_type', $entity_type)
     ->condition('entity_id', $id)->execute();
 }
 
 function lingotek_keystore_delete_all_multiple($entity_type, $ids) {
-  db_delete('lingotek_entity_metadata')
-    ->condition('entity_type', $entity_type)
+  db_delete('{lingotek_entity_metadata}')
+      ->condition('entity_type', $entity_type)
     ->condition('entity_id', $ids, 'IN')->execute();
 }
 
@@ -258,7 +258,7 @@ function lingotek_get_translatable_fields_by_content_type($entity_type, $type) {
   $translatable_field_types = lingotek_get_translatable_field_types();
   $desired_fields = array();
   foreach ($all_fields as $field_name => $field_info) {
-    if (in_array($field_info['widget']['type'], $translatable_field_types)) {
+    if (in_array($field_info['body']['widget']['type'], $translatable_field_types)) {
       $desired_fields[$field_name] = $field_name;
     }
   }
@@ -289,7 +289,7 @@ function lingotek_entity_xml_body($entity_type, $entity) {
   $translatable = array();
 
   $translate = variable_get('lingotek_enabled_fields', array());
-  list($id, $vid, $bundle) = entity_extract_ids($entity_type, $entity);
+  list($id, $vid, $bundle) = lingotek_entity_extract_ids($entity_type, $entity);
   $fields_desired = isset($translate[$entity_type][$bundle]) ? $translate[$entity_type][$bundle] : array();
   if (empty($fields_desired) && lingotek_oneoff_translate($entity)) {
     $fields_desired = lingotek_get_translatable_fields_by_content_type($entity_type, $bundle);
@@ -313,17 +313,19 @@ function lingotek_entity_xml_body($entity_type, $entity) {
     $content = $content . "<menu_title><![CDATA[$txt]]></menu_title>\n";
     } */
 
-  //URL Alias related to the page:
-  $url_alias_translation = isset($entity->lingotek['url_alias_translation']) ? $entity->lingotek['url_alias_translation'] : 0;
-  if ($url_alias_translation == 1) {
-    $conditions = array('source' => 'node/' . $entity->nid);
-    if ($entity->language != LANGUAGE_NONE) {
-      $conditions['language'] = $entity->language;
-    }
-    $path = path_load($conditions);
-    if ($path !== FALSE) {
-      $url = $path['alias'];
-      $content = $content . "<url_alias><![CDATA[$url]]></url_alias>\n";
+  if ($entity_type == 'node') {
+    //URL Alias related to the page:
+    $url_alias_translation = isset($entity->lingotek['url_alias_translation']) ? $entity->lingotek['url_alias_translation'] : 0;
+    if ($url_alias_translation == 1) {
+      $conditions = array('source' => 'node/' . $entity->nid);
+      if ($entity->language != LANGUAGE_NONE) {
+        $conditions['language'] = $entity->language;
+      }
+      $path = path_load($conditions);
+      if ($path !== FALSE) {
+        $url = $path['alias'];
+        $content = $content . "<url_alias><![CDATA[$url]]></url_alias>\n";
+      }
     }
   }
 
@@ -350,8 +352,8 @@ function lingotek_xml_fields($entity, $translatable, $language) {
     );
     if (module_exists('link')) {
       $target_keys['link'] = array(
-        'url' => '',
         'title' => '',
+        'url' => '',
       );
     }
 
@@ -390,8 +392,10 @@ function lingotek_xml_fields($entity, $translatable, $language) {
           $current_field = '<' . $element_name . '>';
           if (is_array($element_suffix)) {
             foreach ($element_suffix as $t_key => $t_val) {
-              $delta[$t_key] = lingotek_filter_placeholders($delta[$t_key]);
-              $current_field .= '<element><![CDATA[' . $delta[$t_key] . ']]></element>' . "\n";
+              if (isset($delta[$t_key])) {
+                $delta[$t_key] = lingotek_filter_placeholders($delta[$t_key]);
+                $current_field .= '<element><![CDATA[' . $delta[$t_key] . ']]></element>' . "\n";
+              }
             }
           }
           else {
@@ -614,13 +618,16 @@ function lingotek_managed_entity_types($include_all = FALSE) {
   $type_info = entity_get_info();
   //$types = array_keys($type_info);
 
-  $whitelist = array('node', 'comment', 'message_type'); // supported types
+  $whitelist = array('node', 'comment', 'message_type', 'fieldable_panels_pane'); // supported types
   if ($include_all) {
     // include the entities that should not normally be managed separately
     if (module_exists('field_collection')) {
       $whitelist[] = 'field_collection_item';
     }
   }
+  if (module_exists('taxonomy') && variable_get('lingotek_advanced_taxonomy_terms', FALSE)) {
+    $whitelist[] = 'taxonomy_term';
+  }
   $whitelist = array_flip($whitelist);
   $enabled_types = array_intersect_key($type_info, $whitelist);
 
@@ -637,6 +644,9 @@ function lingotek_managed_entity_types($include_all = FALSE) {
   if (isset($enabled_types['field_collection_item'])) {
     $enabled_types['field_collection_item']['label'] = 'Field Collections';
   }
+  if (isset($enabled_types['taxonomy_term'])) {
+    $enabled_types['taxonomy_term']['label'] = 'Taxonomy Terms';
+  }
 
   return $enabled_types;
 }
@@ -676,6 +686,10 @@ function lingotek_translatable_field_details() {
     foreach ($field['bundles'] as $type => $instance) {
       if (field_is_translatable($type, $field)) {
         //echo '<br>Translatable: YES!' ;
+        if (!isset($field['storage']['details']['sql']['FIELD_LOAD_CURRENT'])) {
+            LingotekLog::trace("field '$field_id' is marked as translatable but does not publish its details.  Skipping.");
+          continue;
+        }
         $field_db_table = array_keys($field['storage']['details']['sql']['FIELD_LOAD_CURRENT']);
         $field_db_table = array_shift($field_db_table);
         $translatable_fields[$type][] = array(
@@ -734,7 +748,7 @@ function lingotek_get_active_languages($get_details = FALSE) {
  */
 function lingotek_get_node_source_languages() {
   $lingo_langs = array();
-  $query = db_select('node', 'n')->distinct()
+  $query = db_select('{node}', 'n')->distinct()
       ->fields('n', array('language'));
   $query = $query->execute();
   $result = $query->fetchCol(0);
@@ -756,7 +770,7 @@ function lingotek_delete_target_language($lingotek_locale) {
   $result = FALSE;
 
   if (is_string($lingotek_locale) && strlen($lingotek_locale)) {
-    db_update('languages')
+    db_update('{languages}')
         ->fields(array(
           //'enabled' => 0,
           'lingotek_enabled' => 0,
@@ -791,7 +805,7 @@ function lingotek_set_target_language($drupal_language_code, $lingotek_enable =
 
   if (is_string($drupal_language_code) && strlen($drupal_language_code)) {
     $lingotek_locale = is_null($lingotek_locale) ? Lingotek::convertDrupal2Lingotek($drupal_language_code, FALSE) : $lingotek_locale;
-    db_update('languages')
+    db_update('{languages}')
         ->fields(array(
           'enabled' => 1,
           'lingotek_enabled' => $lingotek_enable ? 1 : 0,
@@ -809,6 +823,9 @@ function lingotek_set_target_language($drupal_language_code, $lingotek_enable =
       $projects = LingotekSync::getSyncProjects();
       foreach ($projects as $project_id) {
         $result = $api->addTranslationTarget(NULL, $project_id, $lingotek_locale);
+        if ($result) {
+          LingotekSync::insertTargetEntriesForAllEntities($lingotek_locale);
+        }
       }
     }
   }
@@ -918,7 +935,7 @@ function lingotek_enable_language_by_code($drupal_language_code, $lingotek_local
   if (!is_null($lingotek_locale)) {
     $field_data['lingotek_locale'] = $lingotek_locale;
   }
-  db_update('languages')
+  db_update('{languages}')
       ->fields($field_data)
       ->condition('language', $drupal_language_code)
       ->execute();
@@ -929,7 +946,7 @@ function lingotek_enable_language_by_code($drupal_language_code, $lingotek_local
  * Get only the languages that are enabled
  */
 function lingotek_get_target_locales($codes_only = TRUE) {
-  $target_languages = db_query("SELECT * FROM {languages} WHERE enabled = :enabled", array(':enabled' => 1))->fetchAll();
+  $target_languages = db_query("SELECT * FROM {languages} WHERE lingotek_enabled = :enabled", array(':enabled' => 1))->fetchAll();
   $target_codes = array();
   foreach ($target_languages as $target_language) {
     $target_codes[] = $target_language->lingotek_locale;
@@ -937,18 +954,6 @@ function lingotek_get_target_locales($codes_only = TRUE) {
   return $codes_only ? $target_codes : $target_languages;
 }
 
-/**
- * Get only the languages that are enabled
- */
-function lingotek_get_target_languages($codes_only = TRUE) {
-  $target_languages = db_query("SELECT * FROM {languages} WHERE enabled = :enabled", array(':enabled' => 1))->fetchAll();
-  $target_codes = array();
-  foreach ($target_languages as $target_language) {
-    $target_codes[] = $target_language->language;
-  }
-  return $codes_only ? $target_codes : $target_languages;
-}
-
 /*
  * Get the Lingotek Content Types - returns the content types OR ids only
  *
@@ -1039,6 +1044,14 @@ function lingotek_cleanup_field_languages_for_comments() {
   lingotek_cleanup_field_languages('comment');
 }
 
+function lingotek_cleanup_field_languages_for_fieldable_panels_panes() {
+  lingotek_cleanup_field_languages('fieldable_panels_pane');
+}
+
+function lingotek_cleanup_field_languages_for_taxonomy_terms() {
+  lingotek_cleanup_field_languages('taxonomy_term');
+}
+
 /**
  * lingotek_refresh_api_cache utility
  */
@@ -1061,7 +1074,7 @@ function lingotek_refresh_api_cache($show_messages = TRUE) {
  * Sets the priority of the Lingotek Translation module
  */
 function lingotek_set_priority() {
-  db_update('system')->fields(array('weight' => 12))->condition('name', 'lingotek')->execute();
+  db_update('{system}')->fields(array('weight' => 12))->condition('name', 'lingotek')->execute();
 }
 
 /**
@@ -1159,7 +1172,7 @@ function lingotek_migration_3() {
     $lingotek_locale = Lingotek::convertDrupal2Lingotek($code, FALSE); //will return FALSE when lingotek_locales are passed in (so, they'll be skipped)
     if ($lingotek_locale) {
       $new_key = $field_name_prefix . $lingotek_locale;
-      $query = db_update('lingotek', $ret)
+      $query = db_update('{lingotek}', $ret)
           ->fields(array('lingokey' => $new_key))
           ->condition('lingokey', $old_key, '=');
       try {
@@ -1253,7 +1266,7 @@ function lingotek_list_entities_with_language($entity_type, $bundle, $language)
 }
 
 function lingotek_list_nodes_translated_in_language($language, $bundle = NULL) {
-  $query = db_select('node')
+  $query = db_select('{node}')
       ->fields('node', array('tnid'));
   if (!is_null($bundle)) {
     $query->condition('node.type', $bundle);
@@ -1274,8 +1287,10 @@ function lingotek_list_entities_with_field_in_language_by_bundle($entity_type, $
   }
   else {
     // Include only the enabled bundle types
-    $disabled_bundles = array_merge(array('-1'), lingotek_get_disabled_bundles($entity_type));
-    $query->entityCondition('bundle', $disabled_bundles, 'NOT IN');
+    $disabled_bundles = lingotek_get_disabled_bundles($entity_type);
+    if (!empty($disabled_bundles)) {
+      $query->entityCondition('bundle', $disabled_bundles, 'NOT IN');
+    }
   }
   if ($exclude_source) {
     $query->propertyCondition('language', $language, "!=");
@@ -1395,8 +1410,8 @@ function lingotek_get_entity_setup_path($entity_type, $next=FALSE) {
  *   a string containing the name of the given entity type
  */
 function lingotek_get_entity_count($entity_type) {
-  $query = db_select($entity_type, 'n')
-    ->fields('n')
+  $query = db_select('{' . $entity_type . '}', 'n')
+      ->fields('n')
     ->execute();
   $num_results = $query->rowCount();
   return $num_results;
@@ -1437,7 +1452,7 @@ function lingotek_get_bundles_by_profile_id($profile_id) {
  * Return an array tree of entity_types -> entity_ids -> document_ids
  */
 function lingotek_get_document_id_tree() {
-  $query = db_select('lingotek_entity_metadata', 'lem')
+  $query = db_select('{lingotek_entity_metadata}', 'lem')
       ->fields('lem', array('entity_id', 'entity_type', 'value'))
       ->condition('lem.entity_key', 'document_id')
       ->execute();
@@ -1473,45 +1488,39 @@ function lingotek_get_entities_by_profile_id($profile_id, $entity_type = 'all',
   }
   
   // get all entities that belond to those bundles
-  foreach ($bundles as $et => $entity_bundles) {
-    /*  THE SLOW BUT CORRECT WAY TO EXTRACT INFO
-    $tmp_entities = entity_load($et);
-    foreach ($tmp_entities as $tid => $tinfo) {
-      list($entity_id, $vid, $bundle_name) = entity_extract_ids($et, $tinfo);
-      if (isset($bundles[$et][$bundle_name])) {
-        $entities[] = array('id' => $tid, 'type' => $et);
-      }
-    }
-    */
-    // THE OPTIMIZED WAY
-    if ($et == 'comment') {
+  foreach ($bundles as $entity_type => $entity_bundles) {
+    if ($entity_type == 'comment') {
       $ref_tables = array();
       foreach (array_keys($entity_bundles) as $key) {
         $tmp_array = explode('_', $key);
         $key = implode('_', array_slice($tmp_array, 2));
         $ref_tables[] = $key;
       }
-      $query = db_select($et, 'e')
+      $query = db_select('{' . $entity_type . '}', 'e')
           ->fields('e', array('cid'));
-      $query->join('node', 'n', "n.nid = e.nid AND n.type IN ('" . implode("','", $ref_tables) . "')");
+      $query->join('{node}', 'n', "n.nid = e.nid AND n.type IN ('" . implode("','", $ref_tables) . "')");
+      $results = $query->execute()->fetchCol();
+      foreach ($results as $id) {
+        $entities[] = array('id' => $id, 'type' => $entity_type);
+      }
     }
     else {
-      $entity_info = entity_get_info($et);
-      $bundle_field_name = $entity_info['entity keys']['bundle'];
-      $id_field_name = $entity_info['entity keys']['id'];
-      $query = db_select($et, 'e')
-          ->fields('e', array($id_field_name))
-          ->condition('e.' . $bundle_field_name, array_keys($entity_bundles), 'IN');
-    }
-    $results = $query->execute()->fetchCol();
-    foreach ($results as $id) {
-      $entities[] = array('id' => $id, 'type' => $et);
+      $query = new EntityFieldQuery();
+      $query->entityCondition('entity_type', $entity_type)
+          ->entityCondition('bundle', array_keys($entity_bundles), 'IN');
+      $result = $query->execute();
+      unset($query);
+      if (isset($result[$entity_type])) {
+        foreach ($result[$entity_type] as $id => $entity_data) {
+          $entities[] = array('id' => $id, 'type' => $entity_type);
+        }
+      }
     }
     // END OPTIMIZED WAY
   }
   
   // subtract all entities specifically *not* set to the given profile
-  $query = db_select('lingotek_entity_metadata', 'lem')
+  $query = db_select('{lingotek_entity_metadata}', 'lem')
       ->fields('lem', array('entity_id', 'entity_type'))
       ->condition('lem.entity_key', 'profile')
       ->condition('lem.value', $profile_id, is_array($profile_id) ? 'NOT IN' : '!=');
@@ -1520,7 +1529,7 @@ function lingotek_get_entities_by_profile_id($profile_id, $entity_type = 'all',
   }
   $result = $query->execute();
   $subtract_entity_ids = $result->fetchAll();
-  
+
   $doc_ids = lingotek_get_document_id_tree();
   $subtractions = array();
   foreach ($subtract_entity_ids as $sei) {
@@ -1543,7 +1552,7 @@ function lingotek_get_entities_by_profile_id($profile_id, $entity_type = 'all',
   }
 
   // add all entities specifically set to the given profile
-  $query = db_select('lingotek_entity_metadata', 'lem')
+  $query = db_select('{lingotek_entity_metadata}', 'lem')
       ->fields('lem', array('entity_id', 'entity_type'))
       ->condition('lem.entity_key', 'profile')
       ->condition('lem.value', $profile_id,  is_array($profile_id) ? 'IN' : '=');
@@ -1677,8 +1686,8 @@ function lingotek_has_unconventional_fc_translations() {
     'fca.language != fcb.language',
   );
   foreach (array_keys($field_collection_field_types) as $fc_field_name) {
-    $query = db_select('field_data_' . $fc_field_name, 'fca');
-    $query->join('field_data_' . $fc_field_name, 'fcb', implode(' AND ', $query_join_items) . ' AND fca.' . $fc_field_name . '_value != fcb.' . $fc_field_name . '_value');
+    $query = db_select('{field_data_' . $fc_field_name . '}', 'fca');
+    $query->join('{field_data_' . $fc_field_name . '}', 'fcb', implode(' AND ', $query_join_items) . ' AND fca.' . $fc_field_name . '_value != fcb.' . $fc_field_name . '_value');
     $query->groupBy('fca.entity_id');
     $query->fields('fca', array('entity_id'));
     $result = $query->execute();
@@ -1835,27 +1844,88 @@ function lingotek_get_enabled_entities_by_type($entity_type) {
   return lingotek_get_entities_by_profile_id($profile_ids, $entity_type);
 }
 
-function lingotek_previously_managed_translations($entity_type, $entity_ids = NULL ) {
-  if (!$entity_ids || !is_array($entity_ids)) {
-    $query = new EntityFieldQuery();
-    $query->entityCondition('entity_type', $entity_type)
-      ->propertyCondition('status', 1);
-    $entities = $query->execute();
-    $entity_ids = array_keys($entities);
+function lingotek_previously_managed_translations($entity_type, $entity_ids = NULL) {
+
+  // retrieve all entities of the given type with document IDs
+  $query = db_select('{lingotek_entity_metadata}', 'lem');
+  $query->fields('lem', array('entity_id'))
+      ->condition('lem.entity_type', $entity_type)
+      ->condition('lem.entity_key', 'document_id');
+  if ($entity_ids && is_array($entity_ids)) {
+    $query->condition('lem.entity_id', $entity_ids, 'IN');
+  }
+  $result = $query->execute();
+  $entity_ids = $result->fetchCol();
+
+  if (!$entity_ids) {
+    return FALSE;
   }
+
+  // filter the entity IDs by ones that still exist
+  $query = new EntityFieldQuery();
+  $query->entityCondition('entity_type', $entity_type)
+      ->entityCondition('entity_id', $entity_ids, 'IN');
+  $entities = $query->execute();
+  $entity_ids = array_keys($entities[$entity_type]);
+
   $enabled_entities = lingotek_get_enabled_entities_by_type($entity_type);
   $entity_ids = array_diff($entity_ids, array_keys($enabled_entities));
   if (empty($entity_ids)) {
     // No disabled entities found.
     return FALSE;
   }
-  $query = db_select('lingotek_entity_metadata', 'lem');
-  $query->fields('lem', array('entity_id'))
-      ->condition('lem.entity_id', $entity_ids, 'IN')
-      ->condition('lem.entity_key', 'document_id');
-  $result = $query->execute();
-  if ($result->rowCount()) {
+  return TRUE;
+}
+
+function lingotek_is_node_translation($node = NULL) {
+  // The case of creating a new node-based translation.
+  if (isset($_GET['translation']) && isset($_GET['target']) && ($source_item = menu_link_load($_GET['translation']))) {
     return TRUE;
   }
+  // The case of updating an existing node-based translation.
+  if ($node && isset($node->tnid) && $node->tnid !== '0' && $node->tnid !== $node->nid) {
+    return TRUE;
+  }
+  // Not a node-based translation.
   return FALSE;
 }
+
+function lingotek_managed_entity($entity_type, $entity) {
+  list($id, $vid, $bundle) = lingotek_entity_extract_ids($entity_type, $entity);
+
+  // If there is no $id or $bundle property, then nothing to manage for now.
+  if (!$id || !$bundle) {
+    return FALSE;
+  }
+  // Check the entity itself for overrides.
+  $query = db_select('{lingotek_entity_metadata}', 'lem')
+      ->fields('lem', array('value'))
+      ->condition('lem.entity_type', $entity_type)
+      ->condition('lem.entity_id', $id)
+      ->condition('lem.entity_key', 'profile');
+  $result = $query->execute()->fetchField();
+  if ($result === LingotekSync::PROFILE_DISABLED) {
+    return FALSE;
+  }
+  else {
+    return TRUE;
+  }
+  // Check the entity's bundle.
+  return lingotek_enabled_bundle($entity_type, $bundle);
+}
+
+function lingotek_entity_extract_ids($entity_type, $entity) {
+  try {
+    list($entity_id, $vid, $bundle_name) = entity_extract_ids($entity_type, $entity);
+  } catch (EntityMalformedException $ex) {
+    // check for non-standard entity types
+    if ($entity_type == 'taxonomy_term') {
+      // TODO: populate taxonomy_term's entity fields
+      $entity_id = $entity->tid;
+      $vid = NULL;
+      $bundle_name = $entity->type;
+    }
+  }
+  return array($entity_id, $vid, $bundle_name);
+}
+
diff --git a/profiles/commons/modules/contrib/media/media.info b/profiles/commons/modules/contrib/media/media.info
index 1ce741c..68fc5b3 100644
--- a/profiles/commons/modules/contrib/media/media.info
+++ b/profiles/commons/modules/contrib/media/media.info
@@ -25,9 +25,9 @@ configure = admin/config/media/browser
 version = 7.x-2.x-dev
 
 
-; Information added by drush on 2014-04-23
+; Information added by drush on 2014-05-08
 version = "7.x-2.0-alpha3+79-dev"
 core = "7.x"
 project = "media"
-datestamp = "1398289205"
+datestamp = "1399579144"
 
diff --git a/profiles/commons/modules/contrib/media/modules/media_bulk_upload/media_bulk_upload.info b/profiles/commons/modules/contrib/media/modules/media_bulk_upload/media_bulk_upload.info
index 28687ee..2e5b3a0 100644
--- a/profiles/commons/modules/contrib/media/modules/media_bulk_upload/media_bulk_upload.info
+++ b/profiles/commons/modules/contrib/media/modules/media_bulk_upload/media_bulk_upload.info
@@ -10,9 +10,9 @@ dependencies[] = plupload
 files[] = includes/MediaBrowserBulkUpload.inc
 
 
-; Information added by drush on 2014-04-23
+; Information added by drush on 2014-05-08
 version = "7.x-2.0-alpha3+79-dev"
 core = "7.x"
 project = "media"
-datestamp = "1398289205"
+datestamp = "1399579144"
 
diff --git a/profiles/commons/modules/contrib/media/modules/media_internet/media_internet.info b/profiles/commons/modules/contrib/media/modules/media_internet/media_internet.info
index d20b3a0..6f28b39 100644
--- a/profiles/commons/modules/contrib/media/modules/media_internet/media_internet.info
+++ b/profiles/commons/modules/contrib/media/modules/media_internet/media_internet.info
@@ -12,9 +12,9 @@ files[] = includes/MediaInternetNoHandlerException.inc
 files[] = includes/MediaInternetValidationException.inc
 
 
-; Information added by drush on 2014-04-23
+; Information added by drush on 2014-05-08
 version = "7.x-2.0-alpha3+79-dev"
 core = "7.x"
 project = "media"
-datestamp = "1398289205"
+datestamp = "1399579144"
 
diff --git a/profiles/commons/modules/contrib/media/modules/media_migrate_file_types/media_migrate_file_types.info b/profiles/commons/modules/contrib/media/modules/media_migrate_file_types/media_migrate_file_types.info
index 9011145..0b5045a 100644
--- a/profiles/commons/modules/contrib/media/modules/media_migrate_file_types/media_migrate_file_types.info
+++ b/profiles/commons/modules/contrib/media/modules/media_migrate_file_types/media_migrate_file_types.info
@@ -9,9 +9,9 @@ dependencies[] = media
 configure = admin/structure/file-types/upgrade
 
 
-; Information added by drush on 2014-04-23
+; Information added by drush on 2014-05-08
 version = "7.x-2.0-alpha3+79-dev"
 core = "7.x"
 project = "media"
-datestamp = "1398289205"
+datestamp = "1399579144"
 
diff --git a/profiles/commons/modules/contrib/media/modules/media_wysiwyg/media_wysiwyg.info b/profiles/commons/modules/contrib/media/modules/media_wysiwyg/media_wysiwyg.info
index cfc448c..49b53e6 100644
--- a/profiles/commons/modules/contrib/media/modules/media_wysiwyg/media_wysiwyg.info
+++ b/profiles/commons/modules/contrib/media/modules/media_wysiwyg/media_wysiwyg.info
@@ -16,9 +16,9 @@ files[] = tests/media_wysiwyg.macro.test
 configure = admin/config/media/browser
 
 
-; Information added by drush on 2014-04-23
+; Information added by drush on 2014-05-08
 version = "7.x-2.0-alpha3+79-dev"
 core = "7.x"
 project = "media"
-datestamp = "1398289205"
+datestamp = "1399579144"
 
diff --git a/profiles/commons/modules/contrib/media/modules/media_wysiwyg_view_mode/media_wysiwyg_view_mode.info b/profiles/commons/modules/contrib/media/modules/media_wysiwyg_view_mode/media_wysiwyg_view_mode.info
index 5f77879..5cd7c64 100644
--- a/profiles/commons/modules/contrib/media/modules/media_wysiwyg_view_mode/media_wysiwyg_view_mode.info
+++ b/profiles/commons/modules/contrib/media/modules/media_wysiwyg_view_mode/media_wysiwyg_view_mode.info
@@ -10,9 +10,9 @@ configure = admin/config/media/wysiwyg-view-mode
 files[] = media_wysiwyg_view_mode.test
 
 
-; Information added by drush on 2014-04-23
+; Information added by drush on 2014-05-08
 version = "7.x-2.0-alpha3+79-dev"
 core = "7.x"
 project = "media"
-datestamp = "1398289205"
+datestamp = "1399579144"
 
diff --git a/profiles/commons/modules/contrib/media/modules/mediafield/mediafield.info b/profiles/commons/modules/contrib/media/modules/mediafield/mediafield.info
index def167f..f3570d7 100644
--- a/profiles/commons/modules/contrib/media/modules/mediafield/mediafield.info
+++ b/profiles/commons/modules/contrib/media/modules/mediafield/mediafield.info
@@ -5,9 +5,9 @@ core = 7.x
 dependencies[] = media
 
 
-; Information added by drush on 2014-04-23
+; Information added by drush on 2014-05-08
 version = "7.x-2.0-alpha3+79-dev"
 core = "7.x"
 project = "media"
-datestamp = "1398289205"
+datestamp = "1399579144"
 
diff --git a/profiles/commons/modules/contrib/media/tests/media_module_test.info b/profiles/commons/modules/contrib/media/tests/media_module_test.info
index d0a9d80..c1ebd43 100644
--- a/profiles/commons/modules/contrib/media/tests/media_module_test.info
+++ b/profiles/commons/modules/contrib/media/tests/media_module_test.info
@@ -5,9 +5,9 @@ core = 7.x
 hidden = TRUE
 
 
-; Information added by drush on 2014-04-23
+; Information added by drush on 2014-05-08
 version = "7.x-2.0-alpha3+79-dev"
 core = "7.x"
 project = "media"
-datestamp = "1398289205"
+datestamp = "1399579144"
 
diff --git a/profiles/commons/modules/contrib/mollom/images/refresh.png b/profiles/commons/modules/contrib/mollom/images/refresh.png
new file mode 100644
index 0000000..77e12d1
Binary files /dev/null and b/profiles/commons/modules/contrib/mollom/images/refresh.png differ
diff --git a/profiles/commons/modules/contrib/mollom/mollom.admin.inc b/profiles/commons/modules/contrib/mollom/mollom.admin.inc
index 909d6ee..e35a346 100644
--- a/profiles/commons/modules/contrib/mollom/mollom.admin.inc
+++ b/profiles/commons/modules/contrib/mollom/mollom.admin.inc
@@ -941,6 +941,7 @@ function mollom_admin_settings($form, &$form_state) {
     '#collapsible' => TRUE,
     '#collapsed' => TRUE,
   );
+  // Lower severity numbers indicate a high severity level.
   $min_severity = variable_get('mollom_log_minimum_severity', WATCHDOG_WARNING);
   $form['mollom_advanced']['mollom_log_minimum_severity'] = array(
     '#type' => 'radios',
@@ -949,7 +950,7 @@ function mollom_admin_settings($form, &$form_state) {
       WATCHDOG_WARNING => t('Only log warnings and errors'),
       WATCHDOG_DEBUG => t('Log all Mollom messages'),
     ),
-    '#default_value' => variable_get('mollom_log_minimum_severity', WATCHDOG_WARNING),
+    '#default_value' => $min_severity <= WATCHDOG_WARNING ? WATCHDOG_WARNING : WATCHDOG_DEBUG,
   );
   $form['mollom_advanced']['mollom_audio_captcha_enabled'] = array(
     '#type' => 'checkbox',
diff --git a/profiles/commons/modules/contrib/mollom/mollom.captcha.audio.tpl.php b/profiles/commons/modules/contrib/mollom/mollom.captcha.audio.tpl.php
index d492cd7..8dd5509 100644
--- a/profiles/commons/modules/contrib/mollom/mollom.captcha.audio.tpl.php
+++ b/profiles/commons/modules/contrib/mollom/mollom.captcha.audio.tpl.php
@@ -25,6 +25,13 @@ $instructions = t('Enter only the first letter of each word you hear.  If you ar
 $unsupported = t('Your system does not support our audio playback verification.  Please <a href="@captcha-url" id="mollom_captcha_download" class="swfNext-mollom_captcha_verify">download this verification</a> to listen on your device.', array(
   '@captcha-url' => $captcha_url,
 ));
+$refresh_alt = t('Refresh');
+
+$refresh_image_output = theme('image', array(
+  'path' => drupal_get_path('module', 'mollom') . '/images/refresh.png',
+  'alt' => $refresh_alt,
+  'getsize' => FALSE,
+));
 ?>
 
 <script type="text/javascript">
@@ -93,31 +100,34 @@ $unsupported = t('Your system does not support our audio playback verification.
   }
 </script>
 
-<div class="mollom-captcha-content mollom-audio-captcha">
-  <div class="mollom-audio-catcha-instructions"><?php print $instructions; ?></div>
+<span class="mollom-captcha-container">
+  <a href="javascript:void(0);" class="mollom-refresh-captcha mollom-refresh-audio"><?php print $refresh_image_output; ?></a>
+  <div class="mollom-captcha-content mollom-audio-captcha">
+    <div class="mollom-audio-catcha-instructions"><?php print $instructions; ?></div>
 
-  <!--- HTML5 Audio playback -->
-  <audio id="mollom_captcha_audio" controls tabindex="0">
-    <source src="<?php print $captcha_url; ?>" type="audio/mpeg" />
-    <!-- Displays if HTML5 audio is unsupported and JavaScript player embed is unsupported -->
-    <p><?php print $unsupported; ?></p>
-  </audio>
+    <!--- HTML5 Audio playback -->
+    <audio id="mollom_captcha_audio" controls tabindex="0">
+      <source src="<?php print $captcha_url; ?>" type="audio/mpeg" />
+      <!-- Displays if HTML5 audio is unsupported and JavaScript player embed is unsupported -->
+      <p><?php print $unsupported; ?></p>
+    </audio>
 
-  <!-- Fallback for browsers not supporting HTML5 audio or not MP3 format -->
-  <div id="mollom_captcha_fallback">
-    <div id="mollom_captcha_fallback_player"></div>
-    <script>
-      var audioTest = document.createElement('audio');
-      if (!audioTest.canPlayType || !audioTest.canPlayType('audio/mpeg')) {
-        embedFallbackPlayer();
-      }
-    </script>
-  </div>
+    <!-- Fallback for browsers not supporting HTML5 audio or not MP3 format -->
+    <div id="mollom_captcha_fallback">
+      <div id="mollom_captcha_fallback_player"></div>
+      <script>
+        var audioTest = document.createElement('audio');
+        if (!audioTest.canPlayType || !audioTest.canPlayType('audio/mpeg')) {
+          embedFallbackPlayer();
+        }
+      </script>
+    </div>
 
-  <!-- Text to show when neither HTML5 audio or SWFs are supported -->
-  <div id="mollom_captcha_unsupported" style="display:none;">
-    <p><?php print $unsupported; ?></p>
-  </div>
+    <!-- Text to show when neither HTML5 audio or SWFs are supported -->
+    <div id="mollom_captcha_unsupported" style="display:none;">
+      <p><?php print $unsupported; ?></p>
+    </div>
 
-  <div class="mollom-audio-captcha-switch"><a href="#" class="mollom-switch-captcha mollom-image-captcha swfPrev-mollom_captcha_download" id="mollom_captcha_verify"><?php print $switch_verify; ?></a>.</div>
-</div>
+    <div class="mollom-audio-captcha-switch"><a href="#" class="mollom-switch-captcha mollom-image-captcha swfPrev-mollom_captcha_download" id="mollom_captcha_verify"><?php print $switch_verify; ?></a>.</div>
+  </div>
+</span>
diff --git a/profiles/commons/modules/contrib/mollom/mollom.captcha.image.tpl.php b/profiles/commons/modules/contrib/mollom/mollom.captcha.image.tpl.php
index d28e336..a62d934 100644
--- a/profiles/commons/modules/contrib/mollom/mollom.captcha.image.tpl.php
+++ b/profiles/commons/modules/contrib/mollom/mollom.captcha.image.tpl.php
@@ -12,10 +12,19 @@
 $switch_verify = $audio_enabled ? t('Switch to audio verification') : '';
 $instructions = t("Type the characters you see in the picture; if you can't read them, submit the form and a new image will be generated. Not case sensitive.");
 $image_alt_text = t('Type the characters you see in this picture.');
+$refresh_alt = t('Refresh');
 ?>
 
 <?php
+  $refresh_image_output = theme('image', array(
+    'path' => drupal_get_path('module', 'mollom') . '/images/refresh.png',
+    'alt' => $refresh_alt,
+    'getsize' => FALSE,
+  ));
   $captcha_output = theme('image', array('path' => $captcha_url, 'alt' => $image_alt_text, 'getsize' => FALSE));
 ?>
-<span class="mollom-captcha-content mollom-image-captcha"><?php print $captcha_output; ?></span>
-<div class="mollom-image-captcha-instructions"><?php print $instructions; ?><?php if ($audio_enabled) { ?>&nbsp;&nbsp;<a href="#" class="mollom-switch-captcha mollom-audio-captcha"><?php print $switch_verify; ?></a>.<?php } ?></div>
+<span class="mollom-captcha-container">
+  <a href="javascript:void(0);" class="mollom-refresh-captcha mollom-refresh-image"><?php print $refresh_image_output; ?></a>
+  <span class="mollom-captcha-content mollom-image-captcha"><?php print $captcha_output; ?></span>
+  <div class="mollom-image-captcha-instructions"><?php print $instructions; ?><?php if ($audio_enabled) { ?>&nbsp;&nbsp;<a href="#" class="mollom-switch-captcha mollom-audio-captcha"><?php print $switch_verify; ?></a>.<?php } ?></div>
+</span>
diff --git a/profiles/commons/modules/contrib/mollom/mollom.css b/profiles/commons/modules/contrib/mollom/mollom.css
index e57d4f0..6ed8e04 100644
--- a/profiles/commons/modules/contrib/mollom/mollom.css
+++ b/profiles/commons/modules/contrib/mollom/mollom.css
@@ -18,3 +18,15 @@
 .mollom_captcha_flash_player:focus{
     border: yellow 2px solid;
 }
+
+/* Refresh CAPTCHA icon */
+.mollom-captcha-container {
+  display: inline-block;
+  position: relative;
+}
+.mollom-captcha-container .mollom-refresh-captcha {
+  position: absolute;
+}
+.mollom-captcha-container .mollom-captcha-content {
+  padding-left: 20px;
+}
diff --git a/profiles/commons/modules/contrib/mollom/mollom.flag.inc b/profiles/commons/modules/contrib/mollom/mollom.flag.inc
index cdb2730..3a43e70 100644
--- a/profiles/commons/modules/contrib/mollom/mollom.flag.inc
+++ b/profiles/commons/modules/contrib/mollom/mollom.flag.inc
@@ -136,7 +136,7 @@ function mollom_flag_entity_view_prerender($element) {
  * @param $source
  *   The optional internal source to be submitted along with feedback.
  */
-function mollom_flag($type, $entity, $id, $source = NULL) {
+function _mollom_flag($type, $entity, $id, $source = NULL) {
   $detail = FALSE;
   if ($type === 'nojs' || $_SERVER['REQUEST_METHOD'] !== 'POST') {
     $detail = TRUE;
diff --git a/profiles/commons/modules/contrib/mollom/mollom.info b/profiles/commons/modules/contrib/mollom/mollom.info
index 2e3b0d2..7651288 100644
--- a/profiles/commons/modules/contrib/mollom/mollom.info
+++ b/profiles/commons/modules/contrib/mollom/mollom.info
@@ -10,9 +10,9 @@ files[] = mollom.drupal.inc
 files[] = tests/mollom.test
 files[] = tests/mollom.class.test
 
-; Information added by Drupal.org packaging script on 2014-02-25
-version = "7.x-2.9"
+; Information added by Drupal.org packaging script on 2014-05-05
+version = "7.x-2.10"
 core = "7.x"
 project = "mollom"
-datestamp = "1393328906"
+datestamp = "1399303128"
 
diff --git a/profiles/commons/modules/contrib/mollom/mollom.install b/profiles/commons/modules/contrib/mollom/mollom.install
index 72f6749..0abeb82 100644
--- a/profiles/commons/modules/contrib/mollom/mollom.install
+++ b/profiles/commons/modules/contrib/mollom/mollom.install
@@ -114,14 +114,14 @@ function mollom_schema() {
         'not null' => TRUE,
         'default' => '',
       ),
-      'contentId' => array(
+      'content_id' => array(
         'description' => 'Content ID returned by Mollom.',
         'type' => 'varchar',
         'length' => 128,
         'not null' => TRUE,
         'default' => '',
       ),
-      'captchaId' => array(
+      'captcha_id' => array(
         'description' => 'CAPTCHA ID returned by Mollom.',
         'type' => 'varchar',
         'length' => 128,
@@ -152,13 +152,13 @@ function mollom_schema() {
       // would have an unintended meaning. Also, values are stored in individual
       // columns, so as to be able to join and filter/sort on these values for
       // improved content moderation.
-      'spamScore' => array(
+      'spam_score' => array(
         'description' => 'Text analysis spam check result.',
         'type' => 'float',
         'size' => 'tiny',
         'not null' => FALSE,
       ),
-      'spamClassification' => array(
+      'spam_classification' => array(
         'description' => 'Text analysis final spam classification result.',
         'type' => 'varchar',
         'length' => 16,
@@ -170,13 +170,13 @@ function mollom_schema() {
         'size' => 'tiny',
         'not null' => FALSE,
       ),
-      'qualityScore' => array(
+      'quality_score' => array(
         'description' => 'Text analysis quality check result.',
         'type' => 'float',
         'size' => 'tiny',
         'not null' => FALSE,
       ),
-      'profanityScore' => array(
+      'profanity_score' => array(
         'description' => 'Text analysis profanity check result.',
         'type' => 'float',
         'size' => 'tiny',
@@ -233,8 +233,8 @@ function mollom_schema() {
        ),
     ),
     'indexes' => array(
-      'contentId' => array('contentId'),
-      'captchaId' => array('captchaId'),
+      'content_id' => array('content_id'),
+      'captcha_id' => array('captcha_id'),
     ),
     'primary key' => array('entity', 'id'),
     'foreign keys' => array(
@@ -349,6 +349,7 @@ function mollom_install() {
  */
 function mollom_uninstall() {
   db_delete('variable')->condition('name', db_like('mollom_') . '%', 'LIKE')->execute();
+  cache_clear_all('mollom', 'cache', TRUE);
 }
 
 /**
@@ -1202,3 +1203,74 @@ function mollom_update_7211() {
     ));
   }
 }
+
+/**
+ * Set default variable values for advanced administration features.
+ *
+ * Note that some of these may have already been set in previous versions.
+ */
+function mollom_update_7212() {
+  variable_set('mollom_log_minimum_severity', variable_get('mollom_log_minimum_severity', WATCHDOG_WARNING));
+  variable_set('mollom_audio_captcha_enabled', variable_get('mollom_audio_captcha_enabled', 1));
+  variable_set('mollom_connection_timeout', variable_get('mollom_connection_timeout', 3));
+  variable_set('mollom_fba_enabled', variable_get('mollom_fba_enabled', 0));
+  variable_set('mollom_fai_entity_types', variable_get('mollom_fai_entity_types', array('comment' => 'comment')));
+  variable_set('mollom_fai_dialog', variable_get('mollom_fai_dialog', 'mollom'));
+}
+
+/**
+ * Change all mixedCase database columns and indexes to underscore separated.
+ */
+function mollom_update_7213() {
+  db_drop_index('mollom', 'contentId');
+  db_drop_index('mollom', 'captchaId');
+  if (db_field_exists('mollom', 'contentId')) {
+    db_change_field('mollom', 'contentId', 'content_id', array(
+      'description' => 'Content ID returned by Mollom.',
+      'type' => 'varchar',
+      'length' => 128,
+      'not null' => TRUE,
+      'default' => '',
+    ));
+  }
+  if (db_field_exists('mollom', 'captchaId')) {
+    db_change_field('mollom', 'captchaId', 'captcha_id', array(
+      'description' => 'CAPTCHA ID returned by Mollom.',
+      'type' => 'varchar',
+      'length' => 128,
+    ));
+  }
+  if (db_field_exists('mollom', 'spamScore')) {
+    db_change_field('mollom', 'spamScore', 'spam_score', array(
+      'description' => 'Text analysis spam check result.',
+      'type' => 'float',
+      'size' => 'tiny',
+      'not null' => FALSE,
+    ));
+  }
+  if (db_field_exists('mollom', 'spamClassification')) {
+    db_change_field('mollom', 'spamClassification', 'spam_classification', array(
+      'description' => 'Test analysis final spam classification result.',
+      'type' => 'varchar',
+      'length' => 16,
+    ));
+  }
+  if (db_field_exists('mollom', 'qualityScore')) {
+    db_change_field('mollom', 'qualityScore', 'quality_score', array(
+      'description' => 'Text analysis quality check result.',
+      'type' => 'float',
+      'size' => 'tiny',
+      'not null' => FALSE,
+    ));
+  }
+  if (db_field_exists('mollom', 'profanityScore')) {
+    db_change_field('mollom', 'profanityScore', 'profanity_score', array(
+      'description' => 'Text analysis profanity check result.',
+      'type' => 'float',
+      'size' => 'tiny',
+      'not null' => FALSE,
+    ));
+  }
+  db_add_index('mollom', 'content_id', array('content_id'));
+  db_add_index('mollom', 'captcha_id', array('captcha_id'));
+}
diff --git a/profiles/commons/modules/contrib/mollom/mollom.js b/profiles/commons/modules/contrib/mollom/mollom.js
index 61f3c7b..cdcf4c7 100644
--- a/profiles/commons/modules/contrib/mollom/mollom.js
+++ b/profiles/commons/modules/contrib/mollom/mollom.js
@@ -1,5 +1,7 @@
 (function ($) {
 
+Drupal.mollom = Drupal.mollom || {};
+
 /**
  * Open links to Mollom.com in a new window.
  *
@@ -14,31 +16,62 @@ Drupal.behaviors.mollomTarget = {
 };
 
 /**
+ * Retrieve and attach the form behavior analysis tracking image if it has not
+ * yet been added for the form.
+ */
+Drupal.behaviors.mollomFBA = {
+  attach: function (context, settings) {
+    $(':input[name="mollom[fba]"][value=""]', context).once().each(function() {
+      $input = $(this);
+      $.ajax({
+        url: Drupal.settings.basePath + Drupal.settings.pathPrefix + 'mollom/fba',
+        type: 'POST',
+        dataType: 'json',
+        success: function(data) {
+          if (!data.tracking_id || !data.tracking_url) {
+            return;
+          }
+          // Save the tracking id in the hidden field.
+          $input.val(data.tracking_id);
+          // Attach the tracking image.
+          $('<img src="' + data.tracking_url + '" width="1" height="1" alt="" />').appendTo('body');
+        }
+      })
+    });
+  }
+};
+
+ /**
  * Attach click event handlers for CAPTCHA links.
  */
 Drupal.behaviors.mollomCaptcha = {
   attach: function (context, settings) {
-    // @todo Pass the local settings we get from Drupal.attachBehaviors(), or
-    //   inline the click event handlers, or turn them into methods of this
-    //   behavior object.
-    $('a.mollom-switch-captcha', context).click(getMollomCaptcha);
+    $('a.mollom-switch-captcha', context).click(function (e) {
+      var $mollomForm = $(this).parents('form');
+      var newCaptchaType = $(this).hasClass('mollom-audio-captcha') ? 'audio' : 'image';
+      Drupal.mollom.getMollomCaptcha(newCaptchaType, $mollomForm);
+    });
+    $('a.mollom-refresh-captcha', context).click(function (e) {
+      var $mollomForm = $(this).parents('form');
+      var currentCaptchaType = $(this).hasClass('mollom-refresh-audio') ? 'audio' : 'image';
+      Drupal.mollom.getMollomCaptcha(currentCaptchaType, $mollomForm);
+    });
   }
 };
 
 /**
  * Fetch a Mollom CAPTCHA and output the image or audio into the form.
+ *
+ * @param captchaType
+ *   The type of CAPTCHA to retrieve; one of "audio" or "image".
+ * @param context
+ *   The form context for this retrieval.
  */
-function getMollomCaptcha() {
-  // Get the current requested CAPTCHA type from the clicked link.
-  var newCaptchaType = $(this).hasClass('mollom-audio-captcha') ? 'audio' : 'image';
-
-  var context = $(this).parents('form');
-
-  // Extract the form build ID and Mollom content ID from the form.
+Drupal.mollom.getMollomCaptcha = function (captchaType, context) {
   var formBuildId = $('input[name="form_build_id"]', context).val();
   var mollomContentId = $('input.mollom-content-id', context).val();
 
-  var path = 'mollom/captcha/' + newCaptchaType + '/' + formBuildId;
+  var path = 'mollom/captcha/' + captchaType + '/' + formBuildId;
   if (mollomContentId) {
     path += '/' + mollomContentId;
   }
@@ -59,7 +92,7 @@ function getMollomCaptcha() {
       // Add an onclick-event handler for the new link.
       Drupal.attachBehaviors(context);
       // Focus on the CAPTCHA input.
-      if (newCaptchaType == 'image') {
+      if (captchaType == 'image') {
           $('input[name="mollom[captcha]"]', context).focus();
       } else {
          // Focus on audio player.
diff --git a/profiles/commons/modules/contrib/mollom/mollom.module b/profiles/commons/modules/contrib/mollom/mollom.module
index 2960ab3..5eb3223 100644
--- a/profiles/commons/modules/contrib/mollom/mollom.module
+++ b/profiles/commons/modules/contrib/mollom/mollom.module
@@ -282,9 +282,15 @@ function mollom_menu() {
     'type' => MENU_CALLBACK,
   );
 
+  $items['mollom/fba'] = array(
+    'page callback' => 'mollom_fba_js',
+    'access callback' => '_mollom_access',
+    'type' => MENU_CALLBACK,
+  );
+
   // Report as inappropriate.
   $items['mollom/flag/%/%/%/%'] = array(
-    'page callback' => 'mollom_flag',
+    'page callback' => '_mollom_flag',
     'page arguments' => array(2, 3, 4),
     'access callback' => '_mollom_flag_access',
     'access arguments' => array(3, 4),
@@ -340,8 +346,8 @@ function _mollom_access($permission = FALSE) {
  * primarily used for mails, messages, and posts, which pertain to forms
  * protected by Mollom that do no result in stored entities after submission.
  * For example, Contact module's contact form. They can be reported by anyone
- * having the link. $id is expected to be either a {mollom}.contentId or
- * {mollom}.captchaId respectively.
+ * having the link. $id is expected to be either a {mollom}.content_id or
+ * {mollom}.captcha_id respectively.
  *
  * @see mollom_mail_add_report_link()
  *
@@ -430,13 +436,58 @@ function mollom_cron() {
 }
 
 /**
+ * Helper function to convert database column names to variable names.
+ *
+ * Database column names are separated by underscore, while some variable names
+ * are camelcased for backwards compatibility.
+ *
+ * @param stdClass $db_result
+ *   The database result object to convert.
+ * @param bool $reverse
+ *   True if the conversion should be run in reverse, from variable names to
+ *   database names.
+ * @return stdClass
+ *   The updated object with converted field names.
+ */
+function _mollom_convert_db_names($db_result, $reverse = FALSE) {
+  if (!is_object($db_result)) {
+    return $db_result;
+  }
+  $replace = array(
+    'content_id' => 'contentId',
+    'captcha_id' => 'captchaId',
+    'spam_score' => 'spamScore',
+    'spam_classification' => 'spamClassification',
+    'quality_score' => 'qualityScore',
+    'profanity_score' => 'profanityScore',
+  );
+  if ($reverse) {
+    $replace = array_flip($replace);
+  }
+
+  // Don't update the original data object but return a new converted clone.
+  $clone = new stdClass();
+  foreach($db_result as $prop => $value) {
+    if (array_key_exists($prop, $replace)) {
+      $clone->{$replace[$prop]} = $value;
+    }
+    else {
+      $clone->{$prop} = $value;
+    }
+  }
+  return $clone;
+}
+
+
+/**
  * Load a Mollom data record by contentId.
  *
  * @param $contentId
  *   The contentId to retrieve data for.
  */
 function mollom_content_load($contentId) {
-  return mollom_db_query_range('SELECT * FROM {mollom} WHERE contentId = :contentId', 0, 1, array(':contentId' => $contentId))->fetchObject();
+  $data = mollom_db_query_range('SELECT * FROM {mollom} WHERE content_id = :contentId', 0, 1, array(':contentId' => $contentId))->fetchObject();
+  return _mollom_convert_db_names($data);
 }
 
 /**
@@ -448,7 +499,8 @@ function mollom_content_load($contentId) {
  *   The entity id to retrieve data for.
  */
 function mollom_data_load($entity, $id) {
-  return mollom_db_query_range('SELECT * FROM {mollom} WHERE entity = :entity AND id = :id', 0, 1, array(':entity' => $entity, ':id' => $id))->fetchObject();
+  $data = mollom_db_query_range('SELECT * FROM {mollom} WHERE entity = :entity AND id = :id', 0, 1, array(':entity' => $entity, ':id' => $id))->fetchObject();
+  return _mollom_convert_db_names($data);
 }
 
 /**
@@ -461,7 +513,8 @@ function mollom_data_load($entity, $id) {
  *   The matching Mollom data as an array keyed by entity id.
  */
 function mollom_entity_type_load($type) {
-  return mollom_db_query('SELECT * FROM {mollom} WHERE entity = :entity', array(':entity' => $type))->fetchAllAssoc('id');
+  $data = mollom_db_query('SELECT * FROM {mollom} WHERE entity = :entity', array(':entity' => $type))->fetchAllAssoc('id');
+  return _mollom_convert_db_names($data);
 }
 
 /**
@@ -557,12 +610,16 @@ function mollom_data_save($data) {
     $data->languages = implode(',', $languages);
   }
 
+  // Convert mixed case variable names to lower-case _ separated database names.
+  $converted = _mollom_convert_db_names($data, TRUE);
+
   $update = db_query_range("SELECT 'id' FROM {mollom} WHERE entity = :entity AND id = :id", 0, 1, array(
     ':entity' => $data->entity,
     ':id' => $data->id,
   ))->fetchField();
-  drupal_write_record('mollom', $data, $update ? array('entity', $update) : array());
+  drupal_write_record('mollom', $converted, $update ? array('entity', $update) : array());
 
+  // Pass unconverted data to other modules for backwards compatibility.
   if (!$update) {
     module_invoke_all('mollom_data_insert', $data);
   }
@@ -666,7 +723,7 @@ function mollom_data_delete_form_submit($form, &$form_state) {
   $id = $data['postId'];
 
   if (!empty($form_state['values']['mollom']['feedback'])) {
-    if (mollom_data_report($entity, $id, $form_state['values']['mollom']['feedback'])) {
+    if (mollom_data_report($entity, $id, $form_state['values']['mollom']['feedback'], 'moderate', 'mollom_data_delete_form_submit')) {
       drupal_set_message(t('The content was successfully reported as inappropriate.'));
     }
   }
@@ -682,9 +739,17 @@ function mollom_data_delete_form_submit($form, &$form_state) {
  *   The entity type to send feedback for.
  * @param $id
  *   The entity id to send feedback for.
+ * @param $feedback
+ *   The feedback reason for reporting content.
+ * @param $type
+ *   The type of feedback, one of 'moderate' or 'flag'.
+ * @param $source
+ *   An optional single word string identifier for the user interface source.
+ *   This is tracked along with the feedback to provide a more complete picture
+ *   of how feedback is used and submitted on the site.
  */
-function mollom_data_report($entity, $id, $feedback) {
-  return mollom_data_report_multiple($entity, array($id), $feedback);
+function mollom_data_report($entity, $id, $feedback, $type = 'moderate', $source = 'mollom_data_report') {
+  return mollom_data_report_multiple($entity, array($id), $feedback, $type, $source);
 }
 
 /**
@@ -694,15 +759,23 @@ function mollom_data_report($entity, $id, $feedback) {
  *   The entity type to send feedback for.
  * @param $ids
  *   An array of entity ids to send feedback for.
+ * @param $feedback
+ *   The feedback reason for reporting content.
+ * @param $type
+ *   The type of feedback, one of 'moderate' or 'flag'.
+ * @param $source
+ *   An optional single word string identifier for the user interface source.
+ *   This is tracked along with the feedback to provide a more complete picture
+ *   of how feedback is used and submitted on the site.
  */
-function mollom_data_report_multiple($entity, array $ids, $feedback) {
+function mollom_data_report_multiple($entity, array $ids, $feedback, $type = 'moderate', $source = 'mollom_data_report_multiple') {
   $return = TRUE;
   foreach ($ids as $id) {
     // Load the Mollom session data.
     $data = mollom_data_load($entity, $id);
     // Send feedback, if we have session data.
     if (!empty($data->contentId) || !empty($data->captchaId)) {
-      $result = _mollom_send_feedback($data, $feedback, 'moderate', 'mollom_data_report_multiple');
+      $result = _mollom_send_feedback($data, $feedback, $type, $source);
       $return = $return && $result;
     }
   }
@@ -1653,7 +1726,6 @@ function mollom_element_info() {
         'mollom_process_mollom',
       ),
       '#pre_render' => array('mollom_pre_render_mollom'),
-      '#after_build' => array('mollom_after_build_mollom'),
     ),
   );
 }
@@ -1786,6 +1858,30 @@ function mollom_form_comment_form_alter(&$form, &$form_state, $form_id) {
   mollom_flag_comment_form_alter($form, $form_state, $form_id);
 }
 
+/**
+ * Ajax callback for retrieving a form behavior analysis image.
+ *
+ * Outputs the JSON encoded tracking information received from Mollom.  This
+ * will include keys of:
+ *   - tracking_url: the URL to the tracking image
+ *   - tracking_id: an ID to track for the image
+ */
+function mollom_fba_js() {
+  // Deny GET requests to make automated security audit tools not complain
+  // about a JSON Hijacking possibility.
+  // @see http://capec.mitre.org/data/definitions/111.html
+  // @see http://haacked.com/archive/2009/06/24/json-hijacking.aspx
+  if ($_SERVER['REQUEST_METHOD'] !== 'POST') {
+    header($_SERVER['SERVER_PROTOCOL'] . ' 405 Method Not Allowed');
+    // A HTTP 405 response MUST specify allowed methods.
+    header('Allow: POST');
+    drupal_exit();
+  }
+
+  $mollom = mollom();
+  $tracking = $mollom->getTrackingImage();
+  drupal_json_output($tracking);
+}
 
 /**
  * #process callback for #type 'mollom'.
@@ -1960,7 +2056,7 @@ function mollom_process_mollom($element, &$form_state, $complete_form) {
   );
 
   // Add the form behavior analysis web tracking beacon field holder if enabled.
-  if (variable_get('mollom_fba', 0) && $form_state['mollom']['require_analysis']) {
+  if (variable_get('mollom_fba_enabled', 0) && $form_state['mollom']['require_analysis']) {
     $element['fba'] = array(
       '#type' => 'hidden',
     );
@@ -1975,40 +2071,6 @@ function mollom_process_mollom($element, &$form_state, $complete_form) {
 }
 
 /**
- * Adds form behavior analysis tracking image.
- *
- * This is an after_build callback handler for the mollom field type.
- * If form behavior analysis is enabled, a special tracking image is requested
- * from the Mollom servers using a generated tracking ID.
- * The image should be displayed and the tracking ID saved to pass to
- * mollom.checkContent.
- * The tracking image should only be shown the first time a textual analysis
- * form is displayed and not on subsequent CAPTCHA displays or previews.
- */
-function mollom_after_build_mollom(&$element, &$form_state) {
-  // Add the form behavior analysis web tracking beacon field holder if enabled.
-  if (isset($element['fba']) && empty($element['fba']['#value'])) {
-    // Generate the tracking image id for form behavior analysis.
-    $mollom = mollom();
-    $tracking = $mollom->getTrackingImage();
-
-    $element['fba']['#value'] = $tracking['tracking_id'];
-    $element['fba']['#prefix'] = theme('image', array(
-      'path' => $tracking['tracking_url'],
-      'width' => 1,
-      'height' => 1,
-      'alt' => '',
-      'attributes' => array(
-        'class' => array('mollom-fba'),
-      ),
-    ));
-  }
-
-  return $element;
-}
-
-
-/**
  * Adds a Mollom CAPTCHA to a Mollom-protected form.
  *
  * @param $element
@@ -2937,8 +2999,8 @@ function _mollom_attach_captcha_script(&$element = NULL) {
     );
 
     // Try to load via libraries module if enabled.
-    if (module_exists('libraries')) {
-      if (($library = libraries_detect('swfoject')) && !empty($library['installed'])) {
+    if (module_exists('libraries') && function_exists('libraries_detect ')) {
+      if (($library = libraries_detect('swfobject')) && !empty($library['installed'])) {
         $lib = array(
           'found' => TRUE,
           'libraries' => TRUE,
@@ -3027,7 +3089,8 @@ function mollom_mail_add_report_link(array &$message, array $mollom) {
       $data = mollom_content_load($mollom['response']['content']['id']);
     }
     elseif (!empty($mollom['response']['captcha']['id'])) {
-      $data = mollom_db_query_range('SELECT * FROM {mollom} WHERE captchaId = :captchaId', 0, 1, array(':captchaId' => $mollom['response']['captcha']['id']))->fetchObject();
+      $db_data = mollom_db_query_range('SELECT * FROM {mollom} WHERE captcha_id = :captchaId', 0, 1, array(':captchaId' => $mollom['response']['captcha']['id']))->fetchObject();
+      $data = _mollom_convert_db_names($db_data);
     }
     if (!$data) {
       // @todo Mollom session data should have been saved earlier already;
@@ -3126,45 +3189,44 @@ function mollom_mollom_data_insert($data) {
   if (empty($data->contentId)) {
     return;
   }
-  // Exclude data for form submissions not resulting in a locally stored entity.
-  // These usually map to mails and similar things, but not in content that can
-  // be moderated.
-  if ($data->entity == 'mollom_content' || $data->entity == 'mollom_captcha') {
-    return;
-  }
-  // Skip forms for which Mollom moderation integration is not enabled.
-  $mollom_form = mollom_form_load($data->form_id);
-  if (empty($mollom_form['moderation'])) {
-    return;
-  }
 
-  // Mark the content as stored.
+  // Indicate that this content session is complete.
   $params['id'] = $data->contentId;
-  $params['stored'] = 1;
+  $params['finalized'] = 1;
 
-  // Add the URL of the posted content itself.
-  $entity_info = entity_get_info();
-  if (isset($entity_info[$data->entity])) {
-    $entity = entity_load($data->entity, array($data->id));
-    $entity = (isset($entity[$data->id]) ? $entity[$data->id] : FALSE);
+  // Mark the content as stored for moderation-enabled content.
+  $mollom_form = mollom_form_load($data->form_id);
+  if (!empty($mollom_form['moderation'])) {
+    $params['stored'] = 1;
   }
-  if (!empty($entity)) {
-    $options = entity_uri($data->entity, $entity);
-    $options['absolute'] = TRUE;
-    $params['url'] = url($options['path'], $options);
-
-    // Add the title and URL of the parent content/context of the post, if any.
-    // @todo Figure out how to do this in a generic way.
-    if ($data->entity == 'comment') {
-      $node = node_load($entity->nid);
-      $options = entity_uri('node', $node);
-      $options['absolute'] = TRUE;
-      $params['contextUrl'] = url($options['path'], $options);
-      $params['contextTitle'] = entity_label('node', $node);
+
+  // Get additional information for submissions that result in a locally stored
+  // entity.
+  if ($data->entity != 'mollom_content' && $data->entity != 'mollom_captcha') {
+    // Add the URL of the posted content itself.
+    $entity_info = entity_get_info();
+    if (isset($entity_info[$data->entity])) {
+      $entity = entity_load($data->entity, array($data->id));
+      $entity = (isset($entity[$data->id]) ? $entity[$data->id] : FALSE);
     }
-    // Associate the new user ID for newly registered user accounts.
-    elseif ($data->entity == 'user') {
-      $params['authorId'] = $data->id;
+    if (!empty($entity)) {
+      $options = entity_uri($data->entity, $entity);
+      $options['absolute'] = TRUE;
+      $params['url'] = url($options['path'], $options);
+
+      // Add the title and URL of the parent content/context of the post, if any.
+      // @todo Figure out how to do this in a generic way.
+      if ($data->entity == 'comment') {
+        $node = node_load($entity->nid);
+        $options = entity_uri('node', $node);
+        $options['absolute'] = TRUE;
+        $params['contextUrl'] = url($options['path'], $options);
+        $params['contextTitle'] = entity_label('node', $node);
+      }
+      // Associate the new user ID for newly registered user accounts.
+      elseif ($data->entity == 'user') {
+        $params['authorId'] = $data->id;
+      }
     }
   }
 
@@ -3951,3 +4013,182 @@ function profile_mollom_form_info_alter(&$form_info, $form_id) {
 /**
  * @} End of "name mollom_profile".
  */
+
+/**
+ * @name mollom_action Actions module integration for Mollom.
+ * @{
+ */
+
+/**
+ * Implements hook_action_info().
+ */
+function mollom_action_info() {
+  return array(
+    // Unpublish comment action.
+    'mollom_action_unpublish_comment' => array(
+      'label' => t('Report comment to Mollom as spam and unpublish'),
+      'type' => 'comment',
+      'configurable' => FALSE,
+      'triggers' => array(
+        'comment_insert',
+        'comment_update',
+      ),
+      'aggregate' => TRUE,
+    ),
+    // Unpublish node action.
+    'mollom_action_unpublish_node' => array(
+      'label' => t('Report node to Mollom as spam and unpublish'),
+      'type' => 'node',
+      'configurable' => FALSE,
+      'triggers' => array(
+        'node_insert',
+        'node_update',
+      ),
+      'aggregate' => TRUE,
+    ),
+  );
+}
+
+/**
+ * Action callback to report a comment to mollom and unpublish.
+ */
+function mollom_action_unpublish_comment($comments, $context = array()) {
+  _mollom_action_unpublish('comment', $comments);
+}
+
+/**
+ * Action callback to report a node to mollom and unpublish.
+ */
+function mollom_action_unpublish_node($nodes, $context = array()) {
+  _mollom_action_unpublish('node', $nodes);
+}
+
+/**
+ * Unpublish content and report to Mollom as spam.
+ *
+ * @param $entity_type
+ *   The type of entity; one of "comment" or "node".
+ * @param $entities
+ *   An array of entities to perform the action upon.
+ */
+function _mollom_action_unpublish($entity_type, $entities) {
+  // Make sure this is a supported entity type.
+  if (!in_array($entity_type, array('node', 'comment'))) {
+    watchdog('Mollom', 'Called unpublish action for an unsupported entity type: @type', array('@type' => $entity_type), WATCHDOG_ERROR);
+    return;
+  }
+
+  // Determine the entities for which moderation is allowed.
+  list($allowed, $nids, $cids) = _mollom_actions_access_callbacks($entity_type, $entities);
+
+  // Send feedback to Mollom.
+  $ids = $entity_type === 'comment' ? $cids : $nids;
+  mollom_data_report_multiple($entity_type, $ids, 'spam', 'moderate', "mollom_action_unpublish_{$entity_type}");
+
+  if ($entity_type === 'comment') {
+    // Unpublish the comment.
+    db_update("comment")
+      ->fields(array("status" => COMMENT_NOT_PUBLISHED))
+      ->condition("cid", $cids)
+      ->execute();
+
+    foreach ($nids as $nid) {
+      _comment_update_node_statistics($nid);
+    }
+  }
+  else if ($entity_type === 'node') {
+    // Unpublish the node.
+    db_update("node")
+      ->fields(array("status" => NODE_NOT_PUBLISHED))
+      ->condition("nid", $nids)
+      ->execute();
+  }
+}
+
+/**
+ * Gets all callbacks and checks permissions for entities.
+ *
+ * @param $entity_type
+ *   The type of entity to check.
+ * @param $entities
+ *   An array of entities to check.
+ *
+ * @return array
+ *   An indexed array of allowed entities
+ *   - 0 An array of allowed entities objects
+ *   - 1 An array of node ids
+ *   - 2 An array of comment ids (if entity_type is comment).
+ */
+function _mollom_actions_access_callbacks($entity_type, $entities) {
+  $cids = array();
+  $nids = array();
+
+  // Retrieve any relevant callback for comments
+  $report_access_callbacks = array();
+  $access_permissions = array();
+  $entity_access_callbacks = array();
+
+  $allowed = array();
+  foreach (mollom_form_list() as $form_id => $info) {
+    if (!isset($info['entity']) || $info['entity'] != $entity_type) {
+      continue;
+    }
+    // If there is a 'report access callback' add it to the list.
+    if (isset($info['report access callback'])
+      && function_exists($info['report access callback'])
+      && !in_array($info['report access callback'], $report_access_callbacks)) {
+      $report_access_callbacks[] = $info['report access callback'];
+    }
+    // Otherwise add any access permissions.
+    else if (isset($info['report access']) && !in_array($info['report access'], $access_permissions)) {
+      $access_permissions[] = $info['report access'];
+    }
+    // Check for entity report access callbacks.
+    if (isset($info['entity report access callback'])
+      && function_exists($info['entity report access callback'])
+      && !in_array($info['entity report access callback'], $entity_access_callbacks)) {
+      $entity_access_callbacks[] = $info['entity report access callback'];
+    }
+  }
+
+  // Check access for this comment.
+  foreach ($entities as $entity) {
+    list($entity_id, $rev_id, $bundle) = entity_extract_ids($entity_type, $entity);
+    if ($entity_type === 'comment') {
+      $cids[$entity_id] = $entity_id;
+      $nids[$entity->nid] = $entity->nid;
+    }
+    else {
+      $nids[$entity_id] = $entity_id;
+    }
+
+    // Check reporting callbacks.
+    foreach($report_access_callbacks as $callback) {
+      if (!$callback($entity_type, $entity_id)) {
+        break;
+      }
+    }
+
+    // Check reporting user permissions.
+    foreach($access_permissions as $permission) {
+      if (!user_access($permission)) {
+        break;
+      }
+    }
+
+    // Check entity reporting callbacks.
+    foreach($report_access_callbacks as $callback) {
+      if (!$callback($entity)) {
+        break;
+      }
+    }
+
+    // If still here, then user has access to report this entity.
+    $allowed[] = $entity;
+  }
+  return array($allowed, $nids, $cids);
+}
+
+/**
+ * @} End of "name mollom_action".
+ */
diff --git a/profiles/commons/modules/contrib/mollom/tests/mollom.test b/profiles/commons/modules/contrib/mollom/tests/mollom.test
index 87a2303..e968f88 100644
--- a/profiles/commons/modules/contrib/mollom/tests/mollom.test
+++ b/profiles/commons/modules/contrib/mollom/tests/mollom.test
@@ -569,23 +569,6 @@ class MollomWebTestCase extends DrupalWebTestCase {
   }
 
   /**
-   * Assert that tracking image has been included on the current page.
-   */
-  protected function assertTrackingImage() {
-    $image = $this->xpath('//img[@class=:classname]', array(':classname' => 'mollom-fba'));
-    $this->assert(!empty($image), 'Form behavior analysis tracking image found.');
-  }
-
-  /**
-   * Assert that tracking image is not found on the current page.
-   */
-  protected function assertNoTrackingImage() {
-    $image = $this->xpath('//img[@class=:classname]', array(':classname' => 'mollom-fba'));
-    $this->assert(empty($image), 'Form behavior analysis tracking image not found.');
-  }
-
-
-  /**
    * Assert that the privacy policy link is found on the current page.
    */
   protected function assertPrivacyLink() {
@@ -3304,6 +3287,129 @@ class MollomCommentFormTestCase extends MollomWebTestCase {
 }
 
 /**
+ * Tests Mollom actions.
+ */
+class MollomActionsTestCase extends MollomWebTestCase {
+  // Keep track of nodes and comments for actions.
+  protected $nodes = array();
+  protected $comments = array();
+  // Re-route Mollom communication to this testing site.
+  protected $mollomClass = 'MollomDrupalTestLocal';
+
+  public static function getInfo() {
+    return array(
+      'name' => 'Actions integration',
+      'description' => 'Tests actions provided for comments and nodes.',
+      'group' => 'Mollom',
+    );
+  }
+
+  function setUp() {
+    parent::setUp(array('comment'));
+    $this->drupalCreateContentType(array('type' => 'article', 'name' => 'Article'));
+    $this->web_user = $this->drupalCreateUser(array('create article content', 'access comments', 'post comments', 'skip comment approval'));
+
+    $this->drupalLogin($this->admin_user);
+    $this->setProtectionUI('article_node_form');
+    $this->setProtectionUI('comment_node_article_form');
+    $this->drupalLogout();
+
+    // Login and submit a node.
+    $this->nodes = array();
+    $this->comments = array();
+    $this->drupalLogin($this->web_user);
+    for ($i = 0; $i < 2; $i++) {
+      // Create a test node.
+      $edit = array(
+        'title' => 'ham node ' . $i,
+      );
+      $this->drupalPost('node/add/article', $edit, t('Save'));
+      $node = $this->drupalGetNodeByTitle($edit['title']);
+
+      $this->drupalGet('comment/reply/' . $node->nid);
+      $edit = array(
+        'comment_body[und][0][value]' => 'ham',
+      );
+      $this->drupalPost(NULL, $edit, t('Save'));
+      $this->comments[] = db_query('SELECT * FROM {comment} WHERE subject = :comment AND nid = :nid', array(':comment' => $edit['comment_body[und][0][value]'], ':nid' => $node->nid))->fetchObject();
+      $this->nodes[] = $node;
+    }
+  }
+
+  /**
+   * Test that calling the mollom action function triggers the unpublish of
+   * comments and marking as spam.
+   */
+  function testCommentActions() {
+    // Load the comment entity objects.
+    $cids = array();
+    $contentIds = array();
+    foreach($this->comments as $comment) {
+      $cids[] = $comment->cid;
+      $data = mollom_data_load('comment', $comment->cid);
+      $contentIds[] = $data->contentId;
+    }
+    $comment_entities = entity_load('comment', $cids);
+
+    // Verify that all comments are currently published.
+    $published = db_query('SELECT * FROM {comment} WHERE cid IN (:cids) AND status = 1', array(':cids' => $cids))->fetchAll();
+    $this->assertEqual(count($published), count($comment_entities));
+
+    // Call the unpublish action.
+    mollom_action_unpublish_comment($comment_entities);
+
+    // Verify that all comments are now unpublished.
+    $published = db_query('SELECT * FROM {comment} WHERE cid IN (:cids) AND status = 1', array(':cids' => $cids))->fetchAll();
+    $this->assertEqual(count($published), 0);
+
+    // Verify that all comments have been marked as spam.
+    foreach ($cids as $cid) {
+      $server = $this->getServerRecord('feedback');
+      $this->assertTrue(in_array($server['contentId'], $contentIds));
+      $this->assertEqual($server['source'], 'mollom_action_unpublish_comment');
+      $this->assertEqual($server['reason'], 'spam');
+      $this->assertEqual($server['type'], 'moderate');
+    }
+  }
+
+  /**
+   * Test that calling the mollom action function triggers the unpublish of
+   * nodes and marking as spam.
+   */
+  function testNodeActions() {
+    // Load the comment entity objects.
+    $nids = array();
+    $contentIds = array();
+    foreach($this->nodes as $node) {
+      $nids[] = $node->nid;
+      $data = mollom_data_load('node', $node->nid);
+      $contentIds[] = $data->contentId;
+    }
+    $node_entities = entity_load('node', $nids);
+
+    // Verify that all nodes are currently published.
+    $published = db_query('SELECT * FROM {node} WHERE nid IN (:nids) AND status = 1', array(':nids' => $nids))->fetchAll();
+    $this->assertEqual(count($published), count($node_entities));
+
+    // Call the unpublish action.
+    mollom_action_unpublish_node($node_entities);
+
+    // Verify that all comments are now unpublished.
+    $published = db_query('SELECT * FROM {node} WHERE nid IN (:nids) AND status = 1', array(':nids' => $nids))->fetchAll();
+    $this->assertEqual(count($published), 0);
+
+    // Verify that all nodes have been marked as spam.
+    foreach ($nids as $nid) {
+      $server = $this->getServerRecord('feedback');
+      $this->assertTrue(in_array($server['contentId'], $contentIds));
+      $this->assertEqual($server['source'], 'mollom_action_unpublish_node');
+      $this->assertEqual($server['reason'], 'spam');
+      $this->assertEqual($server['type'], 'moderate');
+    }
+  }
+}
+
+/**
  * Tests protection of Contact module forms.
  */
 class MollomContactFormTestCase extends MollomWebTestCase {
@@ -3810,11 +3916,11 @@ class MollomDataTestCase extends MollomWebTestCase {
     $this->drupalLogout();
 
     // Test form behavior analysis when enabled.
-    variable_set('mollom_fba', 1);
+    variable_set('mollom_fba_enabled', 1);
 
     // Verify that the tracking image is output.
     $this->drupalGet('mollom-test/form');
-    $this->assertTrackingImage();
+    $this->assertFieldByName('mollom[fba]', '');
 
     // Generate a CAPTCHA.
     $edit = array(
@@ -3828,11 +3934,6 @@ class MollomDataTestCase extends MollomWebTestCase {
     $data = $this->getServerRecord();
     $this->assertSame('trackingImageId', $data['trackingImageId'], $edit['mollom[fba]']);
 
-    // The image should not be re-displayed on the CAPTCHA page and value is
-    // no longer tracked.
-    $this->assertNoFieldByName('mollom[fba]');
-    $this->assertNoTrackingImage();
-
     // Complete the verification.
     $this->postCorrectCaptcha(NULL, array(), 'Submit', 'Successful form submission.');
 
@@ -3855,11 +3956,10 @@ class MollomDataTestCase extends MollomWebTestCase {
     $this->assertSame('trackingImageId', $data['trackingImageId'], '-1');
 
     // Disable form behavior analysis.
-    variable_set('mollom_fba', 0);
+    variable_set('mollom_fba_enabled', 0);
 
     // Verify that the tracking image is not output.
     $this->drupalGet('mollom-test/form');
-    $this->assertNoTrackingImage();
     $this->assertNoFieldByName('mollom[fba]');
 
     // Post the content.
@@ -4014,6 +4114,9 @@ class MollomDataTestCase extends MollomWebTestCase {
  * Verify that Mollom data can be created, read, updated, and deleted.
  */
 class MollomDataCRUDTestCase extends MollomWebTestCase {
+
+  protected $mollomClass = 'MollomDrupalTestLocal';
+
   public static function getInfo() {
     return array(
       'name' => 'Data CRUD',
diff --git a/profiles/commons/modules/contrib/mollom/tests/mollom_test.info b/profiles/commons/modules/contrib/mollom/tests/mollom_test.info
index 00ff2ba..95f3c5c 100644
--- a/profiles/commons/modules/contrib/mollom/tests/mollom_test.info
+++ b/profiles/commons/modules/contrib/mollom/tests/mollom_test.info
@@ -4,9 +4,9 @@ core = 7.x
 package = Testing
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-02-25
-version = "7.x-2.9"
+; Information added by Drupal.org packaging script on 2014-05-05
+version = "7.x-2.10"
 core = "7.x"
 project = "mollom"
-datestamp = "1393328906"
+datestamp = "1399303128"
 
diff --git a/profiles/commons/modules/contrib/mollom/tests/mollom_test_server.info b/profiles/commons/modules/contrib/mollom/tests/mollom_test_server.info
index fe14003..662f215 100644
--- a/profiles/commons/modules/contrib/mollom/tests/mollom_test_server.info
+++ b/profiles/commons/modules/contrib/mollom/tests/mollom_test_server.info
@@ -4,9 +4,9 @@ core = 7.x
 package = Testing
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-02-25
-version = "7.x-2.9"
+; Information added by Drupal.org packaging script on 2014-05-05
+version = "7.x-2.10"
 core = "7.x"
 project = "mollom"
-datestamp = "1393328906"
+datestamp = "1399303128"
 
diff --git a/profiles/commons/modules/contrib/oauthconnector/modules/oauth2/oauth2_common.info b/profiles/commons/modules/contrib/oauthconnector/modules/oauth2/oauth2_common.info
index c88c93d..2c65061 100644
--- a/profiles/commons/modules/contrib/oauthconnector/modules/oauth2/oauth2_common.info
+++ b/profiles/commons/modules/contrib/oauthconnector/modules/oauth2/oauth2_common.info
@@ -7,9 +7,9 @@ files[] = lib/DrupalOAuth2Client.inc
 
 
 
-; Information added by drush on 2014-04-23
+; Information added by drush on 2014-05-08
 version = "7.x-1.0-beta2+0-dev"
 core = "7.x"
 project = "oauthconnector"
-datestamp = "1398289202"
+datestamp = "1399579141"
 
diff --git a/profiles/commons/modules/contrib/oauthconnector/oauthconnector.info b/profiles/commons/modules/contrib/oauthconnector/oauthconnector.info
index 5ce49f2..c68edc1 100644
--- a/profiles/commons/modules/contrib/oauthconnector/oauthconnector.info
+++ b/profiles/commons/modules/contrib/oauthconnector/oauthconnector.info
@@ -10,9 +10,9 @@ dependencies[] = http_client_oauth
 dependencies[] = ctools
 
 
-; Information added by drush on 2014-04-23
+; Information added by drush on 2014-05-08
 version = "7.x-1.0-beta2+0-dev"
 core = "7.x"
 project = "oauthconnector"
-datestamp = "1398289202"
+datestamp = "1399579141"
 
diff --git a/profiles/commons/modules/contrib/oembed/deprecated/media_oembed/media_oembed.info b/profiles/commons/modules/contrib/oembed/deprecated/media_oembed/media_oembed.info
index b4317e5..a16ebde 100644
--- a/profiles/commons/modules/contrib/oembed/deprecated/media_oembed/media_oembed.info
+++ b/profiles/commons/modules/contrib/oembed/deprecated/media_oembed/media_oembed.info
@@ -8,9 +8,9 @@ dependencies[] = oembedcore
 hidden = TRUE
 
 
-; Information added by drush on 2014-04-23
+; Information added by drush on 2014-05-08
 version = "7.x-1.0-rc2+15-dev"
 core = "7.x"
 project = "oembed"
-datestamp = "1398289202"
+datestamp = "1399579141"
 
diff --git a/profiles/commons/modules/contrib/oembed/deprecated/oembedcore/oembedcore.info b/profiles/commons/modules/contrib/oembed/deprecated/oembedcore/oembedcore.info
index 1c8a028..8633770 100644
--- a/profiles/commons/modules/contrib/oembed/deprecated/oembedcore/oembedcore.info
+++ b/profiles/commons/modules/contrib/oembed/deprecated/oembedcore/oembedcore.info
@@ -12,9 +12,9 @@ files[] = MediaInternetOEmbedHandler.inc
 hidden = TRUE
 
 
-; Information added by drush on 2014-04-23
+; Information added by drush on 2014-05-08
 version = "7.x-1.0-rc2+15-dev"
 core = "7.x"
 project = "oembed"
-datestamp = "1398289202"
+datestamp = "1399579141"
 
diff --git a/profiles/commons/modules/contrib/oembed/deprecated/oembedfield/oembedfield.info b/profiles/commons/modules/contrib/oembed/deprecated/oembedfield/oembedfield.info
index c528e22..67b3960 100644
--- a/profiles/commons/modules/contrib/oembed/deprecated/oembedfield/oembedfield.info
+++ b/profiles/commons/modules/contrib/oembed/deprecated/oembedfield/oembedfield.info
@@ -6,9 +6,9 @@ hidden = TRUE
 dependencies[] = oembedcore
 dependencies[] = link
 
-; Information added by drush on 2014-04-23
+; Information added by drush on 2014-05-08
 version = "7.x-1.0-rc2+15-dev"
 core = "7.x"
 project = "oembed"
-datestamp = "1398289202"
+datestamp = "1399579141"
 
diff --git a/profiles/commons/modules/contrib/oembed/oembed.info b/profiles/commons/modules/contrib/oembed/oembed.info
index 0257eb0..f6abb7b 100644
--- a/profiles/commons/modules/contrib/oembed/oembed.info
+++ b/profiles/commons/modules/contrib/oembed/oembed.info
@@ -11,9 +11,9 @@ files[] = OEmbedStreamWrapper.inc
 files[] = MediaInternetOEmbedHandler.inc
 
 
-; Information added by drush on 2014-04-23
+; Information added by drush on 2014-05-08
 version = "7.x-1.0-rc2+15-dev"
 core = "7.x"
 project = "oembed"
-datestamp = "1398289202"
+datestamp = "1399579141"
 
diff --git a/profiles/commons/modules/contrib/oembed/oembedembedly/oembedembedly.info b/profiles/commons/modules/contrib/oembed/oembedembedly/oembedembedly.info
index 16f22e4..ecc99dd 100644
--- a/profiles/commons/modules/contrib/oembed/oembedembedly/oembedembedly.info
+++ b/profiles/commons/modules/contrib/oembed/oembedembedly/oembedembedly.info
@@ -5,9 +5,9 @@ core = 7.x
 dependencies[] = oembed
 
 
-; Information added by drush on 2014-04-23
+; Information added by drush on 2014-05-08
 version = "7.x-1.0-rc2+15-dev"
 core = "7.x"
 project = "oembed"
-datestamp = "1398289202"
+datestamp = "1399579141"
 
diff --git a/profiles/commons/modules/contrib/oembed/oembedprovider/oembedprovider.info b/profiles/commons/modules/contrib/oembed/oembedprovider/oembedprovider.info
index b9b337d..92bc3bc 100644
--- a/profiles/commons/modules/contrib/oembed/oembedprovider/oembedprovider.info
+++ b/profiles/commons/modules/contrib/oembed/oembedprovider/oembedprovider.info
@@ -8,9 +8,9 @@ files[] = oembedprovider.module
 files[] = oembedprovider.test
 
 
-; Information added by drush on 2014-04-23
+; Information added by drush on 2014-05-08
 version = "7.x-1.0-rc2+15-dev"
 core = "7.x"
 project = "oembed"
-datestamp = "1398289202"
+datestamp = "1399579141"
 
diff --git a/profiles/commons/modules/contrib/oembed/oembedprovider_embed/oembedprovider_embed.info b/profiles/commons/modules/contrib/oembed/oembedprovider_embed/oembedprovider_embed.info
index a89b4bf..ba5cb2b 100644
--- a/profiles/commons/modules/contrib/oembed/oembedprovider_embed/oembedprovider_embed.info
+++ b/profiles/commons/modules/contrib/oembed/oembedprovider_embed/oembedprovider_embed.info
@@ -8,9 +8,9 @@ dependencies[] = oembed
 hidden = TRUE
 
 
-; Information added by drush on 2014-04-23
+; Information added by drush on 2014-05-08
 version = "7.x-1.0-rc2+15-dev"
 core = "7.x"
 project = "oembed"
-datestamp = "1398289202"
+datestamp = "1399579141"
 
diff --git a/profiles/commons/modules/contrib/og/LICENSE.txt b/profiles/commons/modules/contrib/og/LICENSE.txt
new file mode 100755
index 0000000..d159169
--- /dev/null
+++ b/profiles/commons/modules/contrib/og/LICENSE.txt
@@ -0,0 +1,339 @@
+                    GNU GENERAL PUBLIC LICENSE
+                       Version 2, June 1991
+
+ Copyright (C) 1989, 1991 Free Software Foundation, Inc.,
+ 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ Everyone is permitted to copy and distribute verbatim copies
+ of this license document, but changing it is not allowed.
+
+                            Preamble
+
+  The licenses for most software are designed to take away your
+freedom to share and change it.  By contrast, the GNU General Public
+License is intended to guarantee your freedom to share and change free
+software--to make sure the software is free for all its users.  This
+General Public License applies to most of the Free Software
+Foundation's software and to any other program whose authors commit to
+using it.  (Some other Free Software Foundation software is covered by
+the GNU Lesser General Public License instead.)  You can apply it to
+your programs, too.
+
+  When we speak of free software, we are referring to freedom, not
+price.  Our General Public Licenses are designed to make sure that you
+have the freedom to distribute copies of free software (and charge for
+this service if you wish), that you receive source code or can get it
+if you want it, that you can change the software or use pieces of it
+in new free programs; and that you know you can do these things.
+
+  To protect your rights, we need to make restrictions that forbid
+anyone to deny you these rights or to ask you to surrender the rights.
+These restrictions translate to certain responsibilities for you if you
+distribute copies of the software, or if you modify it.
+
+  For example, if you distribute copies of such a program, whether
+gratis or for a fee, you must give the recipients all the rights that
+you have.  You must make sure that they, too, receive or can get the
+source code.  And you must show them these terms so they know their
+rights.
+
+  We protect your rights with two steps: (1) copyright the software, and
+(2) offer you this license which gives you legal permission to copy,
+distribute and/or modify the software.
+
+  Also, for each author's protection and ours, we want to make certain
+that everyone understands that there is no warranty for this free
+software.  If the software is modified by someone else and passed on, we
+want its recipients to know that what they have is not the original, so
+that any problems introduced by others will not reflect on the original
+authors' reputations.
+
+  Finally, any free program is threatened constantly by software
+patents.  We wish to avoid the danger that redistributors of a free
+program will individually obtain patent licenses, in effect making the
+program proprietary.  To prevent this, we have made it clear that any
+patent must be licensed for everyone's free use or not licensed at all.
+
+  The precise terms and conditions for copying, distribution and
+modification follow.
+
+                    GNU GENERAL PUBLIC LICENSE
+   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
+
+  0. This License applies to any program or other work which contains
+a notice placed by the copyright holder saying it may be distributed
+under the terms of this General Public License.  The "Program", below,
+refers to any such program or work, and a "work based on the Program"
+means either the Program or any derivative work under copyright law:
+that is to say, a work containing the Program or a portion of it,
+either verbatim or with modifications and/or translated into another
+language.  (Hereinafter, translation is included without limitation in
+the term "modification".)  Each licensee is addressed as "you".
+
+Activities other than copying, distribution and modification are not
+covered by this License; they are outside its scope.  The act of
+running the Program is not restricted, and the output from the Program
+is covered only if its contents constitute a work based on the
+Program (independent of having been made by running the Program).
+Whether that is true depends on what the Program does.
+
+  1. You may copy and distribute verbatim copies of the Program's
+source code as you receive it, in any medium, provided that you
+conspicuously and appropriately publish on each copy an appropriate
+copyright notice and disclaimer of warranty; keep intact all the
+notices that refer to this License and to the absence of any warranty;
+and give any other recipients of the Program a copy of this License
+along with the Program.
+
+You may charge a fee for the physical act of transferring a copy, and
+you may at your option offer warranty protection in exchange for a fee.
+
+  2. You may modify your copy or copies of the Program or any portion
+of it, thus forming a work based on the Program, and copy and
+distribute such modifications or work under the terms of Section 1
+above, provided that you also meet all of these conditions:
+
+    a) You must cause the modified files to carry prominent notices
+    stating that you changed the files and the date of any change.
+
+    b) You must cause any work that you distribute or publish, that in
+    whole or in part contains or is derived from the Program or any
+    part thereof, to be licensed as a whole at no charge to all third
+    parties under the terms of this License.
+
+    c) If the modified program normally reads commands interactively
+    when run, you must cause it, when started running for such
+    interactive use in the most ordinary way, to print or display an
+    announcement including an appropriate copyright notice and a
+    notice that there is no warranty (or else, saying that you provide
+    a warranty) and that users may redistribute the program under
+    these conditions, and telling the user how to view a copy of this
+    License.  (Exception: if the Program itself is interactive but
+    does not normally print such an announcement, your work based on
+    the Program is not required to print an announcement.)
+
+These requirements apply to the modified work as a whole.  If
+identifiable sections of that work are not derived from the Program,
+and can be reasonably considered independent and separate works in
+themselves, then this License, and its terms, do not apply to those
+sections when you distribute them as separate works.  But when you
+distribute the same sections as part of a whole which is a work based
+on the Program, the distribution of the whole must be on the terms of
+this License, whose permissions for other licensees extend to the
+entire whole, and thus to each and every part regardless of who wrote it.
+
+Thus, it is not the intent of this section to claim rights or contest
+your rights to work written entirely by you; rather, the intent is to
+exercise the right to control the distribution of derivative or
+collective works based on the Program.
+
+In addition, mere aggregation of another work not based on the Program
+with the Program (or with a work based on the Program) on a volume of
+a storage or distribution medium does not bring the other work under
+the scope of this License.
+
+  3. You may copy and distribute the Program (or a work based on it,
+under Section 2) in object code or executable form under the terms of
+Sections 1 and 2 above provided that you also do one of the following:
+
+    a) Accompany it with the complete corresponding machine-readable
+    source code, which must be distributed under the terms of Sections
+    1 and 2 above on a medium customarily used for software interchange; or,
+
+    b) Accompany it with a written offer, valid for at least three
+    years, to give any third party, for a charge no more than your
+    cost of physically performing source distribution, a complete
+    machine-readable copy of the corresponding source code, to be
+    distributed under the terms of Sections 1 and 2 above on a medium
+    customarily used for software interchange; or,
+
+    c) Accompany it with the information you received as to the offer
+    to distribute corresponding source code.  (This alternative is
+    allowed only for noncommercial distribution and only if you
+    received the program in object code or executable form with such
+    an offer, in accord with Subsection b above.)
+
+The source code for a work means the preferred form of the work for
+making modifications to it.  For an executable work, complete source
+code means all the source code for all modules it contains, plus any
+associated interface definition files, plus the scripts used to
+control compilation and installation of the executable.  However, as a
+special exception, the source code distributed need not include
+anything that is normally distributed (in either source or binary
+form) with the major components (compiler, kernel, and so on) of the
+operating system on which the executable runs, unless that component
+itself accompanies the executable.
+
+If distribution of executable or object code is made by offering
+access to copy from a designated place, then offering equivalent
+access to copy the source code from the same place counts as
+distribution of the source code, even though third parties are not
+compelled to copy the source along with the object code.
+
+  4. You may not copy, modify, sublicense, or distribute the Program
+except as expressly provided under this License.  Any attempt
+otherwise to copy, modify, sublicense or distribute the Program is
+void, and will automatically terminate your rights under this License.
+However, parties who have received copies, or rights, from you under
+this License will not have their licenses terminated so long as such
+parties remain in full compliance.
+
+  5. You are not required to accept this License, since you have not
+signed it.  However, nothing else grants you permission to modify or
+distribute the Program or its derivative works.  These actions are
+prohibited by law if you do not accept this License.  Therefore, by
+modifying or distributing the Program (or any work based on the
+Program), you indicate your acceptance of this License to do so, and
+all its terms and conditions for copying, distributing or modifying
+the Program or works based on it.
+
+  6. Each time you redistribute the Program (or any work based on the
+Program), the recipient automatically receives a license from the
+original licensor to copy, distribute or modify the Program subject to
+these terms and conditions.  You may not impose any further
+restrictions on the recipients' exercise of the rights granted herein.
+You are not responsible for enforcing compliance by third parties to
+this License.
+
+  7. If, as a consequence of a court judgment or allegation of patent
+infringement or for any other reason (not limited to patent issues),
+conditions are imposed on you (whether by court order, agreement or
+otherwise) that contradict the conditions of this License, they do not
+excuse you from the conditions of this License.  If you cannot
+distribute so as to satisfy simultaneously your obligations under this
+License and any other pertinent obligations, then as a consequence you
+may not distribute the Program at all.  For example, if a patent
+license would not permit royalty-free redistribution of the Program by
+all those who receive copies directly or indirectly through you, then
+the only way you could satisfy both it and this License would be to
+refrain entirely from distribution of the Program.
+
+If any portion of this section is held invalid or unenforceable under
+any particular circumstance, the balance of the section is intended to
+apply and the section as a whole is intended to apply in other
+circumstances.
+
+It is not the purpose of this section to induce you to infringe any
+patents or other property right claims or to contest validity of any
+such claims; this section has the sole purpose of protecting the
+integrity of the free software distribution system, which is
+implemented by public license practices.  Many people have made
+generous contributions to the wide range of software distributed
+through that system in reliance on consistent application of that
+system; it is up to the author/donor to decide if he or she is willing
+to distribute software through any other system and a licensee cannot
+impose that choice.
+
+This section is intended to make thoroughly clear what is believed to
+be a consequence of the rest of this License.
+
+  8. If the distribution and/or use of the Program is restricted in
+certain countries either by patents or by copyrighted interfaces, the
+original copyright holder who places the Program under this License
+may add an explicit geographical distribution limitation excluding
+those countries, so that distribution is permitted only in or among
+countries not thus excluded.  In such case, this License incorporates
+the limitation as if written in the body of this License.
+
+  9. The Free Software Foundation may publish revised and/or new versions
+of the General Public License from time to time.  Such new versions will
+be similar in spirit to the present version, but may differ in detail to
+address new problems or concerns.
+
+Each version is given a distinguishing version number.  If the Program
+specifies a version number of this License which applies to it and "any
+later version", you have the option of following the terms and conditions
+either of that version or of any later version published by the Free
+Software Foundation.  If the Program does not specify a version number of
+this License, you may choose any version ever published by the Free Software
+Foundation.
+
+  10. If you wish to incorporate parts of the Program into other free
+programs whose distribution conditions are different, write to the author
+to ask for permission.  For software which is copyrighted by the Free
+Software Foundation, write to the Free Software Foundation; we sometimes
+make exceptions for this.  Our decision will be guided by the two goals
+of preserving the free status of all derivatives of our free software and
+of promoting the sharing and reuse of software generally.
+
+                            NO WARRANTY
+
+  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY
+FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN
+OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES
+PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED
+OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
+MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS
+TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE
+PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,
+REPAIR OR CORRECTION.
+
+  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
+WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR
+REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,
+INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING
+OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED
+TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY
+YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER
+PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE
+POSSIBILITY OF SUCH DAMAGES.
+
+                     END OF TERMS AND CONDITIONS
+
+            How to Apply These Terms to Your New Programs
+
+  If you develop a new program, and you want it to be of the greatest
+possible use to the public, the best way to achieve this is to make it
+free software which everyone can redistribute and change under these terms.
+
+  To do so, attach the following notices to the program.  It is safest
+to attach them to the start of each source file to most effectively
+convey the exclusion of warranty; and each file should have at least
+the "copyright" line and a pointer to where the full notice is found.
+
+    <one line to give the program's name and a brief idea of what it does.>
+    Copyright (C) <year>  <name of author>
+
+    This program is free software; you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation; either version 2 of the License, or
+    (at your option) any later version.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License along
+    with this program; if not, write to the Free Software Foundation, Inc.,
+    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+
+Also add information on how to contact you by electronic and paper mail.
+
+If the program is interactive, make it output a short notice like this
+when it starts in an interactive mode:
+
+    Gnomovision version 69, Copyright (C) year name of author
+    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
+    This is free software, and you are welcome to redistribute it
+    under certain conditions; type `show c' for details.
+
+The hypothetical commands `show w' and `show c' should show the appropriate
+parts of the General Public License.  Of course, the commands you use may
+be called something other than `show w' and `show c'; they could even be
+mouse-clicks or menu items--whatever suits your program.
+
+You should also get your employer (if you work as a programmer) or your
+school, if any, to sign a "copyright disclaimer" for the program, if
+necessary.  Here is a sample; alter the names:
+
+  Yoyodyne, Inc., hereby disclaims all copyright interest in the program
+  `Gnomovision' (which makes passes at compilers) written by James Hacker.
+
+  <signature of Ty Coon>, 1 April 1989
+  Ty Coon, President of Vice
+
+This General Public License does not permit incorporating your program into
+proprietary programs.  If your program is a subroutine library, you may
+consider it more useful to permit linking proprietary applications with the
+library.  If this is what you want to do, use the GNU Lesser General
+Public License instead of this License.
diff --git a/profiles/commons/modules/contrib/og/includes/og.membership.inc b/profiles/commons/modules/contrib/og/includes/og.membership.inc
index daa6014..71df6e1 100644
--- a/profiles/commons/modules/contrib/og/includes/og.membership.inc
+++ b/profiles/commons/modules/contrib/og/includes/og.membership.inc
@@ -75,7 +75,7 @@ class OgMembership extends Entity {
 
     // We can now safely save the entity.
     parent::save();
-    og_membership_invalidate_cache();
+    og_invalidate_cache();
     // Clear the group content entity field cache.
     cache_clear_all('field:'. $entity_type . ':' . $etid, 'cache_field');
 
@@ -88,7 +88,7 @@ class OgMembership extends Entity {
   public function delete() {
     parent::delete();
 
-    og_membership_invalidate_cache();
+    og_invalidate_cache();
     // Clear the group content entity field cache.
     cache_clear_all('field:'. $this->entity_type . ':' . $this->etid, 'cache_field');
 
diff --git a/profiles/commons/modules/contrib/og/og.info b/profiles/commons/modules/contrib/og/og.info
index bd95b2b..da3014e 100644
--- a/profiles/commons/modules/contrib/og/og.info
+++ b/profiles/commons/modules/contrib/og/og.info
@@ -60,10 +60,9 @@ files[] = includes/migrate/7200/og_user_roles.migrate.inc
 
 
 
-
-; Information added by drush on 2014-04-23
-version = "7.x-2.6+11-dev"
+; Information added by Drupal.org packaging script on 2014-05-07
+version = "7.x-2.7"
 core = "7.x"
 project = "og"
-datestamp = "1398289204"
+datestamp = "1399486728"
 
diff --git a/profiles/commons/modules/contrib/og/og.module b/profiles/commons/modules/contrib/og/og.module
index 04de2fe..4b4f966 100755
--- a/profiles/commons/modules/contrib/og/og.module
+++ b/profiles/commons/modules/contrib/og/og.module
@@ -1271,17 +1271,12 @@ function og_membership_type_access($op, $entity, $account = NULL, $entity_type =
 
 /**
  * Reset static cache related to group membership.
+ *
+ * @deprecated
+ *   Use og_invalidate_cache() instead.
  */
 function og_membership_invalidate_cache() {
-  $caches = array(
-    'og_get_entity_groups',
-    'og_get_membership',
-    'og_get_field_og_membership_properties',
-  );
-
-  foreach ($caches as $cache) {
-    drupal_static_reset($cache);
-  }
+  og_invalidate_cache();
 }
 
 /**
@@ -1654,7 +1649,7 @@ function og_membership_delete($id) {
  */
 function og_membership_delete_multiple($ids = array()) {
   entity_delete_multiple('og_membership', $ids);
-  og_membership_invalidate_cache();
+  og_invalidate_cache();
 }
 
 /**
@@ -1883,14 +1878,15 @@ function og_invalidate_cache($gids = array()) {
     'og_get_user_roles',
     'og_get_permissions',
     'og_get_group_audience_fields',
+    'og_get_entity_groups',
+    'og_get_membership',
+    'og_get_field_og_membership_properties',
+    'og_get_user_roles',
   );
 
   foreach ($caches as $cache) {
     drupal_static_reset($cache);
   }
-  // Invalidate group membersihp cache.
-  og_membership_invalidate_cache();
-
   // Let other OG modules know we invalidate cache.
   module_invoke_all('og_invalidate_cache', $gids);
 }
@@ -2204,13 +2200,18 @@ function og_user_access($group_type, $gid, $string, $account = NULL, $skip_alter
   // To reduce the number of SQL queries, we cache the user's permissions
   // in a static variable.
   if (!isset($perm[$identifier][$account->uid])) {
-    $roles = og_get_user_roles($group_type, $gid, $account->uid);
-    $role_permissions = og_role_permissions($roles);
-
     $perms = array();
-    foreach ($role_permissions as $one_role) {
-      $perms += $one_role;
+
+    if ($roles = og_get_user_roles($group_type, $gid, $account->uid)) {
+      // Member might not have roles if they are blocked.
+      // A pending member is treated as a non-member.
+      $role_permissions = og_role_permissions($roles);
+
+      foreach ($role_permissions as $one_role) {
+        $perms += $one_role;
+      }
     }
+
     $perm[$identifier][$account->uid] = $perms;
   }
 
@@ -2773,48 +2774,66 @@ function og_get_default_roles($include = TRUE) {
  * @param $include
  *   (optional) If TRUE also anonymous or authenticated role ID will be
  *   returned. Defaults to TRUE.
+ * @param $check_active
+ *   (optional) If TRUE, and the user is pending, only anonymous role will be
+ *   returned. If blocked, no role will be returned.
  *
  * @return
  *   Array with the role IDs of the user as the key, and the role name as
  *   the value.
  */
-function og_get_user_roles($group_type, $gid, $uid = NULL, $include = TRUE) {
+function og_get_user_roles($group_type, $gid, $uid = NULL, $include = TRUE, $check_active = TRUE) {
   $roles = &drupal_static(__FUNCTION__, array());
   if (empty($uid)) {
     global $user;
     $uid = $user->uid;
   }
 
+  $account = user_load($uid);
+
   $identifier = implode(':', array($group_type, $gid, $uid, $include));
   if (isset($roles[$identifier])) {
     return $roles[$identifier];
   }
 
+  $is_blocked = og_is_member($group_type, $gid, 'user', $account, array(OG_STATE_BLOCKED));
+
+  if ($check_active && $is_blocked) {
+    $roles[$identifier] = array();
+    return $roles[$identifier];
+  }
+
+  $is_member = og_is_member($group_type, $gid, 'user', $account);
+
+
+  $rids = array();
   $group = entity_load_single($group_type, $gid);
   // Get the bundle of the group.
-  list($id, $vid, $bundle) = entity_extract_ids($group_type, $group);
+  list(,, $bundle) = entity_extract_ids($group_type, $group);
 
   // Check if roles are overriden for the group.
   $query_gid = og_is_group_default_access($group_type, $gid) ? 0 : $gid;
 
-  $query = db_select('og_users_roles', 'ogur');
-  $query->innerJoin('og_role', 'ogr', 'ogur.rid = ogr.rid');
+  if (!$check_active || $is_member) {
+    $query = db_select('og_users_roles', 'ogur');
+    $query->innerJoin('og_role', 'ogr', 'ogur.rid = ogr.rid');
+
+    $rids = $query
+      ->fields('ogur', array('rid'))
+      ->fields('ogr', array('name'))
+      ->condition('ogr.group_type', $group_type, '=')
+      ->condition('ogr.group_bundle', $bundle, '=')
+      ->condition('ogr.gid', $query_gid, '=')
+      ->condition('ogur.uid', $uid, '=')
+      ->condition('ogur.gid', $gid, '=')
+      ->orderBy('rid')
+      ->execute()
+      ->fetchAllkeyed();
+  }
 
-  $rids = $query
-    ->fields('ogur', array('rid'))
-    ->fields('ogr', array('name'))
-    ->condition('ogr.group_type', $group_type, '=')
-    ->condition('ogr.group_bundle', $bundle, '=')
-    ->condition('ogr.gid', $query_gid, '=')
-    ->condition('ogur.uid', $uid, '=')
-    ->condition('ogur.gid', $gid, '=')
-    ->orderBy('rid')
-    ->execute()
-    ->fetchAllkeyed();
 
-  if ($include) {
-    $account = user_load($uid);
-    $role_name = og_is_member($group_type, $gid, 'user', $account) ? OG_AUTHENTICATED_ROLE : OG_ANONYMOUS_ROLE;
+  if ($include && !$is_blocked) {
+    $role_name = $is_member ? OG_AUTHENTICATED_ROLE : OG_ANONYMOUS_ROLE;
 
     $rids = db_select('og_role', 'ogr')
       ->fields('ogr', array('rid', 'name'))
@@ -3116,6 +3135,7 @@ function og_role_revoke($group_type, $gid, $uid, $rid) {
       ->condition('group_type', $group_type)
       ->condition('gid', $gid)
       ->execute();
+    og_invalidate_cache();
     module_invoke_all('og_role_revoke', $group_type, $gid, $uid, $rid);
 
     if (module_exists('rules'))  {
diff --git a/profiles/commons/modules/contrib/og/og.test b/profiles/commons/modules/contrib/og/og.test
index 1e9272c..891e456 100644
--- a/profiles/commons/modules/contrib/og/og.test
+++ b/profiles/commons/modules/contrib/og/og.test
@@ -680,7 +680,6 @@ class OgPermissionsTestCase extends DrupalWebTestCase {
     $user1 = $this->drupalCreateUser();
 
     // Create an entity.
-    $property = OG_GROUP_FIELD;
     $entity = entity_create('entity_test', array('name' => 'main', 'uid' => $user1->uid));
     $wrapper = entity_metadata_wrapper('entity_test', $entity);
     $wrapper->{OG_GROUP_FIELD}->set(1);
@@ -721,6 +720,54 @@ class OgPermissionsTestCase extends DrupalWebTestCase {
     $this->assertTrue(og_user_access('entity_test', $entity->pid, 'delete own article content', $user2), t('User still has "delete own article content" as they have "administer group" permission.'));
     $this->assertTrue(og_user_access('entity_test', $entity->pid, 'administer group', $user2), t('User has "administer group" permission.'));
   }
+
+  /**
+   * Assert blocked and pending roles influence the allowed permissions.
+   */
+  function testBlockedAndPendingRoles() {
+    // Create user.
+    $user1 = $this->drupalCreateUser();
+
+    // Create an entity.
+    $entity = entity_create('entity_test', array('name' => 'main', 'uid' => $user1->uid));
+    $wrapper = entity_metadata_wrapper('entity_test', $entity);
+    $wrapper->{OG_GROUP_FIELD}->set(1);
+    $wrapper->save();
+
+    // Associate user to the group, and grant "admin" role.
+    $user2 = $this->drupalCreateUser();
+    $values = array('entity_type' => 'user', 'entity' => $user2);
+    og_group('entity_test', $entity->pid, $values);
+    $og_roles = og_roles('entity_test', 'main');
+
+    $rid = array_search(OG_ADMINISTRATOR_ROLE, $og_roles);
+    og_role_grant('entity_test', $entity->pid, $user2->uid, $rid);
+
+    // Active member.
+    $roles = og_get_user_roles('entity_test', $entity->pid, $user2->uid);
+    $expected_result = array(
+      array_search(OG_AUTHENTICATED_ROLE, $og_roles) => OG_AUTHENTICATED_ROLE,
+      array_search(OG_ADMINISTRATOR_ROLE, $og_roles) => OG_ADMINISTRATOR_ROLE,
+    );
+    $this->assertEqual($roles, $expected_result, 'Active member has also the admin role.');
+    $this->assertTrue(og_user_access('entity_test', $entity->pid, 'update group', $user2), 'Active member has access.');
+
+    // Pending member.
+    $values['state'] = OG_STATE_PENDING;
+    og_group('entity_test', $entity->pid, $values);
+    $roles = og_get_user_roles('entity_test', $entity->pid, $user2->uid);
+    $rid = array_search(OG_ANONYMOUS_ROLE, $og_roles);
+    $expected_result = array($rid => OG_ANONYMOUS_ROLE);
+    $this->assertEqual($roles, $expected_result, 'Pending member has non-member role.');
+    $this->assertFalse(og_user_access('entity_test', $entity->pid, 'update group', $user2), 'Pending member has no access.');
+
+    // Blocked member.
+    $values['state'] = OG_STATE_BLOCKED;
+    og_group('entity_test', $entity->pid, $values);
+    $roles = og_get_user_roles('entity_test', $entity->pid, $user2->uid);
+    $this->assertEqual($roles,  array(), 'Blocked member has no roles.');
+    $this->assertFalse(og_user_access('entity_test', $entity->pid, 'update group', $user2), 'Blocked member has no access.');
+  }
 }
 
 class OgDefaultAccessFieldTestCase extends DrupalWebTestCase {
@@ -954,7 +1001,7 @@ class OgMigrate7000TestCase extends UpgradePathTestCase {
       // Pass also pending state, so we make sure that even if the user
       // isn't active they are considered members, to check they get the
       // correct role.
-      $this->assertEqual(array_keys(og_get_user_roles('node', 10, $uid)), array_keys($roles), format_string('User @uid has the correct roles in group.', array('@uid' => $uid)));
+      $this->assertEqual(array_keys(og_get_user_roles('node', 10, $uid, TRUE, FALSE)), array_keys($roles), format_string('User @uid has the correct roles in group.', array('@uid' => $uid)));
     }
   }
 
diff --git a/profiles/commons/modules/contrib/og/og_access/og_access.info b/profiles/commons/modules/contrib/og/og_access/og_access.info
index c751dd8..72bdd36 100644
--- a/profiles/commons/modules/contrib/og/og_access/og_access.info
+++ b/profiles/commons/modules/contrib/og/og_access/og_access.info
@@ -9,10 +9,9 @@ files[] = og_access.install
 
 ; Tests
 files[] = og_access.test
-
-; Information added by drush on 2014-04-23
-version = "7.x-2.6+11-dev"
+; Information added by Drupal.org packaging script on 2014-05-07
+version = "7.x-2.7"
 core = "7.x"
 project = "og"
-datestamp = "1398289204"
+datestamp = "1399486728"
 
diff --git a/profiles/commons/modules/contrib/og/og_context/og_context.info b/profiles/commons/modules/contrib/og/og_context/og_context.info
index b58fa04..305e6e5 100644
--- a/profiles/commons/modules/contrib/og/og_context/og_context.info
+++ b/profiles/commons/modules/contrib/og/og_context/og_context.info
@@ -12,10 +12,9 @@ files[] = includes/views/handlers/og_context_plugin_argument_default_group_conte
 ; Views access plugin
 files[] = includes/views/handlers/og_context_plugin_access_og_perm.inc
 
-
-; Information added by drush on 2014-04-23
-version = "7.x-2.6+11-dev"
+; Information added by Drupal.org packaging script on 2014-05-07
+version = "7.x-2.7"
 core = "7.x"
 project = "og"
-datestamp = "1398289204"
+datestamp = "1399486728"
 
diff --git a/profiles/commons/modules/contrib/og/og_example/og_example.info b/profiles/commons/modules/contrib/og/og_example/og_example.info
index 97dfc8f..f4b25f9 100644
--- a/profiles/commons/modules/contrib/og/og_example/og_example.info
+++ b/profiles/commons/modules/contrib/og/og_example/og_example.info
@@ -30,10 +30,9 @@ features[node][] = post
 features[page_manager_handlers][] = node_view_panel_context
 features[rules_config][] = rules_og_new_content_message
 
-
-; Information added by drush on 2014-04-23
-version = "7.x-2.6+11-dev"
+; Information added by Drupal.org packaging script on 2014-05-07
+version = "7.x-2.7"
 core = "7.x"
 project = "og"
-datestamp = "1398289204"
+datestamp = "1399486728"
 
diff --git a/profiles/commons/modules/contrib/og/og_field_access/og_field_access.info b/profiles/commons/modules/contrib/og/og_field_access/og_field_access.info
index 3409d9d..586efe9 100644
--- a/profiles/commons/modules/contrib/og/og_field_access/og_field_access.info
+++ b/profiles/commons/modules/contrib/og/og_field_access/og_field_access.info
@@ -8,10 +8,9 @@ files[] = og_field_access.module
 ; Tests
 files[] = og_field_access.test
 
-
-; Information added by drush on 2014-04-23
-version = "7.x-2.6+11-dev"
+; Information added by Drupal.org packaging script on 2014-05-07
+version = "7.x-2.7"
 core = "7.x"
 project = "og"
-datestamp = "1398289204"
+datestamp = "1399486728"
 
diff --git a/profiles/commons/modules/contrib/og/og_register/og_register.info b/profiles/commons/modules/contrib/og/og_register/og_register.info
index 1127071..c724bd3 100644
--- a/profiles/commons/modules/contrib/og/og_register/og_register.info
+++ b/profiles/commons/modules/contrib/og/og_register/og_register.info
@@ -6,10 +6,9 @@ dependencies[] = og
 core = 7.x
 files[] = og_register.module
 files[] = og_register.install
-
-; Information added by drush on 2014-04-23
-version = "7.x-2.6+11-dev"
+; Information added by Drupal.org packaging script on 2014-05-07
+version = "7.x-2.7"
 core = "7.x"
 project = "og"
-datestamp = "1398289204"
+datestamp = "1399486728"
 
diff --git a/profiles/commons/modules/contrib/og/og_ui/og_ui.info b/profiles/commons/modules/contrib/og/og_ui/og_ui.info
index 7b9264e..70b7ba5 100644
--- a/profiles/commons/modules/contrib/og/og_ui/og_ui.info
+++ b/profiles/commons/modules/contrib/og/og_ui/og_ui.info
@@ -16,10 +16,9 @@ files[] = includes/migrate/7000/add_field.inc
 files[] = includes/migrate/7000/populate_field.inc
 files[] = includes/migrate/7000/set_roles.inc
 
-
-; Information added by drush on 2014-04-23
-version = "7.x-2.6+11-dev"
+; Information added by Drupal.org packaging script on 2014-05-07
+version = "7.x-2.7"
 core = "7.x"
 project = "og"
-datestamp = "1398289204"
+datestamp = "1399486728"
 
diff --git a/profiles/commons/modules/contrib/og/og_ui/og_ui.test b/profiles/commons/modules/contrib/og/og_ui/og_ui.test
index fc21be9..adf6f69 100644
--- a/profiles/commons/modules/contrib/og/og_ui/og_ui.test
+++ b/profiles/commons/modules/contrib/og/og_ui/og_ui.test
@@ -261,7 +261,7 @@ class OgUiManagePeopleTestCase extends DrupalWebTestCase {
     $this->drupalPost('group/entity_test/' . $this->entity->pid . '/admin/people/add-user', $edit, t('Add users'));
 
     // Reload user.
-    og_membership_invalidate_cache();
+    og_invalidate_cache();
     $this->assertTrue(og_is_member('entity_test', $this->entity->pid, 'user', $this->user2), 'User was added to the group.');
 
     // Add the same user twice.
diff --git a/profiles/commons/modules/contrib/og/tests/og_test.info b/profiles/commons/modules/contrib/og/tests/og_test.info
index b580114..50d9935 100644
--- a/profiles/commons/modules/contrib/og/tests/og_test.info
+++ b/profiles/commons/modules/contrib/og/tests/og_test.info
@@ -4,10 +4,9 @@ core = 7.x
 dependencies[] = og
 hidden = TRUE
 
-
-; Information added by drush on 2014-04-23
-version = "7.x-2.6+11-dev"
+; Information added by Drupal.org packaging script on 2014-05-07
+version = "7.x-2.7"
 core = "7.x"
 project = "og"
-datestamp = "1398289204"
+datestamp = "1399486728"
 
diff --git a/profiles/commons/modules/contrib/panels/i18n_panels/i18n_panels.info b/profiles/commons/modules/contrib/panels/i18n_panels/i18n_panels.info
index 60a6e10..bb8b89f 100644
--- a/profiles/commons/modules/contrib/panels/i18n_panels/i18n_panels.info
+++ b/profiles/commons/modules/contrib/panels/i18n_panels/i18n_panels.info
@@ -8,9 +8,9 @@ package = Multilingual - Internationalization
 core = 7.x
 
 
-; Information added by drush on 2014-04-23
+; Information added by drush on 2014-05-08
 version = "7.x-3.4+2-dev"
 core = "7.x"
 project = "panels"
-datestamp = "1398289202"
+datestamp = "1399579141"
 
diff --git a/profiles/commons/modules/contrib/panels/panels.info b/profiles/commons/modules/contrib/panels/panels.info
index d159623..e5bee5f 100644
--- a/profiles/commons/modules/contrib/panels/panels.info
+++ b/profiles/commons/modules/contrib/panels/panels.info
@@ -11,9 +11,9 @@ files[] = includes/plugins.inc
 files[] = plugins/views/panels_views_plugin_row_fields.inc
 
 
-; Information added by drush on 2014-04-23
+; Information added by drush on 2014-05-08
 version = "7.x-3.4+2-dev"
 core = "7.x"
 project = "panels"
-datestamp = "1398289202"
+datestamp = "1399579141"
 
diff --git a/profiles/commons/modules/contrib/panels/panels_ipe/panels_ipe.info b/profiles/commons/modules/contrib/panels/panels_ipe/panels_ipe.info
index 3c7240c..8a7eabc 100644
--- a/profiles/commons/modules/contrib/panels/panels_ipe/panels_ipe.info
+++ b/profiles/commons/modules/contrib/panels/panels_ipe/panels_ipe.info
@@ -7,9 +7,9 @@ configure = admin/structure/panels
 files[] = panels_ipe.module
 
 
-; Information added by drush on 2014-04-23
+; Information added by drush on 2014-05-08
 version = "7.x-3.4+2-dev"
 core = "7.x"
 project = "panels"
-datestamp = "1398289202"
+datestamp = "1399579141"
 
diff --git a/profiles/commons/modules/contrib/panels/panels_mini/panels_mini.info b/profiles/commons/modules/contrib/panels/panels_mini/panels_mini.info
index 02f0f48..ab97971 100644
--- a/profiles/commons/modules/contrib/panels/panels_mini/panels_mini.info
+++ b/profiles/commons/modules/contrib/panels/panels_mini/panels_mini.info
@@ -5,9 +5,9 @@ dependencies[] = panels
 core = 7.x
 files[] = plugins/export_ui/panels_mini_ui.class.php
 
-; Information added by drush on 2014-04-23
+; Information added by drush on 2014-05-08
 version = "7.x-3.4+2-dev"
 core = "7.x"
 project = "panels"
-datestamp = "1398289202"
+datestamp = "1399579141"
 
diff --git a/profiles/commons/modules/contrib/panels/panels_node/panels_node.info b/profiles/commons/modules/contrib/panels/panels_node/panels_node.info
index d81893f..9575e6b 100644
--- a/profiles/commons/modules/contrib/panels/panels_node/panels_node.info
+++ b/profiles/commons/modules/contrib/panels/panels_node/panels_node.info
@@ -7,9 +7,9 @@ core = 7.x
 files[] = panels_node.module
 
 
-; Information added by drush on 2014-04-23
+; Information added by drush on 2014-05-08
 version = "7.x-3.4+2-dev"
 core = "7.x"
 project = "panels"
-datestamp = "1398289202"
+datestamp = "1399579141"
 
diff --git a/profiles/commons/modules/contrib/picture/flexslider_picture/flexslider_picture.info b/profiles/commons/modules/contrib/picture/flexslider_picture/flexslider_picture.info
index 8723828..5d95740 100644
--- a/profiles/commons/modules/contrib/picture/flexslider_picture/flexslider_picture.info
+++ b/profiles/commons/modules/contrib/picture/flexslider_picture/flexslider_picture.info
@@ -8,9 +8,9 @@ dependencies[] = flexslider (2.x)
 dependencies[] = flexslider_fields (2.x)
 
 
-; Information added by drush on 2014-04-23
+; Information added by drush on 2014-05-08
 version = "7.x-1.2+6-dev"
 core = "7.x"
 project = "picture"
-datestamp = "1398289201"
+datestamp = "1399579141"
 
diff --git a/profiles/commons/modules/contrib/picture/picture.info b/profiles/commons/modules/contrib/picture/picture.info
index aca6ce6..437841d 100644
--- a/profiles/commons/modules/contrib/picture/picture.info
+++ b/profiles/commons/modules/contrib/picture/picture.info
@@ -9,9 +9,9 @@ package = Picture
 stylesheets[all][] = picture_wysiwyg.css
 
 
-; Information added by drush on 2014-04-23
+; Information added by drush on 2014-05-08
 version = "7.x-1.2+6-dev"
 core = "7.x"
 project = "picture"
-datestamp = "1398289201"
+datestamp = "1399579141"
 
diff --git a/profiles/commons/modules/contrib/radioactivity/LICENSE.txt b/profiles/commons/modules/contrib/radioactivity/LICENSE.txt
new file mode 100755
index 0000000..d159169
--- /dev/null
+++ b/profiles/commons/modules/contrib/radioactivity/LICENSE.txt
@@ -0,0 +1,339 @@
+                    GNU GENERAL PUBLIC LICENSE
+                       Version 2, June 1991
+
+ Copyright (C) 1989, 1991 Free Software Foundation, Inc.,
+ 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ Everyone is permitted to copy and distribute verbatim copies
+ of this license document, but changing it is not allowed.
+
+                            Preamble
+
+  The licenses for most software are designed to take away your
+freedom to share and change it.  By contrast, the GNU General Public
+License is intended to guarantee your freedom to share and change free
+software--to make sure the software is free for all its users.  This
+General Public License applies to most of the Free Software
+Foundation's software and to any other program whose authors commit to
+using it.  (Some other Free Software Foundation software is covered by
+the GNU Lesser General Public License instead.)  You can apply it to
+your programs, too.
+
+  When we speak of free software, we are referring to freedom, not
+price.  Our General Public Licenses are designed to make sure that you
+have the freedom to distribute copies of free software (and charge for
+this service if you wish), that you receive source code or can get it
+if you want it, that you can change the software or use pieces of it
+in new free programs; and that you know you can do these things.
+
+  To protect your rights, we need to make restrictions that forbid
+anyone to deny you these rights or to ask you to surrender the rights.
+These restrictions translate to certain responsibilities for you if you
+distribute copies of the software, or if you modify it.
+
+  For example, if you distribute copies of such a program, whether
+gratis or for a fee, you must give the recipients all the rights that
+you have.  You must make sure that they, too, receive or can get the
+source code.  And you must show them these terms so they know their
+rights.
+
+  We protect your rights with two steps: (1) copyright the software, and
+(2) offer you this license which gives you legal permission to copy,
+distribute and/or modify the software.
+
+  Also, for each author's protection and ours, we want to make certain
+that everyone understands that there is no warranty for this free
+software.  If the software is modified by someone else and passed on, we
+want its recipients to know that what they have is not the original, so
+that any problems introduced by others will not reflect on the original
+authors' reputations.
+
+  Finally, any free program is threatened constantly by software
+patents.  We wish to avoid the danger that redistributors of a free
+program will individually obtain patent licenses, in effect making the
+program proprietary.  To prevent this, we have made it clear that any
+patent must be licensed for everyone's free use or not licensed at all.
+
+  The precise terms and conditions for copying, distribution and
+modification follow.
+
+                    GNU GENERAL PUBLIC LICENSE
+   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
+
+  0. This License applies to any program or other work which contains
+a notice placed by the copyright holder saying it may be distributed
+under the terms of this General Public License.  The "Program", below,
+refers to any such program or work, and a "work based on the Program"
+means either the Program or any derivative work under copyright law:
+that is to say, a work containing the Program or a portion of it,
+either verbatim or with modifications and/or translated into another
+language.  (Hereinafter, translation is included without limitation in
+the term "modification".)  Each licensee is addressed as "you".
+
+Activities other than copying, distribution and modification are not
+covered by this License; they are outside its scope.  The act of
+running the Program is not restricted, and the output from the Program
+is covered only if its contents constitute a work based on the
+Program (independent of having been made by running the Program).
+Whether that is true depends on what the Program does.
+
+  1. You may copy and distribute verbatim copies of the Program's
+source code as you receive it, in any medium, provided that you
+conspicuously and appropriately publish on each copy an appropriate
+copyright notice and disclaimer of warranty; keep intact all the
+notices that refer to this License and to the absence of any warranty;
+and give any other recipients of the Program a copy of this License
+along with the Program.
+
+You may charge a fee for the physical act of transferring a copy, and
+you may at your option offer warranty protection in exchange for a fee.
+
+  2. You may modify your copy or copies of the Program or any portion
+of it, thus forming a work based on the Program, and copy and
+distribute such modifications or work under the terms of Section 1
+above, provided that you also meet all of these conditions:
+
+    a) You must cause the modified files to carry prominent notices
+    stating that you changed the files and the date of any change.
+
+    b) You must cause any work that you distribute or publish, that in
+    whole or in part contains or is derived from the Program or any
+    part thereof, to be licensed as a whole at no charge to all third
+    parties under the terms of this License.
+
+    c) If the modified program normally reads commands interactively
+    when run, you must cause it, when started running for such
+    interactive use in the most ordinary way, to print or display an
+    announcement including an appropriate copyright notice and a
+    notice that there is no warranty (or else, saying that you provide
+    a warranty) and that users may redistribute the program under
+    these conditions, and telling the user how to view a copy of this
+    License.  (Exception: if the Program itself is interactive but
+    does not normally print such an announcement, your work based on
+    the Program is not required to print an announcement.)
+
+These requirements apply to the modified work as a whole.  If
+identifiable sections of that work are not derived from the Program,
+and can be reasonably considered independent and separate works in
+themselves, then this License, and its terms, do not apply to those
+sections when you distribute them as separate works.  But when you
+distribute the same sections as part of a whole which is a work based
+on the Program, the distribution of the whole must be on the terms of
+this License, whose permissions for other licensees extend to the
+entire whole, and thus to each and every part regardless of who wrote it.
+
+Thus, it is not the intent of this section to claim rights or contest
+your rights to work written entirely by you; rather, the intent is to
+exercise the right to control the distribution of derivative or
+collective works based on the Program.
+
+In addition, mere aggregation of another work not based on the Program
+with the Program (or with a work based on the Program) on a volume of
+a storage or distribution medium does not bring the other work under
+the scope of this License.
+
+  3. You may copy and distribute the Program (or a work based on it,
+under Section 2) in object code or executable form under the terms of
+Sections 1 and 2 above provided that you also do one of the following:
+
+    a) Accompany it with the complete corresponding machine-readable
+    source code, which must be distributed under the terms of Sections
+    1 and 2 above on a medium customarily used for software interchange; or,
+
+    b) Accompany it with a written offer, valid for at least three
+    years, to give any third party, for a charge no more than your
+    cost of physically performing source distribution, a complete
+    machine-readable copy of the corresponding source code, to be
+    distributed under the terms of Sections 1 and 2 above on a medium
+    customarily used for software interchange; or,
+
+    c) Accompany it with the information you received as to the offer
+    to distribute corresponding source code.  (This alternative is
+    allowed only for noncommercial distribution and only if you
+    received the program in object code or executable form with such
+    an offer, in accord with Subsection b above.)
+
+The source code for a work means the preferred form of the work for
+making modifications to it.  For an executable work, complete source
+code means all the source code for all modules it contains, plus any
+associated interface definition files, plus the scripts used to
+control compilation and installation of the executable.  However, as a
+special exception, the source code distributed need not include
+anything that is normally distributed (in either source or binary
+form) with the major components (compiler, kernel, and so on) of the
+operating system on which the executable runs, unless that component
+itself accompanies the executable.
+
+If distribution of executable or object code is made by offering
+access to copy from a designated place, then offering equivalent
+access to copy the source code from the same place counts as
+distribution of the source code, even though third parties are not
+compelled to copy the source along with the object code.
+
+  4. You may not copy, modify, sublicense, or distribute the Program
+except as expressly provided under this License.  Any attempt
+otherwise to copy, modify, sublicense or distribute the Program is
+void, and will automatically terminate your rights under this License.
+However, parties who have received copies, or rights, from you under
+this License will not have their licenses terminated so long as such
+parties remain in full compliance.
+
+  5. You are not required to accept this License, since you have not
+signed it.  However, nothing else grants you permission to modify or
+distribute the Program or its derivative works.  These actions are
+prohibited by law if you do not accept this License.  Therefore, by
+modifying or distributing the Program (or any work based on the
+Program), you indicate your acceptance of this License to do so, and
+all its terms and conditions for copying, distributing or modifying
+the Program or works based on it.
+
+  6. Each time you redistribute the Program (or any work based on the
+Program), the recipient automatically receives a license from the
+original licensor to copy, distribute or modify the Program subject to
+these terms and conditions.  You may not impose any further
+restrictions on the recipients' exercise of the rights granted herein.
+You are not responsible for enforcing compliance by third parties to
+this License.
+
+  7. If, as a consequence of a court judgment or allegation of patent
+infringement or for any other reason (not limited to patent issues),
+conditions are imposed on you (whether by court order, agreement or
+otherwise) that contradict the conditions of this License, they do not
+excuse you from the conditions of this License.  If you cannot
+distribute so as to satisfy simultaneously your obligations under this
+License and any other pertinent obligations, then as a consequence you
+may not distribute the Program at all.  For example, if a patent
+license would not permit royalty-free redistribution of the Program by
+all those who receive copies directly or indirectly through you, then
+the only way you could satisfy both it and this License would be to
+refrain entirely from distribution of the Program.
+
+If any portion of this section is held invalid or unenforceable under
+any particular circumstance, the balance of the section is intended to
+apply and the section as a whole is intended to apply in other
+circumstances.
+
+It is not the purpose of this section to induce you to infringe any
+patents or other property right claims or to contest validity of any
+such claims; this section has the sole purpose of protecting the
+integrity of the free software distribution system, which is
+implemented by public license practices.  Many people have made
+generous contributions to the wide range of software distributed
+through that system in reliance on consistent application of that
+system; it is up to the author/donor to decide if he or she is willing
+to distribute software through any other system and a licensee cannot
+impose that choice.
+
+This section is intended to make thoroughly clear what is believed to
+be a consequence of the rest of this License.
+
+  8. If the distribution and/or use of the Program is restricted in
+certain countries either by patents or by copyrighted interfaces, the
+original copyright holder who places the Program under this License
+may add an explicit geographical distribution limitation excluding
+those countries, so that distribution is permitted only in or among
+countries not thus excluded.  In such case, this License incorporates
+the limitation as if written in the body of this License.
+
+  9. The Free Software Foundation may publish revised and/or new versions
+of the General Public License from time to time.  Such new versions will
+be similar in spirit to the present version, but may differ in detail to
+address new problems or concerns.
+
+Each version is given a distinguishing version number.  If the Program
+specifies a version number of this License which applies to it and "any
+later version", you have the option of following the terms and conditions
+either of that version or of any later version published by the Free
+Software Foundation.  If the Program does not specify a version number of
+this License, you may choose any version ever published by the Free Software
+Foundation.
+
+  10. If you wish to incorporate parts of the Program into other free
+programs whose distribution conditions are different, write to the author
+to ask for permission.  For software which is copyrighted by the Free
+Software Foundation, write to the Free Software Foundation; we sometimes
+make exceptions for this.  Our decision will be guided by the two goals
+of preserving the free status of all derivatives of our free software and
+of promoting the sharing and reuse of software generally.
+
+                            NO WARRANTY
+
+  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY
+FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN
+OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES
+PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED
+OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
+MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS
+TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE
+PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,
+REPAIR OR CORRECTION.
+
+  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
+WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR
+REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,
+INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING
+OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED
+TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY
+YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER
+PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE
+POSSIBILITY OF SUCH DAMAGES.
+
+                     END OF TERMS AND CONDITIONS
+
+            How to Apply These Terms to Your New Programs
+
+  If you develop a new program, and you want it to be of the greatest
+possible use to the public, the best way to achieve this is to make it
+free software which everyone can redistribute and change under these terms.
+
+  To do so, attach the following notices to the program.  It is safest
+to attach them to the start of each source file to most effectively
+convey the exclusion of warranty; and each file should have at least
+the "copyright" line and a pointer to where the full notice is found.
+
+    <one line to give the program's name and a brief idea of what it does.>
+    Copyright (C) <year>  <name of author>
+
+    This program is free software; you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation; either version 2 of the License, or
+    (at your option) any later version.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License along
+    with this program; if not, write to the Free Software Foundation, Inc.,
+    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+
+Also add information on how to contact you by electronic and paper mail.
+
+If the program is interactive, make it output a short notice like this
+when it starts in an interactive mode:
+
+    Gnomovision version 69, Copyright (C) year name of author
+    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
+    This is free software, and you are welcome to redistribute it
+    under certain conditions; type `show c' for details.
+
+The hypothetical commands `show w' and `show c' should show the appropriate
+parts of the General Public License.  Of course, the commands you use may
+be called something other than `show w' and `show c'; they could even be
+mouse-clicks or menu items--whatever suits your program.
+
+You should also get your employer (if you work as a programmer) or your
+school, if any, to sign a "copyright disclaimer" for the program, if
+necessary.  Here is a sample; alter the names:
+
+  Yoyodyne, Inc., hereby disclaims all copyright interest in the program
+  `Gnomovision' (which makes passes at compilers) written by James Hacker.
+
+  <signature of Ty Coon>, 1 April 1989
+  Ty Coon, President of Vice
+
+This General Public License does not permit incorporating your program into
+proprietary programs.  If your program is a subroutine library, you may
+consider it more useful to permit linking proprietary applications with the
+library.  If this is what you want to do, use the GNU Lesser General
+Public License instead of this License.
diff --git a/profiles/commons/modules/contrib/radioactivity/features/radioactivitydefaults/radioactivitydefaults.info b/profiles/commons/modules/contrib/radioactivity/features/radioactivitydefaults/radioactivitydefaults.info
index 198da3c..ad0f324 100644
--- a/profiles/commons/modules/contrib/radioactivity/features/radioactivitydefaults/radioactivitydefaults.info
+++ b/profiles/commons/modules/contrib/radioactivity/features/radioactivitydefaults/radioactivitydefaults.info
@@ -11,10 +11,9 @@ features[radioactivity_decay_profile][] = default_daily
 features[radioactivity_decay_profile][] = default_now
 features[radioactivity_decay_profile][] = default_weekly
 
-
-; Information added by drush on 2014-04-23
-version = "7.x-2.9+5-dev"
+; Information added by Drupal.org packaging script on 2014-03-11
+version = "7.x-2.9"
 core = "7.x"
 project = "radioactivity"
-datestamp = "1398289201"
+datestamp = "1394545443"
 
diff --git a/profiles/commons/modules/contrib/radioactivity/includes/RadioactivityMemcachedIncidentStorage.inc b/profiles/commons/modules/contrib/radioactivity/includes/RadioactivityMemcachedIncidentStorage.inc
index a2de1dd..36d6ad1 100644
--- a/profiles/commons/modules/contrib/radioactivity/includes/RadioactivityMemcachedIncidentStorage.inc
+++ b/profiles/commons/modules/contrib/radioactivity/includes/RadioactivityMemcachedIncidentStorage.inc
@@ -65,7 +65,7 @@ class RadioactivityMemcachedIncidentStorage extends RadioactivityIncidentStorage
     }
     while ($i < $to) {
       $incident = $mc->get("radioactivity_incident_" . $i);
-      if ($incident && $incident->floodCheck()) {
+      if ($incident->floodCheck()) {
         $incident->updateEnergy();
       }
       $i++;
diff --git a/profiles/commons/modules/contrib/radioactivity/includes/RadioactivityRedisIncidentStorage.inc b/profiles/commons/modules/contrib/radioactivity/includes/RadioactivityRedisIncidentStorage.inc
index d1e33c9..234c806 100644
--- a/profiles/commons/modules/contrib/radioactivity/includes/RadioactivityRedisIncidentStorage.inc
+++ b/profiles/commons/modules/contrib/radioactivity/includes/RadioactivityRedisIncidentStorage.inc
@@ -57,7 +57,7 @@ class RadioactivityRedisIncidentStorage extends RadioactivityIncidentStorage {
     }
     while ($i < $to) {
       $incident = unserialize($rc->get("radioactivity_incident_" . $i));
-      if ($incident && $incident->floodCheck()) {
+      if ($incident->floodCheck()) {
         $incident->updateEnergy();
       }
       $i++;
diff --git a/profiles/commons/modules/contrib/radioactivity/js/radioactivity-history.js b/profiles/commons/modules/contrib/radioactivity/js/radioactivity-history.js
index b2ad23d..7c3e92b 100644
--- a/profiles/commons/modules/contrib/radioactivity/js/radioactivity-history.js
+++ b/profiles/commons/modules/contrib/radioactivity/js/radioactivity-history.js
@@ -6,18 +6,16 @@ Drupal.behaviors.radioactivity_history = {
     if ($.fn.sparkline) {
       $('.radioactivity-history').each(function (match) {
         var dataset = $.parseJSON($(this).text());
-        if (dataset) {
-          $(this).sparkline(dataset.values, {
-            type:'bar',
-            height:'100%',
-            width:'100%',
-            chartRangeMin: dataset.cutoff,
-            tooltipFormat: dataset.tooltipFormat,
-            tooltipValueLookups: {
-              tooltips: dataset.tooltips
-            } 
-          });
-        }
+        $(this).sparkline(dataset.values, {
+          type:'bar',
+          height:'100%',
+          width:'100%',
+          chartRangeMin: dataset.cutoff,
+          tooltipFormat: dataset.tooltipFormat,
+          tooltipValueLookups: {
+            tooltips: dataset.tooltips
+          } 
+        });
       });
     }
   }
diff --git a/profiles/commons/modules/contrib/radioactivity/js/radioactivity.js b/profiles/commons/modules/contrib/radioactivity/js/radioactivity.js
index 0e5ea69..8032372 100644
--- a/profiles/commons/modules/contrib/radioactivity/js/radioactivity.js
+++ b/profiles/commons/modules/contrib/radioactivity/js/radioactivity.js
@@ -2,22 +2,17 @@
 Drupal.behaviors.radioactivity = {
 
   config: '',
-  attached: false,
-  activeIncidents: [],
+  activeIncidents: Array(),
 
   attach: function (context, settings) {
 
-    // Skip if radioactivity is not set
-    if (typeof settings.radioactivity == 'undefined') {
-      return;
-    }
-
+    // Do an ajax callback to the given callback address {
+    var data = settings.radioactivity.emitters;
     var config = settings.radioactivity.config;
-    var emitters = settings.radioactivity.emitters;
-    
+
     this.config = config;
 
-    $.each(emitters, function(callback, incidents) {
+    $.each(data, function(callback, incidents) {
 
       // Accuracy and  flood filtering
       $.each(incidents, function(index, incident) {
@@ -53,8 +48,6 @@ Drupal.behaviors.radioactivity = {
       // Call the emitter callback
       if (Drupal.behaviors.radioactivity.activeIncidents.length > 0) {
         Drupal.behaviors.radioactivity[callback](Drupal.behaviors.radioactivity.activeIncidents);
-        // Clear incidents
-        Drupal.behaviors.radioactivity.activeIncidents = [];
       }
     });
   },
diff --git a/profiles/commons/modules/contrib/radioactivity/radioactivity-bootstrap.inc b/profiles/commons/modules/contrib/radioactivity/radioactivity-bootstrap.inc
index d781d6c..1147be5 100644
--- a/profiles/commons/modules/contrib/radioactivity/radioactivity-bootstrap.inc
+++ b/profiles/commons/modules/contrib/radioactivity/radioactivity-bootstrap.inc
@@ -85,18 +85,10 @@ function _radioactivity_require_bootstrapping() {
 }
 
 /**
- * Internal function to filter nested arrays().
- * @param type $array
- */
-function _radioactivity_filter_nested_array($array) {
-  return !is_array($array) ? TRUE : FALSE;
-}
-
-/**
  * Generate a checksum for given data
  */
 function _radioactivity_checksum_generate($data) {
-  $temp = array_filter($data, "_radioactivity_filter_nested_array");
+  $temp = $data;
   unset($temp['checksum']);
   ksort($temp);
   $temp = join(',', $temp);
diff --git a/profiles/commons/modules/contrib/radioactivity/radioactivity.field.inc b/profiles/commons/modules/contrib/radioactivity/radioactivity.field.inc
index a7a18bd..f0a8201 100644
--- a/profiles/commons/modules/contrib/radioactivity/radioactivity.field.inc
+++ b/profiles/commons/modules/contrib/radioactivity/radioactivity.field.inc
@@ -327,14 +327,18 @@ function radioactivity_field_formatter_settings_summary($field, $instance, $view
 }
 
 /**
- * Update emitters on page
- * @param $ajax boolean
- * @return false|array
+ * Implements hook_page_alter()
  */
-function radioactivity_update_emitters($ajax = FALSE) {
+function radioactivity_page_alter($page) {
+  radioactivity_update_emitters();
+}
 
-  $data = FALSE;
+/**
+ * Update emitters on page
+ */
+function radioactivity_update_emitters() {
 
+  // foreach emitters emitter->emit();
   $register = _radioactivity_register_emitter();
   module_load_include("inc", "radioactivity", "radioactivity-bootstrap");
   $path = base_path() . drupal_get_path('module', 'radioactivity') . '/emit.php';
@@ -346,24 +350,12 @@ function radioactivity_update_emitters($ajax = FALSE) {
   );
 
   if (count($register) > 0) {
-    if ($ajax) {
-      $data = array(
-        'emitters' => $register,
-        'config' => $config,
-      );
-    } else {
-      drupal_add_library('system', 'jquery.cookie');
-      drupal_add_js(drupal_get_path('module', 'radioactivity') . '/js/radioactivity.js');
-      drupal_add_js(array('radioactivity' => array('emitters' => $register)), 'setting');
-      drupal_add_js(array('radioactivity' => array('config' => $config)), 'setting');
-    }
+    drupal_add_library('system', 'jquery.cookie');
+    drupal_add_js(drupal_get_path('module', 'radioactivity') . '/js/radioactivity.js');
+    drupal_add_js(array('radioactivity' => array('emitters' => $register)), 'setting');
+    drupal_add_js(array('radioactivity' => array('config' => $config)), 'setting');
   }
-
   _radioactivity_register_emitter('RESET');
-
-  if ($data) {
-    return $data;
-  }
 }
 
 /**
diff --git a/profiles/commons/modules/contrib/radioactivity/radioactivity.info b/profiles/commons/modules/contrib/radioactivity/radioactivity.info
index 7c96352..9f6e00f 100644
--- a/profiles/commons/modules/contrib/radioactivity/radioactivity.info
+++ b/profiles/commons/modules/contrib/radioactivity/radioactivity.info
@@ -13,10 +13,9 @@ files[] = includes/RadioactivityMemcachedIncidentStorage.inc
 files[] = includes/RadioactivityRedisIncidentStorage.inc
 files[] = includes/RadioactivityIncident.inc
 
-
-; Information added by drush on 2014-04-23
-version = "7.x-2.9+5-dev"
+; Information added by Drupal.org packaging script on 2014-03-11
+version = "7.x-2.9"
 core = "7.x"
 project = "radioactivity"
-datestamp = "1398289201"
+datestamp = "1394545443"
 
diff --git a/profiles/commons/modules/contrib/radioactivity/radioactivity.module b/profiles/commons/modules/contrib/radioactivity/radioactivity.module
index 032a942..4a66c8e 100644
--- a/profiles/commons/modules/contrib/radioactivity/radioactivity.module
+++ b/profiles/commons/modules/contrib/radioactivity/radioactivity.module
@@ -256,46 +256,29 @@ function _radioactivity_update_energy(
   $force = FALSE
 ) {
 
-  if ($entity_type == 'node') {
-    $vid = db_query('SELECT vid FROM {node} n WHERE n.nid=:nid', array(':nid' => $entity_id))->fetchField();
-  }
-
-  $tables = array(
-    "field_data_" . $field_name,
-  );
-
-  if ($vid) {
-    $tables[] = "field_revision_" . $field_name;
-  }
-  else {
-    $vid = $entity_id;
-  }
-
-  $revision_table_name = "field_revision_" . $field_name;
+  $table_name = "field_data_" . $field_name;
 
   $energy_column_name = $field_name . '_' . RADIOACTIVITY_FIELD_ENERGY;
   $timestamp_column_name = $field_name . '_' . RADIOACTIVITY_FIELD_TIMESTAMP;
 
-  foreach ($tables as $table_name) {
-    $q = db_merge($table_name)->key(array(
-        'entity_type' => $entity_type,
-        'bundle' => $bundle,
-        'entity_id' => $entity_id,
-        'language' => $language,
-        'delta' => 0,
-      ))->fields(array(
-        'revision_id' => $vid,
-        $timestamp_column_name => $time,
-        $energy_column_name => $energy_delta,
-      ));
-
-    if (!$force) {
-      // update instead of set the energy
-      $q->expression($energy_column_name, $energy_column_name . ' + :inc', array(':inc' => $energy_delta));
-    }
-
-    $q->execute();
+  $q = db_merge($table_name)->key(array(
+      'entity_type' => $entity_type,
+      'bundle' => $bundle,
+      'entity_id' => $entity_id,
+      'language' => $language,
+      'delta' => 0,
+    ))->fields(array(
+      'revision_id' => $entity_id,
+      $timestamp_column_name => $time,
+      $energy_column_name => $energy_delta,
+    ));
+
+  if (!$force) {
+    // update instead of set the energy
+    $q->expression($energy_column_name, $energy_column_name . ' + :inc', array(':inc' => $energy_delta));
   }
+
+  $q->execute();
 }
 
 /**
@@ -672,27 +655,3 @@ function radioactivity_form_ctools_export_ui_list_form_alter(&$form, &$form_stat
     }
   }
 }
-
-/**
- * Implements hook_page_alter()
- * This is one of the two ways the emitters end up on the page, the other is hook_ajax_render_alter().
- */
-function radioactivity_page_alter($page) {
-  radioactivity_update_emitters();
-}
-
-/** 
- * Implements hook_ajax_render_alter().
- * This is one of the two ways the emitters end up on the page, the other is hook_page_alter().
- */
-function radioactivity_ajax_render_alter(&$commands) {
-  radioactivity_update_emitters();  
-
-  // Add the JS we have generated (this is a blatant copy from the ajax_render() func. :)
-  $scripts = drupal_add_js();
-  if (!empty($scripts['settings'])) {
-    $settings = $scripts['settings'];
-    array_unshift($commands, ajax_command_settings(call_user_func_array('array_merge_recursive', $settings['data']), TRUE));
-  }
-
-}
diff --git a/profiles/commons/modules/contrib/rules/LICENSE.txt b/profiles/commons/modules/contrib/rules/LICENSE.txt
old mode 100644
new mode 100755
diff --git a/profiles/commons/modules/contrib/rules/includes/rules.core.inc b/profiles/commons/modules/contrib/rules/includes/rules.core.inc
index 24d85c6..5dbc332 100644
--- a/profiles/commons/modules/contrib/rules/includes/rules.core.inc
+++ b/profiles/commons/modules/contrib/rules/includes/rules.core.inc
@@ -1622,7 +1622,7 @@ abstract class RulesAbstractPlugin extends RulesPlugin {
   public function dependencies() {
     $modules = array_flip(parent::dependencies());
     $modules += array_flip((array) $this->__call('dependencies'));
-    return array_keys($modules + (isset($this->info['module']) ? array($this->info['module'] => 1) : array()));
+    return array_keys($modules + (!empty($this->info['module']) ? array($this->info['module'] => 1) : array()));
   }
 
   public function executeByArgs($args = array()) {
diff --git a/profiles/commons/modules/contrib/rules/modules/data.eval.inc b/profiles/commons/modules/contrib/rules/modules/data.eval.inc
index 6b9a95a..9fbbb7a 100644
--- a/profiles/commons/modules/contrib/rules/modules/data.eval.inc
+++ b/profiles/commons/modules/contrib/rules/modules/data.eval.inc
@@ -294,6 +294,7 @@ function rules_action_data_create_info_alter(&$element_info, RulesAbstractPlugin
         $element_info['parameter']['param_' . $property] = array_intersect_key($property_info, array_flip(array('type', 'label', 'allow null')));
         if (empty($property_info['required'])) {
           $element_info['parameter']['param_' . $property]['optional'] = TRUE;
+          $element_info['parameter']['param_' . $property]['allow null'] = TRUE;
         }
       }
     }
@@ -367,6 +368,20 @@ function rules_condition_data_list_contains($list, $item, $settings, $state) {
 }
 
 /**
+* Condition: List count comparison.
+*/
+function rules_condition_data_list_count_is($list, $op = '==', $value) {
+  switch ($op) {
+    case '==':
+      return count($list) == $value;
+    case '<';
+      return count($list) < $value;
+    case '>';
+      return count($list) > $value;
+  }
+}
+
+/**
  * Condition: Data value is empty.
  */
 function rules_condition_data_is_empty($data) {
diff --git a/profiles/commons/modules/contrib/rules/modules/data.rules.inc b/profiles/commons/modules/contrib/rules/modules/data.rules.inc
index 412586f..96caae2 100644
--- a/profiles/commons/modules/contrib/rules/modules/data.rules.inc
+++ b/profiles/commons/modules/contrib/rules/modules/data.rules.inc
@@ -555,6 +555,32 @@ function rules_data_condition_info() {
         'form_alter' => 'rules_data_list_form_alter',
       ),
     ),
+    'list_count_is' => array(
+      'label' => t('List count comparison'),
+      'parameter' => array(
+        'list' => array(
+          'type' => 'list',
+          'label' => t('List to check'),
+          'description' => t('A multi value data element to have its count compared, specified by using a data selector, eg node:author:roles.'),
+        ),
+        'op' => array(
+          'type' => 'text',
+          'label' => t('Operator'),
+          'description' => t('The comparison operator.'),
+          'optional' => TRUE,
+          'default value' => '==',
+          'options list' => 'rules_condition_data_list_count_is_operator_options',
+          'restriction' => 'input',
+        ),
+        'value' => array(
+          'type' => 'integer',
+          'label' => t('Count'),
+          'description' => t('The count to compare the data count with.'),
+        ),
+      ),
+      'group' => t('Data'),
+      'base' => 'rules_condition_data_list_count_is',
+    ),
     'text_matches'  => array(
       'label' => t('Text comparison'),
       'parameter' => array(
@@ -720,5 +746,16 @@ function rules_data_selector_options_list(RulesAbstractPlugin $element) {
 }
 
 /**
+ * Options list callback for condition list_count_is.
+ */
+function rules_condition_data_list_count_is_operator_options() {
+  return array(
+    '==' => t('equals'),
+    '<' => t('is lower than'),
+    '>' => t('is greater than'),
+  );
+}
+
+/**
  * @}
  */
diff --git a/profiles/commons/modules/contrib/rules/modules/rules_core.rules.inc b/profiles/commons/modules/contrib/rules/modules/rules_core.rules.inc
index 39fff93..d4215fa 100644
--- a/profiles/commons/modules/contrib/rules/modules/rules_core.rules.inc
+++ b/profiles/commons/modules/contrib/rules/modules/rules_core.rules.inc
@@ -120,6 +120,12 @@ function rules_rules_core_data_info() {
       'group' => t('Entity'),
       'is wrapped' => TRUE,
     ),
+    'ip_address' => array(
+      'label' => t('IP Address'),
+      'parent' => 'text',
+      'ui class' => 'RulesDataUIIPAddress',
+      'token type' => 'rules_text',
+    ),
   );
   foreach (entity_get_info() as $type => $info) {
     if (!empty($info['label'])) {
diff --git a/profiles/commons/modules/contrib/rules/modules/system.eval.inc b/profiles/commons/modules/contrib/rules/modules/system.eval.inc
index a27225f..0de887c 100644
--- a/profiles/commons/modules/contrib/rules/modules/system.eval.inc
+++ b/profiles/commons/modules/contrib/rules/modules/system.eval.inc
@@ -151,6 +151,17 @@ function rules_mail($key, &$message, $params) {
 }
 
 /**
+ * Action: Block an IP address.
+ */
+function rules_action_block_ip($ip_address = NULL) {
+  if (empty($ip_address)) {
+    $ip_address = ip_address();
+  }
+  db_insert('blocked_ips')->fields(array('ip' => $ip_address))->execute();
+  watchdog('rules', 'Banned IP address %ip', array('%ip' => $ip_address));
+}
+
+/**
  * A class implementing a rules input evaluator processing tokens.
  */
 class RulesTokenEvaluator extends RulesDataInputEvaluator {
diff --git a/profiles/commons/modules/contrib/rules/modules/system.rules.inc b/profiles/commons/modules/contrib/rules/modules/system.rules.inc
index fcd4f80..2df01a3 100644
--- a/profiles/commons/modules/contrib/rules/modules/system.rules.inc
+++ b/profiles/commons/modules/contrib/rules/modules/system.rules.inc
@@ -242,6 +242,21 @@ function rules_system_action_info() {
       'base' => 'rules_action_mail_to_users_of_role',
       'access callback' => 'rules_system_integration_access',
     ),
+    'block_ip' => array(
+      'label' => t('Block IP address'),
+      'group' => t('System'),
+      'parameter' => array(
+        'ip_address' => array(
+          'type' => 'ip_address',
+          'label' => t('IP address'),
+          'description' => t('If not provided, the IP address of the current user will be used.'),
+          'optional' => TRUE,
+          'default value' => NULL,
+        ),
+      ),
+      'base' => 'rules_action_block_ip',
+      'access callback' => 'rules_system_integration_access',
+    ),
   );
 }
 
diff --git a/profiles/commons/modules/contrib/rules/modules/user.eval.inc b/profiles/commons/modules/contrib/rules/modules/user.eval.inc
index d7bb823..a990bfb 100644
--- a/profiles/commons/modules/contrib/rules/modules/user.eval.inc
+++ b/profiles/commons/modules/contrib/rules/modules/user.eval.inc
@@ -103,6 +103,7 @@ function rules_action_user_unblock($account) {
 function rules_action_user_send_account_email($account, $email_type) {
   // If we received an authenticated user account...
   if (!empty($account->uid)) {
+    module_load_include('inc', 'rules', 'modules/user.rules');
     $types = rules_user_account_email_options_list();
 
     // Attempt to send the account e-mail.
diff --git a/profiles/commons/modules/contrib/rules/rules.info b/profiles/commons/modules/contrib/rules/rules.info
index adb9856..84d21d4 100644
--- a/profiles/commons/modules/contrib/rules/rules.info
+++ b/profiles/commons/modules/contrib/rules/rules.info
@@ -22,9 +22,9 @@ files[] = ui/ui.plugins.inc
 dependencies[] = entity_token
 dependencies[] = entity
 
-; Information added by drupal.org packaging script on 2013-10-29
-version = "7.x-2.6"
+; Information added by Drupal.org packaging script on 2014-05-02
+version = "7.x-2.7"
 core = "7.x"
 project = "rules"
-datestamp = "1383063052"
+datestamp = "1399041230"
 
diff --git a/profiles/commons/modules/contrib/rules/rules.module b/profiles/commons/modules/contrib/rules/rules.module
index d2ff900..84900f2 100644
--- a/profiles/commons/modules/contrib/rules/rules.module
+++ b/profiles/commons/modules/contrib/rules/rules.module
@@ -4,11 +4,14 @@
  * @file Rules engine module
  */
 
+// Include our hook implementations early, as they can be called even before
+// hook_init().
+require_once dirname(__FILE__) . '/modules/events.inc';
+
 /**
  * Implements hook_init().
  */
 function rules_init() {
-  module_load_include('inc', 'rules', 'modules/events');
   rules_invoke_event('init');
 }
 
diff --git a/profiles/commons/modules/contrib/rules/rules.rules.inc b/profiles/commons/modules/contrib/rules/rules.rules.inc
index fcd3c94..3beb76e 100644
--- a/profiles/commons/modules/contrib/rules/rules.rules.inc
+++ b/profiles/commons/modules/contrib/rules/rules.rules.inc
@@ -10,7 +10,6 @@
  */
 foreach (rules_core_modules() as $module) {
   module_load_include('inc', 'rules', "modules/$module.rules");
-  module_load_include('inc', 'rules', 'modules/events');
 }
 
 /**
diff --git a/profiles/commons/modules/contrib/rules/rules_admin/rules_admin.info b/profiles/commons/modules/contrib/rules/rules_admin/rules_admin.info
index d8d731b..c2382e0 100644
--- a/profiles/commons/modules/contrib/rules/rules_admin/rules_admin.info
+++ b/profiles/commons/modules/contrib/rules/rules_admin/rules_admin.info
@@ -6,9 +6,9 @@ files[] = rules_admin.module
 files[] = rules_admin.inc
 dependencies[] = rules
 
-; Information added by drupal.org packaging script on 2013-10-29
-version = "7.x-2.6"
+; Information added by Drupal.org packaging script on 2014-05-02
+version = "7.x-2.7"
 core = "7.x"
 project = "rules"
-datestamp = "1383063052"
+datestamp = "1399041230"
 
diff --git a/profiles/commons/modules/contrib/rules/rules_i18n/rules_i18n.info b/profiles/commons/modules/contrib/rules/rules_i18n/rules_i18n.info
index 6e006fc..4a31131 100644
--- a/profiles/commons/modules/contrib/rules/rules_i18n/rules_i18n.info
+++ b/profiles/commons/modules/contrib/rules/rules_i18n/rules_i18n.info
@@ -7,9 +7,9 @@ core = 7.x
 files[] = rules_i18n.i18n.inc
 files[] = rules_i18n.rules.inc
 files[] = rules_i18n.test
-; Information added by drupal.org packaging script on 2013-10-29
-version = "7.x-2.6"
+; Information added by Drupal.org packaging script on 2014-05-02
+version = "7.x-2.7"
 core = "7.x"
 project = "rules"
-datestamp = "1383063052"
+datestamp = "1399041230"
 
diff --git a/profiles/commons/modules/contrib/rules/rules_scheduler/includes/rules_scheduler.views_default.inc b/profiles/commons/modules/contrib/rules/rules_scheduler/includes/rules_scheduler.views_default.inc
index cdb06fb..de345f2 100644
--- a/profiles/commons/modules/contrib/rules/rules_scheduler/includes/rules_scheduler.views_default.inc
+++ b/profiles/commons/modules/contrib/rules/rules_scheduler/includes/rules_scheduler.views_default.inc
@@ -86,7 +86,7 @@ function rules_scheduler_views_default_views() {
   $handler->display->display_options['fields']['config']['field'] = 'config';
   $handler->display->display_options['fields']['config']['alter']['alter_text'] = 0;
   $handler->display->display_options['fields']['config']['alter']['make_link'] = 1;
-  $handler->display->display_options['fields']['config']['alter']['path'] = 'admin/config/workflow/rules/config/[config]';
+  $handler->display->display_options['fields']['config']['alter']['path'] = 'admin/config/workflow/rules/components/manage/[config]';
   $handler->display->display_options['fields']['config']['alter']['absolute'] = 0;
   $handler->display->display_options['fields']['config']['alter']['trim'] = 0;
   $handler->display->display_options['fields']['config']['alter']['word_boundary'] = 1;
@@ -163,7 +163,7 @@ function rules_scheduler_views_default_views() {
     t('No tasks have been scheduled.'),
     t('Tid'),
     t('Component name'),
-    t('admin/config/workflow/rules/config/[config]'),
+    t('admin/config/workflow/rules/components/manage/[config]'),
     t('Scheduled date'),
     t('User provided identifier'),
     t('Operations'),
diff --git a/profiles/commons/modules/contrib/rules/rules_scheduler/rules_scheduler.info b/profiles/commons/modules/contrib/rules/rules_scheduler/rules_scheduler.info
index 65463e7..5b66f53 100644
--- a/profiles/commons/modules/contrib/rules/rules_scheduler/rules_scheduler.info
+++ b/profiles/commons/modules/contrib/rules/rules_scheduler/rules_scheduler.info
@@ -13,9 +13,9 @@ files[] = includes/rules_scheduler.views_default.inc
 files[] = includes/rules_scheduler.views.inc
 files[] = includes/rules_scheduler_views_filter.inc
 
-; Information added by drupal.org packaging script on 2013-10-29
-version = "7.x-2.6"
+; Information added by Drupal.org packaging script on 2014-05-02
+version = "7.x-2.7"
 core = "7.x"
 project = "rules"
-datestamp = "1383063052"
+datestamp = "1399041230"
 
diff --git a/profiles/commons/modules/contrib/rules/rules_scheduler/rules_scheduler.install b/profiles/commons/modules/contrib/rules/rules_scheduler/rules_scheduler.install
index 982dcf7..202c861 100644
--- a/profiles/commons/modules/contrib/rules/rules_scheduler/rules_scheduler.install
+++ b/profiles/commons/modules/contrib/rules/rules_scheduler/rules_scheduler.install
@@ -144,12 +144,14 @@ function rules_scheduler_update_7203() {
  * Rename rules_scheduler.state into rules_scheduler.data.
  */
 function rules_scheduler_update_7204() {
-  db_change_field('rules_scheduler', 'state', 'data', array(
-    'type' => 'text',
-    'not null' => FALSE,
-    'serialize' => TRUE,
-    'description' => 'The whole, serialized evaluation data.',
-  ));
+  if (db_field_exists('rules_scheduler', 'state')) {
+    db_change_field('rules_scheduler', 'state', 'data', array(
+      'type' => 'text',
+      'not null' => FALSE,
+      'serialize' => TRUE,
+      'description' => 'The whole, serialized evaluation data.',
+    ));
+  }
 }
 
 /**
diff --git a/profiles/commons/modules/contrib/rules/rules_scheduler/rules_scheduler.module b/profiles/commons/modules/contrib/rules/rules_scheduler/rules_scheduler.module
index d335032..b74973d 100644
--- a/profiles/commons/modules/contrib/rules/rules_scheduler/rules_scheduler.module
+++ b/profiles/commons/modules/contrib/rules/rules_scheduler/rules_scheduler.module
@@ -40,6 +40,11 @@ function rules_scheduler_cron_queue_info() {
  */
 function rules_scheduler_run_task(array $task) {
   try {
+    // BC support for tasks that have been already queued, before update
+    // rules_scheduler_update_7204() ran.
+    if (isset($task['state'])) {
+      $task['data'] = $task['state'];
+    }
     rules_scheduler_task_handler($task)->runTask();
   }
   catch (RulesEvaluationException $e) {
@@ -189,10 +194,13 @@ function rules_scheduler_queue_tasks() {
  * Implements hook_rules_config_delete().
  */
 function rules_scheduler_rules_config_delete($rules_config) {
-  // Delete all tasks scheduled for this config.
-  db_delete('rules_scheduler')
-    ->condition('config', $rules_config->name)
-    ->execute();
+  // Only react on real delete, not revert.
+  if (!$rules_config->hasStatus(ENTITY_IN_CODE)) {
+    // Delete all tasks scheduled for this config.
+    db_delete('rules_scheduler')
+      ->condition('config', $rules_config->name)
+      ->execute();
+  }
 }
 
 /**
diff --git a/profiles/commons/modules/contrib/rules/rules_scheduler/tests/rules_scheduler_test.info b/profiles/commons/modules/contrib/rules/rules_scheduler/tests/rules_scheduler_test.info
index a9fc9d3..df1405b 100644
--- a/profiles/commons/modules/contrib/rules/rules_scheduler/tests/rules_scheduler_test.info
+++ b/profiles/commons/modules/contrib/rules/rules_scheduler/tests/rules_scheduler_test.info
@@ -5,9 +5,9 @@ core = 7.x
 files[] = rules_scheduler_test.inc
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-10-29
-version = "7.x-2.6"
+; Information added by Drupal.org packaging script on 2014-05-02
+version = "7.x-2.7"
 core = "7.x"
 project = "rules"
-datestamp = "1383063052"
+datestamp = "1399041230"
 
diff --git a/profiles/commons/modules/contrib/rules/tests/rules_test.info b/profiles/commons/modules/contrib/rules/tests/rules_test.info
index 42373b4..c87a8f9 100644
--- a/profiles/commons/modules/contrib/rules/tests/rules_test.info
+++ b/profiles/commons/modules/contrib/rules/tests/rules_test.info
@@ -6,9 +6,9 @@ files[] = rules_test.rules.inc
 files[] = rules_test.rules_defaults.inc
 hidden = TRUE
 
-; Information added by drupal.org packaging script on 2013-10-29
-version = "7.x-2.6"
+; Information added by Drupal.org packaging script on 2014-05-02
+version = "7.x-2.7"
 core = "7.x"
 project = "rules"
-datestamp = "1383063052"
+datestamp = "1399041230"
 
diff --git a/profiles/commons/modules/contrib/rules/ui/ui.data.inc b/profiles/commons/modules/contrib/rules/ui/ui.data.inc
index 8ee91f0..f99486b 100644
--- a/profiles/commons/modules/contrib/rules/ui/ui.data.inc
+++ b/profiles/commons/modules/contrib/rules/ui/ui.data.inc
@@ -301,6 +301,23 @@ class RulesDataUIInteger extends RulesDataUIText {
 }
 
 /**
+ * UI for IP addresses.
+ */
+class RulesDataUIIPAddress extends RulesDataUIText {
+
+  public static function inputForm($name, $info, $settings, RulesPlugin $element) {
+    $form = parent::inputForm($name, $info, $settings, $element);
+    if (empty($info['options list'])) {
+      $form[$name]['#type'] = 'textfield';
+      $form[$name]['#description'] = t('If not provided, the IP address of the current user will be used.');
+    }
+    $form[$name]['#element_validate'][] = 'rules_ui_element_ip_address_validate';
+    $form[$name]['#rows'] = 1;
+    return $form;
+  }
+}
+
+/**
  * UI for boolean data.
  */
 class RulesDataUIBoolean extends RulesDataUI implements RulesDataDirectInputFormInterface {
diff --git a/profiles/commons/modules/contrib/rules/ui/ui.forms.inc b/profiles/commons/modules/contrib/rules/ui/ui.forms.inc
index b81fb39..b01e0f5 100644
--- a/profiles/commons/modules/contrib/rules/ui/ui.forms.inc
+++ b/profiles/commons/modules/contrib/rules/ui/ui.forms.inc
@@ -685,6 +685,16 @@ function rules_ui_element_decimal_validate($element, &$form_state) {
 }
 
 /**
+ * FAPI callback to validate an IP address.
+ */
+function rules_ui_element_ip_address_validate($element, &$form_state) {
+  $value = $element['#value'];
+  if ($value != '' && !filter_var($value, FILTER_VALIDATE_IP)) {
+    form_error($element, t('%name is not a valid IP address.', array('%name' => $element['#title'])));
+  }
+}
+
+/**
  * FAPI validation of a date element. Makes sure the specified date format is
  * correct and converts date values specifiy a fixed (= non relative) date to
  * a timestamp. Relative dates are handled by the date input evaluator.
diff --git a/profiles/commons/modules/contrib/strongarm/strongarm.info b/profiles/commons/modules/contrib/strongarm/strongarm.info
index 7e4c861..43c87ea 100644
--- a/profiles/commons/modules/contrib/strongarm/strongarm.info
+++ b/profiles/commons/modules/contrib/strongarm/strongarm.info
@@ -8,9 +8,9 @@ files[] = strongarm.install
 files[] = strongarm.module
 
 
-; Information added by drush on 2014-04-23
+; Information added by drush on 2014-05-08
 version = "7.x-2.0+2-dev"
 core = "7.x"
 project = "strongarm"
-datestamp = "1398289199"
+datestamp = "1399579138"
 
diff --git a/profiles/commons/scripts/build_distro.sh b/profiles/commons/scripts/build_distro.sh
index 193a604..c4b87da 100755
--- a/profiles/commons/scripts/build_distro.sh
+++ b/profiles/commons/scripts/build_distro.sh
@@ -130,13 +130,13 @@ build_distro() {
 
         ## put commons profile and modules into the profile folder
         rm -rf docroot/profiles/commons
-        if [ -a $BUILD_PATH/repos.txt ]; then
+        if [ -e $BUILD_PATH/repos.txt ]; then
           UNTAR="tar -zxvf /tmp/commons.tar.gz -X $BUILD_PATH/repos.txt"
         else
           cd $BUILD_PATH/repos
-          find * -mindepth 1 -maxdepth 2 -type d -not -path ".*" -not -path "modules/.*" -not -path "themes/.*" -not -path "modules/contrib" -not -path "themes/contrib" > /tmp/repos.txt
+          find * -mindepth 1 -maxdepth 2 -type d -not -path ".*" -not -path "modules/.*" -not -path "themes/.*" -not -path "modules/contrib" -not -path "themes/contrib" > $BUILD_PATH/repos.txt
           # exclude repos since we're updating already by linking it to the repos directory.
-          UNTAR="tar -zxvf /tmp/commons.tar.gz -X /tmp/repos.txt"
+          UNTAR="tar -zxvf /tmp/commons.tar.gz -X $BUILD_PATH/repos.txt"
         fi
         cd $BUILD_PATH/docroot/profiles
         eval $UNTAR
diff --git a/profiles/commons/tests/behat/behat.template.yml b/profiles/commons/tests/behat/behat.template.yml
index 4c8afb7..1b05731 100644
--- a/profiles/commons/tests/behat/behat.template.yml
+++ b/profiles/commons/tests/behat/behat.template.yml
@@ -8,6 +8,26 @@ default:
       base_url: http://${drupal.uri}
       files_path: ../../
     Drupal\DrupalExtension\Extension:
+      text:
+        username_field: 'E-mail'
+        password_field: 'Password'
       blackbox: ~
       drush:
         root: ${drush.root}
+      region_map:
+        # CTools / Panels
+        CTools modal: "#modalContent"
+        # Commons Origins.
+        Header: ".region-header"
+        Menu bar: "#menu-bar"
+        Featured: ".region-featured"
+        Help: ".region-help"
+        Highlighted: ".region-highlighted"
+        Content: "#content"
+        Tabs: ".tabs.primary"
+        Aside: ".region-content-aside"
+        Sidebar first: ".region-sidebar-first"
+        Sidebar second: ".region-sidebar-second"
+        Secondary: ".region-content-aside"
+        Tertiary: ".region-content-tertiary"
+        Footer: ".region-footer"
diff --git a/profiles/commons/tests/behat/behat.travis.yml b/profiles/commons/tests/behat/behat.travis.yml
index 9f1c9da..d45f461 100644
--- a/profiles/commons/tests/behat/behat.travis.yml
+++ b/profiles/commons/tests/behat/behat.travis.yml
@@ -10,6 +10,9 @@ default:
       base_url: http://127.0.0.1:8888
       files_path: ../../
     Drupal\DrupalExtension\Extension:
+      text:
+        username_field: 'E-mail'
+        password_field: 'Password'
       blackbox: ~
       drush:
         alias: self
@@ -17,6 +20,23 @@ default:
       # export BEHAT_PARAMS="extensions[Drupal\\DrupalExtension\\Extension][drupal][drupal_root]=$DRUPAL_ROOT"
       #drupal:
       #  drupal_root: "/path/to/drupal/root"
+      region_map:
+        # CTools / Panels
+        CTools modal: "#modalContent"
+        # Commons Origins.
+        Header: ".region-header"
+        Menu bar: "#menu-bar"
+        Featured: ".region-featured"
+        Help: ".region-help"
+        Highlighted: ".region-highlighted"
+        Content: "#content"
+        Tabs: ".tabs.primary"
+        Aside: ".region-content-aside"
+        Sidebar first: ".region-sidebar-first"
+        Sidebar second: ".region-sidebar-second"
+        Secondary: ".region-content-aside"
+        Tertiary: ".region-content-tertiary"
+        Footer: ".region-footer"
 
 # Setup for Google Chrome only tests.
 chrome:
diff --git a/profiles/commons/tests/behat/features/blocks.feature b/profiles/commons/tests/behat/features/blocks.feature
new file mode 100644
index 0000000..f686ea6
--- /dev/null
+++ b/profiles/commons/tests/behat/features/blocks.feature
@@ -0,0 +1,32 @@
+Feature: Block functionality
+  Scenario: Search form
+    Given I am on "/"
+    Then I should see "Site" in the "Header" region
+      And I should see "Users" in the "Header" region
+  Scenario: Commons utility links
+    Given I am on "/"
+    Then I should see "Sign up" in the "Header" region
+      And I should see "Log in" in the "Header" region
+  Scenario: Main menu
+    Given I am on "/"
+    Then I should see "Home" in the "Menu bar" region
+      And I should see "Groups" in the "Menu bar" region
+      And I should see "Events" in the "Menu bar" region
+  Scenario: Main page content
+    Given I am on "/"
+    Then I should see "Welcome to our community" in the "Content" region
+  Scenario: Default footer
+    Given I am on "/"
+    Then I should see "A Commons Community, powered by Acquia" in the "Footer" region
+
+  @api
+  Scenario: Commons utility links
+    Given I am on "/"
+      And I am logged in as a user with the "authenticated user" role
+    Then I should see "Log out" in the "Header" region
+      And I should see "Settings" in the "Header" region
+  @api
+  Scenario: Main page content
+    Given I am on "/"
+      And I am logged in as a user with the "authenticated user" role
+    Then I should not see "What's going on?" in the "Content" region
diff --git a/profiles/commons/tests/behat/features/general.feature b/profiles/commons/tests/behat/features/general.feature
index 2bfbeb1..4adf5f5 100644
--- a/profiles/commons/tests/behat/features/general.feature
+++ b/profiles/commons/tests/behat/features/general.feature
@@ -15,7 +15,3 @@ Feature: General functionality
   Scenario: Anonymous users can view user profiles
     Given I am on "/user/1"
     Then I should see "admin"
-
-  Scenario: Anonymous users can see the Commons footer
-    Given I am on "/"
-    Then I should see "A Commons Community, powered by Acquia"
diff --git a/profiles/commons/tests/behat/features/login.feature b/profiles/commons/tests/behat/features/login.feature
index e6b9461..45de1b4 100644
--- a/profiles/commons/tests/behat/features/login.feature
+++ b/profiles/commons/tests/behat/features/login.feature
@@ -4,7 +4,7 @@ Feature: Anonymous user login
     When I fill in "admin" for "edit-name"
       And I fill in "admin" for "edit-pass"
       And I press "Log in"
-    Then I should see "Logout"
+    Then I should see "Log out"
 
   Scenario: User can request a new password if it has been lost
     Given I am on "/user/password"
diff --git a/profiles/commons/themes/commons/commons_origins/commons_origins.info b/profiles/commons/themes/commons/commons_origins/commons_origins.info
index 10152ec..060d412 100644
--- a/profiles/commons/themes/commons/commons_origins/commons_origins.info
+++ b/profiles/commons/themes/commons/commons_origins/commons_origins.info
@@ -429,9 +429,9 @@
 
   ;
 
-; Information added by Drupal.org packaging script on 2014-04-23
-version = "7.x-3.10"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.x-3.12"
 core = "7.x"
 project = "commons"
-datestamp = "1398289193"
+datestamp = "1399579131"
 
diff --git a/profiles/commons/themes/commons/commons_origins/template.php b/profiles/commons/themes/commons/commons_origins/template.php
index c6bdbe4..22fd9a8 100755
--- a/profiles/commons/themes/commons/commons_origins/template.php
+++ b/profiles/commons/themes/commons/commons_origins/template.php
@@ -1087,15 +1087,18 @@ function _commons_origins_format_address(&$address) {
 function commons_origins_preprocess_field(&$variables, $hook) {
   // Style the trusted contact link like a button.
   if ($variables['element']['#formatter'] == 'trusted_contact') {
-    foreach ($variables['items'] as &$item) {
-      if (isset($item['#options'])) {
-        $item['#options']['attributes']['class'][] = 'action-item-small';
-      }
-      if (isset($item['#href']) && strpos($item['#href'], 'messages')) {
-        $item['#options']['attributes']['class'][] = 'message-contact';
-      }
-      elseif (isset($item['#href'])) {
-        $item['#options']['attributes']['class'][] = 'trusted-status-request';
+    foreach ($variables['items'] as &$container) {
+      foreach (element_children($container) as $index) {
+        $item = &$container[$index];
+        if (isset($item['#options'])) {
+          $item['#options']['attributes']['class'][] = 'action-item-small';
+        }
+        if (isset($item['#href']) && strpos($item['#href'], 'messages')) {
+          $item['#options']['attributes']['class'][] = 'message-contact';
+        }
+        elseif (isset($item['#href'])) {
+          $item['#options']['attributes']['class'][] = 'trusted-status-request';
+        }
       }
     }
   }
diff --git a/profiles/commons/themes/contrib/adaptivetheme/at_admin/adaptivetheme_admin.info b/profiles/commons/themes/contrib/adaptivetheme/at_admin/adaptivetheme_admin.info
index 241c80c..a397bc5 100755
--- a/profiles/commons/themes/contrib/adaptivetheme/at_admin/adaptivetheme_admin.info
+++ b/profiles/commons/themes/contrib/adaptivetheme/at_admin/adaptivetheme_admin.info
@@ -349,9 +349,9 @@
   settings[custom_css] = ''
 
 
-; Information added by drush on 2014-04-23
+; Information added by drush on 2014-05-08
 version = "7.x-3.2+1-dev"
 core = "7.x"
 project = "adaptivetheme"
-datestamp = "1398289198"
+datestamp = "1399579137"
 
diff --git a/profiles/commons/themes/contrib/adaptivetheme/at_core/adaptivetheme.info b/profiles/commons/themes/contrib/adaptivetheme/at_core/adaptivetheme.info
index fd64095..6e0c880 100755
--- a/profiles/commons/themes/contrib/adaptivetheme/at_core/adaptivetheme.info
+++ b/profiles/commons/themes/contrib/adaptivetheme/at_core/adaptivetheme.info
@@ -374,9 +374,9 @@
   settings[custom_css] = ''
 
 
-; Information added by drush on 2014-04-23
+; Information added by drush on 2014-05-08
 version = "7.x-3.2+1-dev"
 core = "7.x"
 project = "adaptivetheme"
-datestamp = "1398289198"
+datestamp = "1399579137"
 
diff --git a/profiles/commons/themes/contrib/adaptivetheme/at_subtheme/adaptivetheme_subtheme.info b/profiles/commons/themes/contrib/adaptivetheme/at_subtheme/adaptivetheme_subtheme.info
index f757568..6a68352 100755
--- a/profiles/commons/themes/contrib/adaptivetheme/at_subtheme/adaptivetheme_subtheme.info
+++ b/profiles/commons/themes/contrib/adaptivetheme/at_subtheme/adaptivetheme_subtheme.info
@@ -472,9 +472,9 @@
   settings[custom_css] = ''
 
 
-; Information added by drush on 2014-04-23
+; Information added by drush on 2014-05-08
 version = "7.x-3.2+1-dev"
 core = "7.x"
 project = "adaptivetheme"
-datestamp = "1398289198"
+datestamp = "1399579137"
 
diff --git a/profiles/commons/themes/contrib/ember/ember.info b/profiles/commons/themes/contrib/ember/ember.info
index c5bf375..d5aa209 100644
--- a/profiles/commons/themes/contrib/ember/ember.info
+++ b/profiles/commons/themes/contrib/ember/ember.info
@@ -24,9 +24,9 @@ regions[sidebar_first] = First sidebar
 regions_hidden[] = sidebar_first
 
 
-; Information added by drush on 2014-04-23
+; Information added by drush on 2014-05-08
 version = "7.x-2.0-alpha2+4-dev"
 core = "7.x"
 project = "ember"
-datestamp = "1398289198"
+datestamp = "1399579136"
 
diff --git a/profiles/minimal/minimal.info b/profiles/minimal/minimal.info
index 24738b5..26b8661 100644
--- a/profiles/minimal/minimal.info
+++ b/profiles/minimal/minimal.info
@@ -5,8 +5,8 @@ core = 7.x
 dependencies[] = block
 dependencies[] = dblog
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/profiles/standard/standard.info b/profiles/standard/standard.info
index f9add64..54b5b91 100644
--- a/profiles/standard/standard.info
+++ b/profiles/standard/standard.info
@@ -24,8 +24,8 @@ dependencies[] = field_ui
 dependencies[] = file
 dependencies[] = rdf
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/profiles/testing/modules/drupal_system_listing_compatible_test/drupal_system_listing_compatible_test.info b/profiles/testing/modules/drupal_system_listing_compatible_test/drupal_system_listing_compatible_test.info
index 066a08f..4503565 100644
--- a/profiles/testing/modules/drupal_system_listing_compatible_test/drupal_system_listing_compatible_test.info
+++ b/profiles/testing/modules/drupal_system_listing_compatible_test/drupal_system_listing_compatible_test.info
@@ -6,8 +6,8 @@ core = 7.x
 hidden = TRUE
 files[] = drupal_system_listing_compatible_test.test
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/profiles/testing/modules/drupal_system_listing_incompatible_test/drupal_system_listing_incompatible_test.info b/profiles/testing/modules/drupal_system_listing_incompatible_test/drupal_system_listing_incompatible_test.info
index 15ff3c1..6d2954c 100644
--- a/profiles/testing/modules/drupal_system_listing_incompatible_test/drupal_system_listing_incompatible_test.info
+++ b/profiles/testing/modules/drupal_system_listing_incompatible_test/drupal_system_listing_incompatible_test.info
@@ -8,8 +8,8 @@ version = VERSION
 core = 6.x
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/profiles/testing/testing.info b/profiles/testing/testing.info
index 30f5e9b..f5c4d2a 100644
--- a/profiles/testing/testing.info
+++ b/profiles/testing/testing.info
@@ -4,8 +4,8 @@ version = VERSION
 core = 7.x
 hidden = TRUE
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/themes/bartik/bartik.info b/themes/bartik/bartik.info
index de09f37..343664c 100644
--- a/themes/bartik/bartik.info
+++ b/themes/bartik/bartik.info
@@ -34,8 +34,8 @@ regions[footer] = Footer
 settings[shortcut_module_link] = 0
 
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/themes/garland/garland.info b/themes/garland/garland.info
index 5baac55..ee3b820 100644
--- a/themes/garland/garland.info
+++ b/themes/garland/garland.info
@@ -7,8 +7,8 @@ stylesheets[all][] = style.css
 stylesheets[print][] = print.css
 settings[garland_width] = fluid
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/themes/seven/seven.info b/themes/seven/seven.info
index baee6cf..3cb21af 100644
--- a/themes/seven/seven.info
+++ b/themes/seven/seven.info
@@ -13,8 +13,8 @@ regions[page_bottom] = Page bottom
 regions[sidebar_first] = First sidebar
 regions_hidden[] = sidebar_first
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
diff --git a/themes/stark/stark.info b/themes/stark/stark.info
index 97d49d2..d8bdd33 100644
--- a/themes/stark/stark.info
+++ b/themes/stark/stark.info
@@ -5,8 +5,8 @@ version = VERSION
 core = 7.x
 stylesheets[all][] = layout.css
 
-; Information added by Drupal.org packaging script on 2014-04-16
-version = "7.27"
+; Information added by Drupal.org packaging script on 2014-05-08
+version = "7.28"
 project = "drupal"
-datestamp = "1397687057"
+datestamp = "1399522731"
 
