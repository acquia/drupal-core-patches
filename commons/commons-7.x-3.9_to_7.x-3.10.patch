diff --git a/.travis.yml b/.travis.yml
index fb946e7..1fc5174 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -1,70 +1,142 @@
 language: php
 
 php:
-  - 5.5
   - 5.4
-  - 5.3
 
-
-notifications:
-  email:
-    - commons-bulk@acquia.com
-
-branches:
-  only:
-    - 7.x-3.x
-
-# This will create the database
 mysql:
-  database: commons
+  database: drupal
   username: root
   encoding: utf8
 
-# To be able to run a webbrowser
-# If we need anything more powerful
-# than e.g. phantomjs
-before_install:
-  - "pwd"
-  - "sudo apt-get update"
-  - "export DISPLAY=:99.0"
-  - "sh -e /etc/init.d/xvfb start"
-  - "wget http://selenium.googlecode.com/files/selenium-server-standalone-2.35.0.jar -O $TRAVIS_BUILD_DIR/selenium-server-standalone.jar"
-  - "java -jar $TRAVIS_BUILD_DIR/selenium-server-standalone.jar > /dev/null &"
-  - ruby -rsocket -e "up = false; 60.times {|i| sleep 1; exit(0) if up; up = TCPSocket.new('127.0.0.1', 4444).close.nil? rescue false}; exit(1)"
-  # Make sure Selenium is up
-  - curl http://localhost:4444/wd/hub
-  # For uploading error screenshots
-  - "wget http://imgur.com/tools/imgurbash.sh -O $TRAVIS_BUILD_DIR/imgurbash.sh && chmod +x $TRAVIS_BUILD_DIR/imgurbash.sh"
+env:
+  - UPGRADE=none
+  - UPGRADE=7.x-3.9
+  - UPGRADE=7.x-3.8
+  - UPGRADE=7.x-3.7
+  - UPGRADE=7.x-3.6
+  - UPGRADE=7.x-3.5
+
+matrix:
+  allow_failures:
+    - env: UPGRADE=7.x-3.9
+    - env: UPGRADE=7.x-3.8
+    - env: UPGRADE=7.x-3.7
+    - env: UPGRADE=7.x-3.6
+    - env: UPGRADE=7.x-3.5
+
+install:
+  # Add the Google Chrome packages.
+  - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
+  - sudo sh -c 'echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
+  - sudo apt-get update > /dev/null
+
+  # Create a database for our Drupal site.
+  - "mysql -e 'create database drupal;'"
+
+  # Install the latest Drush 6.
+  - export PATH="$HOME/.composer/vendor/bin:$PATH"
+  - composer global require --prefer-source --no-interaction drush/drush:6.*
+
+  # Build Behat dependencies
+  - cd ./tests/behat
+  - composer install --prefer-source --no-interaction
+  - cd ../../../
+
+  # Rename the repository folder to 'commons' (to accommodate different repository names).
+  - REPO_NAME=`basename $TRAVIS_REPO_SLUG`
+  - mv $REPO_NAME commons
+
+  # Build Codebase
+  - mkdir profiles
+  - mv commons profiles/
+  - mkdir drupal
+  - mv profiles drupal/
+
+  # Test the current branch
+  - cd drupal
+  - drush make --yes profiles/commons/drupal-org-core.make --prepare-install
+  - drush make --yes profiles/commons/drupal-org.make --no-core --contrib-destination=profiles/commons
+  - mkdir sites/default/private
+  - mkdir sites/default/private/files
+  - mkdir sites/default/private/temp
+  - cd ../
+
+  # Download an old version to test upgrading from.
+  - if [[ "$UPGRADE" != none ]]; then drush dl commons-$UPGRADE; fi
+
+  # Setup files
+  - sudo chmod -R 777 drupal/sites/all
+
+  # Setup display for Selenium
+  - export DISPLAY=:99.0
+  - sh -e /etc/init.d/xvfb start
+  - sleep 5
+
+  # Get Chrome and ChromeDriver
+  - sudo apt-get install google-chrome-stable
+  - wget http://chromedriver.storage.googleapis.com/2.9/chromedriver_linux64.zip
+  - unzip -a chromedriver_linux64.zip
+
+  # Insane hack from jsdevel:
+  #   https://github.com/jsdevel/travis-debugging/blob/master/shim.bash
+  # This allows chrome-sandbox to work in side of OpenVZ, because I can't
+  # figure out how to start chrome with --no-sandbox.
+  - export CHROME_SANDBOX=/opt/google/chrome/chrome-sandbox
+  - sudo rm -f $CHROME_SANDBOX
+  - sudo wget https://googledrive.com/host/0B5VlNZ_Rvdw6NTJoZDBSVy1ZdkE -O $CHROME_SANDBOX
+  - sudo chown root:root $CHROME_SANDBOX; sudo chmod 4755 $CHROME_SANDBOX
+  - sudo md5sum $CHROME_SANDBOX
+
+  # Get Selenium
+  - wget http://selenium-release.storage.googleapis.com/2.41/selenium-server-standalone-2.41.0.jar
+  - java -jar selenium-server-standalone-2.41.0.jar -Dwebdriver.chrome.driver=`pwd`/chromedriver > /dev/null 2>&1 &
+  - sleep 5
+ 
+  # Disable sendmail
+  - echo sendmail_path=`which true` >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
 
 before_script:
-  # Grab drush
-  - pear channel-discover pear.drush.org
-  - pear install drush/drush
-  - phpenv rehash
-  # LAMP package installation (mysql is already started)
-  - sudo apt-get install -y --force-yes apache2 libapache2-mod-php5 php5-mysql php5-curl
-  # Apache webserver configuration
-  - sudo sed -i -e "s,/var/www,$(pwd)/packaged,g" /etc/apache2/sites-available/default
-  - sudo a2enmod rewrite
-  - sudo a2enmod actions
-  - sudo service apache2 restart
-  # Install the composer packages for behat / ...
-  - composer --working-dir=tests/ install
+
+  # Do the site install (either the current revision or old for the upgrade).
+  - if [[ "$UPGRADE" == none ]]; then cd drupal; else cd commons-$UPGRADE; fi
+  - drush si commons --db-url=mysql://root:@127.0.0.1/drupal --account-name=admin --account-pass=admin --account-mail=admin@test.com --site-mail=noreply@test.com --site-name="Commons" --yes
+  - drush vset -y file_private_path "sites/default/private/files"
+  - drush vset -y file_temporary_path "sites/default/private/temp"
+  - cd ../drupal
+
+  # If we're an upgrade test, run the upgrade process.
+  - if [[ "$UPGRADE" != none ]]; then cp -a ../commons-$UPGRADE/sites/default/* sites/default/ && drush updb --yes; fi
+
+  - drush runserver --server=builtin 8888 > /dev/null 2>&1 &
+  - SERVER_PID=$!
+  - sleep 3
+  - cd profiles/commons/tests/behat
+
+  # Make the Travis tests repos agnostic by injecting drupal_root with BEHAT_PARAMS
+  - BUILD_OWNER=`dirname $TRAVIS_BUILD_DIR`
+  - export BEHAT_PARAMS="extensions[Drupal\\DrupalExtension\\Extension][drupal][drupal_root]=$BUILD_OWNER/drupal"
+
 script:
-  # Build distro from makefile
-  - drush make build-commons.make --no-cache -y packaged
-  # Site installation. We're doing the cd-dance because drush -r throws an exception for me currently.
-  - cd packaged
-  - drush -v site-install --db-url=mysql://root@localhost/commons --site-name=QASite --account-name=admin --account-pass=commons --account-mail=admin@example.com --site-mail=site@example.com -v -y commons commons_anonymous_welcome_text_form.commons_anonymous_welcome_title="Oh hai" commons_anonymous_welcome_text_form.commons_anonymous_welcome_body="No shirts, no shoes, no service." commons_create_first_group.commons_first_group_title="Internet People" commons_create_first_group.commons_first_group_body="This is the first group on the page."
-  - cd ..
-  # Make sure the installed site responds
-  - curl localhost
-  # And let's see how fast it responds on the 2nd request
-  - time curl http://localhost/ -s -o /dev/null
-  # Start running the tests
-  - cd tests
-  - bin/behat
-
-after_failure:
-  - ls -lash $TRAVIS_BUILD_DIR/fail*.png
-  - $TRAVIS_BUILD_DIR/imgurbash.sh $TRAVIS_BUILD_DIR/fail*.png
+
+  # First, run all the tests in Firefox.
+  - ./bin/behat --config behat.travis.yml
+ 
+  # Then run some Chrome-only tests.
+  - ./bin/behat --config behat.travis.yml -p chrome
+
+after_script:
+
+  # Stop the webserver so that it's not still running when MySQL is stopped.
+  - kill $SERVER_PID
+
+notifications:
+  email:
+    recipients:
+      - commons-bulk@acquia.com
+    on_success: change
+    on_failure: always
+  irc:
+    channels:
+      - "chat.freenode.net#drupal-commons"
+    on_success: change
+    on_failure: always
diff --git a/commons.api.php b/commons.api.php
index f137568..fd87fa5 100644
--- a/commons.api.php
+++ b/commons.api.php
@@ -35,12 +35,23 @@ function hook_commons_entity_integration() {
     'webform' => array(
       'test' => array(
         'exclude_rate' => TRUE,
+        'is_group_content' => FALSE,
       ),
       'survey' => array(
+        'is_group_content' => TRUE,
         'exclude_topics' => TRUE,
       ),
       'suggestion' => array(
         'media' => TRUE,
+        'is_group_content' => TRUE,
+        'exclude_commons_follow' => TRUE,
+      ),
+    ),
+    'node' => array(
+      'group' => array(
+        'is_group_content' => FALSE,
+        'is_group' => TRUE,
+        'exclude_commons_follow' => TRUE,
       ),
     ),
   );
diff --git a/commons.info b/commons.info
index 3d8e4c3..25e298c 100644
--- a/commons.info
+++ b/commons.info
@@ -23,9 +23,6 @@ dependencies[] = shortcut
 dependencies[] = taxonomy
 
 ; Install required contributed modules.
-; For Commons 3.6, media is included, but left disabled by default.
-; Uncomment if you wish to enable on install. Alternatively, enabling the
-; commons_media module post install will enable all of the media modules.
 dependencies[] = addressfield
 dependencies[] = addressfield_tokens
 dependencies[] = breakpoints
@@ -40,13 +37,13 @@ dependencies[] = entityreference
 dependencies[] = entitycache
 dependencies[] = edit_profile
 dependencies[] = features
-;dependencies[] = file_entity
+dependencies[] = file_entity
 dependencies[] = flag
 dependencies[] = http_client
 dependencies[] = libraries
-;dependencies[] = media
-;dependencies[] = media_internet
-;dependencies[] = media_wysiwyg
+dependencies[] = media
+dependencies[] = media_internet
+dependencies[] = media_wysiwyg
 dependencies[] = menu_attributes
 dependencies[] = message
 dependencies[] = message_notify
@@ -54,7 +51,7 @@ dependencies[] = message_subscribe
 dependencies[] = metatag
 dependencies[] = module_filter
 dependencies[] = navbar
-;dependencies[] = oembed
+dependencies[] = media_oembed
 dependencies[] = og
 dependencies[] = panelizer
 dependencies[] = panels
@@ -97,7 +94,7 @@ dependencies[] = commons_groups_directory
 dependencies[] = commons_groups_pages
 dependencies[] = commons_like
 dependencies[] = commons_location
-;dependencies[] = commons_media
+dependencies[] = commons_media
 dependencies[] = commons_misc
 dependencies[] = commons_notify
 dependencies[] = commons_pages
diff --git a/commons.install b/commons.install
index 10d4361..a51fc04 100644
--- a/commons.install
+++ b/commons.install
@@ -170,6 +170,11 @@ function commons_install_finished(&$install_state) {
   // Cache a fully-built schema.
   drupal_get_schema(NULL, TRUE);
 
+  variable_set('title_node', array(
+    'auto_attach' => array('title' => 'title'),
+    'hide_label' => array('page' => 0, 'entity' => 0),
+  ));
+
   // Run cron to populate update status tables (if available) so that users
   // will be warned if they've installed an out of date Drupal version.
   // Will also trigger indexing of profile-supplied content or feeds.
@@ -451,8 +456,10 @@ function commons_demo_content() {
     $event->field_topics[LANGUAGE_NONE][]['tid'] = commons_create_topic($term);
   }
 
-  $event->field_date[LANGUAGE_NONE][0]['value'] = '2014-01-12 10:00:00';
-  $event->field_date[LANGUAGE_NONE][0]['value2'] = '2014-01-13 13:00:00';
+  // The event starts 6 months from now.
+  $event->field_date[LANGUAGE_NONE][0]['value'] = format_date(REQUEST_TIME + 15552000, 'custom', 'Y-m-d 10:00:00');
+  // The event ends 6 months and one day from now.
+  $event->field_date[LANGUAGE_NONE][0]['value2'] = format_date(REQUEST_TIME + 15638400, 'custom', 'Y-m-d 10:00:00');
 
   $event->field_address[LANGUAGE_NONE][0]['thoroughfare'] = '25 Corporate Drive';
   $event->field_address[LANGUAGE_NONE][0]['premise'] = '4th floor';
@@ -858,3 +865,54 @@ function commons_update_3112() {
   features_revert($revert);
   return array();
 }
+
+/*
+ * Delete the AdvancedQueue class variable for sites that did not uninstall AdvancedQueue.
+ */
+function commons_update_3113() {
+  if (variable_get('queue_default_class', '') == 'AdvancedQueue') {
+    variable_del('queue_default_class');
+  }
+  return array();
+}
+
+/*
+ * Automatically use field_title for all nodes instead of the node base title.
+ */
+function commons_update_3114() {
+  variable_set('title_node', array(
+    'auto_attach' => array('title' => 'title'),
+    'hide_label' => array('page' => 0, 'entity' => 0),
+  ));
+
+  foreach (node_type_get_types() as $node_type) {
+    // Set the title as "Replaced by title_field".
+    if (!title_field_replacement_enabled('node', $node_type->type, 'title')) {
+      title_field_replacement_toggle('node', $node_type->type, 'title');
+    }
+
+    // Migrate the titles to the title field.
+    title_field_replacement_batch_set('node', $node_type->type, 'title');
+  }
+
+  drupal_flush_all_caches();
+}
+
+/*
+ * Replace the oEmbed module with the Media: oEmbed module.
+ */
+function commons_update_3115() {
+  if (module_exists('oembed')) {
+    module_disable(array('oembed'));
+  }
+  module_enable(array('media_oembed'));
+  return array();
+}
+
+/*
+ * Enable the Commons: Media and Media: WYSIWYG modules.
+ */
+function commons_update_3116() {
+  module_enable(array('commons_media', 'media_wysiwyg'));
+  return array();
+}
diff --git a/drupal-org-core.make b/drupal-org-core.make
index 806c8ff..2862d2b 100644
--- a/drupal-org-core.make
+++ b/drupal-org-core.make
@@ -3,7 +3,7 @@ core = 7.x
 
 ; Download Drupal core and apply core patches if needed.
 projects[drupal][type] = "core"
-projects[drupal][version] = 7.26
+projects[drupal][version] = 7.27
 
 ; This patch allows install profile to list requirements on the install page
 ; http://drupal.org/node/1971072
@@ -15,4 +15,12 @@ projects[drupal][patch][] = http://drupal.org/files/drupal-7.x-allow_profile_cha
 
 ; Allow to specify SCRIPT HTML element attributes through drupal_add_js()
 ; http://drupal.org/node/1664602#comment-6221066
-projects[drupal][patch][] = http://drupal.org/files/1664602-1.patch
\ No newline at end of file
+projects[drupal][patch][] = http://drupal.org/files/1664602-1.patch
+
+; Optimize node access queries.
+; https://drupal.org/comment/8516319#comment-8516319
+projects[drupal][patch][] = https://drupal.org/files/issues/drupal-optimize_node_access_queries-106721-D7-71-do-not-test.patch
+
+; Statically cache node access grants
+; https://drupal.org/comment/8495029#comment-8495029
+projects[drupal][patch][] = https://drupal.org/files/issues/node_access_grants-static-cache-11.patch
\ No newline at end of file
diff --git a/drupal-org.make b/drupal-org.make
index bf2b829..5d8d0e3 100644
--- a/drupal-org.make
+++ b/drupal-org.make
@@ -5,7 +5,7 @@ core = 7.x
 
 projects[acquia_connector][type] = "module"
 projects[acquia_connector][subdir] = "contrib"
-projects[acquia_connector][version] = "2.13"
+projects[acquia_connector][version] = "2.14"
 
 projects[addressfield][type] = "module"
 projects[addressfield][subdir] = "contrib"
@@ -31,7 +31,7 @@ projects[apachesolr_og][subdir] = "contrib"
 projects[apachesolr_og][download][type] = "git"
 projects[apachesolr_og][download][url] = "http://git.drupal.org/project/apachesolr_og.git"
 projects[apachesolr_og][download][branch] = "7.x-1.x"
-projects[apachesolr_og][download]revision] = "49820b4a4fcff7c1c4efe449da033fb6d8711ac5"
+projects[apachesolr_og][download][revision] = "49820b4a4fcff7c1c4efe449da033fb6d8711ac5"
 
 projects[apachesolr_proximity][type] = "module"
 projects[apachesolr_proximity][subdir] = "contrib"
@@ -68,7 +68,7 @@ projects[ckeditor][download][revision] = "b69a9ac"
 
 ; Only load CSS when necessary.
 ; https://drupal.org/node/1370894
-projects[ckeditor][patch][] = "https://drupal.org/files/issues/attach-ckeditor-css-1370894-7.patch"
+projects[ckeditor][patch][] = "https://drupal.org/files/issues/attach-ckeditor-css-1370894-8.patch"
 
 ; Accomodate latest Media changes.
 ; https://drupal.org/node/2159403
@@ -80,14 +80,14 @@ projects[ckeditor][patch][] = "https://drupal.org/files/issues/ckeditor-remove-e
 
 projects[ctools][type] = "module"
 projects[ctools][subdir] = "contrib"
-projects[ctools][version] = "1.4"
+projects[ctools][download][type] = "git"
+projects[ctools][download][url] = "http://git.drupal.org/project/ctools.git"
+projects[ctools][download][branch] = "7.x-1.x"
+projects[ctools][download][revision] = "e720f61d"
 
 projects[custom_search][type] = "module"
 projects[custom_search][subdir] = "contrib"
-projects[custom_search][download][type] = "git"
-projects[custom_search][download][url] = "http://git.drupal.org/project/custom_search.git"
-projects[custom_search][download][branch] = "7.x-1.x"
-projects[custom_search][download][revision] = "20144e64494c83a448067d587e59df5d7e4780bb"
+projects[custom_search][version] = "1.16"
 
 ; Avoid akward sanitization of user-entered search strings.
 ; https://drupal.org/node/2012210
@@ -121,11 +121,11 @@ projects[elements][version] = "1.4"
 
 projects[email_registration][type] = "module"
 projects[email_registration][subdir] = "contrib"
-projects[email_registration][version] = "1.1"
+projects[email_registration][version] = "1.2"
 
 projects[entity][type] = "module"
 projects[entity][subdir] = "contrib"
-projects[entity][version] = "1.3"
+projects[entity][version] = "1.5"
 
 projects[entitycache][type] = "module"
 projects[entitycache][subdir] = "contrib"
@@ -141,7 +141,7 @@ projects[entityreference][version] = "1.1"
 
 projects[entityreference_prepopulate][type] = "module"
 projects[entityreference_prepopulate][subdir] = "contrib"
-projects[entityreference_prepopulate][version] = "1.4"
+projects[entityreference_prepopulate][version] = "1.5"
 
 projects[entity_translation][type] = "module"
 projects[entity_translation][subdir] = "contrib"
@@ -159,21 +159,28 @@ projects[file_entity][type] = "module"
 projects[file_entity][subdir] = "contrib"
 projects[file_entity][version] = "2.0-alpha3"
 
+; Issue #2081713: Fix undefined index errors with empty (remote) files.
+; https://drupal.org/node/2081713
+projects[file_entity][patch][] = "https://drupal.org/files/issues/add-filesize-checks-2081713-13.patch"
+
 projects[flag][type] = "module"
 projects[flag][subdir] = "contrib"
-projects[flag][version] = "2.1"
+projects[flag][version] = "2.2"
 
 ; Issue #1965760: Manually set taxonomy term flag types because its different.
 ; http://drupal.org/node/1965760
-projects[flag][patch][] = "http://drupal.org/files/1965760-flag-taxonomy-types.patch"
-
-; Issue #1971980: Features export does not take flag_definition_alter into account.
-; http://drupal.org/node/1971980
-projects[flag][patch][] = "http://drupal.org/files/flag-features_export-1971980-3.patch"
+projects[flag][patch][] = "https://drupal.org/files/issues/1965760.29.flag_.entity-tokens.patch"
 
 projects[flag_abuse][type] = "module"
 projects[flag_abuse][subdir] = "contrib"
-projects[flag_abuse][version] = "2.0-alpha1"
+projects[flag_abuse][version] = "2.0"
+
+projects[gravatar][type] = "module"
+projects[gravatar][subdir] = "contrib"
+projects[gravatar][download][type] = "git"
+projects[gravatar][download][url] = "http://git.drupal.org/project/gravatar.git"
+projects[gravatar][download][branch] = "7.x-1.x"
+projects[gravatar][download][revision] = "bb2f81e6"
 
 projects[http_client][type] = "module"
 projects[http_client][subdir] = "contrib"
@@ -181,7 +188,7 @@ projects[http_client][version] = "2.4"
 
 projects[i18n][type] = "module"
 projects[i18n][subdir] = "contrib"
-projects[i18n][version] = "1.10"
+projects[i18n][version] = "1.11"
 
 projects[i18nviews][type] = "module"
 projects[i18nviews][subdir] = "contrib"
@@ -196,7 +203,7 @@ projects[kissmetrics][version] = "1.0-rc3"
 
 projects[l10n_update][type] = "module"
 projects[l10n_update][subdir] = "contrib"
-projects[l10n_update][version] = "1.0-beta3"
+projects[l10n_update][version] = "1.0"
 
 projects[libraries][type] = "module"
 projects[libraries][subdir] = "contrib"
@@ -204,7 +211,7 @@ projects[libraries][version] = "2.2"
 
 projects[lingotek][type] = "module"
 projects[lingotek][subdir] = "contrib"
-projects[lingotek][version] = "5.02"
+projects[lingotek][version] = "5.04"
 
 projects[link][type] = "module"
 projects[link][subdir] = "contrib"
@@ -215,7 +222,15 @@ projects[media][subdir] = "contrib"
 projects[media][download][type] = "git"
 projects[media][download][url] = "http://git.drupal.org/project/media.git"
 projects[media][download][branch] = "7.x-2.x"
-projects[media][download][revision] = "6e9c99b"
+projects[media][download][revision] = "b2c2d78"
+
+; New filelfield browser widget is massively confusing the user
+; https://drupal.org/comment/8570379#comment-8570379
+projects[media][patch][] = "https://drupal.org/files/issues/automatically-attach-files-2216329-2.patch"
+
+projects[media_oembed][type] = "module"
+projects[media_oembed][subdir] = "contrib"
+projects[media_oembed][version] = "2.1"
 
 projects[memcache][type] = "module"
 projects[memcache][subdir] = "contrib"
@@ -243,7 +258,7 @@ projects[message_notify][version] = "2.5"
 
 projects[message_subscribe][type] = "module"
 projects[message_subscribe][subdir] = "contrib"
-projects[message_subscribe][version] = "1.0-rc1"
+projects[message_subscribe][version] = "1.0-rc2"
 
 projects[metatag][type] = "module"
 projects[metatag][subdir] = "contrib"
@@ -255,7 +270,7 @@ projects[module_filter][version] = "1.8"
 
 projects[mollom][type] = "module"
 projects[mollom][subdir] = "contrib"
-projects[mollom][version] = "2.8"
+projects[mollom][version] = "2.9"
 
 projects[navbar][type] = "module"
 projects[navbar][subdir] = "contrib"
@@ -285,7 +300,10 @@ projects[oembed][download][revision] = "9aa5303"
 
 projects[og][type] = "module"
 projects[og][subdir] = "contrib"
-projects[og][version] = "2.5"
+projects[og][download][type] = "git"
+projects[og][download][url] = "http://git.drupal.org/project/og.git"
+projects[og][download][branch] = "7.x-2.x"
+projects[og][download][revision] = "10647461ce6"
 
 ; Auto-assign role to group manager broken on groups with overridden roles.
 ; https://drupal.org/node/2005800#comment-7684873
@@ -301,7 +319,10 @@ projects[panelizer][version] = "3.1"
 
 projects[panels][type] = "module"
 projects[panels][subdir] = "contrib"
-projects[panels][version] = "3.4"
+projects[panels][download][type] = "git"
+projects[panels][download][url] = "http://git.drupal.org/project/panels.git"
+projects[panels][download][branch] = "7.x-3.x"
+projects[panels][download][revision] = "8059bda2b"
 
 projects[paranoia][type] = "module"
 projects[paranoia][subdir] = "contrib"
@@ -372,11 +393,7 @@ projects[radioactivity][subdir] = "contrib"
 projects[radioactivity][download][type] = "git"
 projects[radioactivity][download][url] = "http://git.drupal.org/project/radioactivity.git"
 projects[radioactivity][download][branch] = "7.x-2.x"
-projects[radioactivity][download][revision] = "aee21dbed4f54d0e626e3c19ecc550bf1ec656f6"
-
-; Radioactivity not compatible with Memcache module.
-; http://drupal.org/node/1860216
-projects[radioactivity][patch][] = "http://drupal.org/files/radioactivity-memcache.patch"
+projects[radioactivity][download][revision] = "e3705c6ce9f07ec58fc6b7c66f39eb4f2fc51b68"
 
 projects[rate][type] = "module"
 projects[rate][subdir] = "contrib"
@@ -392,7 +409,11 @@ projects[rate][patch][] = "https://drupal.org/files/issues/attach-rate-css-21808
 
 projects[realname][type] = "module"
 projects[realname][subdir] = "contrib"
-projects[realname][version] = "1.1"
+projects[realname][version] = "1.2"
+
+; Realname entityreference autocomplete API update
+; https://drupal.org/node/2225889
+projects[realname][patch][] = "https://drupal.org/files/issues/2225889-realname-correct-menu-2.patch"
 
 projects[redirect][type] = "module"
 projects[redirect][subdir] = "contrib"
@@ -420,7 +441,7 @@ projects[search_facetapi][version] = "1.0-beta2"
 
 projects[sharethis][type] = "module"
 projects[sharethis][subdir] = "contrib"
-projects[sharethis][version] = "2.5"
+projects[sharethis][version] = "2.6"
 
 projects[smartcrop][type] = "module"
 projects[smartcrop][subdir] = "contrib"
@@ -455,12 +476,16 @@ projects[translation_helpers][version] = "1.0"
 
 projects[variable][type] = "module"
 projects[variable][subdir] = "contrib"
-projects[variable][version] = "2.4"
+projects[variable][version] = "2.5"
 
 projects[views][type] = "module"
 projects[views][subdir] = "contrib"
 projects[views][version] = "3.7"
 
+; Update Views Content access filter per core performance improvements.
+; https://drupal.org/comment/8516039#comment-8516039
+projects[views][patch][] = "https://drupal.org/files/issues/2204257-views-content-access-filter-core-depends-on-core-patch.patch"
+
 projects[views_bulk_operations][type] = "module"
 projects[views_bulk_operations][subdir] = "contrib"
 projects[views_bulk_operations][version] = "3.2"
@@ -477,6 +502,10 @@ projects[views_load_more][type] = "module"
 projects[views_load_more][subdir] = "contrib"
 projects[views_load_more][version] = "1.2"
 
+; Suppress notice error when loading more content from views_load_more.
+; https://drupal.org/node/2207467
+projects[views_load_more][patch][] = "https://drupal.org/files/issues/fix-notice-undefined-index-2152935-3.patch"
+
 projects[votingapi][type] = "module"
 projects[votingapi][subdir] = "contrib"
 projects[votingapi][version] = "2.11"
@@ -492,23 +521,18 @@ projects[adaptivetheme][subdir] = "contrib"
 projects[adaptivetheme][download][type] = "git"
 projects[adaptivetheme][download][url] = "http://git.drupal.org/project/adaptivetheme.git"
 projects[adaptivetheme][download][branch] = "7.x-3.x"
-projects[adaptivetheme][download][revision] = "b4b38c3c01d066e733c2942020c51962cd64231c"
-
-; Remove link around comment creation date.
-; http://drupal.org/node/1427226#comment-6638836
-projects[adaptivetheme][patch][] = "http://drupal.org/files/remove-comment-creation-link-2018081-1.patch"
-
-; Add styling for link buttons.
-; https://drupal.org/comment/8289329#comment-8289329
-projects[adaptivetheme][patch][] = "https://drupal.org/files/issues/add-link-button-styling-2159783-1.patch"
+projects[adaptivetheme][download][revision] = "18693ff59db7cb3171f282a982d04fe6544b63a1"
 
 projects[ember][type] = "theme"
 projects[ember][subdir] = "contrib"
-projects[ember][version] = "2.0-alpha2"
+projects[ember][download][type] = "git"
+projects[ember][download][url] = "http://git.drupal.org/project/ember.git"
+projects[ember][download][branch] = "7.x-2.x"
+projects[ember][download][revision] = "caf4df7"
 
 projects[sky][type] = "theme"
 projects[sky][subdir] = "contrib"
-projects[sky][version] = "3.0-rc1"
+projects[sky][version] = "3.0"
 
 ; Libraries.
 ; NOTE: These need to be listed in http://drupal.org/packaging-whitelist.
@@ -517,9 +541,21 @@ libraries[backbone][download][type] = "get"
 libraries[backbone][type] = "libraries"
 libraries[backbone][download][url] = "https://github.com/jashkenas/backbone/archive/1.1.0.tar.gz"
 
-libraries[ckeditor][download][type] = get
+libraries[ckeditor][download][type] = "get"
+libraries[ckeditor][download][url] = "http://download.cksource.com/CKEditor/CKEditor/CKEditor%204.3.4/ckeditor_4.3.4_full.zip"
 libraries[ckeditor][type] = "libraries"
-libraries[ckeditor][download][url] = "http://download.cksource.com/CKEditor%20for%20Drupal/edit/ckeditor_4.3.2_edit.zip"
+
+libraries[ckeditor_lineutils][download][type] = "get"
+libraries[ckeditor_lineutils][download][url] = "http://download.ckeditor.com/lineutils/releases/lineutils_4.3.4.zip"
+libraries[ckeditor_lineutils][type] = "libraries"
+libraries[ckeditor_lineutils][subdir] = "ckeditor/plugins"
+libraries[ckeditor_lineutils][directory_name] = "lineutils"
+
+libraries[ckeditor_widget][download][type] = "get"
+libraries[ckeditor_widget][download][url] = "http://download.ckeditor.com/widget/releases/widget_4.3.4.zip"
+libraries[ckeditor_widget][type] = "libraries"
+libraries[ckeditor_widget][subdir] = "ckeditor/plugins"
+libraries[ckeditor_widget][directory_name] = "widget"
 
 libraries[modernizr][download][type] = "get"
 libraries[modernizr][type] = "libraries"
@@ -527,7 +563,7 @@ libraries[modernizr][download][url] = "https://github.com/Modernizr/Modernizr/ar
 
 libraries[timeago][download][type] = "get"
 libraries[timeago][type] = "libraries"
-libraries[timeago][download][url] = "https://raw.github.com/rmm5t/jquery-timeago/v1.3.1/jquery.timeago.js"
+libraries[timeago][download][url] = "https://raw.github.com/rmm5t/jquery-timeago/v1.4.0/jquery.timeago.js"
 
 libraries[underscore][download][type] = "get"
 libraries[underscore][type] = "libraries"
diff --git a/modules/commons/commons_activity_streams/commons_activity_streams.install b/modules/commons/commons_activity_streams/commons_activity_streams.install
index ef910f2..bc0e8ec 100644
--- a/modules/commons/commons_activity_streams/commons_activity_streams.install
+++ b/modules/commons/commons_activity_streams/commons_activity_streams.install
@@ -40,3 +40,15 @@ function commons_activity_streams_update_3104() {
   features_revert($revert);
   return array();
 }
+
+/**
+ * Remove duplicative node access filters from Commons Activity Streams views.
+ */
+function commons_activity_streams_update_3105() {
+  $revert = array(
+    'commons_activity_streams' => array('views_view'),
+    'commons_activity_streams_groups' => array('views_view'),
+  );
+  features_revert($revert);
+  return array();
+}
diff --git a/modules/commons/commons_activity_streams/commons_activity_streams.module b/modules/commons/commons_activity_streams/commons_activity_streams.module
index eb73f1c..0f0641b 100644
--- a/modules/commons/commons_activity_streams/commons_activity_streams.module
+++ b/modules/commons/commons_activity_streams/commons_activity_streams.module
@@ -59,7 +59,7 @@ function commons_activity_streams_comment_insert($comment) {
   $message_type = 'commons_activity_streams_comment_created';
   drupal_alter('commons_activity_streams_message_selection', $message_type, $hook, $node);
   $message = message_create($message_type, array('uid' => $account->uid, 'timestamp' => $comment->created));
-  
+
   // Save reference to the node in the node reference field, and the
   // "publish" state (i.e. if the node is published or unpublished).
   $wrapper = entity_metadata_wrapper('message', $message);
diff --git a/modules/commons/commons_activity_streams/commons_activity_streams.views_default.inc b/modules/commons/commons_activity_streams/commons_activity_streams.views_default.inc
index c7d1a75..f8d811d 100644
--- a/modules/commons/commons_activity_streams/commons_activity_streams.views_default.inc
+++ b/modules/commons/commons_activity_streams/commons_activity_streams.views_default.inc
@@ -79,11 +79,6 @@ function commons_activity_streams_views_default_views() {
   $handler->display->display_options['arguments']['mid']['summary']['format'] = 'default_summary';
   $handler->display->display_options['arguments']['mid']['summary_options']['items_per_page'] = '25';
   $handler->display->display_options['arguments']['mid']['break_phrase'] = TRUE;
-  /* Filter criterion: Content access: Access */
-  $handler->display->display_options['filters']['nid']['id'] = 'nid';
-  $handler->display->display_options['filters']['nid']['table'] = 'node_access';
-  $handler->display->display_options['filters']['nid']['field'] = 'nid';
-  $handler->display->display_options['filters']['nid']['relationship'] = 'field_target_nodes_target_id';
   /* Filter criterion: Content: Published or admin */
   $handler->display->display_options['filters']['status_extra']['id'] = 'status_extra';
   $handler->display->display_options['filters']['status_extra']['table'] = 'node';
@@ -147,13 +142,6 @@ function commons_activity_streams_views_default_views() {
   $handler->display->display_options['filters']['status_extra']['table'] = 'node';
   $handler->display->display_options['filters']['status_extra']['field'] = 'status_extra';
   $handler->display->display_options['filters']['status_extra']['relationship'] = 'field_target_nodes_target_id';
-  /* Filter criterion: Content access: Access */
-  $handler->display->display_options['filters']['nid']['id'] = 'nid';
-  $handler->display->display_options['filters']['nid']['table'] = 'node_access';
-  $handler->display->display_options['filters']['nid']['field'] = 'nid';
-  $handler->display->display_options['filters']['nid']['relationship'] = 'field_target_nodes_target_id';
-  $handler->display->display_options['pane_category']['name'] = 'Commons';
-  $handler->display->display_options['pane_category']['weight'] = '0';
 
   /* Display: Activity - Full view */
   $handler = $view->new_display('panel_pane', 'Activity - Full view', 'panel_pane_3');
@@ -256,11 +244,6 @@ function commons_activity_streams_views_default_views() {
   $handler->display->display_options['arguments']['user']['summary']['number_of_records'] = '0';
   $handler->display->display_options['arguments']['user']['summary']['format'] = 'default_summary';
   $handler->display->display_options['arguments']['user']['summary_options']['items_per_page'] = '25';
-  /* Filter criterion: Content access: Access */
-  $handler->display->display_options['filters']['nid']['id'] = 'nid';
-  $handler->display->display_options['filters']['nid']['table'] = 'node_access';
-  $handler->display->display_options['filters']['nid']['field'] = 'nid';
-  $handler->display->display_options['filters']['nid']['relationship'] = 'field_target_nodes_target_id';
   /* Filter criterion: Content: Published or admin */
   $handler->display->display_options['filters']['status_extra']['id'] = 'status_extra';
   $handler->display->display_options['filters']['status_extra']['table'] = 'node';
diff --git a/modules/commons/commons_activity_streams/commons_activity_streams_groups/commons_activity_streams_groups.views_default.inc b/modules/commons/commons_activity_streams/commons_activity_streams_groups/commons_activity_streams_groups.views_default.inc
index 8c1878b..002e115 100644
--- a/modules/commons/commons_activity_streams/commons_activity_streams_groups/commons_activity_streams_groups.views_default.inc
+++ b/modules/commons/commons_activity_streams/commons_activity_streams_groups/commons_activity_streams_groups.views_default.inc
@@ -75,11 +75,6 @@ function commons_activity_streams_groups_views_default_views() {
   $handler->display->display_options['arguments']['gid']['summary']['number_of_records'] = '0';
   $handler->display->display_options['arguments']['gid']['summary']['format'] = 'default_summary';
   $handler->display->display_options['arguments']['gid']['summary_options']['items_per_page'] = '25';
-  /* Filter criterion: Content access: Access */
-  $handler->display->display_options['filters']['nid']['id'] = 'nid';
-  $handler->display->display_options['filters']['nid']['table'] = 'node_access';
-  $handler->display->display_options['filters']['nid']['field'] = 'nid';
-  $handler->display->display_options['filters']['nid']['relationship'] = 'field_target_nodes_target_id';
   /* Filter criterion: Content: Published or admin */
   $handler->display->display_options['filters']['status_extra']['id'] = 'status_extra';
   $handler->display->display_options['filters']['status_extra']['table'] = 'node';
diff --git a/modules/commons/commons_bw/commons_bw.info b/modules/commons/commons_bw/commons_bw.info
index ac6af8c..2ce9fb3 100644
--- a/modules/commons/commons_bw/commons_bw.info
+++ b/modules/commons/commons_bw/commons_bw.info
@@ -1,6 +1,7 @@
 name = Commons Tabbed Browsing Widget
 core = 7.x
 package = Commons - Building blocks
+dependencies[] = commons_groups
 dependencies[] = features
 dependencies[] = og
 dependencies[] = quicktabs
diff --git a/modules/commons/commons_content_moderation/commons_content_moderation.install b/modules/commons/commons_content_moderation/commons_content_moderation.install
new file mode 100644
index 0000000..ed3d510
--- /dev/null
+++ b/modules/commons/commons_content_moderation/commons_content_moderation.install
@@ -0,0 +1,20 @@
+<?php
+
+/**
+ * Change content moderation views permission.
+ */
+function commons_content_moderation_update_7001() {
+  $revert = array(
+    'commons_content_moderation' => array('views_view'),
+  );
+  features_revert($revert);
+  return array();
+}
+
+/**
+ * Clear views cache to have content moderation view use new permission.
+ */
+function commons_content_moderation_update_7002() {
+  cache_clear_all('*', 'cache_views', TRUE);
+}
+
diff --git a/modules/commons/commons_content_moderation/commons_content_moderation.module b/modules/commons/commons_content_moderation/commons_content_moderation.module
index 3e9c917..b76ff26 100644
--- a/modules/commons/commons_content_moderation/commons_content_moderation.module
+++ b/modules/commons/commons_content_moderation/commons_content_moderation.module
@@ -80,10 +80,26 @@ function commons_content_moderation_views_default_views_alter(&$views) {
 }
 
 /**
-  * Implements hook_views_bulk_operations_form_alter().
-  */
+ * Implements hook_views_pre_build().
+ *
+ * A check when VBO is being used on the content moderation views, make sure
+ * the user has the correct permissions.
+ */
+function commons_content_moderation_views_pre_build(&$view) {
+
+  if ($view->name == 'commons_content_moderation_reported_nodes'
+    && !module_exists('actions_permissions')
+    && (!user_access('administer content') || !user_access('administer users'))) {
+    unset($view->field['views_bulk_operations']);
+    unset($view->display_handler->handlers['field']['views_bulk_operations']);
+  }
+}
+
+/**
+ * Implements hook_views_bulk_operations_form_alter().
+ */
 function commons_content_moderation_views_bulk_operations_form_alter(&$form, $form_state, $vbo) {
-  if(!isset($vbo->options['vbo_operations']['action::commons_content_moderation_delete_node_block_user'])) {
+  if (!isset($vbo->options['vbo_operations']['action::commons_content_moderation_delete_node_block_user'])) {
     return;
   }
   if ($form_state['step'] == 'views_form_views_form' && $vbo->options['vbo_operations']['action::commons_content_moderation_delete_node_block_user']['selected'] == 1) {
diff --git a/modules/commons/commons_content_moderation/commons_content_moderation.views_default.inc b/modules/commons/commons_content_moderation/commons_content_moderation.views_default.inc
index 5b64768..50f6eee 100644
--- a/modules/commons/commons_content_moderation/commons_content_moderation.views_default.inc
+++ b/modules/commons/commons_content_moderation/commons_content_moderation.views_default.inc
@@ -306,10 +306,8 @@ function commons_content_moderation_views_default_views() {
   $handler = $view->new_display('default', 'Defaults', 'default');
   $handler->display->display_options['title'] = 'Reported content';
   $handler->display->display_options['use_more_always'] = FALSE;
-  $handler->display->display_options['access']['type'] = 'role';
-  $handler->display->display_options['access']['role'] = array(
-    2 => '2',
-  );
+  $handler->display->display_options['access']['type'] = 'perm';
+  $handler->display->display_options['access']['perm'] = 'administer nodes';
   $handler->display->display_options['cache']['type'] = 'none';
   $handler->display->display_options['query']['type'] = 'views_query';
   $handler->display->display_options['query']['options']['distinct'] = TRUE;
diff --git a/modules/commons/commons_documents/commons_documents.module b/modules/commons/commons_documents/commons_documents.module
index de94e87..ec586e2 100644
--- a/modules/commons/commons_documents/commons_documents.module
+++ b/modules/commons/commons_documents/commons_documents.module
@@ -91,6 +91,7 @@ function commons_documents_commons_entity_integration() {
   return array(
     'node' => array(
       'document' => array(
+        'is_group_content' => TRUE,
       ),
     ),
   );
diff --git a/modules/commons/commons_events/commons_events.module b/modules/commons/commons_events/commons_events.module
index a8c7d44..592955a 100644
--- a/modules/commons/commons_events/commons_events.module
+++ b/modules/commons/commons_events/commons_events.module
@@ -60,6 +60,7 @@ function commons_events_theme($existing, $type, $theme, $path) {
     'commons_events_attending_event' => array(
       'variables' => array(
         'event' => NULL,
+        'attendee_count' => NULL,
       ),
       'file' => '/includes/commons_events.theme.inc',
     ),
@@ -182,16 +183,9 @@ function commons_events_date_popup_element_process($element, &$form_state, $form
  */
 function commons_events_entity_view_alter(&$build, $type) {
   if ($build['#entity_type'] == 'node' && $build['#bundle'] == 'event') {
-    $attendee_count = db_select('registration', 'r')
-      ->fields('r')
-      ->condition('entity_id', $build['#node']->nid)
-      ->condition('entity_type', 'node')
-      ->countQuery()
-      ->execute()
-      ->fetchField();
-    $build['attendee_count'] = $attendee_count;
+
     $build['attending'] = array(
-      0 => theme('commons_events_attending_event', array('event' => $build['#node'], 'attendee_count' => $attendee_count)),
+      0 => theme('commons_events_attending_event', array('event' => $build['#node'], 'attendee_count' => commons_events_get_raw_attendee_count($build['#node']))),
       '#weight' => -10,
     );
     $vars = array(
@@ -199,8 +193,7 @@ function commons_events_entity_view_alter(&$build, $type) {
     );
     // Don't show the address if the event location is only online.
     $field_location = field_view_field('node', $build['#node'], 'field_location');
-    $field_location = $field_location['#items']['0']['value'];
-    if ($field_location == 'online') {
+    if (isset($field_location['#items']['0']['value']) && $field_location['#items']['0']['value'] == 'online') {
       unset($build['field_address']);
     }
   }
@@ -291,6 +284,7 @@ function commons_events_commons_entity_integration() {
   return array(
     'node' => array(
       'event' => array(
+        'is_group_content' => TRUE,
       ),
     ),
   );
@@ -373,8 +367,8 @@ function commons_events_token_info_alter(&$tokens) {
  * Implements hook_commons_bw_create_all_widget().
  */
 function commons_events_commons_bw_create_all_widget($group) {
-   if (og_user_access('node', $group->nid, 'create event content')) {
-      $link = l(t('List an event'),'node/add/event',
+  if (og_user_access('node', $group->nid, 'create event content')) {
+    $link = l(t('List an event'),'node/add/event',
       array('attributes' => array('class' => 'commons-events-create'), 'query' => array('og_group_ref' => $group->nid))
     );
     return array(
@@ -396,7 +390,7 @@ function commons_events_tokens($type, $tokens, array $data = array(), array $opt
     $event = $data['node'];
     foreach ($tokens as $name => $original) {
       if ($name == 'attend-form') {
-        $replacements[$original] = theme('commons_events_attending_event', array('event' => $event));
+        $replacements[$original] = theme('commons_events_attending_event', array('event' => $event, 'attendee_count' => commons_events_get_raw_attendee_count($event)));
       }
     }
   }
@@ -475,7 +469,7 @@ function commons_events_block_view($delta = '') {
     && empty($user->uid)) {
     return array(
       'subject' => NULL,
-      'content' => t('You must !login first to list an event.', array('!login' => l(t('log in'), 'user'))),
+      'content' => t('You must !login in order to list events.', array('!login' => l(t('log in'), 'user'))),
     );
   }
 }
@@ -598,3 +592,18 @@ function commons_events_event_type_disabled($node) {
   }
   return FALSE;
 }
+
+/**
+ * Helper function go get the raw number of attendees.
+ */
+function commons_events_get_raw_attendee_count($node) {
+  $attendee_count = db_select('registration', 'r')
+    ->fields('r')
+    ->condition('entity_id', $node->nid)
+    ->condition('entity_type', 'node')
+    ->countQuery()
+    ->execute()
+    ->fetchField();
+
+  return $attendee_count;
+}
\ No newline at end of file
diff --git a/modules/commons/commons_events/includes/commons_events.theme.inc b/modules/commons/commons_events/includes/commons_events.theme.inc
index 0a45515..22a52b8 100644
--- a/modules/commons/commons_events/includes/commons_events.theme.inc
+++ b/modules/commons/commons_events/includes/commons_events.theme.inc
@@ -10,7 +10,7 @@
 function theme_commons_events_attending_event($variables = array()) {
   global $user;
   $event = $variables['event'];
-  $attendee_count = $variables['attendee_count'];
+  $attendee_count = isset($variables['attendee_count']) ? $variables['attendee_count'] : 0;
 
   $registration_type = registration_get_entity_registration_type('node', $event);
   $registration = entity_get_controller('registration')->create(array(
diff --git a/modules/commons/commons_follow/commons_follow_ui/commons_follow_ui.module b/modules/commons/commons_follow/commons_follow_ui/commons_follow_ui.module
index 18c46c5..56973cb 100644
--- a/modules/commons/commons_follow/commons_follow_ui/commons_follow_ui.module
+++ b/modules/commons/commons_follow/commons_follow_ui/commons_follow_ui.module
@@ -38,8 +38,8 @@ function commons_follow_ui_menu() {
 }
 
 /**
-* Implements hook_form_alter().
-*/
+ * Implements hook_form_alter().
+ */
 function commons_follow_ui_form_alter(&$form, &$form_state, $form_id) {
   // We have a dedicated form for the "Send email by default" checkbox.
   // Hide it from the user profile edit form.
@@ -74,7 +74,7 @@ function commons_follow_ui_notification_settings_form($form, &$form_state, $acco
     '#default_value' => isset($account->message_subscribe_email[LANGUAGE_NONE][0]['value']) ? $account->message_subscribe_email[LANGUAGE_NONE][0]['value'] : FALSE,
     '#weight' => 1,
   );
-  if($account != $user) {
+  if ($account->uid != $user->uid) {
     $form['message_subscribe_email']['#disabled'] = TRUE;
   }
 
@@ -110,18 +110,15 @@ function commons_follow_message_subscribe_email_setting_submit($form, &$form_sta
  * Generates the QuickTab title for the subscription UI.
  * Replaces message_subscribe_tab_title().
  */
-function commons_follow_ui_tab_title($account, $flag_name = NULL) {
+function commons_follow_ui_tab_title($account, $flag_name = NULL, $count = 0) {
   global $user;
 
   if (!$flag_name) {
     // We are inside /message-subscribe so get the first flag.
-    $flag_name = key(message_subscribe_flag_get_flags());
+    $flag_name = key(message_subscribe_flag_get_flags(NULL, NULL, $account, FALSE));
   }
-
   $flag = flag_get_flag($flag_name);
-  $flaggings = flag_get_user_flags($flag->content_type, NULL, $account->uid);
 
-  $count = !empty($flaggings[$flag_name]) ? count($flaggings[$flag_name]) : 0;
   $params = array(
     '@flag' => $flag->get_title(),
     '@count' => $count,
@@ -130,16 +127,46 @@ function commons_follow_ui_tab_title($account, $flag_name = NULL) {
   return $account->uid == $user->uid ? t('@flag you follow <span class="user-follow-count">@count</span>', $params) : t('@flag @name follows <span class="user-follow-count">@count</span>', $params);
 }
 
-
+/*
+ * Generates the Quicktab content for the subscription UI
+ */
 function commons_follow_ui_generate_tabs($account) {
   $tabs = array();
-  foreach (array_keys(message_subscribe_flag_get_flags()) as $flag_name) {
+  foreach (array_keys(message_subscribe_flag_get_flags(NULL, NULL, $account, FALSE)) as $flag_name) {
+    if ($view = message_subscribe_ui_get_view($account, $flag_name)) {
+
+      // We have to do some 'verbose' view loading here, otherwise we will get a
+      // pager when looking at an empty view result.
+      $view->get_total_rows = TRUE;
+      $view->pre_execute();
+      $view->execute();
+      if ($view->total_rows == '0') {
+        unset($view->query->pager);
+      }
+      $preview = $view->preview();
+      $count = $view->total_rows;
+    }
+    else {
+      $count = 0;
+    }
     $tabs[$flag_name] = array(
-      'title' => commons_follow_ui_tab_title($account, $flag_name),
-      'contents' => array('#markup' => message_subscribe_ui_tab($account, $flag_name)),
+      'title' => commons_follow_ui_tab_title($account, $flag_name, $count),
+      'contents' => array('#markup' => $preview),
     );
   }
-  $settings = array('style' => 'Commons Tabs', 'ajax' => FALSE, 'html' => TRUE, 'title' => 'test', 'default_tab' => 'commons_follow_group');
-  $built_tabs = quicktabs_build_quicktabs('commons_follow_ui', $settings, $tabs);
-  return $built_tabs;
-}
\ No newline at end of file
+
+  if (!empty($tabs)) {
+    $settings = array(
+      'style' => 'Commons Tabs',
+      'ajax' => FALSE,
+      'html' => TRUE,
+      'title' => 'test',
+      'default_tab' => 'commons_follow_group',
+    );
+    $built_tabs = quicktabs_build_quicktabs('commons_follow_ui', $settings, $tabs);
+    return $built_tabs;
+  }
+  else {
+    return array();
+  }
+}
diff --git a/modules/commons/commons_groups/commons_groups.features.field_instance.inc b/modules/commons/commons_groups/commons_groups.features.field_instance.inc
index 54ac033..0144c87 100644
--- a/modules/commons/commons_groups/commons_groups.features.field_instance.inc
+++ b/modules/commons/commons_groups/commons_groups.features.field_instance.inc
@@ -19,6 +19,7 @@ function commons_groups_field_default_field_instances() {
     }
   }
   $group_bundles = og_get_all_group_bundle();
+
   if (empty($group_bundles['node'])) {
     // Make sure group_bundles contains at least the group node bundle, in order
     // to create the group audience field for it when installing the profile.
@@ -365,7 +366,7 @@ function commons_groups_field_definition_group(&$field_instances, $entity_type,
 
   // Exported field_instance: 'node-group-field_group_logo'
   $field_instances["$entity_type-$bundle-field_group_logo"] = array(
-    'bundle' => 'group',
+    'bundle' => $bundle,
     'deleted' => '0',
     'description' => '',
     'display' => array(
@@ -416,7 +417,7 @@ function commons_groups_field_definition_group(&$field_instances, $entity_type,
 
 function commons_groups_field_definition(&$field_instances, $entity_type, $bundle) {
   // Exported field_instance: 'node-post-og_group_ref'
-   $field_instances["$entity_type-$bundle-og_group_ref"] = array(
+  $field_instances["$entity_type-$bundle-og_group_ref"] = array(
     'bundle' => $bundle,
     'default_value' => NULL,
     'default_value_function' => 'commons_groups_entityreference_default_value',
diff --git a/modules/commons/commons_groups/commons_groups.features.user_permission.inc b/modules/commons/commons_groups/commons_groups.features.user_permission.inc
index 9fb3e99..ec080a3 100644
--- a/modules/commons/commons_groups/commons_groups.features.user_permission.inc
+++ b/modules/commons/commons_groups/commons_groups.features.user_permission.inc
@@ -10,25 +10,31 @@
 function commons_groups_user_default_permissions() {
   $permissions = array();
 
-  // Exported permission: 'create group content'.
-  $permissions['create group content'] = array(
-    'name' => 'create group content',
-    'roles' => array(
-      'administrator' => 'administrator',
-      'authenticated user' => 'authenticated user',
-    ),
-    'module' => 'node',
-  );
+  $groups = commons_groups_get_group_types();
 
-  // Exported permission: 'edit own group content'.
-  $permissions['edit own group content'] = array(
-    'name' => 'edit own group content',
-    'roles' => array(
-      'administrator' => 'administrator',
-      'authenticated user' => 'authenticated user',
-    ),
-    'module' => 'node',
-  );
+  if (isset($groups['node'])) {
+    foreach ($groups['node'] as $bundle => $group_info) {
+      // Exported permission: 'create group content'.
+      $permissions["create $bundle content"] = array(
+        'name' => "create $bundle content",
+        'roles' => array(
+          'administrator' => 'administrator',
+          'authenticated user' => 'authenticated user',
+        ),
+        'module' => 'node',
+      );
+
+      // Exported permission: 'edit own group content'.
+      $permissions["edit own $bundle content"] = array(
+        'name' => "edit own $bundle content",
+        'roles' => array(
+          'administrator' => 'administrator',
+          'authenticated user' => 'authenticated user',
+        ),
+        'module' => 'node',
+      );
+    }
+  }
 
   return $permissions;
 }
diff --git a/modules/commons/commons_groups/commons_groups.module b/modules/commons/commons_groups/commons_groups.module
index c122918..39e0290 100644
--- a/modules/commons/commons_groups/commons_groups.module
+++ b/modules/commons/commons_groups/commons_groups.module
@@ -92,29 +92,33 @@ function commons_groups_entity_view($entity, $type, $view_mode, $langcode) {
  *
  * Alter the privacy settings fields.
  */
-function commons_groups_form_group_node_form_alter(&$form, &$form_state) {
-  // The group privacy settings are not required.
-  $form['field_og_subscribe_settings'][LANGUAGE_NONE]['#required'] = FALSE;
-
-  if (module_exists('og_access')) {
-    // Display private content checkbox only when "Joining requires approval"
-    // is selected.
-    $form['field_og_access_default_value']['#states'] = array(
-      'visible' => array(
-        ':input[name="field_og_subscribe_settings[' . LANGUAGE_NONE . ']"]' => array('value' => 'approval'),
-      ),
+function commons_groups_form_node_form_alter(&$form, &$form_state) {
+  $groups = og_get_all_group_bundle();
+
+  if (isset($groups['node']) && in_array($form_state['node']->type, array_keys($groups['node']))) {
+    // The group privacy settings are not required.
+    $form['field_og_subscribe_settings'][LANGUAGE_NONE]['#required'] = FALSE;
+
+    if (module_exists('og_access')) {
+      // Display private content checkbox only when "Joining requires approval"
+      // is selected.
+      $form['field_og_access_default_value']['#states'] = array(
+        'visible' => array(
+          ':input[name="field_og_subscribe_settings[' . LANGUAGE_NONE . ']"]' => array('value' => 'approval'),
+        ),
+      );
+
+      $form['#after_build'] = array('commons_groups_form_group_node_after_build');
+    }
+
+    $form['#attached']['css'] = array(
+      drupal_get_path('module', 'commons_groups') . '/css/commons_groups.css',
     );
 
-    $form['#after_build'] = array('commons_groups_form_group_node_after_build');
+    // The group access is set on commons_groups_node_presave().
+    $form['group_access'][LANGUAGE_NONE]['#required'] = FALSE;
+    $form['group_access']['#access'] = FALSE;
   }
-
-  $form['#attached']['css'] = array(
-    drupal_get_path('module', 'commons_groups') . '/css/commons_groups.css',
-  );
-
-  // The group access is set on commons_groups_node_presave().
-  $form['group_access'][LANGUAGE_NONE]['#required'] = FALSE;
-  $form['group_access']['#access'] = FALSE;
 }
 
 /**
@@ -233,7 +237,9 @@ function commons_groups_features_pipe_alter(&$pipe, $data, $export) {
     foreach ($pipe['field_instance'] as $delta => $value) {
       $args = explode('-', $value);
       $field_name = $args[2];
-      if ($field_name == 'og_group_ref') {
+      $excluded_fields = array('og_group_ref', 'field_og_access_default_value',
+        'field_og_subscribe_settings', 'og_roles_permissions', 'group_access', 'field_group_logo', 'group_group', 'body');
+      if (in_array($field_name, $excluded_fields)) {
         unset($pipe['field_instance'][$delta]);
       }
     }
@@ -255,6 +261,7 @@ function commons_groups_commons_entity_integration() {
     'node' => array(
       'group' => array(
         'is_group_content' => FALSE,
+        'is_group' => TRUE,
         'exclude_commons_follow' => TRUE,
       ),
     ),
@@ -295,10 +302,7 @@ function commons_groups_group_contributors_count_topics($group) {
       return '';
     }
     $contributors_count = $view->total_rows;
-    $output .= l(t('@contributors_count @contributors', array(
-      '@contributors_count' => $contributors_count,
-      '@contributors' => format_plural($contributors_count, 'contributor', 'contributors'),
-    )), 'node/' . $group->nid . '/contributors');
+    $output .= l(format_plural($contributors_count, '1 contributor', '@count contributors'), 'node/' . $group->nid . '/contributors');
   }
   // Format the list of topics:
   if (!empty($group->field_topics[LANGUAGE_NONE])) {
@@ -415,7 +419,7 @@ function commons_groups_system_info_alter(&$info, $file, $type) {
   // commons_groups_entity_types variable.
   // We must add a corresponding line for each field instance
   // to commons_groups.info so that Features is aware of the instance
-  // and can sucessfully revert the field_instance component back
+  // and can successfully revert the field_instance component back
   // to its default state.
   if ($file->name == 'commons_groups') {
     $group_bundles = og_get_all_group_bundle();
@@ -426,10 +430,22 @@ function commons_groups_system_info_alter(&$info, $file, $type) {
         $info['features']['field_instance'][] = "node-$bundle-field_og_access_default_value";
         $info['features']['field_instance'][] = "node-$bundle-field_og_subscribe_settings";
         $info['features']['field_instance'][] = "node-$bundle-og_roles_permissions";
+        $info['features']['field_instance'][] = "node-$bundle-body";
+        $info['features']['field_instance'][] = "node-$bundle-group_group";
+
         // These fields are only necessary when og_access.module is enabled.
-        $info['features']['field_instance'][] = "node-$bundle-field_og_access_default_value";
         $info['features']['field_instance'][] = "node-$bundle-group_access";
         $info['features']['field_instance'][] = "node-$bundle-field_group_logo";
+
+        // Add default strongarm settings.
+        $info['features']['variable'][] = "comment_anonymous_$bundle";
+        $info['features']['variable'][] = "comment_default_mode_$bundle";
+        $info['features']['variable'][] = "comment_default_per_page_$bundle";
+        $info['features']['variable'][] = "comment_form_location_$bundle";
+        $info['features']['variable'][] = "comment_$bundle";
+        $info['features']['variable'][] = "comment_preview_$bundle";
+        $info['features']['variable'][] = "comment_subject_field_$bundle";
+        $info['features']['variable'][] = "field_bundle_settings_node__$bundle";
       }
     }
     $group_content_entity_types = commons_groups_get_group_content_entity_types();
@@ -441,6 +457,17 @@ function commons_groups_system_info_alter(&$info, $file, $type) {
         }
       }
     }
+
+    // Commons specific group variables.
+    $commons_groups = commons_groups_get_group_types();
+    if (isset($commons_groups['node'])) {
+      foreach ($commons_groups['node'] as $bundle => $group_info) {
+        $info['features']['variable'][] = "node_options_$bundle";
+        $info['features']['variable'][] = "node_preview_$bundle";
+        $info['features']['variable'][] = "node_submitted_$bundle";
+        $info['features']['variable'][] = "og_group_manager_default_rids_node_$bundle";
+      }
+    }
   }
 }
 
@@ -829,7 +856,28 @@ function commons_groups_get_group_content_entity_types() {
   }
 
   return $commons_entity_integrations;
+}
+
+/**
+ * Returns an array of entity types that are defined as a group.
+ */
+function commons_groups_get_group_types() {
+  // Find all Commons Entity integrations.
+  $commons_groups = array();
+  $commons_entity_integrations = commons_entity_integration_info();
+  if (empty($commons_entity_integrations)) {
+    return array();
+  }
+
+  foreach ($commons_entity_integrations as $entity_type => $integration) {
+    foreach ($integration as $bundle => $options) {
+      if (isset($options['is_group']) && $options['is_group'] == TRUE) {
+        $commons_groups[$entity_type][$bundle] = $commons_entity_integrations[$entity_type][$bundle];
+      }
+    }
+  }
 
+  return $commons_groups;
 }
 
 /**
diff --git a/modules/commons/commons_groups/commons_groups.strongarm.inc b/modules/commons/commons_groups/commons_groups.strongarm.inc
index c93c04e..42321f3 100644
--- a/modules/commons/commons_groups/commons_groups.strongarm.inc
+++ b/modules/commons/commons_groups/commons_groups.strongarm.inc
@@ -9,94 +9,148 @@
  */
 function commons_groups_strongarm() {
   $export = array();
-
-  $strongarm = new stdClass();
-  $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
-  $strongarm->api_version = 1;
-  $strongarm->name = 'comment_anonymous_group';
-  $strongarm->value = 0;
-  $export['comment_anonymous_group'] = $strongarm;
-
-  $strongarm = new stdClass();
-  $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
-  $strongarm->api_version = 1;
-  $strongarm->name = 'comment_default_mode_group';
-  $strongarm->value = 1;
-  $export['comment_default_mode_group'] = $strongarm;
-
-  $strongarm = new stdClass();
-  $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
-  $strongarm->api_version = 1;
-  $strongarm->name = 'comment_default_per_page_group';
-  $strongarm->value = '50';
-  $export['comment_default_per_page_group'] = $strongarm;
-
-  $strongarm = new stdClass();
-  $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
-  $strongarm->api_version = 1;
-  $strongarm->name = 'comment_form_location_group';
-  $strongarm->value = 1;
-  $export['comment_form_location_group'] = $strongarm;
-
-  $strongarm = new stdClass();
-  $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
-  $strongarm->api_version = 1;
-  $strongarm->name = 'comment_group';
-  $strongarm->value = '0';
-  $export['comment_group'] = $strongarm;
-
-  $strongarm = new stdClass();
-  $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
-  $strongarm->api_version = 1;
-  $strongarm->name = 'comment_preview_group';
-  $strongarm->value = '1';
-  $export['comment_preview_group'] = $strongarm;
-
-  $strongarm = new stdClass();
-  $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
-  $strongarm->api_version = 1;
-  $strongarm->name = 'comment_subject_field_group';
-  $strongarm->value = 1;
-  $export['comment_subject_field_group'] = $strongarm;
-
-  $strongarm = new stdClass();
-  $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
-  $strongarm->api_version = 1;
-  $strongarm->name = 'field_bundle_settings_node__group';
-  $strongarm->value = array(
-    'view_modes' => array(
-      'teaser' => array(
-        'custom_settings' => TRUE,
-      ),
-      'full' => array(
-        'custom_settings' => FALSE,
-      ),
-      'rss' => array(
-        'custom_settings' => FALSE,
-      ),
-      'search_index' => array(
-        'custom_settings' => FALSE,
-      ),
-      'search_result' => array(
-        'custom_settings' => FALSE,
-      ),
-      'diff_standard' => array(
-        'custom_settings' => FALSE,
-      ),
-      'token' => array(
-        'custom_settings' => FALSE,
-      ),
-    ),
-    'extra_fields' => array(
-      'form' => array(
-        'title' => array(
-          'weight' => '-5',
+  $commons_groups = commons_groups_get_group_types();
+  $group_bundles = og_get_all_group_bundle();
+
+  // These settings are automatic for all groups used within commons.
+  if (isset($group_bundles['node'])) {
+    foreach ($group_bundles['node'] as $bundle => $group_info) {
+      $strongarm = new stdClass();
+      $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
+      $strongarm->api_version = 1;
+      $strongarm->name = "comment_anonymous_$bundle";
+      $strongarm->value = 0;
+      $export["comment_anonymous_$bundle"] = $strongarm;
+
+      $strongarm = new stdClass();
+      $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
+      $strongarm->api_version = 1;
+      $strongarm->name = "comment_default_mode_$bundle";
+      $strongarm->value = 1;
+      $export["comment_default_mode_$bundle"] = $strongarm;
+
+      $strongarm = new stdClass();
+      $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
+      $strongarm->api_version = 1;
+      $strongarm->name = "comment_default_per_page_$bundle";
+      $strongarm->value = '50';
+      $export["comment_default_per_page_$bundle"] = $strongarm;
+
+      $strongarm = new stdClass();
+      $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
+      $strongarm->api_version = 1;
+      $strongarm->name = "comment_form_location_$bundle";
+      $strongarm->value = 1;
+      $export["comment_form_location_$bundle"] = $strongarm;
+
+      $strongarm = new stdClass();
+      $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
+      $strongarm->api_version = 1;
+      $strongarm->name = "comment_$bundle";
+      $strongarm->value = '0';
+      $export["comment_$bundle"] = $strongarm;
+
+      $strongarm = new stdClass();
+      $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
+      $strongarm->api_version = 1;
+      $strongarm->name = "comment_preview_$bundle";
+      $strongarm->value = '1';
+      $export["comment_preview_$bundle"] = $strongarm;
+
+      $strongarm = new stdClass();
+      $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
+      $strongarm->api_version = 1;
+      $strongarm->name = "comment_subject_field_$bundle";
+      $strongarm->value = 1;
+      $export["comment_subject_field_$bundle"] = $strongarm;
+
+      $strongarm = new stdClass();
+      $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
+      $strongarm->api_version = 1;
+      $strongarm->name = "field_bundle_settings_node__$bundle";
+      $strongarm->value = array(
+        'view_modes' => array(
+          'teaser' => array(
+            'custom_settings' => TRUE,
+          ),
+          'full' => array(
+            'custom_settings' => FALSE,
+          ),
+          'rss' => array(
+            'custom_settings' => FALSE,
+          ),
+          'search_index' => array(
+            'custom_settings' => FALSE,
+          ),
+          'search_result' => array(
+            'custom_settings' => FALSE,
+          ),
+          'diff_standard' => array(
+            'custom_settings' => FALSE,
+          ),
+          'token' => array(
+            'custom_settings' => FALSE,
+          ),
         ),
-      ),
-      'display' => array(),
-    ),
-  );
-  $export['field_bundle_settings_node__group'] = $strongarm;
+        'extra_fields' => array(
+          'form' => array(
+            'title' => array(
+              'weight' => '-5',
+            ),
+          ),
+          'display' => array(),
+        ),
+      );
+      $export["field_bundle_settings_node__$bundle"] = $strongarm;
+    }
+  }
+
+  // Add some additional default settings if the node implements the commons
+  // Specific entity integrations hook.
+  if (isset($commons_groups['node'])) {
+    foreach ($commons_groups['node'] as $bundle => $group_info) {
+
+      $strongarm = new stdClass();
+      $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
+      $strongarm->api_version = 1;
+      $strongarm->name = "node_options_$bundle";
+      $strongarm->value = array(
+        0 => 'revision',
+      );
+      $export["node_options_$bundle"] = $strongarm;
+
+      $strongarm = new stdClass();
+      $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
+      $strongarm->api_version = 1;
+      $strongarm->name = "node_preview_$bundle";
+      $strongarm->value = '1';
+      $export["node_preview_$bundle"] = $strongarm;
+
+      $strongarm = new stdClass();
+      $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
+      $strongarm->api_version = 1;
+      $strongarm->name = "node_submitted_$bundle";
+      $strongarm->value = 0;
+      $export["node_submitted_$bundle"] = $strongarm;
+
+      $strongarm = new stdClass();
+      $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
+      $strongarm->api_version = 1;
+      $strongarm->name = "og_group_manager_default_rids_node_$bundle";
+      $strongarm->value = array(
+        3 => '3',
+      );
+      $export["og_group_manager_default_rids_node_$bundle"] = $strongarm;
+    }
+  }
+
+  // These following settings are ONLY for the group content type.
+  $strongarm = new stdClass();
+  $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
+  $strongarm->api_version = 1;
+  $strongarm->name = "pathauto_node_group_pattern";
+  $strongarm->value = 'groups/[node:title]';
+  $export["pathauto_node_group_pattern"] = $strongarm;
 
   $strongarm = new stdClass();
   $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
@@ -117,45 +171,6 @@ function commons_groups_strongarm() {
   $strongarm = new stdClass();
   $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
   $strongarm->api_version = 1;
-  $strongarm->name = 'node_options_group';
-  $strongarm->value = array(
-    0 => 'revision',
-  );
-  $export['node_options_group'] = $strongarm;
-
-  $strongarm = new stdClass();
-  $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
-  $strongarm->api_version = 1;
-  $strongarm->name = 'node_preview_group';
-  $strongarm->value = '1';
-  $export['node_preview_group'] = $strongarm;
-
-  $strongarm = new stdClass();
-  $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
-  $strongarm->api_version = 1;
-  $strongarm->name = 'node_submitted_group';
-  $strongarm->value = 0;
-  $export['node_submitted_group'] = $strongarm;
-
-  $strongarm = new stdClass();
-  $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
-  $strongarm->api_version = 1;
-  $strongarm->name = 'og_group_manager_default_rids_node_group';
-  $strongarm->value = array(
-    3 => '3',
-  );
-  $export['og_group_manager_default_rids_node_group'] = $strongarm;
-
-  $strongarm = new stdClass();
-  $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
-  $strongarm->api_version = 1;
-  $strongarm->name = 'pathauto_node_group_pattern';
-  $strongarm->value = 'groups/[node:title]';
-  $export['pathauto_node_group_pattern'] = $strongarm;
-
-  $strongarm = new stdClass();
-  $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
-  $strongarm->api_version = 1;
   $strongarm->name = 'pathauto_node_pattern';
   $strongarm->value = 'groups/[node:og-group-ref:0:title]/[node:title]';
   $export['pathauto_node_pattern'] = $strongarm;
diff --git a/modules/commons/commons_groups/modules/commons_groups_pages/commons_groups_pages.module b/modules/commons/commons_groups/modules/commons_groups_pages/commons_groups_pages.module
index a3b0675..defdc24 100644
--- a/modules/commons/commons_groups/modules/commons_groups_pages/commons_groups_pages.module
+++ b/modules/commons/commons_groups/modules/commons_groups_pages/commons_groups_pages.module
@@ -5,3 +5,52 @@
  */
 
 include_once 'commons_groups_pages.features.inc';
+
+/**
+ * Implements hook_system_info_alter().
+ */
+function commons_groups_pages_system_info_alter(&$info, $file, $type) {
+  // Commons Groups dynamically adds the og_group_ref field to
+  // content types that request it by altering the
+  // commons_groups_entity_types variable.
+  // We must add a corresponding line for each field instance
+  // to commons_groups.info so that Features is aware of the instance
+  // and can successfully revert the field_instance component back
+  // to its default state.
+  if ($file->name == 'commons_groups_pages') {
+    $group_bundles = og_get_all_group_bundle();
+    if (!empty($group_bundles['node'])) {
+      foreach ($group_bundles['node'] as $bundle => $name) {
+        // These field instances should be added to groups regardless of
+        // whether og_access.module is enabled.
+        $info['features']['panelizer_defaults'][] = "node:$bundle:default";
+        $info['features']['panelizer_defaults'][] = "node:$bundle:default:teaser";
+        $info['features']['variable'][] = "panelizer_defaults_node_$bundle";
+      }
+    }
+  }
+}
+
+/*
+ * Implements hook_features_pipe_alter().
+ */
+function commons_groups_pages_features_pipe_alter(&$pipe, $data, $export) {
+  // Prevent Commons Groups related fields from being piped in features
+  // when a content type includes those fields.
+  if (!empty($pipe['panelizer_defaults'])) {
+
+    foreach ($pipe['panelizer_defaults'] as $delta => $value) {
+      $args = explode(':', $value);
+      $group_name = $args[1];
+
+      $group_bundles = og_get_all_group_bundle();
+      if (isset($group_bundles['node']) && isset($group_bundles['node']['group'])) {
+        unset($group_bundles['node']['group']);
+      }
+      $excluded_groups = array_keys($group_bundles);
+      if (in_array($group_name, $excluded_groups)) {
+        unset($pipe['field_instance'][$delta]);
+      }
+    }
+  }
+}
\ No newline at end of file
diff --git a/modules/commons/commons_groups/modules/commons_groups_pages/commons_groups_pages.panelizer.inc b/modules/commons/commons_groups/modules/commons_groups_pages/commons_groups_pages.panelizer.inc
index c55d237..0431bfb 100644
--- a/modules/commons/commons_groups/modules/commons_groups_pages/commons_groups_pages.panelizer.inc
+++ b/modules/commons/commons_groups/modules/commons_groups_pages/commons_groups_pages.panelizer.inc
@@ -10,441 +10,447 @@
 function commons_groups_pages_panelizer_defaults() {
   $export = array();
 
-  $panelizer = new stdClass();
-  $panelizer->disabled = FALSE; /* Edit this to true to make a default panelizer disabled initially */
-  $panelizer->api_version = 1;
-  $panelizer->name = 'node:group:default';
-  $panelizer->title = 'Default';
-  $panelizer->panelizer_type = 'node';
-  $panelizer->panelizer_key = 'group';
-  $panelizer->no_blocks = FALSE;
-  $panelizer->css_id = '';
-  $panelizer->css = '';
-  $panelizer->pipeline = 'ipe';
-  $panelizer->contexts = array();
-  $panelizer->relationships = array();
-  $panelizer->access = array();
-  $panelizer->view_mode = 'page_manager';
-  $panelizer->css_class = '';
-  $panelizer->title_element = 'H2';
-  $panelizer->link_to_entity = TRUE;
-  $panelizer->extra = '';
-  $display = new panels_display();
-  $display->layout = 'two_66_33';
-  $display->layout_settings = array();
-  $display->panel_settings = array(
-    'style_settings' => array(
-      'default' => NULL,
-      'top' => NULL,
-      'left' => NULL,
-      'right' => NULL,
-      'bottom' => NULL,
-      'two_66_33_top' => NULL,
-      'two_66_33_first' => NULL,
-      'two_66_33_second' => NULL,
-      'two_66_33_bottom' => NULL,
-    ),
-  );
-  $display->cache = array();
-  $display->title = '%node:title';
-  $display->uuid = '819deb2a-c56c-2214-558d-c52460a89778';
-  $display->content = array();
-  $display->panels = array();
-    $pane = new stdClass();
-    $pane->pid = 'new-10f12c5b-679e-d294-b1bd-9aac845800f5';
-    $pane->panel = 'two_66_33_first';
-    $pane->type = 'node_content';
-    $pane->subtype = 'node_content';
-    $pane->shown = TRUE;
-    $pane->access = array();
-    $pane->configuration = array(
-      'links' => 1,
-      'no_extras' => 0,
-      'override_title' => 1,
-      'override_title_text' => '',
-      'identifier' => '',
-      'link' => 0,
-      'leave_node_title' => 0,
-      'build_mode' => 'full',
-      'context' => 'panelizer',
-    );
-    $pane->cache = array();
-    $pane->style = array(
-      'settings' => NULL,
-    );
-    $pane->css = array();
-    $pane->extras = array();
-    $pane->position = 0;
-    $pane->locks = array();
-    $pane->uuid = '10f12c5b-679e-d294-b1bd-9aac845800f5';
-    $display->content['new-10f12c5b-679e-d294-b1bd-9aac845800f5'] = $pane;
-    $display->panels['two_66_33_first'][0] = 'new-10f12c5b-679e-d294-b1bd-9aac845800f5';
-    $pane = new stdClass();
-    $pane->pid = 'new-80b62348-7cee-e304-5d65-0ce1b6bbb216';
-    $pane->panel = 'two_66_33_first';
-    $pane->type = 'commons_bw_group';
-    $pane->subtype = 'commons_bw_group';
-    $pane->shown = TRUE;
-    $pane->access = array();
-    $pane->configuration = array(
-      'override_title' => 0,
-      'override_title_text' => '',
-    );
-    $pane->cache = array();
-    $pane->style = array(
-      'settings' => NULL,
-    );
-    $pane->css = array();
-    $pane->extras = array();
-    $pane->position = 1;
-    $pane->locks = array();
-    $pane->uuid = '80b62348-7cee-e304-5d65-0ce1b6bbb216';
-    $display->content['new-80b62348-7cee-e304-5d65-0ce1b6bbb216'] = $pane;
-    $display->panels['two_66_33_first'][1] = 'new-80b62348-7cee-e304-5d65-0ce1b6bbb216';
-    $pane = new stdClass();
-    $pane->pid = 'new-13120946-03a1-bfc4-2d74-f39dd758ebce';
-    $pane->panel = 'two_66_33_second';
-    $pane->type = 'views_panes';
-    $pane->subtype = 'commons_events_upcoming-panel_pane_1';
-    $pane->shown = TRUE;
-    $pane->access = array();
-    $pane->configuration = array(
-      'context' => array(
-        0 => 'panelizer',
-      ),
-    );
-    $pane->cache = array();
-    $pane->style = array(
-      'settings' => NULL,
-    );
-    $pane->css = array();
-    $pane->extras = array();
-    $pane->position = 0;
-    $pane->locks = array();
-    $pane->uuid = '13120946-03a1-bfc4-2d74-f39dd758ebce';
-    $display->content['new-13120946-03a1-bfc4-2d74-f39dd758ebce'] = $pane;
-    $display->panels['two_66_33_second'][0] = 'new-13120946-03a1-bfc4-2d74-f39dd758ebce';
-    $pane = new stdClass();
-    $pane->pid = 'new-a7009535-0e2a-2c94-edd2-4ecc953c4ca2';
-    $pane->panel = 'two_66_33_second';
-    $pane->type = 'views_panes';
-    $pane->subtype = 'activity_group-panel_pane_1';
-    $pane->shown = TRUE;
-    $pane->access = array();
-    $pane->configuration = array(
-      'items_per_page' => '4',
-      'arguments' => array(
-        'gid' => '%node:nid',
-      ),
-    );
-    $pane->cache = array();
-    $pane->style = array(
-      'settings' => NULL,
-    );
-    $pane->css = array();
-    $pane->extras = array();
-    $pane->position = 1;
-    $pane->locks = array();
-    $pane->uuid = 'a7009535-0e2a-2c94-edd2-4ecc953c4ca2';
-    $display->content['new-a7009535-0e2a-2c94-edd2-4ecc953c4ca2'] = $pane;
-    $display->panels['two_66_33_second'][1] = 'new-a7009535-0e2a-2c94-edd2-4ecc953c4ca2';
-    $pane = new stdClass();
-    $pane->pid = 'new-ba735f2b-4734-7724-098d-1925c6a4bb47';
-    $pane->panel = 'two_66_33_second';
-    $pane->type = 'views_panes';
-    $pane->subtype = 'commons_radioactivity_groups_active_in_group-panel_pane_1';
-    $pane->shown = TRUE;
-    $pane->access = array();
-    $pane->configuration = array(
-      'arguments' => array(
-        'gid' => '%node:nid',
-      ),
-      'context' => array(
-        0 => 'panelizer',
-      ),
-    );
-    $pane->cache = array();
-    $pane->style = array(
-      'settings' => NULL,
-    );
-    $pane->css = array();
-    $pane->extras = array();
-    $pane->position = 2;
-    $pane->locks = array();
-    $pane->uuid = 'ba735f2b-4734-7724-098d-1925c6a4bb47';
-    $display->content['new-ba735f2b-4734-7724-098d-1925c6a4bb47'] = $pane;
-    $display->panels['two_66_33_second'][2] = 'new-ba735f2b-4734-7724-098d-1925c6a4bb47';
-    $pane = new stdClass();
-    $pane->pid = 'new-52796f83-93dd-2cf4-41aa-33520dc31e5f';
-    $pane->panel = 'two_66_33_second';
-    $pane->type = 'views_panes';
-    $pane->subtype = 'commons_contributors_group-panel_pane_2';
-    $pane->shown = TRUE;
-    $pane->access = array();
-    $pane->configuration = array(
-      'context' => array(
-        0 => 'panelizer',
-      ),
-    );
-    $pane->cache = array(
-      'method' => 'simple',
-      'settings' => array(
-        'lifetime' => '15',
-        'granularity' => 'context',
-      ),
-    );
-    $pane->style = array(
-      'settings' => NULL,
-    );
-    $pane->css = array();
-    $pane->extras = array();
-    $pane->position = 3;
-    $pane->locks = array();
-    $pane->uuid = '52796f83-93dd-2cf4-41aa-33520dc31e5f';
-    $display->content['new-52796f83-93dd-2cf4-41aa-33520dc31e5f'] = $pane;
-    $display->panels['two_66_33_second'][3] = 'new-52796f83-93dd-2cf4-41aa-33520dc31e5f';
-  $display->hide_title = PANELS_TITLE_FIXED;
-  $display->title_pane = '0';
-  $panelizer->display = $display;
-  $export['node:group:default'] = $panelizer;
+  $group_bundles = og_get_all_group_bundle();
+  if (!empty($group_bundles['node'])) {
+    foreach ($group_bundles['node'] as $bundle => $name) {
+      $panelizer = new stdClass();
+      $panelizer->disabled = FALSE; /* Edit this to true to make a default panelizer disabled initially */
+      $panelizer->api_version = 1;
+      $panelizer->name = "node:$bundle:default";
+      $panelizer->title = 'Default';
+      $panelizer->panelizer_type = 'node';
+      $panelizer->panelizer_key = $bundle;
+      $panelizer->no_blocks = FALSE;
+      $panelizer->css_id = '';
+      $panelizer->css = '';
+      $panelizer->pipeline = 'ipe';
+      $panelizer->contexts = array();
+      $panelizer->relationships = array();
+      $panelizer->access = array();
+      $panelizer->view_mode = 'page_manager';
+      $panelizer->css_class = '';
+      $panelizer->title_element = 'H2';
+      $panelizer->link_to_entity = TRUE;
+      $panelizer->extra = '';
+      $display = new panels_display();
+      $display->layout = 'two_66_33';
+      $display->layout_settings = array();
+      $display->panel_settings = array(
+        'style_settings' => array(
+          'default' => NULL,
+          'top' => NULL,
+          'left' => NULL,
+          'right' => NULL,
+          'bottom' => NULL,
+          'two_66_33_top' => NULL,
+          'two_66_33_first' => NULL,
+          'two_66_33_second' => NULL,
+          'two_66_33_bottom' => NULL,
+        ),
+      );
+      $display->cache = array();
+      $display->title = '%node:title';
+      $display->uuid = '819deb2a-c56c-2214-558d-c52460a89778';
+      $display->content = array();
+      $display->panels = array();
+      $pane = new stdClass();
+      $pane->pid = 'new-10f12c5b-679e-d294-b1bd-9aac845800f5';
+      $pane->panel = 'two_66_33_first';
+      $pane->type = 'node_content';
+      $pane->subtype = 'node_content';
+      $pane->shown = TRUE;
+      $pane->access = array();
+      $pane->configuration = array(
+        'links' => 1,
+        'no_extras' => 0,
+        'override_title' => 1,
+        'override_title_text' => '',
+        'identifier' => '',
+        'link' => 0,
+        'leave_node_title' => 0,
+        'build_mode' => 'full',
+        'context' => 'panelizer',
+      );
+      $pane->cache = array();
+      $pane->style = array(
+        'settings' => NULL,
+      );
+      $pane->css = array();
+      $pane->extras = array();
+      $pane->position = 0;
+      $pane->locks = array();
+      $pane->uuid = '10f12c5b-679e-d294-b1bd-9aac845800f5';
+      $display->content['new-10f12c5b-679e-d294-b1bd-9aac845800f5'] = $pane;
+      $display->panels['two_66_33_first'][0] = 'new-10f12c5b-679e-d294-b1bd-9aac845800f5';
+      $pane = new stdClass();
+      $pane->pid = 'new-80b62348-7cee-e304-5d65-0ce1b6bbb216';
+      $pane->panel = 'two_66_33_first';
+      $pane->type = 'commons_bw_group';
+      $pane->subtype = 'commons_bw_group';
+      $pane->shown = TRUE;
+      $pane->access = array();
+      $pane->configuration = array(
+        'override_title' => 0,
+        'override_title_text' => '',
+      );
+      $pane->cache = array();
+      $pane->style = array(
+        'settings' => NULL,
+      );
+      $pane->css = array();
+      $pane->extras = array();
+      $pane->position = 1;
+      $pane->locks = array();
+      $pane->uuid = '80b62348-7cee-e304-5d65-0ce1b6bbb216';
+      $display->content['new-80b62348-7cee-e304-5d65-0ce1b6bbb216'] = $pane;
+      $display->panels['two_66_33_first'][1] = 'new-80b62348-7cee-e304-5d65-0ce1b6bbb216';
+      $pane = new stdClass();
+      $pane->pid = 'new-13120946-03a1-bfc4-2d74-f39dd758ebce';
+      $pane->panel = 'two_66_33_second';
+      $pane->type = 'views_panes';
+      $pane->subtype = 'commons_events_upcoming-panel_pane_1';
+      $pane->shown = TRUE;
+      $pane->access = array();
+      $pane->configuration = array(
+        'context' => array(
+          0 => 'panelizer',
+        ),
+      );
+      $pane->cache = array();
+      $pane->style = array(
+        'settings' => NULL,
+      );
+      $pane->css = array();
+      $pane->extras = array();
+      $pane->position = 0;
+      $pane->locks = array();
+      $pane->uuid = '13120946-03a1-bfc4-2d74-f39dd758ebce';
+      $display->content['new-13120946-03a1-bfc4-2d74-f39dd758ebce'] = $pane;
+      $display->panels['two_66_33_second'][0] = 'new-13120946-03a1-bfc4-2d74-f39dd758ebce';
+      $pane = new stdClass();
+      $pane->pid = 'new-a7009535-0e2a-2c94-edd2-4ecc953c4ca2';
+      $pane->panel = 'two_66_33_second';
+      $pane->type = 'views_panes';
+      $pane->subtype = 'activity_group-panel_pane_1';
+      $pane->shown = TRUE;
+      $pane->access = array();
+      $pane->configuration = array(
+        'items_per_page' => '4',
+        'arguments' => array(
+          'gid' => '%node:nid',
+        ),
+      );
+      $pane->cache = array();
+      $pane->style = array(
+        'settings' => NULL,
+      );
+      $pane->css = array();
+      $pane->extras = array();
+      $pane->position = 1;
+      $pane->locks = array();
+      $pane->uuid = 'a7009535-0e2a-2c94-edd2-4ecc953c4ca2';
+      $display->content['new-a7009535-0e2a-2c94-edd2-4ecc953c4ca2'] = $pane;
+      $display->panels['two_66_33_second'][1] = 'new-a7009535-0e2a-2c94-edd2-4ecc953c4ca2';
+      $pane = new stdClass();
+      $pane->pid = 'new-ba735f2b-4734-7724-098d-1925c6a4bb47';
+      $pane->panel = 'two_66_33_second';
+      $pane->type = 'views_panes';
+      $pane->subtype = 'commons_radioactivity_groups_active_in_group-panel_pane_1';
+      $pane->shown = TRUE;
+      $pane->access = array();
+      $pane->configuration = array(
+        'arguments' => array(
+          'gid' => '%node:nid',
+        ),
+        'context' => array(
+          0 => 'panelizer',
+        ),
+      );
+      $pane->cache = array();
+      $pane->style = array(
+        'settings' => NULL,
+      );
+      $pane->css = array();
+      $pane->extras = array();
+      $pane->position = 2;
+      $pane->locks = array();
+      $pane->uuid = 'ba735f2b-4734-7724-098d-1925c6a4bb47';
+      $display->content['new-ba735f2b-4734-7724-098d-1925c6a4bb47'] = $pane;
+      $display->panels['two_66_33_second'][2] = 'new-ba735f2b-4734-7724-098d-1925c6a4bb47';
+      $pane = new stdClass();
+      $pane->pid = 'new-52796f83-93dd-2cf4-41aa-33520dc31e5f';
+      $pane->panel = 'two_66_33_second';
+      $pane->type = 'views_panes';
+      $pane->subtype = 'commons_contributors_group-panel_pane_2';
+      $pane->shown = TRUE;
+      $pane->access = array();
+      $pane->configuration = array(
+        'context' => array(
+          0 => 'panelizer',
+        ),
+      );
+      $pane->cache = array(
+        'method' => 'simple',
+        'settings' => array(
+          'lifetime' => '15',
+          'granularity' => 'context',
+        ),
+      );
+      $pane->style = array(
+        'settings' => NULL,
+      );
+      $pane->css = array();
+      $pane->extras = array();
+      $pane->position = 3;
+      $pane->locks = array();
+      $pane->uuid = '52796f83-93dd-2cf4-41aa-33520dc31e5f';
+      $display->content['new-52796f83-93dd-2cf4-41aa-33520dc31e5f'] = $pane;
+      $display->panels['two_66_33_second'][3] = 'new-52796f83-93dd-2cf4-41aa-33520dc31e5f';
+      $display->hide_title = PANELS_TITLE_FIXED;
+      $display->title_pane = '0';
+      $panelizer->display = $display;
+      $export["node:$bundle:default"] = $panelizer;
+
+      $panelizer = new stdClass();
+      $panelizer->disabled = FALSE; /* Edit this to true to make a default panelizer disabled initially */
+      $panelizer->api_version = 1;
+      $panelizer->name = "node:$bundle:default:teaser";
+      $panelizer->title = 'Default';
+      $panelizer->panelizer_type = 'node';
+      $panelizer->panelizer_key = "$bundle";
+      $panelizer->no_blocks = FALSE;
+      $panelizer->css_id = '';
+      $panelizer->css = '';
+      $panelizer->pipeline = 'standard';
+      $panelizer->contexts = array();
+      $panelizer->relationships = array();
+      $panelizer->access = array();
+      $panelizer->view_mode = 'teaser';
+      $panelizer->css_class = '';
+      $panelizer->title_element = 'H2';
+      $panelizer->link_to_entity = TRUE;
+      $panelizer->extra = array();
+      $display = new panels_display();
+      $display->layout = 'one';
+      $display->layout_settings = array();
+      $display->panel_settings = array(
+        'style_settings' => array(
+          'default' => NULL,
+          'one_main' => NULL,
+        ),
+      );
+      $display->cache = array();
+      $display->title = '%node:title';
+      $display->uuid = '2880dc3a-9be6-dc34-a563-b9748d152f92';
+      $display->content = array();
+      $display->panels = array();
+      $pane = new stdClass();
+      $pane->pid = 'new-026f9d2d-fd0e-d794-1971-47eb628a7f6e';
+      $pane->panel = 'one_main';
+      $pane->type = 'entity_field';
+      $pane->subtype = 'node:group_group';
+      $pane->shown = TRUE;
+      $pane->access = array();
+      $pane->configuration = array(
+        'label' => 'hidden',
+        'formatter' => 'commons_groups_group_subscribe',
+        'delta_limit' => 0,
+        'delta_offset' => '0',
+        'delta_reversed' => FALSE,
+        'formatter_settings' => array(),
+        'context' => 'panelizer',
+        'override_title' => 0,
+        'override_title_text' => '',
+      );
+      $pane->cache = array();
+      $pane->style = array(
+        'settings' => NULL,
+      );
+      $pane->css = array();
+      $pane->extras = array();
+      $pane->position = 0;
+      $pane->locks = array();
+      $pane->uuid = '026f9d2d-fd0e-d794-1971-47eb628a7f6e';
+      $display->content['new-026f9d2d-fd0e-d794-1971-47eb628a7f6e'] = $pane;
+      $display->panels['one_main'][0] = 'new-026f9d2d-fd0e-d794-1971-47eb628a7f6e';
+      $pane = new stdClass();
+      $pane->pid = 'new-13859111-e3fa-5e54-a93c-57f09d719e38';
+      $pane->panel = 'one_main';
+      $pane->type = 'token';
+      $pane->subtype = 'node:commons-groups-group-contributors-count-topics';
+      $pane->shown = TRUE;
+      $pane->access = array();
+      $pane->configuration = array(
+        'sanitize' => 0,
+        'context' => 'panelizer',
+        'override_title' => 0,
+        'override_title_text' => '',
+      );
+      $pane->cache = array();
+      $pane->style = array(
+        'settings' => NULL,
+      );
+      $pane->css = array();
+      $pane->extras = array();
+      $pane->position = 1;
+      $pane->locks = array();
+      $pane->uuid = '13859111-e3fa-5e54-a93c-57f09d719e38';
+      $display->content['new-13859111-e3fa-5e54-a93c-57f09d719e38'] = $pane;
+      $display->panels['one_main'][1] = 'new-13859111-e3fa-5e54-a93c-57f09d719e38';
+      $pane = new stdClass();
+      $pane->pid = 'new-f7a3719c-d7be-f024-ed91-c8c0df943df4';
+      $pane->panel = 'one_main';
+      $pane->type = 'token';
+      $pane->subtype = 'node:flag-commons-follow-group-link';
+      $pane->shown = TRUE;
+      $pane->access = array();
+      $pane->configuration = array(
+        'sanitize' => 0,
+        'context' => 'panelizer',
+        'override_title' => 1,
+        'override_title_text' => '',
+      );
+      $pane->cache = array();
+      $pane->style = array(
+        'settings' => NULL,
+      );
+      $pane->css = array();
+      $pane->extras = array();
+      $pane->position = 2;
+      $pane->locks = array();
+      $pane->uuid = 'f7a3719c-d7be-f024-ed91-c8c0df943df4';
+      $display->content['new-f7a3719c-d7be-f024-ed91-c8c0df943df4'] = $pane;
+      $display->panels['one_main'][2] = 'new-f7a3719c-d7be-f024-ed91-c8c0df943df4';
+      $pane = new stdClass();
+      $pane->pid = 'new-926a99b3-8e75-aa14-2542-16f2ab9e70b3';
+      $pane->panel = 'one_main';
+      $pane->type = 'entity_field';
+      $pane->subtype = 'node:field_group_logo';
+      $pane->shown = TRUE;
+      $pane->access = array();
+      $pane->configuration = array(
+        'label' => 'hidden',
+        'formatter' => 'image',
+        'delta_limit' => 0,
+        'delta_offset' => '0',
+        'delta_reversed' => FALSE,
+        'formatter_settings' => array(
+          'image_style' => '50x50',
+          'image_link' => 'content',
+        ),
+        'context' => 'panelizer',
+        'override_title' => 0,
+        'override_title_text' => '',
+      );
+      $pane->cache = array();
+      $pane->style = array(
+        'settings' => NULL,
+      );
+      $pane->css = array();
+      $pane->extras = array();
+      $pane->position = 3;
+      $pane->locks = array();
+      $pane->uuid = '926a99b3-8e75-aa14-2542-16f2ab9e70b3';
+      $display->content['new-926a99b3-8e75-aa14-2542-16f2ab9e70b3'] = $pane;
+      $display->panels['one_main'][3] = 'new-926a99b3-8e75-aa14-2542-16f2ab9e70b3';
+      $pane = new stdClass();
+      $pane->pid = 'new-c22911c5-3c21-75b4-c5f3-80efb733956b';
+      $pane->panel = 'one_main';
+      $pane->type = 'entity_field';
+      $pane->subtype = 'node:body';
+      $pane->shown = TRUE;
+      $pane->access = array();
+      $pane->configuration = array(
+        'label' => 'hidden',
+        'formatter' => 'text_summary_or_trimmed',
+        'delta_limit' => 0,
+        'delta_offset' => '0',
+        'delta_reversed' => FALSE,
+        'formatter_settings' => array(
+          'trim_length' => '600',
+        ),
+        'context' => 'panelizer',
+        'override_title' => 0,
+        'override_title_text' => 'Por que no se ve?',
+      );
+      $pane->cache = array();
+      $pane->style = array(
+        'settings' => NULL,
+      );
+      $pane->css = array();
+      $pane->extras = array();
+      $pane->position = 4;
+      $pane->locks = array();
+      $pane->uuid = 'c22911c5-3c21-75b4-c5f3-80efb733956b';
+      $display->content['new-c22911c5-3c21-75b4-c5f3-80efb733956b'] = $pane;
+      $display->panels['one_main'][4] = 'new-c22911c5-3c21-75b4-c5f3-80efb733956b';
+      $pane = new stdClass();
+      $pane->pid = 'new-cb706c02-36e8-a414-c9f5-c34bf15861ca';
+      $pane->panel = 'one_main';
+      $pane->type = 'views';
+      $pane->subtype = 'commons_groups_recent_content';
+      $pane->shown = TRUE;
+      $pane->access = array();
+      $pane->configuration = array(
+        'override_pager_settings' => 0,
+        'use_pager' => 0,
+        'nodes_per_page' => '5',
+        'pager_id' => '0',
+        'offset' => '0',
+        'more_link' => 0,
+        'feed_icons' => 0,
+        'panel_args' => 0,
+        'link_to_view' => 0,
+        'args' => '',
+        'url' => '',
+        'display' => 'block',
+        'context' => array(
+          0 => 'panelizer.nid',
+        ),
+        'override_title' => 1,
+        'override_title_text' => 'Recent content',
+      );
+      $pane->cache = array();
+      $pane->style = array(
+        'settings' => NULL,
+      );
+      $pane->css = array();
+      $pane->extras = array();
+      $pane->position = 5;
+      $pane->locks = array();
+      $pane->uuid = 'cb706c02-36e8-a414-c9f5-c34bf15861ca';
+      $display->content['new-cb706c02-36e8-a414-c9f5-c34bf15861ca'] = $pane;
+      $display->panels['one_main'][5] = 'new-cb706c02-36e8-a414-c9f5-c34bf15861ca';
+      $pane = new stdClass();
+      $pane->pid = 'new-6c3207ac-19f3-8184-11ba-e3aee789a9c8';
+      $pane->panel = 'one_main';
+      $pane->type = 'views_panes';
+      $pane->subtype = 'commons_contributors_group-panel_pane_1';
+      $pane->shown = TRUE;
+      $pane->access = array();
+      $pane->configuration = array(
+        'context' => array(
+          0 => 'panelizer',
+        ),
+      );
+      $pane->cache = array();
+      $pane->style = array(
+        'settings' => NULL,
+      );
+      $pane->css = array();
+      $pane->extras = array();
+      $pane->position = 6;
+      $pane->locks = array();
+      $pane->uuid = '6c3207ac-19f3-8184-11ba-e3aee789a9c8';
+      $display->content['new-6c3207ac-19f3-8184-11ba-e3aee789a9c8'] = $pane;
+      $display->panels['one_main'][6] = 'new-6c3207ac-19f3-8184-11ba-e3aee789a9c8';
+      $display->hide_title = PANELS_TITLE_FIXED;
+      $display->title_pane = '0';
+      $panelizer->display = $display;
+      $export["node:$bundle:default:teaser"] = $panelizer;
+    }
+  }
 
-  $panelizer = new stdClass();
-  $panelizer->disabled = FALSE; /* Edit this to true to make a default panelizer disabled initially */
-  $panelizer->api_version = 1;
-  $panelizer->name = 'node:group:default:teaser';
-  $panelizer->title = 'Default';
-  $panelizer->panelizer_type = 'node';
-  $panelizer->panelizer_key = 'group';
-  $panelizer->no_blocks = FALSE;
-  $panelizer->css_id = '';
-  $panelizer->css = '';
-  $panelizer->pipeline = 'standard';
-  $panelizer->contexts = array();
-  $panelizer->relationships = array();
-  $panelizer->access = array();
-  $panelizer->view_mode = 'teaser';
-  $panelizer->css_class = '';
-  $panelizer->title_element = 'H2';
-  $panelizer->link_to_entity = TRUE;
-  $panelizer->extra = array();
-  $display = new panels_display();
-  $display->layout = 'one';
-  $display->layout_settings = array();
-  $display->panel_settings = array(
-    'style_settings' => array(
-      'default' => NULL,
-      'one_main' => NULL,
-    ),
-  );
-  $display->cache = array();
-  $display->title = '%node:title';
-  $display->uuid = '2880dc3a-9be6-dc34-a563-b9748d152f92';
-  $display->content = array();
-  $display->panels = array();
-    $pane = new stdClass();
-    $pane->pid = 'new-026f9d2d-fd0e-d794-1971-47eb628a7f6e';
-    $pane->panel = 'one_main';
-    $pane->type = 'entity_field';
-    $pane->subtype = 'node:group_group';
-    $pane->shown = TRUE;
-    $pane->access = array();
-    $pane->configuration = array(
-      'label' => 'hidden',
-      'formatter' => 'commons_groups_group_subscribe',
-      'delta_limit' => 0,
-      'delta_offset' => '0',
-      'delta_reversed' => FALSE,
-      'formatter_settings' => array(),
-      'context' => 'panelizer',
-      'override_title' => 0,
-      'override_title_text' => '',
-    );
-    $pane->cache = array();
-    $pane->style = array(
-      'settings' => NULL,
-    );
-    $pane->css = array();
-    $pane->extras = array();
-    $pane->position = 0;
-    $pane->locks = array();
-    $pane->uuid = '026f9d2d-fd0e-d794-1971-47eb628a7f6e';
-    $display->content['new-026f9d2d-fd0e-d794-1971-47eb628a7f6e'] = $pane;
-    $display->panels['one_main'][0] = 'new-026f9d2d-fd0e-d794-1971-47eb628a7f6e';
-    $pane = new stdClass();
-    $pane->pid = 'new-13859111-e3fa-5e54-a93c-57f09d719e38';
-    $pane->panel = 'one_main';
-    $pane->type = 'token';
-    $pane->subtype = 'node:commons-groups-group-contributors-count-topics';
-    $pane->shown = TRUE;
-    $pane->access = array();
-    $pane->configuration = array(
-      'sanitize' => 0,
-      'context' => 'panelizer',
-      'override_title' => 0,
-      'override_title_text' => '',
-    );
-    $pane->cache = array();
-    $pane->style = array(
-      'settings' => NULL,
-    );
-    $pane->css = array();
-    $pane->extras = array();
-    $pane->position = 1;
-    $pane->locks = array();
-    $pane->uuid = '13859111-e3fa-5e54-a93c-57f09d719e38';
-    $display->content['new-13859111-e3fa-5e54-a93c-57f09d719e38'] = $pane;
-    $display->panels['one_main'][1] = 'new-13859111-e3fa-5e54-a93c-57f09d719e38';
-    $pane = new stdClass();
-    $pane->pid = 'new-f7a3719c-d7be-f024-ed91-c8c0df943df4';
-    $pane->panel = 'one_main';
-    $pane->type = 'token';
-    $pane->subtype = 'node:flag-commons-follow-group-link';
-    $pane->shown = TRUE;
-    $pane->access = array();
-    $pane->configuration = array(
-      'sanitize' => 0,
-      'context' => 'panelizer',
-      'override_title' => 1,
-      'override_title_text' => '',
-    );
-    $pane->cache = array();
-    $pane->style = array(
-      'settings' => NULL,
-    );
-    $pane->css = array();
-    $pane->extras = array();
-    $pane->position = 2;
-    $pane->locks = array();
-    $pane->uuid = 'f7a3719c-d7be-f024-ed91-c8c0df943df4';
-    $display->content['new-f7a3719c-d7be-f024-ed91-c8c0df943df4'] = $pane;
-    $display->panels['one_main'][2] = 'new-f7a3719c-d7be-f024-ed91-c8c0df943df4';
-    $pane = new stdClass();
-    $pane->pid = 'new-926a99b3-8e75-aa14-2542-16f2ab9e70b3';
-    $pane->panel = 'one_main';
-    $pane->type = 'entity_field';
-    $pane->subtype = 'node:field_group_logo';
-    $pane->shown = TRUE;
-    $pane->access = array();
-    $pane->configuration = array(
-      'label' => 'hidden',
-      'formatter' => 'image',
-      'delta_limit' => 0,
-      'delta_offset' => '0',
-      'delta_reversed' => FALSE,
-      'formatter_settings' => array(
-        'image_style' => '50x50',
-        'image_link' => 'content',
-      ),
-      'context' => 'panelizer',
-      'override_title' => 0,
-      'override_title_text' => '',
-    );
-    $pane->cache = array();
-    $pane->style = array(
-      'settings' => NULL,
-    );
-    $pane->css = array();
-    $pane->extras = array();
-    $pane->position = 3;
-    $pane->locks = array();
-    $pane->uuid = '926a99b3-8e75-aa14-2542-16f2ab9e70b3';
-    $display->content['new-926a99b3-8e75-aa14-2542-16f2ab9e70b3'] = $pane;
-    $display->panels['one_main'][3] = 'new-926a99b3-8e75-aa14-2542-16f2ab9e70b3';
-    $pane = new stdClass();
-    $pane->pid = 'new-c22911c5-3c21-75b4-c5f3-80efb733956b';
-    $pane->panel = 'one_main';
-    $pane->type = 'entity_field';
-    $pane->subtype = 'node:body';
-    $pane->shown = TRUE;
-    $pane->access = array();
-    $pane->configuration = array(
-      'label' => 'hidden',
-      'formatter' => 'text_summary_or_trimmed',
-      'delta_limit' => 0,
-      'delta_offset' => '0',
-      'delta_reversed' => FALSE,
-      'formatter_settings' => array(
-        'trim_length' => '600',
-      ),
-      'context' => 'panelizer',
-      'override_title' => 0,
-      'override_title_text' => 'Por que no se ve?',
-    );
-    $pane->cache = array();
-    $pane->style = array(
-      'settings' => NULL,
-    );
-    $pane->css = array();
-    $pane->extras = array();
-    $pane->position = 4;
-    $pane->locks = array();
-    $pane->uuid = 'c22911c5-3c21-75b4-c5f3-80efb733956b';
-    $display->content['new-c22911c5-3c21-75b4-c5f3-80efb733956b'] = $pane;
-    $display->panels['one_main'][4] = 'new-c22911c5-3c21-75b4-c5f3-80efb733956b';
-    $pane = new stdClass();
-    $pane->pid = 'new-cb706c02-36e8-a414-c9f5-c34bf15861ca';
-    $pane->panel = 'one_main';
-    $pane->type = 'views';
-    $pane->subtype = 'commons_groups_recent_content';
-    $pane->shown = TRUE;
-    $pane->access = array();
-    $pane->configuration = array(
-      'override_pager_settings' => 0,
-      'use_pager' => 0,
-      'nodes_per_page' => '5',
-      'pager_id' => '0',
-      'offset' => '0',
-      'more_link' => 0,
-      'feed_icons' => 0,
-      'panel_args' => 0,
-      'link_to_view' => 0,
-      'args' => '',
-      'url' => '',
-      'display' => 'block',
-      'context' => array(
-        0 => 'panelizer.nid',
-      ),
-      'override_title' => 1,
-      'override_title_text' => 'Recent content',
-    );
-    $pane->cache = array();
-    $pane->style = array(
-      'settings' => NULL,
-    );
-    $pane->css = array();
-    $pane->extras = array();
-    $pane->position = 5;
-    $pane->locks = array();
-    $pane->uuid = 'cb706c02-36e8-a414-c9f5-c34bf15861ca';
-    $display->content['new-cb706c02-36e8-a414-c9f5-c34bf15861ca'] = $pane;
-    $display->panels['one_main'][5] = 'new-cb706c02-36e8-a414-c9f5-c34bf15861ca';
-    $pane = new stdClass();
-    $pane->pid = 'new-6c3207ac-19f3-8184-11ba-e3aee789a9c8';
-    $pane->panel = 'one_main';
-    $pane->type = 'views_panes';
-    $pane->subtype = 'commons_contributors_group-panel_pane_1';
-    $pane->shown = TRUE;
-    $pane->access = array();
-    $pane->configuration = array(
-      'context' => array(
-        0 => 'panelizer',
-      ),
-    );
-    $pane->cache = array();
-    $pane->style = array(
-      'settings' => NULL,
-    );
-    $pane->css = array();
-    $pane->extras = array();
-    $pane->position = 6;
-    $pane->locks = array();
-    $pane->uuid = '6c3207ac-19f3-8184-11ba-e3aee789a9c8';
-    $display->content['new-6c3207ac-19f3-8184-11ba-e3aee789a9c8'] = $pane;
-    $display->panels['one_main'][6] = 'new-6c3207ac-19f3-8184-11ba-e3aee789a9c8';
-  $display->hide_title = PANELS_TITLE_FIXED;
-  $display->title_pane = '0';
-  $panelizer->display = $display;
-  $export['node:group:default:teaser'] = $panelizer;
 
   return $export;
 }
diff --git a/modules/commons/commons_groups/modules/commons_groups_pages/commons_groups_pages.strongarm.inc b/modules/commons/commons_groups/modules/commons_groups_pages/commons_groups_pages.strongarm.inc
index 626f9cc..8de19ca 100644
--- a/modules/commons/commons_groups/modules/commons_groups_pages/commons_groups_pages.strongarm.inc
+++ b/modules/commons/commons_groups/modules/commons_groups_pages/commons_groups_pages.strongarm.inc
@@ -10,31 +10,37 @@
 function commons_groups_pages_strongarm() {
   $export = array();
 
-  $strongarm = new stdClass();
-  $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
-  $strongarm->api_version = 1;
-  $strongarm->name = 'panelizer_defaults_node_group';
-  $strongarm->value = array(
-    'status' => 1,
-    'view modes' => array(
-      'page_manager' => array(
+  $group_bundles = og_get_all_group_bundle();
+  if (!empty($group_bundles['node'])) {
+    // Don't alter the group panel.
+    foreach ($group_bundles['node'] as $bundle => $name) {
+      $strongarm = new stdClass();
+      $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
+      $strongarm->api_version = 1;
+      $strongarm->name = "panelizer_defaults_node_$bundle";
+      $strongarm->value = array(
         'status' => 1,
-        'default' => 1,
-        'choice' => 0,
-      ),
-      'default' => array(
-        'status' => 0,
-        'default' => 0,
-        'choice' => 0,
-      ),
-      'teaser' => array(
-        'status' => 1,
-        'default' => 1,
-        'choice' => 0,
-      ),
-    ),
-  );
-  $export['panelizer_defaults_node_group'] = $strongarm;
+        'view modes' => array(
+          'page_manager' => array(
+            'status' => 1,
+            'default' => 1,
+            'choice' => 0,
+          ),
+          'default' => array(
+            'status' => 0,
+            'default' => 0,
+            'choice' => 0,
+          ),
+          'teaser' => array(
+            'status' => 1,
+            'default' => 1,
+            'choice' => 0,
+          ),
+        ),
+      );
+      $export["panelizer_defaults_node_$bundle"] = $strongarm;
+    }
+  }
 
   return $export;
 }
diff --git a/modules/commons/commons_media/commons_media.css b/modules/commons/commons_media/commons_media.css
index e8e96ab..66d560a 100644
--- a/modules/commons/commons_media/commons_media.css
+++ b/modules/commons/commons_media/commons_media.css
@@ -1,3 +1,9 @@
+iframe,
+object,
+embed {
+  max-width: 100%;
+}
+
 video {
   height: auto;
   max-width: 100%;
diff --git a/modules/commons/commons_media/commons_media.features.user_permission.inc b/modules/commons/commons_media/commons_media.features.user_permission.inc
index 84af5ff..e7a5c77 100644
--- a/modules/commons/commons_media/commons_media.features.user_permission.inc
+++ b/modules/commons/commons_media/commons_media.features.user_permission.inc
@@ -10,6 +10,16 @@
 function commons_media_user_default_permissions() {
   $permissions = array();
 
+  // Exported permission: 'access media browser'.
+  $permissions['access media browser'] = array(
+    'name' => 'access media browser',
+    'roles' => array(
+      'administrator' => 'administrator',
+      'authenticated user' => 'authenticated user',
+    ),
+    'module' => 'media',
+  );
+
   // Exported permission: 'add media from remote sources'.
   $permissions['add media from remote sources'] = array(
     'name' => 'add media from remote sources',
@@ -30,5 +40,25 @@ function commons_media_user_default_permissions() {
     'module' => 'file_entity',
   );
 
+  // Exported permission: 'delete own image files'.
+  $permissions['delete own image files'] = array(
+    'name' => 'delete own image files',
+    'roles' => array(
+      'administrator' => 'administrator',
+      'authenticated user' => 'authenticated user',
+    ),
+    'module' => 'file_entity',
+  );
+
+  // Exported permission: 'delete own video files'.
+  $permissions['delete own video files'] = array(
+    'name' => 'delete own video files',
+    'roles' => array(
+      'administrator' => 'administrator',
+      'authenticated user' => 'authenticated user',
+    ),
+    'module' => 'file_entity',
+  );
+
   return $permissions;
 }
diff --git a/modules/commons/commons_media/commons_media.info b/modules/commons/commons_media/commons_media.info
index e5999ca..276462e 100644
--- a/modules/commons/commons_media/commons_media.info
+++ b/modules/commons/commons_media/commons_media.info
@@ -8,11 +8,17 @@ dependencies[] = file
 dependencies[] = file_entity
 dependencies[] = media
 dependencies[] = media_internet
-dependencies[] = oembed
+dependencies[] = media_oembed
 dependencies[] = strongarm
 features[ctools][] = strongarm:strongarm:1
 features[features_api][] = api:2
 features[field_base][] = field_media
+features[user_permission][] = access media browser
 features[user_permission][] = add media from remote sources
 features[user_permission][] = create files
-features[variable][] = media__dialog_theme
+features[user_permission][] = delete own image files
+features[user_permission][] = delete own video files
+features[variable][] = file_entity_file_upload_wizard_skip_fields
+features[variable][] = file_entity_file_upload_wizard_skip_file_type
+features[variable][] = file_entity_file_upload_wizard_skip_scheme
+features[variable][] = media_dialog_theme
diff --git a/modules/commons/commons_media/commons_media.install b/modules/commons/commons_media/commons_media.install
new file mode 100644
index 0000000..e813ba7
--- /dev/null
+++ b/modules/commons/commons_media/commons_media.install
@@ -0,0 +1,28 @@
+<?php
+
+/**
+ * @file
+ * Install, update and uninstall functions for the Commons Media module.
+ */
+
+/**
+ * Accommodate the latest changes to the Media module.
+ */
+function commons_media_update_7300() {
+  $revert = array(
+    'commons_media' => array('user_permission', 'variable'),
+  );
+  features_revert($revert);
+  return array();
+}
+
+/**
+ * Configure File Entity upload wizard settings.
+ */
+function commons_media_update_7301() {
+  $revert = array(
+    'commons_media' => array('variable'),
+  );
+  features_revert($revert);
+  return array();
+}
diff --git a/modules/commons/commons_media/commons_media.module b/modules/commons/commons_media/commons_media.module
index 6179ba2..6a06b1f 100644
--- a/modules/commons/commons_media/commons_media.module
+++ b/modules/commons/commons_media/commons_media.module
@@ -6,6 +6,9 @@
 
 include_once 'commons_media.features.inc';
 
+// Functions to ensure that the private file system is used when embedding files in private group content.
+include_once 'commons_media.private_files.inc';
+
 /**
  * Implements hook_system_info_alter().
  */
@@ -63,7 +66,7 @@ function commons_ajax_upload() {
     return array('#type' => 'ajax', '#commands' => $commands);
   }
 
-  list($form, $form_state) = ajax_get_form();
+  list($form, $form_state, $form_id, $form_build_id, $commands) = ajax_get_form();
 
   if (!$form) {
     // Invalid form_build_id.
@@ -101,36 +104,36 @@ function commons_ajax_upload() {
   $js = drupal_add_js();
   $settings = call_user_func_array('array_merge_recursive', $js['settings']['data']);
 
-  $commands = array();
   $commands[] = ajax_command_replace(NULL, $output, $settings);
   return array('#type' => 'ajax', '#commands' => $commands);
 }
 
 /**
- * Implements hook_file_view_alter().
+ * Implements hook_element_info_alter().
  */
-function commons_media_file_view_alter(&$build) {
-  $file_type = $build['#bundle'];
-
-  // Add responsive CSS to image and video files.
-  if ($file_type == 'image' || $file_type == 'video') {
-    $build['#attached']['css'][] = drupal_get_path('module', 'commons_media') . '/commons_media.css';
-  }
+function commons_media_element_info_alter(&$type) {
+  $type['media']['#process'][] = 'commons_media_simplify_media_buttons';
 }
 
 /**
- * Implements hook_preprocess_oembed().
+ * Extra #process callback which simplifies the media element buttons.
  */
-function commons_media_preprocess_oembed(&$variables) {
-  $embed = $variables['embed'];
+function commons_media_simplify_media_buttons($element, $edit, &$form_state) {
+  // Remove extraneous elements.
+  $element['#title_display'] = 'invisible';
 
-  // Video and rich type must have HTML content.
-  // Wrap the HTML content in a <div> to allow it to be made responsive.
-  if (in_array($embed['type'], array('video', 'rich'))) {
-    $embed['html'] = '<div class="oembed">' . $embed['html'] . '</div>';
-  }
+  return $element;
+}
 
-  $variables['embed'] = $embed;
+/**
+ * Implements hook_page_build().
+ */
+function commons_media_page_build(&$page) {
+  $page['page_bottom']['commons_media']['#attached']['css'] = array(
+    drupal_get_path('module', 'commons_media') . '/commons_media.css' => array(
+      'every_page' => TRUE,
+    ),
+  );
 }
 
 /**
@@ -138,6 +141,9 @@ function commons_media_preprocess_oembed(&$variables) {
  */
 function commons_media_filter_default_formats_alter(&$formats) {
   if (module_exists('media_wysiwyg')) {
+    // Allow markup from remote media.
+    $formats['filtered_html']['filters']['filter_html']['settings']['allowed_html'] = '<a> <em> <strong> <u> <cite> <blockquote> <code> <ul> <ol> <li> <dl> <dt> <dd> <h4> <h5> <h6>  <p> <br> <img> <strike> <iframe></iframe>';
+
     // Enable the media filter.
     $formats['filtered_html']['filters'] += array(
       'media_filter' => array(
@@ -153,6 +159,9 @@ function commons_media_filter_default_formats_alter(&$formats) {
  */
 function commons_media_ckeditor_profile_defaults_alter(&$profiles) {
   if (module_exists('media_wysiwyg')) {
+    // Disable the advanced content filter.
+    $profiles['Advanced']['settings']['allowed_content'] = 'f';
+
     // Add the media button.
     $profiles['Advanced']['settings']['toolbar'] = '[
     [\'Format\'],
@@ -172,3 +181,113 @@ function commons_media_ckeditor_profile_defaults_alter(&$profiles) {
     );
   }
 }
+
+/**
+ * Implements hook_form_FORM_ID_alter().
+ */
+function commons_media_form_file_entity_add_upload_alter(&$form, &$form_state, $form_id) {
+  // Automatically upload selected files.
+  if ($form['#step'] == 1) {
+    $form['#attached']['js'][] = drupal_get_path('module', 'commons_media') . '/commons_media_autoupload.js';
+  }
+}
+
+/**
+ * Implements hook_form_FORM_ID_alter().
+ */
+function commons_media_form_media_internet_add_alter(&$form, &$form_state, $form_id) {
+  if (isset($form['embed_code'])) {
+    $form['embed_code']['#description'] = t('Enter a URL or link to the media you would like to embed, such as a video or image. You can upload video from a range of providers, such as YouTube, Flickr or Vimeo.');
+  }
+}
+
+/**
+ * Implements hook_media_format_form_prepare_alter().
+ */
+function commons_media_media_wysiwyg_format_form_prepare_alter(&$form, &$form_state, $media) {
+  // Remove the ability to override field values through WYSIWYG.
+  $form['options']['fields']['#access'] = FALSE;
+
+  // Attach JavaScript to automatically embed files.
+  $form['#attached']['js'][] = drupal_get_path('module', 'commons_media') . '/commons_media_autoembed.js';
+}
+
+/**
+ * Implements hook_entity_presave().
+ */
+function commons_media_entity_presave($entity, $type) {
+  // Only proceed if the private file system has been configured.
+  if (!variable_get('file_private_path', FALSE)) {
+    return;
+  }
+
+  list($entity_id, $entity_vid, $entity_bundle) = entity_extract_ids($type, $entity);
+
+  // Only proceed if the entity has been configured as group content.
+  if (!og_is_group_content_type($type, $entity_bundle)) {
+    return;
+  }
+
+  // Loop over all the file and image fields attached to this entity.
+  foreach (_commons_media_get_file_and_image_fields($entity, $type) as $field_name) {
+    // Iterate over the items arrays for each language.
+    foreach (array_keys($entity->{$field_name}) as $langcode) {
+      $items = isset($entity->{$field_name}[$langcode]) ? $entity->{$field_name}[$langcode] : array();
+
+      // Ensure that the private file system is used when attaching files to
+      // private group content.
+      foreach ($items as $delta => $item) {
+        // Move files to the private file system if the content is private.
+        if ($entity->group_content_access[LANGUAGE_NONE][0]['value'] == 2) {
+          $source_file = file_load($item['fid']);
+
+          // Only move public files.
+          if (file_uri_scheme($source_file->uri) == 'public') {
+            $usage = file_usage_list($source_file);
+
+            // Only move files that aren't currently in use.
+            if (empty($usage)) {
+              $scheme = 'private://';
+              $uri = file_stream_wrapper_uri_normalize($scheme . $source_file->filename);
+              file_move($source_file, $uri, FILE_EXISTS_RENAME);
+            }
+          }
+        }
+      }
+    }
+  }
+}
+
+/**
+ * Returns an array of image field names from a specific entity.
+ *
+ * @param $entity
+ *   The entity variable passed through hook_entity_presave().
+ * @param $type
+ *   The entity type variable passed through hook_entity_presave().
+ *
+ * @return array
+ *   An array of file and image field names or an empty array if none are found.
+ */
+function _commons_media_get_file_and_image_fields($entity, $type) {
+  $collected_fields = array();
+
+  // Determine the list of instances to iterate on.
+  list(, , $bundle) = entity_extract_ids($type, $entity);
+  $instances = field_info_instances($type, $bundle);
+  $fields = field_info_fields();
+
+  // Iterate through the instances and collect results.
+  foreach ($instances as $instance) {
+    $field_name = $instance['field_name'];
+
+    // Only collect file and image fields.
+    if ($fields[$field_name]['type'] == 'file' || $fields[$field_name]['type'] == 'image') {
+      if (isset($entity->{$field_name})) {
+        $collected_fields[] = $field_name;
+      }
+    }
+  }
+
+  return $collected_fields;
+}
diff --git a/modules/commons/commons_media/commons_media.private_files.inc b/modules/commons/commons_media/commons_media.private_files.inc
new file mode 100644
index 0000000..0721b78
--- /dev/null
+++ b/modules/commons/commons_media/commons_media.private_files.inc
@@ -0,0 +1,126 @@
+<?php
+
+/**
+ * @file
+ * Functions related to ensuring that the private file system is used when embedding files in private group content.
+ */
+
+/**
+ * Implements hook_field_attach_insert().
+ */
+function commons_media_field_attach_insert($entity_type, $entity) {
+  _commons_media_filter_add_file_usage_from_fields($entity_type, $entity);
+}
+
+/**
+ * Implements hook_field_attach_update().
+ */
+function commons_media_field_attach_update($entity_type, $entity) {
+  _commons_media_filter_add_file_usage_from_fields($entity_type, $entity);
+}
+
+/**
+ * Ensure that the private file system is used when embedding files in private group content.
+ */
+function _commons_media_filter_add_file_usage_from_fields($entity_type, $entity) {
+  // Only proceed if the Media: WYSIWYG module is enabled.
+  if (!module_exists('media_wysiwyg')) {
+    return;
+  }
+
+  // Only proceed if the private file system has been configured.
+  if (!variable_get('file_private_path', FALSE)) {
+    return;
+  }
+
+  // Track the total usage for files from all fields combined.
+  $entity_files = commons_media_entity_field_count_files($entity_type, $entity);
+
+  list($entity_id, $entity_vid, $entity_bundle) = entity_extract_ids($entity_type, $entity);
+
+  // Only proceed if the entity has been configured as group content.
+  if (!og_is_group_content_type($entity_type, $entity_bundle)) {
+    return;
+  }
+
+  // Ensure that the private file system is used when attaching files to private
+  // group content.
+  foreach ($entity_files as $fid => $entity_count) {
+    // Move files to the private file system if the content is private.
+    if ($entity->group_content_access[LANGUAGE_NONE][0]['value'] == 2) {
+      if ($source_file = file_load($fid)) {
+
+        // Only move public files.
+        if (file_uri_scheme($source_file->uri) == 'public') {
+          $usage = file_usage_list($source_file);
+
+          // Only move files that aren't currently in use.
+          if (empty($usage)) {
+            $scheme = 'private://';
+            $uri = file_stream_wrapper_uri_normalize($scheme . $source_file->filename);
+            file_move($source_file, $uri, FILE_EXISTS_RENAME);
+          }
+        }
+      }
+    }
+  }
+}
+
+/**
+ * Utility function to get the file count in this entity
+ *
+ * @param type $entity
+ * @param type $entity_type
+ * @return int
+ */
+function commons_media_entity_field_count_files($entity_type, $entity) {
+  $entity_files = array();
+
+  foreach (commons_media_filter_parse_from_fields($entity_type, $entity) as $file_reference) {
+    if (empty($entity_files[$file_reference['fid']])) {
+      $entity_files[$file_reference['fid']] = 1;
+    }
+    else {
+      $entity_files[$file_reference['fid']]++;
+    }
+  }
+
+  return $entity_files;
+}
+
+/**
+ * Parse file references from an entity's text fields and return them as an array.
+ */
+function commons_media_filter_parse_from_fields($entity_type, $entity) {
+  $file_references = array();
+
+  foreach (media_wysiwyg_filter_fields_with_text_filtering($entity_type, $entity) as $field_name) {
+    if ($field_items = field_get_items($entity_type, $entity, $field_name)) {
+      foreach ($field_items as $field_item) {
+        preg_match_all(MEDIA_WYSIWYG_TOKEN_REGEX, $field_item['value'], $matches);
+
+        foreach ($matches[0] as $tag) {
+          $tag = str_replace(array('[[', ']]'), '', $tag);
+          $tag_info = drupal_json_decode($tag);
+
+          if (isset($tag_info['fid']) && $tag_info['type'] == 'media') {
+            $file_references[] = $tag_info;
+          }
+        }
+
+        preg_match_all(MEDIA_WYSIWYG_TOKEN_REGEX, $field_item['value'], $matches_alt);
+
+        foreach ($matches_alt[0] as $tag) {
+          $tag = urldecode($tag);
+          $tag_info = drupal_json_decode($tag);
+
+          if (isset($tag_info['fid']) && $tag_info['type'] == 'media') {
+            $file_references[] = $tag_info;
+          }
+        }
+      }
+    }
+  }
+
+  return $file_references;
+}
diff --git a/modules/commons/commons_media/commons_media.strongarm.inc b/modules/commons/commons_media/commons_media.strongarm.inc
index 501c614..50fa0a5 100644
--- a/modules/commons/commons_media/commons_media.strongarm.inc
+++ b/modules/commons/commons_media/commons_media.strongarm.inc
@@ -13,9 +13,30 @@ function commons_media_strongarm() {
   $strongarm = new stdClass();
   $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
   $strongarm->api_version = 1;
-  $strongarm->name = 'media__dialog_theme';
+  $strongarm->name = 'file_entity_file_upload_wizard_skip_fields';
+  $strongarm->value = 0;
+  $export['file_entity_file_upload_wizard_skip_fields'] = $strongarm;
+
+  $strongarm = new stdClass();
+  $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
+  $strongarm->api_version = 1;
+  $strongarm->name = 'file_entity_file_upload_wizard_skip_file_type';
+  $strongarm->value = 1;
+  $export['file_entity_file_upload_wizard_skip_file_type'] = $strongarm;
+
+  $strongarm = new stdClass();
+  $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
+  $strongarm->api_version = 1;
+  $strongarm->name = 'file_entity_file_upload_wizard_skip_scheme';
+  $strongarm->value = 1;
+  $export['file_entity_file_upload_wizard_skip_scheme'] = $strongarm;
+
+  $strongarm = new stdClass();
+  $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
+  $strongarm->api_version = 1;
+  $strongarm->name = 'media_dialog_theme';
   $strongarm->value = 'ember';
-  $export['media__dialog_theme'] = $strongarm;
+  $export['media_dialog_theme'] = $strongarm;
 
   return $export;
 }
diff --git a/modules/commons/commons_media/commons_media_autoembed.js b/modules/commons/commons_media/commons_media_autoembed.js
new file mode 100644
index 0000000..bd64f21
--- /dev/null
+++ b/modules/commons/commons_media/commons_media_autoembed.js
@@ -0,0 +1,10 @@
+(function ($) {
+
+Drupal.behaviors.autoEmbed = {
+  attach: function (context, settings) {
+    // Automatically click the submit button to embed the file.
+    $('.button.fake-ok').click();
+  }
+};
+
+})(jQuery);
diff --git a/modules/commons/commons_media/commons_media_autoupload.js b/modules/commons/commons_media/commons_media_autoupload.js
new file mode 100644
index 0000000..31a32d6
--- /dev/null
+++ b/modules/commons/commons_media/commons_media_autoupload.js
@@ -0,0 +1,20 @@
+(function ($) {
+
+Drupal.behaviors.autoUpload = {
+  attach: function (context, settings) {
+    // Loop through all of the managed file form elements on the page.
+    $('.form-managed-file').each(function(index, element) {
+      // Hide/show the file upload/remove button if a file is not present.
+      if ($(this).children('span.file').length == 0 ) {
+        $(this).children('input.form-submit').hide();
+      };
+
+      // Automatically upload the file if a file is selected.
+      $(this).delegate('input.form-file', 'change', function() {
+        $(this).siblings('input.form-submit').mousedown();
+      });
+    });
+  }
+};
+
+})(jQuery);
diff --git a/modules/commons/commons_misc/commons_misc.module b/modules/commons/commons_misc/commons_misc.module
index 5027494..c2df42c 100644
--- a/modules/commons/commons_misc/commons_misc.module
+++ b/modules/commons/commons_misc/commons_misc.module
@@ -46,13 +46,13 @@ function commons_misc_form_system_theme_settings_alter(&$form, &$form_state, $fo
   }
 }
 
-/*
- * Render a link to the official commons documentation located at
- * https://docs.acquia.com/commons
+/**
+ * Implements hook_navbar().
  */
 function commons_misc_navbar() {
   $items = array();
 
+  // Add a link to the official commons documentation.
   $items['documentation'] = array(
     '#type' => 'navbar_item',
     'tab' => array(
@@ -71,4 +71,4 @@ function commons_misc_navbar() {
   );
 
   return $items;
-}
\ No newline at end of file
+}
diff --git a/modules/commons/commons_polls/commons_polls.module b/modules/commons/commons_polls/commons_polls.module
index bf5f98a..7e1ec8d 100644
--- a/modules/commons/commons_polls/commons_polls.module
+++ b/modules/commons/commons_polls/commons_polls.module
@@ -30,6 +30,7 @@ function commons_polls_commons_entity_integration() {
     'node' => array(
       'poll' => array(
         'media' => TRUE,
+        'is_group_content' => TRUE,
       ),
     ),
   );
diff --git a/modules/commons/commons_posts/commons_posts.module b/modules/commons/commons_posts/commons_posts.module
index 1d34611..8c3b11d 100644
--- a/modules/commons/commons_posts/commons_posts.module
+++ b/modules/commons/commons_posts/commons_posts.module
@@ -99,6 +99,7 @@ function commons_posts_commons_entity_integration() {
     'node' => array(
       'post' => array(
         'media' => TRUE,
+        'is_group_content' => TRUE,
       ),
     ),
   );
diff --git a/modules/commons/commons_profile_base/commons_profile_base.info b/modules/commons/commons_profile_base/commons_profile_base.info
index 2d42a37..3ae9767 100644
--- a/modules/commons/commons_profile_base/commons_profile_base.info
+++ b/modules/commons/commons_profile_base/commons_profile_base.info
@@ -2,10 +2,12 @@ name = Commons Profile Base
 description = Provides a base set of profile fields for user profiles.
 core = 7.x
 package = Commons - Building blocks
+dependencies[] = ctools
 dependencies[] = features
 dependencies[] = strongarm
+dependencies[] = text
 features[ctools][] = strongarm:strongarm:1
-features[features_api][] = api:1
+features[features_api][] = api:2
 features[field_base][] = field_bio
 features[field_base][] = field_name_first
 features[field_base][] = field_name_last
@@ -13,6 +15,9 @@ features[field_instance][] = user-user-field_bio
 features[field_instance][] = user-user-field_name_first
 features[field_instance][] = user-user-field_name_last
 features[variable][] = realname_pattern
+features[variable][] = user_mail_register_admin_created_body
+features[variable][] = user_mail_register_no_approval_required_body
+features[variable][] = user_mail_status_activated_body
 features[variable][] = user_picture_dimensions
 features[variable][] = user_picture_file_size
 features[variable][] = user_picture_style
diff --git a/modules/commons/commons_profile_base/commons_profile_base.install b/modules/commons/commons_profile_base/commons_profile_base.install
index fa0e2c8..c8541cc 100644
--- a/modules/commons/commons_profile_base/commons_profile_base.install
+++ b/modules/commons/commons_profile_base/commons_profile_base.install
@@ -9,4 +9,15 @@ function commons_profile_base_update_7000() {
   );
   features_revert($revert);
   return array();
-}
\ No newline at end of file
+}
+
+/**
+ * Replace tokens with their raw equivalents in user registration emails.
+ */
+function commons_profile_base_update_7001() {
+  $revert = array(
+    'commons_profile_base' => array('variable'),
+  );
+  features_revert($revert);
+  return array();
+}
diff --git a/modules/commons/commons_profile_base/commons_profile_base.module b/modules/commons/commons_profile_base/commons_profile_base.module
index f7a47ce..8e68057 100644
--- a/modules/commons/commons_profile_base/commons_profile_base.module
+++ b/modules/commons/commons_profile_base/commons_profile_base.module
@@ -32,3 +32,88 @@ function commons_profile_base_form_user_register_form_alter(&$form, &$form_state
 function commons_profile_base_menu_alter(&$items) {
   $items['user/register']['title'] = 'Sign up';
 }
+
+/**
+ * Implements hook_modules_enabled().
+ *
+ * Replace tokens with their raw equivalents in user registration emails.
+ */
+function commons_profile_base_modules_enabled($modules) {
+  if (in_array('realname', $modules)) {
+    features_revert(array('commons_profile_base' => array('variable')));
+  }
+}
+
+/**
+ * Implements hook_modules_disabled().
+ *
+ * Restore default user registration emails.
+ */
+function commons_profile_base_modules_disabled($modules) {
+  if (in_array('realname', $modules)) {
+    features_revert(array('commons_profile_base' => array('variable')));
+  }
+}
+
+/**
+ * Implements hook_strongarm_alter().
+ */
+function commons_profile_base_strongarm_alter(&$items) {
+  // The default user registration emails include tokens which display user
+  // names as realnames. Realnames cannot be used for logging in or resetting
+  // passwords which leads to confusion.
+  // Replace the tokens with their raw equivalents so user emails display
+  // usernames instead of realnames.
+  if (module_exists('realname')) {
+    if (isset($items['user_mail_register_admin_created_body'])) {
+      $items['user_mail_register_admin_created_body']->value = '[user:name-raw],
+
+A site administrator at [site:name] has created an account for you. You may now log in by clicking this link or copying and pasting it to your browser:
+
+[user:one-time-login-url]
+
+This link can only be used once to log in and will lead you to a page where you can set your password.
+
+After setting your password, you will be able to log in at [site:login-url] in the future using:
+
+username: [user:name-raw]
+password: Your password
+
+--  [site:name] team';
+    }
+    if (isset($items['user_mail_register_no_approval_required_body'])) {
+      $items['user_mail_register_no_approval_required_body']->value = '[user:name-raw],
+
+Thank you for registering at [site:name]. You may now log in by clicking this link or copying and pasting it to your browser:
+
+[user:one-time-login-url]
+
+This link can only be used once to log in and will lead you to a page where you can set your password.
+
+After setting your password, you will be able to log in at [site:login-url] in the future using:
+
+username: [user:name-raw]
+password: Your password
+
+--  [site:name] team';
+    }
+    if (isset($items['user_mail_status_activated_body'])) {
+      $items['user_mail_status_activated_body']->value = '[user:name],
+
+Your account at [site:name] has been activated.
+
+You may now log in by clicking this link or copying and pasting it into your browser:
+
+[user:one-time-login-url]
+
+This link can only be used once to log in and will lead you to a page where you can set your password.
+
+After setting your password, you will be able to log in at [site:login-url] in the future using:
+
+username: [user:name-raw]
+password: Your password
+
+--  [site:name] team';
+    }
+  }
+}
diff --git a/modules/commons/commons_profile_base/commons_profile_base.strongarm.inc b/modules/commons/commons_profile_base/commons_profile_base.strongarm.inc
index 5c24493..dd25435 100644
--- a/modules/commons/commons_profile_base/commons_profile_base.strongarm.inc
+++ b/modules/commons/commons_profile_base/commons_profile_base.strongarm.inc
@@ -20,6 +20,68 @@ function commons_profile_base_strongarm() {
   $strongarm = new stdClass();
   $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
   $strongarm->api_version = 1;
+  $strongarm->name = 'user_mail_register_admin_created_body';
+  $strongarm->value = '[user:name],
+
+A site administrator at [site:name] has created an account for you. You may now log in by clicking this link or copying and pasting it to your browser:
+
+[user:one-time-login-url]
+
+This link can only be used once to log in and will lead you to a page where you can set your password.
+
+After setting your password, you will be able to log in at [site:login-url] in the future using:
+
+username: [user:name]
+password: Your password
+
+--  [site:name] team';
+  $export['user_mail_register_admin_created_body'] = $strongarm;
+
+  $strongarm = new stdClass();
+  $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
+  $strongarm->api_version = 1;
+  $strongarm->name = 'user_mail_register_no_approval_required_body';
+  $strongarm->value = '[user:name],
+
+Thank you for registering at [site:name]. You may now log in by clicking this link or copying and pasting it to your browser:
+
+[user:one-time-login-url]
+
+This link can only be used once to log in and will lead you to a page where you can set your password.
+
+After setting your password, you will be able to log in at [site:login-url] in the future using:
+
+username: [user:name]
+password: Your password
+
+--  [site:name] team';
+  $export['user_mail_register_no_approval_required_body'] = $strongarm;
+
+  $strongarm = new stdClass();
+  $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
+  $strongarm->api_version = 1;
+  $strongarm->name = 'user_mail_status_activated_body';
+  $strongarm->value = '[user:name],
+
+Your account at [site:name] has been activated.
+
+You may now log in by clicking this link or copying and pasting it into your browser:
+
+[user:one-time-login-url]
+
+This link can only be used once to log in and will lead you to a page where you can set your password.
+
+After setting your password, you will be able to log in at [site:login-url] in the future using:
+
+username: [user:name]
+password: Your password
+
+--  [site:name] team';
+  $export['user_mail_status_activated_body'] = $strongarm;
+
+  $strongarm = new stdClass();
+  $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
+  $strongarm->api_version = 1;
   $strongarm->name = 'user_pictures';
   $strongarm->value = '1';
   $export['user_pictures'] = $strongarm;
diff --git a/modules/commons/commons_q_a/commons_q_a.install b/modules/commons/commons_q_a/commons_q_a.install
index fc5fe6a..32a6078 100644
--- a/modules/commons/commons_q_a/commons_q_a.install
+++ b/modules/commons/commons_q_a/commons_q_a.install
@@ -114,3 +114,14 @@ function commons_q_a_update_3109() {
   features_revert($revert);
   return array();
 }
+
+/**
+ * Indicate in the view that empty answers text is overridden by commons_q_a.
+ */
+function commons_q_a_update_3110() {
+  $revert = array(
+    'commons_q_a' => array('views_view'),
+  );
+  features_revert($revert);
+  return array();
+}
diff --git a/modules/commons/commons_q_a/commons_q_a.module b/modules/commons/commons_q_a/commons_q_a.module
index d9a3783..b406183 100644
--- a/modules/commons/commons_q_a/commons_q_a.module
+++ b/modules/commons/commons_q_a/commons_q_a.module
@@ -35,24 +35,31 @@ function commons_q_a_commons_bw_group_widget() {
   );
 }
 
+/**
+ * Implements hook_node_view().
+ *
+ * Provides an answer button to bring a user down to the answer form.
+ */
 function commons_q_a_node_view($node, $view_mode) {
-  if($node->type == 'question' && $view_mode == 'full') {
+  if ($node->type == 'question' && $view_mode == 'full') {
     // Remove add comment link.
     unset($node->content['links']['comment']);
     // Add the answer link below.
-    $node->content['links']['answer'] = array(
-      '#theme' => 'links__node__answer',
-      '#links' => array(
-        'answer-add' => array(
-          'title' => t('Answer'),
-          'attributes' => array(
-            'title' => t('Answer this question')
+    if (commons_q_a_check_answer_access($node)) {
+      $node->content['links']['answer'] = array(
+        '#theme' => 'links__node__answer',
+        '#links' => array(
+          'answer-add' => array(
+            'title' => t('Answer'),
+            'attributes' => array(
+              'title' => t('Answer this question'),
+            ),
+            'href' => 'node/' . $node->nid,
+            'fragment' => 'answer',
           ),
-          'href' => 'node/'.$node->nid,
-          'fragment' => 'answer',
         ),
-      ),
-    );
+      );
+    }
     return $node;
   }
 }
@@ -109,6 +116,30 @@ function commons_q_a_views_default_views_alter(&$views) {
   }
 }
 
+/*
+ * Run an access check to see if the current user can create answer nodes based
+ * off of the question node.
+ */
+function commons_q_a_check_answer_access($question) {
+  $group_ref = array();
+  if (!empty($question->og_group_ref[LANGUAGE_NONE])) {
+    foreach ($question->og_group_ref[LANGUAGE_NONE] as $key => $value) {
+      // Check to see the user has access to the group the question is in, only attach to those groups they have permission to post in.
+      if (og_user_access('node', $value['target_id'], 'create answer content')) {
+        $group_ref[] = $value['target_id'];
+        return TRUE;
+      }
+    }
+  }
+  // If user belongs to no groups, or no groups are assigned to the Question, check node_access for user.
+  else {
+    if (node_access('create', 'answer')) {
+      return TRUE;
+    }
+  }
+  return FALSE;
+}
+
 /**
  * Implements hook_views_pre_render().
  */
@@ -118,36 +149,32 @@ function commons_q_a_views_pre_render(&$view) {
     // with the question, embed a simplified answer node form.
     global $user;
 
-    $question_nid = $view->args[0];
-    $question = node_load($question_nid);
-    $group_ref = array();
-    $answer_access = FALSE;
-    if (!empty($question->og_group_ref[LANGUAGE_NONE])) {
-      foreach ($question->og_group_ref[LANGUAGE_NONE] as $key => $value) {
-        // Check to see the user has access to the group the question is in, only attach to those groups they have permission to post in.
-        if (og_user_access('node', $value['target_id'], 'create answer content')) {
-          $group_ref[] = $value['target_id'];
-          $answer_access = TRUE;
-        }
-      }
+    if (user_is_anonymous()) {
+      $account = drupal_anonymous_user();
     }
-    // If user belongs to no groups, or no groups are assigned to the Question, check node_access for user.
     else {
-      if (node_access('create', $question, $user)) {
-        $answer_access = TRUE;
-      }
+      $account = $user;
     }
 
+    $question_nid = $view->args[0];
+    $question = node_load($question_nid);
+
+    $answer_access = commons_q_a_check_answer_access($question);
     // Check global user access before showing the answer form.
     if ($answer_access) {
+      $view->empty['area']->options['content'] = t("This question hasn't been answered yet. You can be the first to answer it!");
       module_load_include('inc', 'node', 'node.pages');
       $types = node_type_get_types();
-      $node = (object) array('uid' => $user->uid, 'name' => (isset($user->name) ? $user->name : ''), 'type' => 'answer', 'language' => LANGUAGE_NONE);
+      $node = (object) array(
+        'uid' => $account->uid,
+        'name' => (isset($account->name) ? $account->name : ''),
+        'type' => 'answer', 'language' => LANGUAGE_NONE
+      );
       // Prepopulate the Related question field
       // with Entityreference Prepopulate, which looks strictly at $_GET.
       $_GET['field_related_question'] = $view->args[0];
       if (!empty($group_ref)) {
-        $_GET['og_group_ref'] = implode(',',$group_ref);
+        $_GET['og_group_ref'] = implode(',', $group_ref);
       }
       $answer_form = drupal_get_form('answer_node_form', $node);
       $answer_form['header'] = array(
@@ -164,6 +191,17 @@ function commons_q_a_views_pre_render(&$view) {
       // post questions into any of the groups associated with the parent.
       return;
     }
+    // Tell Anonymous users to login.
+    elseif ($account->uid === 0) {
+      $view->empty['area']->options['content'] = t("This question hasn't been answered yet. !create to be the first to answer it!", array('!create' => l(t("Login or create an account"), 'user')));
+      return;
+    }
+    // If the user is not anonymous, but cannot answer the question. Don't tell
+    // them they should be the first to answer it.
+    else {
+      $view->empty['area']->options['content'] = t("This question hasn't been answered yet.");
+      return;
+    }
   }
 }
 
@@ -188,7 +226,7 @@ function commons_q_a_form_alter(&$form, &$form_state, $form_id) {
   if ($form_id == 'answer_node_form') {
     $form['og_group_ref']['#access'] = FALSE;
     $form['actions']['submit']['#submit'][] = 'commons_q_a_answer_submit';
-    // Ensure that the answer node inherits group membership from the 
+    // Ensure that the answer node inherits group membership from the
     // parent question by preventing users from changing the audience through
     // the Trusted Contacts toggle when commons_trusted_contacts.module
     // is enabled.
@@ -252,10 +290,12 @@ function commons_q_a_commons_entity_integration() {
     'node' => array(
       'question' => array(
         'media' => TRUE,
+        'is_group_content' => TRUE,
       ),
       'answer' => array(
         'exclude_topics' => TRUE,
         'exclude_rate' => TRUE,
+        'is_group_content' => TRUE,
       ),
     ),
   );
diff --git a/modules/commons/commons_q_a/commons_q_a.views_default.inc b/modules/commons/commons_q_a/commons_q_a.views_default.inc
index 23814a0..8d70d39 100644
--- a/modules/commons/commons_q_a/commons_q_a.views_default.inc
+++ b/modules/commons/commons_q_a/commons_q_a.views_default.inc
@@ -132,7 +132,7 @@ function commons_q_a_views_default_views() {
   $view = new view();
   $view->name = 'commons_question_answers';
   $view->description = '';
-  $view->tag = 'default';
+  $view->tag = 'Commons Q&A';
   $view->base_table = 'node';
   $view->human_name = 'Answers to a question';
   $view->core = 7;
@@ -155,7 +155,7 @@ function commons_q_a_views_default_views() {
   $handler->display->display_options['empty']['area']['table'] = 'views';
   $handler->display->display_options['empty']['area']['field'] = 'area';
   $handler->display->display_options['empty']['area']['empty'] = TRUE;
-  $handler->display->display_options['empty']['area']['content'] = 'This question hasn\'t been answered yet. You can be the first to answer it!';
+  $handler->display->display_options['empty']['area']['content'] = 'This Empty text is overridden in commons_q_a.module';
   $handler->display->display_options['empty']['area']['format'] = 'filtered_html';
   /* Field: Content: Title */
   $handler->display->display_options['fields']['title']['id'] = 'title';
@@ -230,7 +230,7 @@ function commons_q_a_views_default_views() {
     t('‹ previous'),
     t('next ›'),
     t('last »'),
-    t('This question hasn\'t been answered yet. You can be the first to answer it!'),
+    t('This Empty text is overridden in commons_q_a.module'),
     t('All'),
     t('Content pane'),
     t('Commons'),
diff --git a/modules/commons/commons_radioactivity/commons_radioactivity.features.field_instance.inc b/modules/commons/commons_radioactivity/commons_radioactivity.features.field_instance.inc
index ddd4985..03574bc 100644
--- a/modules/commons/commons_radioactivity/commons_radioactivity.features.field_instance.inc
+++ b/modules/commons/commons_radioactivity/commons_radioactivity.features.field_instance.inc
@@ -21,51 +21,52 @@ function commons_radioactivity_field_default_field_instances() {
 }
 
 /**
-* Contains a field definition export for the Radioactivity field for re-use
-* across content types.
-*/
+ * Contains a field definition export for the Radioactivity field for re-use
+ * across content types.
+ */
 function commons_radioactivity_field_definition(&$field_instances, $entity_type, $bundle) {
   $field_instances["$entity_type-$bundle-field_radioactivity"] = array(
-  'bundle' => $bundle,
-  'default_value' => array(
-    0 => array(
-      'radioactivity_energy' => '8',
+    'bundle' => $bundle,
+    'default_value' => array(
+      0 => array(
+        'radioactivity_energy' => '8',
+      ),
     ),
-  ),
-  'deleted' => '0',
-  'description' => '',
-  'display' => array(
-    'default' => array(
-      'label' => 'above',
-      'module' => 'radioactivity',
-      'settings' => array(
-        'energy' => 10,
-        'type' => 'none',
-        'accuracy' => '100',
+    'deleted' => '0',
+    'description' => '',
+    'display' => array(
+      'default' => array(
+        'label' => 'above',
+        'module' => 'radioactivity',
+        'settings' => array(
+          'energy' => 10,
+          'type' => 'none',
+          'accuracy' => '100',
+        ),
+        'type' => 'radioactivity_combo_formatter',
+        'weight' => 3,
+      ),
+      'teaser' => array(
+        'label' => 'above',
+        'settings' => array(),
+        'type' => 'hidden',
+        'weight' => 0,
       ),
-      'type' => 'radioactivity_combo_formatter',
-      'weight' => 3,
     ),
-    'teaser' => array(
-      'label' => 'above',
-      'settings' => array(),
-      'type' => 'hidden',
-      'weight' => 0,
+    'entity_type' => $entity_type,
+    'field_name' => 'field_radioactivity',
+    'label' => 'Radioactivity',
+    'required' => 0,
+    'settings' => array(
+      'history_limit' => 8,
+      'profile' => "commons_ra_$entity_type",
+      'user_register_form' => FALSE,
     ),
-  ),
-  'entity_type' => $entity_type,
-  'field_name' => 'field_radioactivity',
-  'label' => 'Radioactivity',
-  'required' => 0,
-  'settings' => array(
-    'profile' => "commons_ra_$entity_type",
-    'user_register_form' => FALSE,
-  ),
-  'widget' => array(
-    'active' => 0,
-    'module' => 'radioactivity',
-    'settings' => array(),
-    'type' => 'radioactivity_basic_widget',
-    'weight' => '3',
-  ));
+    'widget' => array(
+      'active' => 0,
+      'module' => 'radioactivity',
+      'settings' => array(),
+      'type' => 'radioactivity_basic_widget',
+      'weight' => '3',
+    ));
 }
\ No newline at end of file
diff --git a/modules/commons/commons_search/modules/commons_search_solr_user/commons_search_solr_user.module b/modules/commons/commons_search/modules/commons_search_solr_user/commons_search_solr_user.module
index 6477c81..319e9fe 100644
--- a/modules/commons/commons_search/modules/commons_search_solr_user/commons_search_solr_user.module
+++ b/modules/commons/commons_search/modules/commons_search_solr_user/commons_search_solr_user.module
@@ -80,17 +80,22 @@ function commons_search_solr_user_apachesolr_search_page_alter(&$build, $search_
 
     // First check to see if the flagged key is set. If so we don't want to query
     // Using EFQ because flags aren't entities.
+    $limit = isset($search_page['settings']['apachesolr_search_per_page']) ? $search_page['settings']['apachesolr_search_per_page'] : 12;
+    $flagged = (isset($_GET['flagged']) && is_numeric($_GET['flagged'])) ? check_plain($_GET['flagged']) : 0;
+
     $out_results = array();
-    if (isset($_GET['flagged']) && $flagged = check_plain($_GET['flagged'])) {
-      // Get the count of flagged users for a particular account
+    if ($flagged && $flag = flag_get_flag('commons_follow_user')) {
+      // Get the count of flagged users for a particular account.
       $fl_results = db_select('flag_content', 'f')
         ->fields('f', array('content_id', 'uid'))
-        ->condition('f.content_type','user','=')
-        ->condition('f.uid',$user->uid,'=')
-        ->extend('PagerDefault')->limit(12)
+        ->condition('f.content_type', 'user', '=')
+        ->condition('f.uid', $user->uid, '=')
+        ->condition('f.fid', $flag->fid, '=')
+        ->extend('PagerDefault')->limit($limit)
         ->addTag('commons_search_solr_user_people')
+        ->addMetaData('flagged', $flagged)
         ->execute();
-      while($record = $fl_results->fetchAssoc()) {
+      while ($record = $fl_results->fetchAssoc()) {
         $out_results[] = user_view(user_load($record['content_id']), 'search_results');
       }
       $build['pager'] = array('#theme' => 'pager');
@@ -102,10 +107,11 @@ function commons_search_solr_user_apachesolr_search_page_alter(&$build, $search_
       $users = new EntityFieldQuery();
       $results = $users->entityCondition('entity_type', 'user')
         ->propertyCondition('status', 1)
-        ->pager(12, 1)
+        ->addTag('commons_search_solr_user_people')
+        ->pager($limit, 1)
         ->execute();
       $user_ids = array_keys($results['user']);
-      foreach($user_ids AS $uid) {
+      foreach ($user_ids as $uid) {
         $out_results[] = user_view(user_load($uid), 'search_results');($user_ids);
       }
       $build['pager'] = array(
diff --git a/modules/commons/commons_trusted_contacts/commons_trusted_contacts.install b/modules/commons/commons_trusted_contacts/commons_trusted_contacts.install
index 433d419..79b4148 100644
--- a/modules/commons/commons_trusted_contacts/commons_trusted_contacts.install
+++ b/modules/commons/commons_trusted_contacts/commons_trusted_contacts.install
@@ -68,4 +68,13 @@ function commons_trusted_contacts_update_3101() {
   );
   features_revert($revert);
   return array();
+}
+
+/**
+ * Set the limit for trusted contacts to unlimited for existing sites.
+ */
+function commons_trusted_contacts_update_3102() {
+
+  variable_set('commons_trusted_contacts_limit', 0);
+  return array();
 }
\ No newline at end of file
diff --git a/modules/commons/commons_trusted_contacts/commons_trusted_contacts.module b/modules/commons/commons_trusted_contacts/commons_trusted_contacts.module
index c9ea858..4f6b97c 100644
--- a/modules/commons/commons_trusted_contacts/commons_trusted_contacts.module
+++ b/modules/commons/commons_trusted_contacts/commons_trusted_contacts.module
@@ -195,6 +195,24 @@ function commons_trusted_contacts_module_implements_alter(&$implementations, $ho
 }
 
 /**
+ * Implements hook_form_user_admin_settings_alter().
+ */
+function commons_trusted_contacts_form_user_admin_settings_alter(&$form, &$form_state) {
+  $form['commons_trusted_contacts'] = array(
+    '#type' => 'fieldset',
+    '#title' => t('Commons Trusted Contacts'),
+    '#weight' => 0,
+    '#description' => t("Important! Lowering this number will restrict users over the new limit from adding or approving any trusted contacts until they go below it."),
+  );
+  $form['commons_trusted_contacts']['commons_trusted_contacts_limit'] = array(
+    '#type' => 'textfield',
+    '#title' => t('Maximum number of trusted contacts per user'),
+    '#default_value' => variable_get('commons_trusted_contacts_limit', 1000),
+    '#description' => t('This setting defaults to 1000 maximum contacts for performance reasons, and should be sufficient for most sites. Set to 0 for no limit.'),
+  );
+}
+
+/**
  * Implements hook_form_alter().
  */
 function commons_trusted_contacts_form_alter(&$form, &$form_state, $form_id) {
@@ -513,6 +531,12 @@ function commons_trusted_contacts_og_membership_update(OgMembership $og_membersh
     ->propertyCondition('gid', $og_membership->etid)
     ->execute();
 
+  // Membership not found, return but throw an error to watchdog.
+  if (!isset($return['og_membership'])) {
+    watchdog('commons_trusted_contacts', "Warning: expected trusted contact link not found between " . $og_membership->gid . " and " . $og_membership->etid, WATCHDOG_WARNING);
+    return;
+  }
+
   $membership_id = key($return['og_membership']);
 
   $wrapper2 = entity_metadata_wrapper('og_membership', $membership_id);
@@ -592,16 +616,20 @@ function commons_trusted_contacts_og_membership_delete(OgMembership $og_membersh
  */
 function commons_trusted_contacts_request_trust($account, $ajax) {
   global $user;
+  $requestor = $user;
 
   if ($account->uid == $user->uid) {
     // Users cannot join their own group.
     return;
   }
+  if (!commons_trusted_contacts_check_limit($requestor, $account, $ajax)) {
+    return;
+  }
 
   // This actually adds 2 OG memberships - one for each user.
   $og_membership = og_group('user', $account, array(
     'field_name' => 'user_trusted_contacts',
-    'state' => OG_STATE_PENDING
+    'state' => OG_STATE_PENDING,
   ));
 
   // Notify.
@@ -615,11 +643,11 @@ function commons_trusted_contacts_request_trust($account, $ajax) {
   );
   $message = message_create('trusted_contact_request_pending', array(
     'uid' => $account->uid,
-    'arguments' => $arguments
+    'arguments' => $arguments,
   ));
 
   $wrapper = entity_metadata_wrapper('message', $message);
-  $wrapper->field_requesting_user->set($user);
+  $wrapper->field_requesting_user->set($requestor);
   $wrapper->save();
 
   message_notify_send_message($message);
@@ -692,6 +720,13 @@ function commons_trusted_contacts_approve_trust(OgMembership $og_membership) {
     return;
   }
 
+  // Get approving user.
+  $account = user_load($og_membership->gid);
+
+  if (!commons_trusted_contacts_check_limit($account, $og_membership->etid)) {
+    return;
+  }
+
   // This actually changes both OG memberships - one for each user.
   $wrapper = entity_metadata_wrapper('og_membership', $og_membership);
   $wrapper->state->set(OG_STATE_ACTIVE);
@@ -699,9 +734,6 @@ function commons_trusted_contacts_approve_trust(OgMembership $og_membership) {
 
   // Notify.
 
-  // Get approving user.
-  $account = user_load($og_membership->gid);
-
   $message = message_create('trusted_contact_request_approved', array('uid' => $og_membership->etid));
 
   $wrapper = entity_metadata_wrapper('message', $message);
@@ -741,6 +773,75 @@ function commons_trusted_contacts_ignore_trust(OgMembership $og_membership) {
 }
 
 /**
+ * Internal check to see if a user or its contact has gone over the limit.
+ *
+ * @param $requestor The current user checking the limit.
+ * @param $requestee The user of the other side of the relationship.
+ * @param bool $ajax To use ajax or not.
+ * @return bool - False for over the limit, True for under the limit.
+ */
+function commons_trusted_contacts_check_limit($requestor, $requestee, $ajax = FALSE) {
+  // Validate that neither the requesting user nor the target user has exceeded
+  // her trusted contacts limit.
+  if ($contacts_limit = variable_get('commons_trusted_contacts_limit', 1000)) {
+    $requestor_groups = og_get_entity_groups('user', $requestor, array(OG_STATE_ACTIVE), 'user_trusted_contacts');
+    $requestee_groups = og_get_entity_groups('user', $requestee, array(OG_STATE_ACTIVE), 'user_trusted_contacts');
+
+    // This should always be set, because the user is a member of their own group.
+    // But we know funky things can happen, so lets add a check just in case.
+    $requestor_memberships = $requestor_groups['user'] ? count($requestor_groups['user']) : 0;
+    $requestee_memberships = $requestee_groups['user'] ? count($requestee_groups['user']) : 0;
+
+    $message = '';
+    $exceeds_limit = FALSE;
+
+    // We use greater than because the membership count includes the user.
+    if ($requestor_memberships > $contacts_limit) {
+      $exceeds_limit = TRUE;
+
+      drupal_set_message(
+        t('You have exceeded the limit of @limit trusted contacts. Before you can add more contacts, you must <a href="@remove-contacts-links">remove some of your existing contacts.</a>',
+          array(
+            '@limit' => $contacts_limit,
+            '@remove-contacts-link' => url('user/' . $requestor->uid . '/contacts',
+              array(
+                'query' => array(
+                  'qt-commons_trusted_contacts' => 'contacts',
+                ),
+                'fragment' => 'qt-commons_trusted_contacts',
+              )
+            ),
+          )
+        )
+      );
+    }
+    if ($requestee_memberships > $contacts_limit) {
+      $exceeds_limit = TRUE;
+
+      drupal_set_message(t('@requestee has exceeded the limit of @limit trusted contacts and cannot accept any more contacts at this time.',
+        array(
+          '@requestee' => $requestee->name,
+          '@limit' => $contacts_limit,
+        ))
+      );
+    }
+    if ($exceeds_limit) {
+      if ($ajax == 'ajax') {
+        $commands = array();
+        $commands[] = ajax_command_append('#messages', theme('status_messages'));
+        $page = array('#type' => 'ajax', '#commands' => $commands);
+        ajax_deliver($page);
+      }
+      else {
+        drupal_goto();
+      }
+      return FALSE;
+    }
+  }
+  return TRUE;
+}
+
+/**
  * Access callback for creating a Trusted-Contact request; Makes sure that the
  * token is correct.
  *
diff --git a/modules/commons/commons_wikis/commons_wikis.module b/modules/commons/commons_wikis/commons_wikis.module
index 356bdf7..c6e9ce4 100644
--- a/modules/commons/commons_wikis/commons_wikis.module
+++ b/modules/commons/commons_wikis/commons_wikis.module
@@ -23,8 +23,8 @@ function commons_wikis_module_implements_alter(&$implementations, $hook) {
  * Implements hook_commons_bw_create_all_widget().
  */
 function commons_wikis_commons_bw_create_all_widget($group) {
-   if (og_user_access('node', $group->nid, 'create wiki content')) {
-      $link = l(t('Start a wiki'), 'node/add/wiki',
+  if (og_user_access('node', $group->nid, 'create wiki content')) {
+    $link = l(t('Start a wiki'), 'node/add/wiki',
       array('attributes' => array('class' => 'commons-wikis-create'), 'query' => array('og_group_ref' => $group->nid))
     );
     return array(
@@ -41,16 +41,13 @@ function commons_wikis_commons_bw_create_all_widget($group) {
  * Implements hook_menu_alter().
  */
 function commons_wikis_menu_alter(&$items) {
-  // Find all menu items that are related to viewing a revision and change the
+  // Alter the two node menu revision items and change the
   // access callback to our custom one.
-  foreach ($items as $route => $info) {
-    if (strpos($route, 'revisions') !== FALSE
-      && strpos($route, 'revert') === FALSE
-      && strpos($route, 'delete') === FALSE) {
-      $items[$route]['access arguments'][] = $items[$route]['access callback'];
-      $items[$route]['access callback'] = 'commons_wikis_user_revision_access';
-    }
-  }
+  $items['node/%node/revisions']['access arguments'][] = $items['node/%node/revisions']['access callback'];
+  $items['node/%node/revisions']['access callback'] = 'commons_wikis_user_revision_access';
+
+  $items['node/%node/revisions/%/view']['access arguments'][] = $items['node/%node/revisions']['access callback'];
+  $items['node/%node/revisions/%/view']['access callback'] = 'commons_wikis_user_revision_access';
 }
 
 /**
@@ -68,34 +65,44 @@ function commons_wikis_views_default_views_alter(&$views) {
  * Custom access callback for viewing revision info.
  */
 function commons_wikis_user_revision_access($node = NULL, $old_callback = '_node_revision_access') {
+  // Only use custom revision access for wikis. Access to other content types
+  // should be handled by the standard callback.
   if ($node->type == 'wiki') {
-    return TRUE;
-  }
-  else {
-    return node_access('view', $node) && $old_callback($node, 'view');
+    // The content was posted to specific groups.
+    if (isset($node->og_group_ref[LANGUAGE_NONE][0]['target_id'])) {
+      return og_user_access('node', $node->og_group_ref[LANGUAGE_NONE][0]['target_id'], 'update any wiki content');
+    }
+    // The content was posted privately to all trusted contacts.
+    elseif (isset($node->og_user_group_ref[LANGUAGE_NONE][0]['target_id'])) {
+      return og_user_access('user', $node->og_user_group_ref[LANGUAGE_NONE][0]['target_id'], 'update any wiki content');
+    }
   }
+  return $old_callback($node, 'view');
 }
 
 /**
-* Implements hook_og_user_access_alter().
-*/
+ * Implements hook_og_user_access_alter().
+ */
 function commons_wikis_og_user_access_alter(&$temp_perm, $context) {
-  // Grant access to non-group members to be able to edit wiki nodes.
-  // where the group node is public and content is public within the group.
-  if ($context['string'] == "update any wiki content") {
-    $commons_groups_entity_types = commons_groups_get_group_content_entity_types();
-    $group_content_restricted = (bool) (isset($context['group']->group_content_access[LANGUAGE_NONE][0]['value']) && $context['group']->group_content_access[LANGUAGE_NONE][0]['value'] == 2);
-    $user_is_member = FALSE;
-    if ($context['group_type'] == 'node') {
-      $user_is_member = (bool) og_is_member('node', $context['group']->nid, 'user', $context['account']);
-    }
-    if ($context['group_type'] == 'user') {
-      $user_is_member = (bool) og_is_member('user', $context['group']->uid, 'user', $context['account']);
-    }
-    if (user_access('edit any wiki content', $context['account'])
-    && (!$group_content_restricted || $user_is_member)) {
-      $temp_perm["update any wiki content"] = TRUE;
-    }
+  // Only alter if we're dealing with updating wiki content.
+  if ($context['string'] != 'update any wiki content') {
+    return;
+  }
+
+  $account = $context['account'];
+  $group = $context['group'];
+  $group_type = $context['group_type'];
+
+  $wrapper = entity_metadata_wrapper($group_type, $group);
+  $entity_id = $wrapper->getIdentifier();
+
+  $group_content_restricted = (bool) !isset($wrapper->field_og_subscribe_settings) || (isset($wrapper->field_og_subscribe_settings) && $wrapper->field_og_subscribe_settings->value() != 'anyone');
+  $user_is_member = (bool) og_is_member($group_type, $entity_id, 'user', $account, array(OG_STATE_ACTIVE));
+
+  // Allow group members to be able to edit any wiki content within the group.
+  // Also grant access to non-members if both the group and content is public.
+  if (user_access('edit any wiki content', $account) && (!$group_content_restricted || $user_is_member)) {
+    $temp_perm['update any wiki content'] = TRUE;
   }
 }
 
@@ -163,6 +170,7 @@ function commons_wikis_commons_entity_integration() {
     'node' => array(
       'wiki' => array(
         'auto_title_instance' => FALSE,
+        'is_group_content' => TRUE,
       ),
     ),
   );
diff --git a/tests/README.md b/tests/README.md
deleted file mode 100644
index acddeb2..0000000
--- a/tests/README.md
+++ /dev/null
@@ -1,140 +0,0 @@
-# The Commons Test Suite
-
-Current status:  
-[![Build Status](https://travis-ci.org/acquia/commons3.png?branch=7.x-3.x)](https://travis-ci.org/acquia/commons3)
-
-This folder is the home for the Drupal Commons integration tests.  
-To run the tests on commits, the [drupal.org project](https://drupal.org/project/commons) is mirrored 
-to [Github](https://github.com/acquia/commons3) so we're able to use [Travis CI](https://travis-ci.org/) to run the tests.
-The Travis CI project page for Commons can be found [over here](https://travis-ci.org/acquia/commons3/).
-
-
-## The build process
-
-The Travis CI build process is configured within the [.travis.yml](../.travis.yml) file present in the root directory.  
-It currently includes:
-
-- building the makefile using Drush
-- installing the resulting distribution using drush site-install
-- running the behat based tests ("features")
-
-
-## The stack
-
-### [Behat](http://behat.org/):  
-A php based Behavior Driven Development framework for testing your business expectations.  
-It drives the whole test lifecycle and allows us to formulate test cases as regular english sentences.
-### [Mink](http://mink.behat.org/):  
-Mink is an open source acceptance test framework for web applications.  
-It "remote controls" several different types of browsers (from Firefox to headless phantomjs based ones).
-### [Drupal Extension](https://drupal.org/project/drupalextension):  
-The Drupal Extension is an integration layer between Behat, Mink Extension, and Drupal. It provides step definitions for common testing scenarios specific to Drupal sites.
-The predefined drupal specific steps should save us a lot of time writing helper code for using the basic navigational elements.
-The currently (July 2013) defined steps are as follows:
-
-    $ bin/behat -dl
-    Given /^(?:that I|I) am at "(?P[^"]*)"$/
-     When /^I visit "(?P[^"]*)"$/
-     When /^I click "(?P<link>[^"]*)"$/
-    Given /^for "(?P<field>[^"]*)" I enter "(?P<value>[^"]*)"$/
-    Given /^I enter "(?P<value>[^"]*)" for "(?P<field>[^"]*)"$/
-     When /^I press the "(?P<button>[^"]*)" button$/
-     Then /^I should see the link "(?P<link>[^"]*)"$/
-     Then /^I should not see the link "(?P<link>[^"]*)"$/
-     Then /^I (?:|should )see the heading "(?P<heading>[^"]*)"$/
-     Then /^I (?:|should )not see the heading "(?P<heading>[^"]*)"$/
-     Then /^I should see the heading "(?P<heading>[^"]*)" in the "(?P<region>[^"]*)"(?:| region)$/
-     Then /^I should see the "(?P<heading>[^"]*)" heading in the "(?P<region>[^"]*)"(?:| region)$/
-     When /^I (?:follow|click) "(?P<link>[^"]*)" in the "(?P<region>[^"]*)"(?:| region)$/
-     Then /^I should see the link "(?P<link>[^"]*)" in the "(?P<region>[^"]*)"(?:| region)$/
-     Then /^I should not see the link "(?P<link>[^"]*)" in the "(?P<region>[^"]*)"(?:| region)$/
-     Then /^I should see (?:the text |)"(?P<text>[^"]*)" in the "(?P<region>[^"]*)"(?:| region)$/
-     Then /^I should not see (?:the text |)"(?P<text>[^"]*)" in the "(?P<region>[^"]*)"(?:| region)$/
-    Given /^I press "(?P<button>[^"]*)" in the "(?P<region>[^"]*)"(?:| region)$/
-    Given /^(?:|I )fill in "(?P<value>(?:[^"]|\\")*)" for "(?P<field>(?:[^"]|\\")*)" in the "(?P<region>[^"]*)"(?:| region)$/
-    Given /^(?:|I )fill in "(?P<field>(?:[^"]|\\")*)" with "(?P<value>(?:[^"]|\\")*)" in the "(?P<region>[^"]*)"(?:| region)$/
-     Then /^(?:I|I should) see the text "(?P<text>[^"]*)"$/
-     Then /^I should not see the text "(?P<text>[^"]*)"$/
-     Then /^I should get a "(?P<code>[^"]*)" HTTP response$/
-     Then /^I should not get a "(?P<code>[^"]*)" HTTP response$/
-    Given /^I check the box "(?P<checkbox>[^"]*)"$/
-    Given /^I uncheck the box "(?P<checkbox>[^"]*)"$/
-     When /^I select the radio button "(?P<label>[^"]*)" with the id "(?P<id>[^"]*)"$/
-     When /^I select the radio button "(?P<label>[^"]*)"$/
-    Given /^I am an anonymous user$/
-    Given /^I am not logged in$/
-    Given /^I am logged in as a user with the "(?P<role>[^"]*)" role$/
-    Given /^I click "(?P<link>[^"]*)" in the "(?P<row_text>[^"]*)" row$/
-    Given /^the cache has been cleared$/
-    Given /^I run cron$/
-    Given /^I am viewing (?:a|an) "(?P<type>[^"]*)" node with the title "(?P<title>[^"]*)"$/
-    Given /^(?:a|an) "(?P<type>[^"]*)" node with the title "(?P<title>[^"]*)"$/
-    Given /^I am viewing my "(?P<type>[^"]*)" node with the title "(?P<title>[^"]*)"$/
-    Given /^"(?P<type>[^"]*)" nodes:$/
-    Given /^I am viewing (?:a|an) "(?P<vocabulary>[^"]*)" term with the name "(?P<name>[^"]*)"$/
-    Given /^(?:a|an) "(?P<vocabulary>[^"]*)" term with the name "(?P<name>[^"]*)"$/
-    Given /^users:$/
-    Given /^"(?P<vocabulary>[^"]*)" terms:$/
-     Then /^I should see the error message(?:| containing) "([^"]*)"$/
-     Then /^I should see the following <error messages>$/
-    Given /^I should not see the error message(?:| containing) "([^"]*)"$/
-     Then /^I should not see the following <error messages>$/
-     Then /^I should see the success message(?:| containing) "([^"]*)"$/
-     Then /^I should see the following <success messages>$/
-    Given /^I should not see the success message(?:| containing) "([^"]*)"$/
-     Then /^I should not see the following <success messages>$/
-     Then /^I should see the message(?:| containing) "([^"]*)"$/
-     Then /^I should not see the message(?:| containing) "([^"]*)"$/
-     Then /^(?:|I )break$/
-    Given /^(?:|I )am on (?:|the )homepage$/
-     When /^(?:|I )go to (?:|the )homepage$/
-    Given /^(?:|I )am on "(?P<page>[^"]+)"$/
-     When /^(?:|I )go to "(?P<page>[^"]+)"$/
-     When /^(?:|I )reload the page$/
-     When /^(?:|I )move backward one page$/
-     When /^(?:|I )move forward one page$/
-     When /^(?:|I )press "(?P<button>(?:[^"]|\\")*)"$/
-     When /^(?:|I )follow "(?P<link>(?:[^"]|\\")*)"$/
-     When /^(?:|I )fill in "(?P<field>(?:[^"]|\\")*)" with "(?P<value>(?:[^"]|\\")*)"$/
-     When /^(?:|I )fill in "(?P<field>(?:[^"]|\\")*)" with:$/
-     When /^(?:|I )fill in "(?P<value>(?:[^"]|\\")*)" for "(?P<field>(?:[^"]|\\")*)"$/
-     When /^(?:|I )fill in the following:$/
-     When /^(?:|I )select "(?P<option>(?:[^"]|\\")*)" from "(?P<select>(?:[^"]|\\")*)"$/
-     When /^(?:|I )additionally select "(?P<option>(?:[^"]|\\")*)" from "(?P<select>(?:[^"]|\\")*)"$/
-     When /^(?:|I )check "(?P<option>(?:[^"]|\\")*)"$/
-     When /^(?:|I )uncheck "(?P<option>(?:[^"]|\\")*)"$/
-     When /^(?:|I )attach the file "(?P[^"]*)" to "(?P<field>(?:[^"]|\\")*)"$/
-     Then /^(?:|I )should be on "(?P<page>[^"]+)"$/
-     Then /^(?:|I )should be on (?:|the )homepage$/
-     Then /^the (?i)url(?-i) should match (?P<pattern>"([^"]|\\")*")$/
-     Then /^the response status code should be (?P<code>\d+)$/
-     Then /^the response status code should not be (?P<code>\d+)$/
-     Then /^(?:|I )should see "(?P<text>(?:[^"]|\\")*)"$/
-     Then /^(?:|I )should not see "(?P<text>(?:[^"]|\\")*)"$/
-     Then /^(?:|I )should see text matching (?P<pattern>"(?:[^"]|\\")*")$/
-     Then /^(?:|I )should not see text matching (?P<pattern>"(?:[^"]|\\")*")$/
-     Then /^the response should contain "(?P<text>(?:[^"]|\\")*)"$/
-     Then /^the response should not contain "(?P<text>(?:[^"]|\\")*)"$/
-     Then /^(?:|I )should see "(?P<text>(?:[^"]|\\")*)" in the "(?P<element>[^"]*)" element$/
-     Then /^(?:|I )should not see "(?P<text>(?:[^"]|\\")*)" in the "(?P<element>[^"]*)" element$/
-     Then /^the "(?P<element>[^"]*)" element should contain "(?P<value>(?:[^"]|\\")*)"$/
-     Then /^the "(?P<element>[^"]*)" element should not contain "(?P<value>(?:[^"]|\\")*)"$/
-     Then /^(?:|I )should see an? "(?P<element>[^"]*)" element$/
-     Then /^(?:|I )should not see an? "(?P<element>[^"]*)" element$/
-     Then /^the "(?P<field>(?:[^"]|\\")*)" field should contain "(?P<value>(?:[^"]|\\")*)"$/
-     Then /^the "(?P<field>(?:[^"]|\\")*)" field should not contain "(?P<value>(?:[^"]|\\")*)"$/
-     Then /^the "(?P<checkbox>(?:[^"]|\\")*)" checkbox should be checked$/
-     Then /^the checkbox "(?P<checkbox>(?:[^"]|\\")*)" (?:is|should be) checked$/
-     Then /^the "(?P<checkbox>(?:[^"]|\\")*)" checkbox should not be checked$/
-     Then /^the checkbox "(?P<checkbox>(?:[^"]|\\")*)" should (?:be unchecked|not be checked)$/
-     Then /^the checkbox "(?P<checkbox>(?:[^"]|\\")*)" is (?:unchecked|not checked)$/
-     Then /^(?:|I )should see (?P<num>\d+) "(?P<element>[^"]*)" elements?$/
-     Then /^print current URL$/
-     Then /^print last response$/
-     Then /^show last response$/
-
-## Writing new tests
-
-
-For information about how to write tests, I'd suggest looking at the official [behat documentation](http://docs.behat.org/quick_intro.html#define-your-feature).
-One small piece of information: When you tag a scenario with @javascript, it will be executed in Firefox/Selenium2 rather than using the default "headless" goute driver.
diff --git a/tests/behat.yml b/tests/behat.yml
deleted file mode 100644
index 462c643..0000000
--- a/tests/behat.yml
+++ /dev/null
@@ -1,12 +0,0 @@
-default:
-  paths:
-    features: 'features'
-  extensions:
-    Behat\MinkExtension\Extension:
-      goutte: ~
-      selenium2: ~
-      base_url: http://localhost/
-      default_session: 'goutte'
-      javascript_session: 'selenium2'
-    Drupal\DrupalExtension\Extension:
-      blackbox: ~
\ No newline at end of file
diff --git a/tests/behat/.gitignore b/tests/behat/.gitignore
new file mode 100644
index 0000000..d71a47f
--- /dev/null
+++ b/tests/behat/.gitignore
@@ -0,0 +1,5 @@
+behat.yml
+composer.lock
+composer.phar
+bin
+vendor
diff --git a/tests/behat/README.txt b/tests/behat/README.txt
new file mode 100644
index 0000000..f786af0
--- /dev/null
+++ b/tests/behat/README.txt
@@ -0,0 +1,22 @@
+Behat tests
+===========
+
+Setup
+-----
+
+ 1. Install Composer
+
+    php -r "eval('?>'.file_get_contents('https://getcomposer.org/installer'));"
+ 
+ 2. Install Behat and dependencies via Composer
+
+    php composer.phar install
+
+ 3. Copy behat.yml.example to behat.yml and modify
+
+    mv behat.template.yml behat.yml
+ 
+ 4. Run Behat and examine test results!
+ 
+    bin/behat
+
diff --git a/tests/behat/behat.template.yml b/tests/behat/behat.template.yml
new file mode 100644
index 0000000..4c8afb7
--- /dev/null
+++ b/tests/behat/behat.template.yml
@@ -0,0 +1,13 @@
+default:
+  paths:
+    features: 'features'
+  extensions:
+    Behat\MinkExtension\Extension:
+      goutte: ~
+      selenium2: ~
+      base_url: http://${drupal.uri}
+      files_path: ../../
+    Drupal\DrupalExtension\Extension:
+      blackbox: ~
+      drush:
+        root: ${drush.root}
diff --git a/tests/behat/behat.travis.yml b/tests/behat/behat.travis.yml
new file mode 100644
index 0000000..9f1c9da
--- /dev/null
+++ b/tests/behat/behat.travis.yml
@@ -0,0 +1,29 @@
+default:
+  paths:
+    features: 'features'
+  filters:
+    tags: "~@chrome"
+  extensions:
+    Behat\MinkExtension\Extension:
+      goutte: ~
+      selenium2: ~
+      base_url: http://127.0.0.1:8888
+      files_path: ../../
+    Drupal\DrupalExtension\Extension:
+      blackbox: ~
+      drush:
+        alias: self
+      # This will be setup by .travis.yml like so:
+      # export BEHAT_PARAMS="extensions[Drupal\\DrupalExtension\\Extension][drupal][drupal_root]=$DRUPAL_ROOT"
+      #drupal:
+      #  drupal_root: "/path/to/drupal/root"
+
+# Setup for Google Chrome only tests.
+chrome:
+  filters:
+    tags: "@chrome"
+  extensions:
+    Behat\MinkExtension\Extension:
+      selenium2:
+        browser: chrome
+        capabilities: {"browser": "chrome", "browserName": "chrome", "browserVersion": "ANY", "version": "ANY"}
diff --git a/tests/behat/composer.json b/tests/behat/composer.json
new file mode 100644
index 0000000..5bf9093
--- /dev/null
+++ b/tests/behat/composer.json
@@ -0,0 +1,20 @@
+{
+  "require": {
+    "drupal/drupal-extension": "*",
+
+    "symfony/css-selector": "2.4.2",
+    "symfony/finder": "2.4.2",
+    "symfony/yaml": "2.4.2",
+    "symfony/translation": "2.4.2",
+    "symfony/event-dispatcher": "2.4.2",
+    "symfony/filesystem": "2.4.2",
+    "symfony/config": "2.4.2",
+    "symfony/console": "2.4.2",
+    "symfony/process": "2.4.2",
+    "symfony/dom-crawler": "2.4.2",
+    "symfony/browser-kit": "2.4.2"
+  },
+  "config": {
+    "bin-dir": "bin/"
+  }
+}
diff --git a/tests/behat/features/bootstrap/FeatureContext.php b/tests/behat/features/bootstrap/FeatureContext.php
new file mode 100644
index 0000000..2e36560
--- /dev/null
+++ b/tests/behat/features/bootstrap/FeatureContext.php
@@ -0,0 +1,268 @@
+<?php
+
+use Behat\Behat\Context\ClosuredContextInterface,
+    Behat\Behat\Context\TranslatedContextInterface,
+    Behat\Behat\Context\BehatContext,
+    Behat\Behat\Event\StepEvent,
+    Behat\Behat\Exception\PendingException;
+use Behat\Gherkin\Node\PyStringNode,
+    Behat\Gherkin\Node\TableNode;
+use Drupal\DrupalExtension\Context\DrupalContext;
+use Drupal\Component\Utility\Random;
+
+//
+// Require 3rd-party libraries here:
+//
+//   require_once 'PHPUnit/Autoload.php';
+//   require_once 'PHPUnit/Framework/Assert/Functions.php';
+//
+
+/**
+ * Features context.
+ */
+class FeatureContext extends DrupalContext
+{
+  /**
+   * Initializes context.
+   * Every scenario gets it's own context object.
+   *
+   * @param array $parameters context parameters (set them up through behat.yml)
+   */
+  public function __construct(array $parameters) {
+    // Initialize your context here
+  }
+
+//
+// Place your definition and hook methods here:
+//
+//    /**
+//     * @Given /^I have done something with "([^"]*)"$/
+//     */
+//    public function iHaveDoneSomethingWith($argument)
+//    {
+//        doSomethingWith($argument);
+//    }
+//
+
+  /**
+   * @Given /^I switch to the frame "([^"]*)"$/
+   */
+  public function iSwitchToTheFrame($frame) {
+    $this->getSession()->switchToIFrame($frame);
+  }
+
+  /**
+   * @Given /^I switch out of all frames$/
+   */
+  public function iSwitchOutOfAllFrames() {
+    $this->getSession()->switchToIFrame();
+  }
+
+  /**
+   * @Then /^I should see the "([^"]*)" button$/
+   */
+  public function assertButton($label) {
+    $page = $this->getSession()->getPage();
+    $results = $page->findAll('css', "input[type=submit],input[type=button],button");
+    if (!empty($results)) {
+      foreach ($results as $result) {
+        if ($result->getTagName() == 'input' && $result->getAttribute('value') == $label) {
+          return;
+        }
+        elseif ($result->getText() == $label) {
+          return;
+        }
+      }
+    }
+    throw new \Exception(sprintf('The "%s" button was not found on the page %s', $label, $region, $this->getSession()->getCurrentUrl()));
+  }
+
+  /**
+   * @Then /^I should see the "([^"]*)" button in the "([^"]*)" region$/
+   */
+  public function assertRegionButton($label, $region) {
+    $regionObj = $this->getRegion($region);
+    $results = $regionObj->findAll('css', "input[type=submit],input[type=button],button");
+    if (!empty($results)) {
+      foreach ($results as $result) {
+        if ($result->getTagName() == 'input' && $result->getAttribute('value') == $label) {
+          return;
+        }
+        elseif ($result->getText() == $label) {
+          return;
+        }
+      }
+    }
+    throw new \Exception(sprintf('The "%s" button was not found in the "%s" region on the page %s', $label, $region, $this->getSession()->getCurrentUrl()));
+  }
+
+  /**
+   * @Then /^I should see the "([^"]*)" element in the "([^"]*)" region$/
+   */
+  public function assertRegionElement($tag, $region) {
+    $regionObj = $this->getRegion($region);
+    $elements = $regionObj->findAll('css', $tag);
+    if (!empty($elements)) {
+      return;
+    }
+    throw new \Exception(sprintf('The element "%s" was not found in the "%s" region on the page %s', $tag, $region, $this->getSession()->getCurrentUrl()));
+  }
+
+  /**
+   * @Then /^I should not see the "([^"]*)" element in the "([^"]*)" region$/
+   */
+  public function assertNotRegionElement($tag, $region) {
+    $regionObj = $this->getRegion($region);
+    $result = $regionObj->findAll('css', $tag);
+    if (!empty($result)) {
+      throw new \Exception(sprintf('Element "%s" was found in the "%s" region on the page %s', $tag, $region, $this->getSession()->getCurrentUrl()));
+    }
+  }
+
+  /**
+   * @Then /^I should see "([^"]*)" in the "([^"]*)" element in the "([^"]*)" region$/
+   */
+  public function assertRegionElementText($text, $tag, $region) {
+    $regionObj = $this->getRegion($region);
+    $results = $regionObj->findAll('css', $tag);
+    if (!empty($results)) {
+      foreach ($results as $result) {
+        if ($result->getText() == $text) {
+          return;
+        }
+      }
+    }
+    throw new \Exception(sprintf('The text "%s" was not found in the "%s" element in the "%s" region on the page %s', $text, $tag, $region, $this->getSession()->getCurrentUrl()));
+  }
+
+  /**
+   * @Then /^I should see "([^"]*)" in the "([^"]*)" element with the "([^"]*)" CSS property set to "([^"]*)" in the "([^"]*)" region$/
+   */
+  public function assertRegionElementTextCss($text, $tag, $property, $value, $region) {
+    $regionObj = $this->getRegion($region);
+    $elements = $regionObj->findAll('css', $tag);
+    if (empty($elements)) {
+      throw new \Exception(sprintf('The element "%s" was not found in the "%s" region on the page %s', $tag, $region, $this->getSession()->getCurrentUrl()));
+    }
+
+    $found = FALSE;
+    foreach ($elements as $element) {
+      if ($element->getText() == $text) {
+        $found = TRUE;
+        break;
+      }
+    }
+    if (!$found) {
+      throw new \Exception(sprintf('The text "%s" was not found in the "%s" element in the "%s" region on the page %s', $text, $tag, $region, $this->getSession()->getCurrentUrl()));
+    }
+
+    if (!empty($property)) {
+      $style = $element->getAttribute('style');
+      if (strpos($style, "$property: $value") === FALSE) {
+        throw new \Exception(sprintf('The "%s" property does not equal "%s" on the element "%s" in the "%s" region on the page %s', $property, $value, $tag, $region, $this->getSession()->getCurrentUrl()));
+      }
+    }
+  }
+
+  /**
+   * @Then /^I should not see "([^"]*)" in the "([^"]*)" element in the "([^"]*)" region$/
+   */
+  public function assertNotRegionElementText($text, $tag, $region) {
+    $regionObj = $this->getRegion($region);
+    $results = $regionObj->findAll('css', $tag);
+    if (!empty($results)) {
+      foreach ($results as $result) {
+        if ($result->getText() == $text) {
+          throw new \Exception(sprintf('The text "%s" was found in the "%s" element in the "%s" region on the page %s', $text, $tag, $region, $this->getSession()->getCurrentUrl()));
+        }
+      }
+    }
+  }
+
+  /**
+   * @Then /^I should see the image alt "(?P<link>[^"]*)" in the "(?P<region>[^"]*)"(?:| region)$/
+   */
+  public function assertAltRegion($alt, $region) {
+    $regionObj = $this->getRegion($region);
+    $element = $regionObj->find('css', 'img');
+    $tmp = $element->getAttribute('alt');
+    if ($alt == $tmp) {
+      $result = $alt;
+    }
+    if (empty($result)) {
+      throw new \Exception(sprintf('No alt text matching "%s" in the "%s" region on the page %s', $alt, $region, $this->getSession()->getCurrentUrl()));
+    }
+  }
+
+  /**
+   * @AfterStep @javascript
+   *
+   * After every step in a @javascript scenario, we want to wait for AJAX
+   * loading to finish.
+   */
+  public function afterStep(StepEvent $event) {
+    if ($event->getResult() === 0) {
+      $this->iWaitForAJAX();
+    }
+  }
+
+  /**
+   * @Given /^(?:|I )wait(?:| for) (\d+) seconds?$/
+   *
+   * Wait for the given number of seconds. ONLY USE FOR DEBUGGING!
+   */
+  public function iWaitForSeconds($arg1) {
+    sleep($arg1);
+  }
+
+  /**
+   * @Given /^(?:|I )wait for AJAX loading to finish$/
+   *
+   * Wait for the jQuery AJAX loading to finish. ONLY USE FOR DEBUGGING!
+   */
+  public function iWaitForAJAX() {
+    $this->getSession()->wait(5000, 'jQuery != undefined && jQuery.active === 0');
+  }
+
+  /**
+   * Override MinkContext::fixStepArgument().
+   *
+   * Make it possible to use [random].
+   * If you want to use the previous random value [random:1].
+   */
+  protected function fixStepArgument($argument) {
+    $argument = str_replace('\\"', '"', $argument);
+
+    // Token replace the argument.
+    static $random = array();
+    for ($start = 0; ($start = strpos($argument, '[', $start)) !== FALSE; ) {
+      $end = strpos($argument, ']', $start);
+      if ($end === FALSE) {
+        break;
+      }
+      $name = substr($argument, $start + 1, $end - $start - 1);
+      if ($name == 'random') {
+        $this->vars[$name] = Random::name(8);
+        $random[] = $this->vars[$name];
+      }
+      // In order to test previous random values stored in the form,
+      // suppport random:n, where n is the number or random's ago
+      // to use, i.e., random:1 is the previous random value.
+      elseif (substr($name, 0, 7) == 'random:') {
+        $num = substr($name, 7);
+        if (is_numeric($num) && $num <= count($random)) {
+          $this->vars[$name] = $random[count($random) - $num];
+        }
+      }
+      if (isset($this->vars[$name])) {
+        $argument = substr_replace($argument, $this->vars[$name], $start, $end - $start + 1);
+        $start += strlen($this->vars[$name]);
+      }
+      else {
+        $start = $end + 1;
+      }
+    }
+
+    return $argument;
+  }
+}
diff --git a/tests/behat/features/general.feature b/tests/behat/features/general.feature
new file mode 100644
index 0000000..2bfbeb1
--- /dev/null
+++ b/tests/behat/features/general.feature
@@ -0,0 +1,21 @@
+Feature: General functionality
+  Scenario: Anonymous users cannot create content
+    Given I am on "/node/add"
+    Then I should see "Access denied. You must log in to view this page."
+      And I should not see "Add content"
+
+  Scenario: Anonymous users cannot create groups
+    Given I am on "/groups"
+    Then I should not see "Create a group"
+
+  Scenario: Anonymous users cannot create events
+    Given I am on "/events"
+    Then I should not see "List an event"
+
+  Scenario: Anonymous users can view user profiles
+    Given I am on "/user/1"
+    Then I should see "admin"
+
+  Scenario: Anonymous users can see the Commons footer
+    Given I am on "/"
+    Then I should see "A Commons Community, powered by Acquia"
diff --git a/tests/behat/features/login.feature b/tests/behat/features/login.feature
new file mode 100644
index 0000000..e6b9461
--- /dev/null
+++ b/tests/behat/features/login.feature
@@ -0,0 +1,15 @@
+Feature: Anonymous user login
+  Scenario: Admin user is able to login
+    Given I am on "/user"
+    When I fill in "admin" for "edit-name"
+      And I fill in "admin" for "edit-pass"
+      And I press "Log in"
+    Then I should see "Logout"
+
+  Scenario: User can request a new password if it has been lost
+    Given I am on "/user/password"
+    Then I should see "Request new password"
+    When I fill in "admin" for "edit-name"
+      And press "E-mail new password"
+    Then I should see "Further instructions have been sent to your e-mail address."
+      And I should see "Log in"
diff --git a/tests/bin/behat b/tests/bin/behat
deleted file mode 120000
index ec35dd9..0000000
--- a/tests/bin/behat
+++ /dev/null
@@ -1 +0,0 @@
-../vendor/behat/behat/bin/behat
\ No newline at end of file
diff --git a/tests/bin/webunit b/tests/bin/webunit
deleted file mode 120000
index 8f25c7b..0000000
--- a/tests/bin/webunit
+++ /dev/null
@@ -1 +0,0 @@
-../vendor/instaclick/php-webdriver/bin/webunit
\ No newline at end of file
diff --git a/tests/composer.json b/tests/composer.json
deleted file mode 100644
index 6ec192b..0000000
--- a/tests/composer.json
+++ /dev/null
@@ -1,9 +0,0 @@
-{
-  "require": {
-    "drupal/drupal-extension": "*"
-  },
-  "minimum-stability": "dev",
-  "config": {
-    "bin-dir": "bin/"
-  }
-}
diff --git a/tests/composer.lock b/tests/composer.lock
deleted file mode 100644
index 67c237b..0000000
--- a/tests/composer.lock
+++ /dev/null
@@ -1,1399 +0,0 @@
-{
-    "_readme": [
-        "This file locks the dependencies of your project to a known state",
-        "Read more about it at http://getcomposer.org/doc/01-basic-usage.md#composer-lock-the-lock-file"
-    ],
-    "hash": "18ee939ac7bfb3e86dbca8caf6ba65f8",
-    "packages": [
-        {
-            "name": "behat/behat",
-            "version": "v2.4.6",
-            "source": {
-                "type": "git",
-                "url": "https://github.com/Behat/Behat.git",
-                "reference": "f1d2964667cf4b21bb6c2c1564f26829a6954155"
-            },
-            "dist": {
-                "type": "zip",
-                "url": "https://api.github.com/repos/Behat/Behat/zipball/f1d2964667cf4b21bb6c2c1564f26829a6954155",
-                "reference": "f1d2964667cf4b21bb6c2c1564f26829a6954155",
-                "shasum": ""
-            },
-            "require": {
-                "behat/gherkin": "~2.2.9",
-                "php": ">=5.3.1",
-                "symfony/config": "~2.0",
-                "symfony/console": "~2.0",
-                "symfony/dependency-injection": "~2.0",
-                "symfony/event-dispatcher": "~2.0",
-                "symfony/finder": "~2.0",
-                "symfony/translation": "~2.0",
-                "symfony/yaml": "~2.0"
-            },
-            "require-dev": {
-                "phpunit/phpunit": "~3.7.19"
-            },
-            "suggest": {
-                "behat/mink-extension": "for integration with Mink testing framework",
-                "behat/symfony2-extension": "for integration with Symfony2 web framework",
-                "behat/yii-extension": "for integration with Yii web framework"
-            },
-            "bin": [
-                "bin/behat"
-            ],
-            "type": "library",
-            "extra": {
-                "branch-alias": {
-                    "dev-develop": "2.4-dev"
-                }
-            },
-            "autoload": {
-                "psr-0": {
-                    "Behat\\Behat": "src/"
-                }
-            },
-            "notification-url": "https://packagist.org/downloads/",
-            "license": [
-                "MIT"
-            ],
-            "authors": [
-                {
-                    "name": "Konstantin Kudryashov",
-                    "email": "ever.zet@gmail.com",
-                    "homepage": "http://everzet.com"
-                }
-            ],
-            "description": "Scenario-oriented BDD framework for PHP 5.3",
-            "homepage": "http://behat.org/",
-            "keywords": [
-                "BDD",
-                "Behat",
-                "Symfony2"
-            ],
-            "time": "2013-06-06 10:46:48"
-        },
-        {
-            "name": "behat/gherkin",
-            "version": "dev-develop",
-            "source": {
-                "type": "git",
-                "url": "https://github.com/Behat/Gherkin.git",
-                "reference": "27e290c82dad7c508afedd39b31d5cd355a6be2d"
-            },
-            "dist": {
-                "type": "zip",
-                "url": "https://api.github.com/repos/Behat/Gherkin/zipball/27e290c82dad7c508afedd39b31d5cd355a6be2d",
-                "reference": "27e290c82dad7c508afedd39b31d5cd355a6be2d",
-                "shasum": ""
-            },
-            "require": {
-                "php": ">=5.3.1",
-                "symfony/finder": "~2.0"
-            },
-            "require-dev": {
-                "symfony/config": "~2.0",
-                "symfony/translation": "~2.0",
-                "symfony/yaml": "~2.0"
-            },
-            "suggest": {
-                "symfony/config": "If you want to use Config component to manage resources",
-                "symfony/translation": "If you want to use Symfony2 translations adapter",
-                "symfony/yaml": "If you want to parse features, represented in YAML files"
-            },
-            "type": "library",
-            "extra": {
-                "branch-alias": {
-                    "dev-develop": "2.2-dev"
-                }
-            },
-            "autoload": {
-                "psr-0": {
-                    "Behat\\Gherkin": "src/"
-                }
-            },
-            "notification-url": "https://packagist.org/downloads/",
-            "license": [
-                "MIT"
-            ],
-            "authors": [
-                {
-                    "name": "Konstantin Kudryashov",
-                    "email": "ever.zet@gmail.com",
-                    "homepage": "http://everzet.com"
-                }
-            ],
-            "description": "Gherkin DSL parser for PHP 5.3",
-            "homepage": "http://behat.org/",
-            "keywords": [
-                "BDD",
-                "Behat",
-                "DSL",
-                "Symfony2",
-                "parser"
-            ],
-            "time": "2013-08-11 18:27:33"
-        },
-        {
-            "name": "behat/mink",
-            "version": "dev-develop",
-            "source": {
-                "type": "git",
-                "url": "https://github.com/Behat/Mink.git",
-                "reference": "ed95d7dabc28a2f9cac45ce662be0645116212f5"
-            },
-            "dist": {
-                "type": "zip",
-                "url": "https://api.github.com/repos/Behat/Mink/zipball/ed95d7dabc28a2f9cac45ce662be0645116212f5",
-                "reference": "ed95d7dabc28a2f9cac45ce662be0645116212f5",
-                "shasum": ""
-            },
-            "require": {
-                "php": ">=5.3.1",
-                "symfony/css-selector": "~2.0"
-            },
-            "suggest": {
-                "behat/mink-browserkit-driver": "extremely fast headless driver for Symfony\\Kernel-based apps (Sf2, Silex)",
-                "behat/mink-goutte-driver": "fast headless driver for any app without JS emulation",
-                "behat/mink-selenium2-driver": "slow, but JS-enabled driver for any app (requires Selenium2)",
-                "behat/mink-zombie-driver": "fast and JS-enabled headless driver for any app (requires node.js)"
-            },
-            "type": "library",
-            "extra": {
-                "branch-alias": {
-                    "dev-develop": "1.5.x-dev"
-                }
-            },
-            "autoload": {
-                "psr-0": {
-                    "Behat\\Mink": "src/"
-                }
-            },
-            "notification-url": "https://packagist.org/downloads/",
-            "license": [
-                "MIT"
-            ],
-            "authors": [
-                {
-                    "name": "Konstantin Kudryashov",
-                    "email": "ever.zet@gmail.com",
-                    "homepage": "http://everzet.com"
-                }
-            ],
-            "description": "Web acceptance testing framework for PHP 5.3",
-            "homepage": "http://mink.behat.org/",
-            "keywords": [
-                "browser",
-                "testing",
-                "web"
-            ],
-            "time": "2013-08-26 17:55:59"
-        },
-        {
-            "name": "behat/mink-browserkit-driver",
-            "version": "dev-master",
-            "source": {
-                "type": "git",
-                "url": "https://github.com/Behat/MinkBrowserKitDriver.git",
-                "reference": "6580790c180a34ae4344005bb9383b83588da851"
-            },
-            "dist": {
-                "type": "zip",
-                "url": "https://api.github.com/repos/Behat/MinkBrowserKitDriver/zipball/6580790c180a34ae4344005bb9383b83588da851",
-                "reference": "6580790c180a34ae4344005bb9383b83588da851",
-                "shasum": ""
-            },
-            "require": {
-                "behat/mink": "~1.5.0",
-                "php": ">=5.3.1",
-                "symfony/browser-kit": "~2.0",
-                "symfony/dom-crawler": "~2.0"
-            },
-            "require-dev": {
-                "silex/silex": "@dev"
-            },
-            "type": "mink-driver",
-            "extra": {
-                "branch-alias": {
-                    "dev-master": "1.1.x-dev"
-                }
-            },
-            "autoload": {
-                "psr-0": {
-                    "Behat\\Mink\\Driver": "src/"
-                }
-            },
-            "notification-url": "https://packagist.org/downloads/",
-            "license": [
-                "MIT"
-            ],
-            "authors": [
-                {
-                    "name": "Konstantin Kudryashov",
-                    "email": "ever.zet@gmail.com",
-                    "homepage": "http://everzet.com"
-                }
-            ],
-            "description": "Symfony2 BrowserKit driver for Mink framework",
-            "homepage": "http://mink.behat.org/",
-            "keywords": [
-                "Mink",
-                "Symfony2",
-                "browser",
-                "testing"
-            ],
-            "time": "2013-09-06 09:22:29"
-        },
-        {
-            "name": "behat/mink-extension",
-            "version": "v1.1.4",
-            "source": {
-                "type": "git",
-                "url": "https://github.com/Behat/MinkExtension.git",
-                "reference": "b4522f19fe96d423883f2e3650615e19d3a48c05"
-            },
-            "dist": {
-                "type": "zip",
-                "url": "https://api.github.com/repos/Behat/MinkExtension/zipball/b4522f19fe96d423883f2e3650615e19d3a48c05",
-                "reference": "b4522f19fe96d423883f2e3650615e19d3a48c05",
-                "shasum": ""
-            },
-            "require": {
-                "behat/behat": "~2.4.5",
-                "behat/mink": ">=1.4.3,<1.6-dev",
-                "php": ">=5.3.2"
-            },
-            "require-dev": {
-                "behat/mink-goutte-driver": "~1.0"
-            },
-            "type": "behat-extension",
-            "extra": {
-                "branch-alias": {
-                    "dev-master": "1.1.x-dev"
-                }
-            },
-            "autoload": {
-                "psr-0": {
-                    "Behat\\MinkExtension": "src/"
-                }
-            },
-            "notification-url": "https://packagist.org/downloads/",
-            "license": [
-                "MIT"
-            ],
-            "authors": [
-                {
-                    "name": "Konstantin Kudryashov",
-                    "email": "ever.zet@gmail.com",
-                    "homepage": "http://everzet.com"
-                }
-            ],
-            "description": "Mink extension for Behat",
-            "homepage": "http://mink.behat.org",
-            "keywords": [
-                "browser",
-                "gui",
-                "test",
-                "web"
-            ],
-            "time": "2013-06-04 12:18:22"
-        },
-        {
-            "name": "behat/mink-goutte-driver",
-            "version": "dev-master",
-            "source": {
-                "type": "git",
-                "url": "https://github.com/Behat/MinkGoutteDriver.git",
-                "reference": "fa1b073b48761464feb0b05e6825da44b20118d8"
-            },
-            "dist": {
-                "type": "zip",
-                "url": "https://api.github.com/repos/Behat/MinkGoutteDriver/zipball/fa1b073b48761464feb0b05e6825da44b20118d8",
-                "reference": "fa1b073b48761464feb0b05e6825da44b20118d8",
-                "shasum": ""
-            },
-            "require": {
-                "behat/mink-browserkit-driver": ">=1.0.5,<1.2.0",
-                "fabpot/goutte": "~1.0.1",
-                "php": ">=5.3.1"
-            },
-            "type": "mink-driver",
-            "extra": {
-                "branch-alias": {
-                    "dev-master": "1.0.x-dev"
-                }
-            },
-            "autoload": {
-                "psr-0": {
-                    "Behat\\Mink\\Driver": "src/"
-                }
-            },
-            "notification-url": "https://packagist.org/downloads/",
-            "license": [
-                "MIT"
-            ],
-            "authors": [
-                {
-                    "name": "Konstantin Kudryashov",
-                    "email": "ever.zet@gmail.com",
-                    "homepage": "http://everzet.com"
-                }
-            ],
-            "description": "Goutte driver for Mink framework",
-            "homepage": "http://mink.behat.org/",
-            "keywords": [
-                "browser",
-                "goutte",
-                "headless",
-                "testing"
-            ],
-            "time": "2013-07-03 18:43:54"
-        },
-        {
-            "name": "behat/mink-selenium2-driver",
-            "version": "dev-master",
-            "source": {
-                "type": "git",
-                "url": "https://github.com/Behat/MinkSelenium2Driver.git",
-                "reference": "c2a09b6357f0f685d2fd9843f04c692465d67d80"
-            },
-            "dist": {
-                "type": "zip",
-                "url": "https://api.github.com/repos/Behat/MinkSelenium2Driver/zipball/c2a09b6357f0f685d2fd9843f04c692465d67d80",
-                "reference": "c2a09b6357f0f685d2fd9843f04c692465d67d80",
-                "shasum": ""
-            },
-            "require": {
-                "behat/mink": "~1.5.0",
-                "instaclick/php-webdriver": "~1.0.12",
-                "php": ">=5.3.1"
-            },
-            "type": "mink-driver",
-            "extra": {
-                "branch-alias": {
-                    "dev-master": "1.1.x-dev"
-                }
-            },
-            "autoload": {
-                "psr-0": {
-                    "Behat\\Mink\\Driver": "src/"
-                }
-            },
-            "notification-url": "https://packagist.org/downloads/",
-            "license": [
-                "MIT"
-            ],
-            "authors": [
-                {
-                    "name": "Konstantin Kudryashov",
-                    "email": "ever.zet@gmail.com",
-                    "homepage": "http://everzet.com"
-                },
-                {
-                    "name": "Pete Otaqui",
-                    "email": "pete@otaqui.com",
-                    "homepage": "https://github.com/pete-otaqui"
-                }
-            ],
-            "description": "Selenium2 (WebDriver) driver for Mink framework",
-            "homepage": "http://mink.behat.org/",
-            "keywords": [
-                "ajax",
-                "browser",
-                "javascript",
-                "selenium",
-                "testing",
-                "webdriver"
-            ],
-            "time": "2013-09-04 06:15:55"
-        },
-        {
-            "name": "drupal/drupal-extension",
-            "version": "dev-master",
-            "source": {
-                "type": "git",
-                "url": "http://git.drupal.org/project/drupalextension.git",
-                "reference": "346bfd1b59a80679e7d25d5967db2045379c1910"
-            },
-            "require": {
-                "behat/behat": "2.4.*@stable",
-                "behat/mink": "1.5.*@stable",
-                "behat/mink-extension": "*",
-                "behat/mink-goutte-driver": "*",
-                "behat/mink-selenium2-driver": "*"
-            },
-            "require-dev": {
-                "phpunit/phpunit": "3.7.*"
-            },
-            "type": "behat-extension",
-            "autoload": {
-                "psr-0": {
-                    "Drupal\\Component": "src/",
-                    "Drupal\\Driver": "src/",
-                    "Drupal\\Drupal": "src/",
-                    "Drupal\\Exception": "src/",
-                    "Drupal\\DrupalExtension": "src/"
-                }
-            },
-            "notification-url": "https://packagist.org/downloads/",
-            "license": [
-                "GPL-2.0+"
-            ],
-            "authors": [
-                {
-                    "name": "Jonathan Hedstrom",
-                    "email": "jhedstrom@gmail.com",
-                    "homepage": "http://professorbikeybike.com"
-                }
-            ],
-            "description": "Drupal extension for Behat",
-            "homepage": "http://drupal.org/project/drupalextension",
-            "keywords": [
-                "drupal",
-                "test",
-                "web"
-            ],
-            "time": "2013-09-03 15:48:20"
-        },
-        {
-            "name": "fabpot/goutte",
-            "version": "dev-master",
-            "source": {
-                "type": "git",
-                "url": "https://github.com/fabpot/Goutte.git",
-                "reference": "75c9f23c4122caf4ea3e87a42a00b471366e707f"
-            },
-            "dist": {
-                "type": "zip",
-                "url": "https://api.github.com/repos/fabpot/Goutte/zipball/75c9f23c4122caf4ea3e87a42a00b471366e707f",
-                "reference": "75c9f23c4122caf4ea3e87a42a00b471366e707f",
-                "shasum": ""
-            },
-            "require": {
-                "ext-curl": "*",
-                "guzzle/http": ">=3.0.5,<3.8-dev",
-                "php": ">=5.3.0",
-                "symfony/browser-kit": "~2.1",
-                "symfony/css-selector": "~2.1",
-                "symfony/dom-crawler": "~2.1",
-                "symfony/finder": "~2.1",
-                "symfony/process": "~2.1"
-            },
-            "require-dev": {
-                "guzzle/plugin-history": ">=3.0.5,<3.8-dev",
-                "guzzle/plugin-mock": ">=3.0.5,<3.8-dev"
-            },
-            "type": "application",
-            "extra": {
-                "branch-alias": {
-                    "dev-master": "1.0-dev"
-                }
-            },
-            "autoload": {
-                "psr-0": {
-                    "Goutte": "."
-                }
-            },
-            "notification-url": "https://packagist.org/downloads/",
-            "license": [
-                "MIT"
-            ],
-            "authors": [
-                {
-                    "name": "Fabien Potencier",
-                    "email": "fabien@symfony.com"
-                }
-            ],
-            "description": "A simple PHP Web Scraper",
-            "homepage": "https://github.com/fabpot/Goutte",
-            "keywords": [
-                "scraper"
-            ],
-            "time": "2013-08-16 06:03:22"
-        },
-        {
-            "name": "guzzle/common",
-            "version": "dev-master",
-            "target-dir": "Guzzle/Common",
-            "source": {
-                "type": "git",
-                "url": "https://github.com/guzzle/common.git",
-                "reference": "bf73c87375f60861f8c7ccc7b95878023ade5306"
-            },
-            "dist": {
-                "type": "zip",
-                "url": "https://api.github.com/repos/guzzle/common/zipball/bf73c87375f60861f8c7ccc7b95878023ade5306",
-                "reference": "bf73c87375f60861f8c7ccc7b95878023ade5306",
-                "shasum": ""
-            },
-            "require": {
-                "php": ">=5.3.2",
-                "symfony/event-dispatcher": ">=2.1"
-            },
-            "type": "library",
-            "extra": {
-                "branch-alias": {
-                    "dev-master": "3.7-dev"
-                }
-            },
-            "autoload": {
-                "psr-0": {
-                    "Guzzle\\Common": ""
-                }
-            },
-            "notification-url": "https://packagist.org/downloads/",
-            "license": [
-                "MIT"
-            ],
-            "description": "Common libraries used by Guzzle",
-            "homepage": "http://guzzlephp.org/",
-            "keywords": [
-                "collection",
-                "common",
-                "event",
-                "exception"
-            ],
-            "time": "2013-09-08 21:09:18"
-        },
-        {
-            "name": "guzzle/http",
-            "version": "dev-master",
-            "target-dir": "Guzzle/Http",
-            "source": {
-                "type": "git",
-                "url": "https://github.com/guzzle/http.git",
-                "reference": "1034125dfd906b73119e535f03153a62fccb1989"
-            },
-            "dist": {
-                "type": "zip",
-                "url": "https://api.github.com/repos/guzzle/http/zipball/1034125dfd906b73119e535f03153a62fccb1989",
-                "reference": "1034125dfd906b73119e535f03153a62fccb1989",
-                "shasum": ""
-            },
-            "require": {
-                "guzzle/common": "self.version",
-                "guzzle/parser": "self.version",
-                "guzzle/stream": "self.version",
-                "php": ">=5.3.2"
-            },
-            "suggest": {
-                "ext-curl": "*"
-            },
-            "type": "library",
-            "extra": {
-                "branch-alias": {
-                    "dev-master": "3.7-dev"
-                }
-            },
-            "autoload": {
-                "psr-0": {
-                    "Guzzle\\Http": ""
-                }
-            },
-            "notification-url": "https://packagist.org/downloads/",
-            "license": [
-                "MIT"
-            ],
-            "authors": [
-                {
-                    "name": "Michael Dowling",
-                    "email": "mtdowling@gmail.com",
-                    "homepage": "https://github.com/mtdowling"
-                }
-            ],
-            "description": "HTTP libraries used by Guzzle",
-            "homepage": "http://guzzlephp.org/",
-            "keywords": [
-                "Guzzle",
-                "client",
-                "curl",
-                "http",
-                "http client"
-            ],
-            "time": "2013-09-06 11:34:26"
-        },
-        {
-            "name": "guzzle/parser",
-            "version": "dev-master",
-            "target-dir": "Guzzle/Parser",
-            "source": {
-                "type": "git",
-                "url": "https://github.com/guzzle/parser.git",
-                "reference": "a25c2ddda1c52fb69a4ee56eb530b13ddd9573c2"
-            },
-            "dist": {
-                "type": "zip",
-                "url": "https://api.github.com/repos/guzzle/parser/zipball/a25c2ddda1c52fb69a4ee56eb530b13ddd9573c2",
-                "reference": "a25c2ddda1c52fb69a4ee56eb530b13ddd9573c2",
-                "shasum": ""
-            },
-            "require": {
-                "php": ">=5.3.2"
-            },
-            "type": "library",
-            "extra": {
-                "branch-alias": {
-                    "dev-master": "3.7-dev"
-                }
-            },
-            "autoload": {
-                "psr-0": {
-                    "Guzzle\\Parser": ""
-                }
-            },
-            "notification-url": "https://packagist.org/downloads/",
-            "license": [
-                "MIT"
-            ],
-            "description": "Interchangeable parsers used by Guzzle",
-            "homepage": "http://guzzlephp.org/",
-            "keywords": [
-                "URI Template",
-                "cookie",
-                "http",
-                "message",
-                "url"
-            ],
-            "time": "2013-07-11 22:46:03"
-        },
-        {
-            "name": "guzzle/stream",
-            "version": "dev-master",
-            "target-dir": "Guzzle/Stream",
-            "source": {
-                "type": "git",
-                "url": "https://github.com/guzzle/stream.git",
-                "reference": "a86111d9ac7db31d65a053c825869409fe8fc83f"
-            },
-            "dist": {
-                "type": "zip",
-                "url": "https://api.github.com/repos/guzzle/stream/zipball/a86111d9ac7db31d65a053c825869409fe8fc83f",
-                "reference": "a86111d9ac7db31d65a053c825869409fe8fc83f",
-                "shasum": ""
-            },
-            "require": {
-                "guzzle/common": "self.version",
-                "php": ">=5.3.2"
-            },
-            "suggest": {
-                "guzzle/http": "To convert Guzzle request objects to PHP streams"
-            },
-            "type": "library",
-            "extra": {
-                "branch-alias": {
-                    "dev-master": "3.7-dev"
-                }
-            },
-            "autoload": {
-                "psr-0": {
-                    "Guzzle\\Stream": ""
-                }
-            },
-            "notification-url": "https://packagist.org/downloads/",
-            "license": [
-                "MIT"
-            ],
-            "authors": [
-                {
-                    "name": "Michael Dowling",
-                    "email": "mtdowling@gmail.com",
-                    "homepage": "https://github.com/mtdowling"
-                }
-            ],
-            "description": "Guzzle stream wrapper component",
-            "homepage": "http://guzzlephp.org/",
-            "keywords": [
-                "Guzzle",
-                "component",
-                "stream"
-            ],
-            "time": "2013-07-30 22:07:23"
-        },
-        {
-            "name": "instaclick/php-webdriver",
-            "version": "dev-master",
-            "source": {
-                "type": "git",
-                "url": "https://github.com/instaclick/php-webdriver.git",
-                "reference": "5ff757c6daf1cfc223928e860385952abbbdb531"
-            },
-            "dist": {
-                "type": "zip",
-                "url": "https://api.github.com/repos/instaclick/php-webdriver/zipball/5ff757c6daf1cfc223928e860385952abbbdb531",
-                "reference": "5ff757c6daf1cfc223928e860385952abbbdb531",
-                "shasum": ""
-            },
-            "require": {
-                "ext-curl": "*",
-                "php": ">=5.3.2"
-            },
-            "bin": [
-                "bin/webunit"
-            ],
-            "type": "library",
-            "extra": {
-                "branch-alias": {
-                    "dev-master": "1.0.x-dev"
-                }
-            },
-            "autoload": {
-                "psr-0": {
-                    "WebDriver": "lib/"
-                }
-            },
-            "notification-url": "https://packagist.org/downloads/",
-            "license": [
-                "Apache-2.0"
-            ],
-            "authors": [
-                {
-                    "name": "Justin Bishop",
-                    "email": "jubishop@gmail.com",
-                    "role": "Developer"
-                },
-                {
-                    "name": "Anthon Pang",
-                    "email": "apang@softwaredevelopment.ca",
-                    "role": "Fork Maintainer"
-                }
-            ],
-            "description": "PHP WebDriver for Selenium 2",
-            "homepage": "http://instaclick.com/",
-            "keywords": [
-                "browser",
-                "selenium",
-                "webdriver",
-                "webtest"
-            ],
-            "time": "2013-08-08 14:22:54"
-        },
-        {
-            "name": "symfony/browser-kit",
-            "version": "dev-master",
-            "target-dir": "Symfony/Component/BrowserKit",
-            "source": {
-                "type": "git",
-                "url": "https://github.com/symfony/BrowserKit.git",
-                "reference": "3cb8886c463f8c3c2004ca97b0e71c5c9806e425"
-            },
-            "dist": {
-                "type": "zip",
-                "url": "https://api.github.com/repos/symfony/BrowserKit/zipball/3cb8886c463f8c3c2004ca97b0e71c5c9806e425",
-                "reference": "3cb8886c463f8c3c2004ca97b0e71c5c9806e425",
-                "shasum": ""
-            },
-            "require": {
-                "php": ">=5.3.3",
-                "symfony/dom-crawler": "~2.0"
-            },
-            "require-dev": {
-                "symfony/css-selector": "~2.0",
-                "symfony/process": "~2.0"
-            },
-            "suggest": {
-                "symfony/process": ""
-            },
-            "type": "library",
-            "extra": {
-                "branch-alias": {
-                    "dev-master": "2.4-dev"
-                }
-            },
-            "autoload": {
-                "psr-0": {
-                    "Symfony\\Component\\BrowserKit\\": ""
-                }
-            },
-            "notification-url": "https://packagist.org/downloads/",
-            "license": [
-                "MIT"
-            ],
-            "authors": [
-                {
-                    "name": "Fabien Potencier",
-                    "email": "fabien@symfony.com"
-                },
-                {
-                    "name": "Symfony Community",
-                    "homepage": "http://symfony.com/contributors"
-                }
-            ],
-            "description": "Symfony BrowserKit Component",
-            "homepage": "http://symfony.com",
-            "time": "2013-09-06 18:21:06"
-        },
-        {
-            "name": "symfony/config",
-            "version": "dev-master",
-            "target-dir": "Symfony/Component/Config",
-            "source": {
-                "type": "git",
-                "url": "https://github.com/symfony/Config.git",
-                "reference": "e7e4a6d70c002f714805f23d29c4ccc018e953a4"
-            },
-            "dist": {
-                "type": "zip",
-                "url": "https://api.github.com/repos/symfony/Config/zipball/e7e4a6d70c002f714805f23d29c4ccc018e953a4",
-                "reference": "e7e4a6d70c002f714805f23d29c4ccc018e953a4",
-                "shasum": ""
-            },
-            "require": {
-                "php": ">=5.3.3",
-                "symfony/filesystem": "~2.3"
-            },
-            "type": "library",
-            "extra": {
-                "branch-alias": {
-                    "dev-master": "2.4-dev"
-                }
-            },
-            "autoload": {
-                "psr-0": {
-                    "Symfony\\Component\\Config\\": ""
-                }
-            },
-            "notification-url": "https://packagist.org/downloads/",
-            "license": [
-                "MIT"
-            ],
-            "authors": [
-                {
-                    "name": "Fabien Potencier",
-                    "email": "fabien@symfony.com"
-                },
-                {
-                    "name": "Symfony Community",
-                    "homepage": "http://symfony.com/contributors"
-                }
-            ],
-            "description": "Symfony Config Component",
-            "homepage": "http://symfony.com",
-            "time": "2013-08-13 13:40:07"
-        },
-        {
-            "name": "symfony/console",
-            "version": "dev-master",
-            "target-dir": "Symfony/Component/Console",
-            "source": {
-                "type": "git",
-                "url": "https://github.com/symfony/Console.git",
-                "reference": "148bbb43845296e288744543d1ff86e54e257657"
-            },
-            "dist": {
-                "type": "zip",
-                "url": "https://api.github.com/repos/symfony/Console/zipball/148bbb43845296e288744543d1ff86e54e257657",
-                "reference": "148bbb43845296e288744543d1ff86e54e257657",
-                "shasum": ""
-            },
-            "require": {
-                "php": ">=5.3.3"
-            },
-            "require-dev": {
-                "symfony/event-dispatcher": "~2.1"
-            },
-            "suggest": {
-                "symfony/event-dispatcher": ""
-            },
-            "type": "library",
-            "extra": {
-                "branch-alias": {
-                    "dev-master": "2.4-dev"
-                }
-            },
-            "autoload": {
-                "psr-0": {
-                    "Symfony\\Component\\Console\\": ""
-                }
-            },
-            "notification-url": "https://packagist.org/downloads/",
-            "license": [
-                "MIT"
-            ],
-            "authors": [
-                {
-                    "name": "Fabien Potencier",
-                    "email": "fabien@symfony.com"
-                },
-                {
-                    "name": "Symfony Community",
-                    "homepage": "http://symfony.com/contributors"
-                }
-            ],
-            "description": "Symfony Console Component",
-            "homepage": "http://symfony.com",
-            "time": "2013-09-07 16:46:00"
-        },
-        {
-            "name": "symfony/css-selector",
-            "version": "dev-master",
-            "target-dir": "Symfony/Component/CssSelector",
-            "source": {
-                "type": "git",
-                "url": "https://github.com/symfony/CssSelector.git",
-                "reference": "92157d5b14c74a4c598d3f1327d58d61869cc710"
-            },
-            "dist": {
-                "type": "zip",
-                "url": "https://api.github.com/repos/symfony/CssSelector/zipball/92157d5b14c74a4c598d3f1327d58d61869cc710",
-                "reference": "92157d5b14c74a4c598d3f1327d58d61869cc710",
-                "shasum": ""
-            },
-            "require": {
-                "php": ">=5.3.3"
-            },
-            "type": "library",
-            "extra": {
-                "branch-alias": {
-                    "dev-master": "2.4-dev"
-                }
-            },
-            "autoload": {
-                "psr-0": {
-                    "Symfony\\Component\\CssSelector\\": ""
-                }
-            },
-            "notification-url": "https://packagist.org/downloads/",
-            "license": [
-                "MIT"
-            ],
-            "authors": [
-                {
-                    "name": "Fabien Potencier",
-                    "email": "fabien@symfony.com"
-                },
-                {
-                    "name": "Symfony Community",
-                    "homepage": "http://symfony.com/contributors"
-                },
-                {
-                    "name": "Jean-François Simon",
-                    "email": "jeanfrancois.simon@sensiolabs.com"
-                }
-            ],
-            "description": "Symfony CssSelector Component",
-            "homepage": "http://symfony.com",
-            "time": "2013-07-21 20:19:01"
-        },
-        {
-            "name": "symfony/dependency-injection",
-            "version": "dev-master",
-            "target-dir": "Symfony/Component/DependencyInjection",
-            "source": {
-                "type": "git",
-                "url": "https://github.com/symfony/DependencyInjection.git",
-                "reference": "2cae194406678c59dea923c7e979c56f223be820"
-            },
-            "dist": {
-                "type": "zip",
-                "url": "https://api.github.com/repos/symfony/DependencyInjection/zipball/2cae194406678c59dea923c7e979c56f223be820",
-                "reference": "2cae194406678c59dea923c7e979c56f223be820",
-                "shasum": ""
-            },
-            "require": {
-                "php": ">=5.3.3"
-            },
-            "require-dev": {
-                "symfony/config": "~2.2",
-                "symfony/yaml": "~2.0"
-            },
-            "suggest": {
-                "symfony/config": "",
-                "symfony/proxy-manager-bridge": "Generate service proxies to lazy load them",
-                "symfony/yaml": ""
-            },
-            "type": "library",
-            "extra": {
-                "branch-alias": {
-                    "dev-master": "2.4-dev"
-                }
-            },
-            "autoload": {
-                "psr-0": {
-                    "Symfony\\Component\\DependencyInjection\\": ""
-                }
-            },
-            "notification-url": "https://packagist.org/downloads/",
-            "license": [
-                "MIT"
-            ],
-            "authors": [
-                {
-                    "name": "Fabien Potencier",
-                    "email": "fabien@symfony.com"
-                },
-                {
-                    "name": "Symfony Community",
-                    "homepage": "http://symfony.com/contributors"
-                }
-            ],
-            "description": "Symfony DependencyInjection Component",
-            "homepage": "http://symfony.com",
-            "time": "2013-09-06 18:21:06"
-        },
-        {
-            "name": "symfony/dom-crawler",
-            "version": "dev-master",
-            "target-dir": "Symfony/Component/DomCrawler",
-            "source": {
-                "type": "git",
-                "url": "https://github.com/symfony/DomCrawler.git",
-                "reference": "b7e5d347a5c22d170616244bd015f7446ce43341"
-            },
-            "dist": {
-                "type": "zip",
-                "url": "https://api.github.com/repos/symfony/DomCrawler/zipball/b7e5d347a5c22d170616244bd015f7446ce43341",
-                "reference": "b7e5d347a5c22d170616244bd015f7446ce43341",
-                "shasum": ""
-            },
-            "require": {
-                "php": ">=5.3.3"
-            },
-            "require-dev": {
-                "symfony/css-selector": "~2.0"
-            },
-            "suggest": {
-                "symfony/css-selector": ""
-            },
-            "type": "library",
-            "extra": {
-                "branch-alias": {
-                    "dev-master": "2.4-dev"
-                }
-            },
-            "autoload": {
-                "psr-0": {
-                    "Symfony\\Component\\DomCrawler\\": ""
-                }
-            },
-            "notification-url": "https://packagist.org/downloads/",
-            "license": [
-                "MIT"
-            ],
-            "authors": [
-                {
-                    "name": "Fabien Potencier",
-                    "email": "fabien@symfony.com"
-                },
-                {
-                    "name": "Symfony Community",
-                    "homepage": "http://symfony.com/contributors"
-                }
-            ],
-            "description": "Symfony DomCrawler Component",
-            "homepage": "http://symfony.com",
-            "time": "2013-08-19 20:44:22"
-        },
-        {
-            "name": "symfony/event-dispatcher",
-            "version": "dev-master",
-            "target-dir": "Symfony/Component/EventDispatcher",
-            "source": {
-                "type": "git",
-                "url": "https://github.com/symfony/EventDispatcher.git",
-                "reference": "d38523224d1efb10056ba375dd25efb1f2d46434"
-            },
-            "dist": {
-                "type": "zip",
-                "url": "https://api.github.com/repos/symfony/EventDispatcher/zipball/d38523224d1efb10056ba375dd25efb1f2d46434",
-                "reference": "d38523224d1efb10056ba375dd25efb1f2d46434",
-                "shasum": ""
-            },
-            "require": {
-                "php": ">=5.3.3"
-            },
-            "require-dev": {
-                "symfony/dependency-injection": "~2.0"
-            },
-            "suggest": {
-                "symfony/dependency-injection": "",
-                "symfony/http-kernel": ""
-            },
-            "type": "library",
-            "extra": {
-                "branch-alias": {
-                    "dev-master": "2.4-dev"
-                }
-            },
-            "autoload": {
-                "psr-0": {
-                    "Symfony\\Component\\EventDispatcher\\": ""
-                }
-            },
-            "notification-url": "https://packagist.org/downloads/",
-            "license": [
-                "MIT"
-            ],
-            "authors": [
-                {
-                    "name": "Fabien Potencier",
-                    "email": "fabien@symfony.com"
-                },
-                {
-                    "name": "Symfony Community",
-                    "homepage": "http://symfony.com/contributors"
-                }
-            ],
-            "description": "Symfony EventDispatcher Component",
-            "homepage": "http://symfony.com",
-            "time": "2013-08-19 20:44:22"
-        },
-        {
-            "name": "symfony/filesystem",
-            "version": "dev-master",
-            "target-dir": "Symfony/Component/Filesystem",
-            "source": {
-                "type": "git",
-                "url": "https://github.com/symfony/Filesystem.git",
-                "reference": "da0dcf60b7307f68667fecef8ccbb2b070bda7cf"
-            },
-            "dist": {
-                "type": "zip",
-                "url": "https://api.github.com/repos/symfony/Filesystem/zipball/da0dcf60b7307f68667fecef8ccbb2b070bda7cf",
-                "reference": "da0dcf60b7307f68667fecef8ccbb2b070bda7cf",
-                "shasum": ""
-            },
-            "require": {
-                "php": ">=5.3.3"
-            },
-            "type": "library",
-            "extra": {
-                "branch-alias": {
-                    "dev-master": "2.4-dev"
-                }
-            },
-            "autoload": {
-                "psr-0": {
-                    "Symfony\\Component\\Filesystem\\": ""
-                }
-            },
-            "notification-url": "https://packagist.org/downloads/",
-            "license": [
-                "MIT"
-            ],
-            "authors": [
-                {
-                    "name": "Fabien Potencier",
-                    "email": "fabien@symfony.com"
-                },
-                {
-                    "name": "Symfony Community",
-                    "homepage": "http://symfony.com/contributors"
-                }
-            ],
-            "description": "Symfony Filesystem Component",
-            "homepage": "http://symfony.com",
-            "time": "2013-08-09 07:26:54"
-        },
-        {
-            "name": "symfony/finder",
-            "version": "dev-master",
-            "target-dir": "Symfony/Component/Finder",
-            "source": {
-                "type": "git",
-                "url": "https://github.com/symfony/Finder.git",
-                "reference": "ad276bcd7378de41257550c42c4bc0c059783ef3"
-            },
-            "dist": {
-                "type": "zip",
-                "url": "https://api.github.com/repos/symfony/Finder/zipball/ad276bcd7378de41257550c42c4bc0c059783ef3",
-                "reference": "ad276bcd7378de41257550c42c4bc0c059783ef3",
-                "shasum": ""
-            },
-            "require": {
-                "php": ">=5.3.3"
-            },
-            "type": "library",
-            "extra": {
-                "branch-alias": {
-                    "dev-master": "2.4-dev"
-                }
-            },
-            "autoload": {
-                "psr-0": {
-                    "Symfony\\Component\\Finder\\": ""
-                }
-            },
-            "notification-url": "https://packagist.org/downloads/",
-            "license": [
-                "MIT"
-            ],
-            "authors": [
-                {
-                    "name": "Fabien Potencier",
-                    "email": "fabien@symfony.com"
-                },
-                {
-                    "name": "Symfony Community",
-                    "homepage": "http://symfony.com/contributors"
-                }
-            ],
-            "description": "Symfony Finder Component",
-            "homepage": "http://symfony.com",
-            "time": "2013-08-24 06:54:37"
-        },
-        {
-            "name": "symfony/process",
-            "version": "dev-master",
-            "target-dir": "Symfony/Component/Process",
-            "source": {
-                "type": "git",
-                "url": "https://github.com/symfony/Process.git",
-                "reference": "f1386b09571aa886e3d51691442bee5554dc11da"
-            },
-            "dist": {
-                "type": "zip",
-                "url": "https://api.github.com/repos/symfony/Process/zipball/f1386b09571aa886e3d51691442bee5554dc11da",
-                "reference": "f1386b09571aa886e3d51691442bee5554dc11da",
-                "shasum": ""
-            },
-            "require": {
-                "php": ">=5.3.3"
-            },
-            "type": "library",
-            "extra": {
-                "branch-alias": {
-                    "dev-master": "2.4-dev"
-                }
-            },
-            "autoload": {
-                "psr-0": {
-                    "Symfony\\Component\\Process\\": ""
-                }
-            },
-            "notification-url": "https://packagist.org/downloads/",
-            "license": [
-                "MIT"
-            ],
-            "authors": [
-                {
-                    "name": "Fabien Potencier",
-                    "email": "fabien@symfony.com"
-                },
-                {
-                    "name": "Symfony Community",
-                    "homepage": "http://symfony.com/contributors"
-                }
-            ],
-            "description": "Symfony Process Component",
-            "homepage": "http://symfony.com",
-            "time": "2013-09-07 16:33:27"
-        },
-        {
-            "name": "symfony/translation",
-            "version": "dev-master",
-            "target-dir": "Symfony/Component/Translation",
-            "source": {
-                "type": "git",
-                "url": "https://github.com/symfony/Translation.git",
-                "reference": "d204e9c4836c7ed910438c407c75f7f86157d53d"
-            },
-            "dist": {
-                "type": "zip",
-                "url": "https://api.github.com/repos/symfony/Translation/zipball/d204e9c4836c7ed910438c407c75f7f86157d53d",
-                "reference": "d204e9c4836c7ed910438c407c75f7f86157d53d",
-                "shasum": ""
-            },
-            "require": {
-                "php": ">=5.3.3"
-            },
-            "require-dev": {
-                "symfony/config": "~2.0",
-                "symfony/yaml": "~2.2"
-            },
-            "suggest": {
-                "symfony/config": "",
-                "symfony/yaml": ""
-            },
-            "type": "library",
-            "extra": {
-                "branch-alias": {
-                    "dev-master": "2.4-dev"
-                }
-            },
-            "autoload": {
-                "psr-0": {
-                    "Symfony\\Component\\Translation\\": ""
-                }
-            },
-            "notification-url": "https://packagist.org/downloads/",
-            "license": [
-                "MIT"
-            ],
-            "authors": [
-                {
-                    "name": "Fabien Potencier",
-                    "email": "fabien@symfony.com"
-                },
-                {
-                    "name": "Symfony Community",
-                    "homepage": "http://symfony.com/contributors"
-                }
-            ],
-            "description": "Symfony Translation Component",
-            "homepage": "http://symfony.com",
-            "time": "2013-08-29 06:54:01"
-        },
-        {
-            "name": "symfony/yaml",
-            "version": "dev-master",
-            "target-dir": "Symfony/Component/Yaml",
-            "source": {
-                "type": "git",
-                "url": "https://github.com/symfony/Yaml.git",
-                "reference": "6286e95889e326311ff90ae4f96ddc15d6db2c39"
-            },
-            "dist": {
-                "type": "zip",
-                "url": "https://api.github.com/repos/symfony/Yaml/zipball/6286e95889e326311ff90ae4f96ddc15d6db2c39",
-                "reference": "6286e95889e326311ff90ae4f96ddc15d6db2c39",
-                "shasum": ""
-            },
-            "require": {
-                "php": ">=5.3.3"
-            },
-            "type": "library",
-            "extra": {
-                "branch-alias": {
-                    "dev-master": "2.4-dev"
-                }
-            },
-            "autoload": {
-                "psr-0": {
-                    "Symfony\\Component\\Yaml\\": ""
-                }
-            },
-            "notification-url": "https://packagist.org/downloads/",
-            "license": [
-                "MIT"
-            ],
-            "authors": [
-                {
-                    "name": "Fabien Potencier",
-                    "email": "fabien@symfony.com"
-                },
-                {
-                    "name": "Symfony Community",
-                    "homepage": "http://symfony.com/contributors"
-                }
-            ],
-            "description": "Symfony Yaml Component",
-            "homepage": "http://symfony.com",
-            "time": "2013-08-29 06:54:01"
-        }
-    ],
-    "packages-dev": [
-
-    ],
-    "aliases": [
-
-    ],
-    "minimum-stability": "dev",
-    "stability-flags": [
-
-    ],
-    "platform": [
-
-    ],
-    "platform-dev": [
-
-    ]
-}
diff --git a/tests/features/bootstrap/FeatureContext.php b/tests/features/bootstrap/FeatureContext.php
deleted file mode 100644
index 10eaa38..0000000
--- a/tests/features/bootstrap/FeatureContext.php
+++ /dev/null
@@ -1,48 +0,0 @@
-<?php
-
-use Behat\Behat\Context\ClosuredContextInterface,
-Behat\Behat\Context\TranslatedContextInterface,
-Behat\Behat\Context\BehatContext,
-Behat\Behat\Exception\PendingException;
-use Behat\Gherkin\Node\PyStringNode,
-Behat\Gherkin\Node\TableNode;
-
-//
-// Require 3rd-party libraries here:
-//
-//   require_once 'PHPUnit/Autoload.php';
-//   require_once 'PHPUnit/Framework/Assert/Functions.php';
-//
-
-/**
-* Features context.
-*/
-class FeatureContext extends Drupal\DrupalExtension\Context\DrupalContext
-{
-  /**
-  * Initializes context.
-  * Every scenario gets its own context object.
-  *
-  * @param array $parameters context parameters (set them up through behat.yml)
-  */
-  public function __construct(array $parameters)
-  {
-    // Initialize your context here
-  }
-    
-  /**
-  * Take screenshot when step fails.
-  * Works only with Selenium2Driver.
-  *
-  * @AfterStep @javascript
-  */
-  public function takeScreenshotAfterFailedStep(Behat\Behat\Event\StepEvent $event) {
-    if (Behat\Behat\Event\StepEvent::FAILED === $event->getResult()) {
-      $step = $event->getStep();
-      $id = $step->getParent()->getTitle() . '.' . $step->getType() . ' ' . $step->getText();
-      $fileName = getenv("TRAVIS_BUILD_DIR") . '/fail_'.preg_replace('/[^a-zA-Z0-9-_\.]/','_', $id) . '.png';
-      $image = $this->getSession()->getScreenshot();
-      file_put_contents($fileName, $image);
-    }
-  }
-}
diff --git a/tests/features/installation.feature b/tests/features/installation.feature
deleted file mode 100644
index 90f43de..0000000
--- a/tests/features/installation.feature
+++ /dev/null
@@ -1,9 +0,0 @@
-Feature: Site installation
-  Scenario: Installation succeeded
-    Given I am on "/"
-    Then I should see "Oh hai"
-  
-  @javascript
-  Scenario: Installation succeeded with js enabled
-    Given I am on "/"
-    Then I should see "Oh hai"
diff --git a/themes/commons/commons_origins/css/commons-media.css b/themes/commons/commons_origins/css/commons-media.css
index 5323fb5..07e1a8d 100644
--- a/themes/commons/commons_origins/css/commons-media.css
+++ b/themes/commons/commons_origins/css/commons-media.css
@@ -34,51 +34,139 @@ table[id^="field-media-values"] a.tabledrag-handle .handle {
 table[id^="field-media-values"] .form-item {
   padding-left: 6.875em;
 }
-table[id^="field-media-values"] .preview {
-  float: left;
-  font-size: 1em;
-  margin-left: -6.875em;
-  width: 6.25em;
-  min-height: 6.25em;
-  background: #858585;
-  cursor: pointer;
+table[id^="field-media-values"] .media-widget .button {
+  display: block;
+}
+@media only screen and (min-width: 769px) {
+  table[id^="field-media-values"] .media-widget .button {
+    max-width: 50%;
+  }
+}
+
+.form-type-media .preview {
+  background: url('../images/icons-sfd37165efe.png') 0 -789px no-repeat;
+  width: 26px;
+  height: 20px;
+  display: inline-block;
+  margin-right: 3px;
+  position: relative;
+  top: 1px;
+  margin-right: 10px;
 }
 @media only screen and (max-width: 480px) {
-  table[id^="field-media-values"] .form-item {
-    padding-left: 0;
+  .form-type-media .preview {
+    display: block;
+    float: none;
+    margin: 10px auto;
   }
-  table[id^="field-media-values"] .preview {
+  .form-type-media .button,
+  .form-type-media input[type="submit"] {
     display: block;
     float: none;
     margin: 10px auto;
+    width: 100%;
   }
 }
-table[id^="field-media-values"] .media-item {
+
+.media-wrapper {
+  position: absolute;
+  overflow: hidden;
   padding: 0;
-  background-color: transparent;
+  border: 1px solid #555555;
+  min-width: 100%;
+  max-width: 100%;
+  -webkit-box-shadow: 0 0 0 0.5625em rgba(0, 0, 0, 0.2);
+  -moz-box-shadow: 0 0 0 0.5625em rgba(0, 0, 0, 0.2);
+  box-shadow: 0 0 0 0.5625em rgba(0, 0, 0, 0.2);
+  -webkit-box-sizing: border-box;
+  -moz-box-sizing: border-box;
+  box-sizing: border-box;
+}
+.media-wrapper,
+.media-wrapper .ui-corner-all {
+  -webkit-border-radius: 0;
+  -moz-border-radius: 0;
+  -ms-border-radius: 0;
+  -o-border-radius: 0;
+  border-radius: 0;
+}
+.media-wrapper .ui-dialog-title {
+  display: block;
+  margin: 0;
+  line-height: 1.5em;
+  font-size: 2.25em;
+  font-family: "Helvetica Neue", helvetica, "Segoe UI", segoe, "Ubuntu", "Droid Sans", "Arial", sans-serif;
+  font-weight: 200;
+}
+.media-wrapper .ui-dialog-titlebar {
+  position: relative;
+  padding: 0.70711em 1em 0;
   border: none;
+  color: #848484;
+  background: #303030;
 }
-table[id^="field-media-values"] .media-item img {
+.media-wrapper .ui-dialog-titlebar-close {
+  position: absolute;
+  float: none;
   display: block;
+  top: 0.35355em;
+  right: 0.35355em;
+  width: 1em;
+  height: 1em;
+  overflow: hidden;
   margin: 0;
+  padding: 0;
+  text-align: center;
+  line-height: 1em;
+  color: white;
+  background: none;
+  font-weight: normal;
 }
-table[id^="field-media-values"] .media-item .label-wrapper {
-  position: static;
+.media-wrapper .ui-dialog-titlebar-close:hover {
+  text-decoration: none;
+  border: none;
 }
-table[id^="field-media-values"] .media-item .label-wrapper label {
-  margin: 0;
+.media-wrapper .ui-dialog-titlebar-close:before {
+  content: "\2715";
 }
-table[id^="field-media-values"] .media-widget .preview .media-item {
-  margin: 0;
+.media-wrapper .ui-dialog-content {
+  position: relative;
+  border: 0;
+  background: none;
+  overflow: auto;
+  zoom: 1;
 }
-table[id^="field-media-values"] .media-widget .preview .media-item .label-wrapper label {
-  color: white;
+.media-wrapper .ui-dialog-buttonpane {
+  text-align: left;
+  border-width: 1px 0 0 0;
+  background-image: none;
+  margin: .5em 0 0 0;
+  padding: .3em 1em .5em .4em;
 }
-table[id^="field-media-values"] .media-widget .button {
-  display: block;
+.media-wrapper .ui-dialog-buttonpane .ui-dialog-buttonset {
+  float: right;
 }
-@media only screen and (min-width: 769px) {
-  table[id^="field-media-values"] .media-widget .button {
-    max-width: 50%;
+.media-wrapper .ui-dialog-buttonpane button {
+  margin: .5em .4em .5em 0;
+  cursor: pointer;
+}
+.media-wrapper .ui-resizable-se {
+  width: 14px;
+  height: 14px;
+  right: 3px;
+  bottom: 3px;
+}
+.media-wrapper .ui-draggable .ui-dialog-titlebar {
+  cursor: move;
+}
+@media (min-width: 22.85714em) {
+  .media-wrapper {
+    min-width: 0;
+  }
+}
+@media (min-width: 28.57143em) {
+  .media-wrapper .ui-dialog-titlebar {
+    padding-right: 2em;
+    padding-left: 2em;
   }
 }
diff --git a/themes/commons/commons_origins/css/global.styles.css b/themes/commons/commons_origins/css/global.styles.css
index 2c47c1a..1572621 100644
--- a/themes/commons/commons_origins/css/global.styles.css
+++ b/themes/commons/commons_origins/css/global.styles.css
@@ -438,7 +438,7 @@ var {
 }
 
 .node-teaser.node-promoted {
-  background-image: url('../images/node-promoted-star.png?1379947793');
+  background-image: url('../images/node-promoted-star.png?1395768501');
   background-position: top right;
   background-repeat: no-repeat;
   background-color: #f7f7f7;
@@ -498,7 +498,7 @@ var {
   position: absolute;
   right: -5px;
   top: 10px;
-  background: url('../images/user_img_arrow.png?1379947793');
+  background: url('../images/user_img_arrow.png?1395768501');
 }
 .node .user-picture img, .comment .user-picture img, .privatemsg-message .user-picture img, .node
 .views-field-picture img, .comment
@@ -747,7 +747,7 @@ html.js input.form-autocomplete {
   padding-right: 20px;
 }
 html.js input.form-autocomplete.throbbing {
-  background-image: url('../images/commons-throbber.gif?1379947793');
+  background-image: url('../images/commons-throbber.gif?1395336282');
   background-position: right center;
 }
 
@@ -875,7 +875,7 @@ html.js fieldset.collapsed .fieldset-legend, html.js fieldset.collapsible .field
  * Button styles
  */
 /* Common styles for all buttons. */
-a.button,
+.button,
 button,
 [type="reset"],
 [type="submit"],
@@ -909,13 +909,14 @@ button,
   outline: 0;
   cursor: pointer;
 }
-a.button:focus,
+.button:focus,
 button:focus,
 [type="reset"]:focus,
 [type="submit"]:focus,
 [type="button"]:focus,
 [class*="action-item"]:focus, .pane-commons-groups-commons-groups-create-group a:focus, .pane-commons-events-commons-events-create-event-link a:focus, [class*="action-item-small"]:focus, .commons-sign-up:focus,
-.commons-login:focus, [class*="action-item-large"]:focus, button:hover,
+.commons-login:focus, [class*="action-item-large"]:focus, .button:hover,
+button:hover,
 [type="reset"]:hover,
 [type="submit"]:hover,
 [type="button"]:hover,
@@ -923,7 +924,7 @@ button:focus,
 .commons-login:hover, [class*="action-item-large"]:hover {
   text-decoration: none;
 }
-a.button:active,
+.button:active,
 button:active,
 [type="reset"]:active,
 [type="submit"]:active,
@@ -935,7 +936,7 @@ button:active,
   box-shadow: inset rgba(0, 0, 0, 0.25) 0 1px 2px 0;
   text-decoration: none;
 }
-a.button::-moz-focus-inner,
+.button::-moz-focus-inner,
 button::-moz-focus-inner,
 [type="reset"]::-moz-focus-inner,
 [type="submit"]::-moz-focus-inner,
@@ -947,7 +948,7 @@ button::-moz-focus-inner,
 }
 
 /* Dimensions for the default button type. */
-a.button,
+.button,
 button,
 [type="reset"],
 [type="submit"],
@@ -970,7 +971,7 @@ button,
   font-size: 1.2em;
 }
 
-a.button,
+.button,
 button,
 [type="reset"],
 [type="submit"],
@@ -985,23 +986,25 @@ button,
   border-color: #cbcbcb;
   text-shadow: -1px 1px 2px white, -1px -1px 2px white, 1px -1px 2px white, 1px 1px 2px white;
 }
-a.button,
+.button,
 button,
 [type="reset"],
 [type="submit"],
 [type="button"],
-[class*="action-item"], .commons-login, button:link,
+[class*="action-item"], .commons-login, .button:link,
+button:link,
 [type="reset"]:link,
 [type="submit"]:link,
 [type="button"]:link,
-[class*="action-item"]:link, .commons-login:link, button:visited,
+[class*="action-item"]:link, .commons-login:link, .button:visited,
+button:visited,
 [type="reset"]:visited,
 [type="submit"]:visited,
 [type="button"]:visited,
 [class*="action-item"]:visited, .commons-login:visited {
   color: #323232;
 }
-a.button:hover,
+.button:hover,
 button:hover,
 [type="reset"]:hover,
 [type="submit"]:hover,
@@ -1015,15 +1018,15 @@ button:hover,
   background: -o-linear-gradient(#fefefe, #e5e5e5);
   background: linear-gradient(#fefefe, #e5e5e5);
   border-color: #b2b2b2;
-  text-decoration: none;
   text-shadow: -1px 1px 2px #fefefe, -1px -1px 2px #fefefe, 1px -1px 2px #fefefe, 1px 1px 2px #fefefe;
 }
-a.button:focus,
+.button:focus,
 button:focus,
 [type="reset"]:focus,
 [type="submit"]:focus,
 [type="button"]:focus,
-[class*="action-item"]:focus, .commons-login:focus, button:active,
+[class*="action-item"]:focus, .commons-login:focus, .button:active,
+button:active,
 [type="reset"]:active,
 [type="submit"]:active,
 [type="button"]:active,
@@ -1037,7 +1040,7 @@ button:focus,
   border-color: #cbcbcb;
   text-shadow: -1px 1px 2px white, -1px -1px 2px white, 1px -1px 2px white, 1px 1px 2px white;
 }
-a.button[disabled],
+[disabled].button,
 button[disabled],
 [disabled][type="reset"],
 [disabled][type="submit"],
@@ -1108,7 +1111,7 @@ button[disabled],
 }
 [disabled].action-item-active,
 [disabled].action-item-small-active,
-[disabled].action-item-large-active, [class*="flag-commons-follow-"] [disabled].unflag-action {
+[disabled].action-item-large-active, [class*="flag-commons-follow-"] a[disabled].unflag-action {
   color: silver;
   background: #f3f3f3;
   border-color: silver;
@@ -1256,6 +1259,7 @@ button[disabled],
   text-shadow: none;
 }
 
+.button,
 button,
 [type="reset"],
 [type="submit"],
@@ -1264,6 +1268,7 @@ button,
   max-width: 100%;
 }
 @media only screen and (max-width: 480px) {
+  .button:not(.action-item-inline, .action-item-merge),
   button:not(.action-item-inline, .action-item-merge),
   [type="reset"]:not(.action-item-inline, .action-item-merge),
   [type="submit"]:not(.action-item-inline, .action-item-merge),
@@ -1274,7 +1279,8 @@ button,
     margin: .5em 0;
   }
 }
-#panels-ipe-control-container button, #panels-ipe-control-container
+#panels-ipe-control-container .button, #panels-ipe-control-container
+button, #panels-ipe-control-container
 [type="reset"], #panels-ipe-control-container
 [type="submit"], #panels-ipe-control-container
 [type="button"], #panels-ipe-control-container
@@ -1372,7 +1378,7 @@ button,
 }
 
 .rate-commons-like-btn:before {
-  background: url('../images/icons-s0eb3728c55.png') 0 -599px no-repeat;
+  background: url('../images/icons-sfd37165efe.png') 0 -563px no-repeat;
   width: 10px;
   height: 14px;
   display: inline-block;
@@ -1390,7 +1396,7 @@ button,
 }
 [class*="flag-commons-follow-"] .flag-action:before {
   content: "";
-  background: url('../images/icons-s0eb3728c55.png') 0 -982px no-repeat;
+  background: url('../images/icons-sfd37165efe.png') 0 -1050px no-repeat;
   width: 13px;
   height: 11px;
   display: inline-block;
@@ -1415,7 +1421,7 @@ button,
 .flag-inappropriate-node .flag-action:before,
 .flag-inappropriate-comment .flag-action:before {
   content: "";
-  background: url('../images/icons-s0eb3728c55.png') 0 -1136px no-repeat;
+  background: url('../images/icons-sfd37165efe.png') 0 -1081px no-repeat;
   width: 12px;
   height: 10px;
   display: inline-block;
@@ -1430,7 +1436,7 @@ button,
 }
 .sharethis-buttons:before {
   content: "";
-  background: url('../images/icons-s0eb3728c55.png') 0 -918px no-repeat;
+  background: url('../images/icons-sfd37165efe.png') 0 -958px no-repeat;
   width: 12px;
   height: 12px;
   display: inline-block;
@@ -1512,7 +1518,7 @@ button,
 }
 .comment-comments .action-item-small:before {
   content: "";
-  background: url('../images/icons-s0eb3728c55.png') 0 -1198px no-repeat;
+  background: url('../images/icons-sfd37165efe.png') 0 -1238px no-repeat;
   width: 13px;
   height: 12px;
   display: inline-block;
@@ -1675,7 +1681,7 @@ button,
  * Generic styles for the more link
  */
 .more-link {
-  background-image: url('../images/icons/icon-more.png?1379947793');
+  background-image: url('../images/icons/icon-more.png?1395768501');
   background-repeat: no-repeat;
   min-height: 14px;
   padding: 0 0 0 1.7em;
@@ -1911,8 +1917,13 @@ h1.node-title a:hover {
   margin-left: -20px;
 }
 
-.row-type-event:before {
-  background: url('../images/icons-s0eb3728c55.png') 0 -821px no-repeat;
+.node-content-type:before {
+  content: "";
+}
+
+.row-type-event:before,
+.node-content-type-event:before {
+  background: url('../images/icons-sfd37165efe.png') 0 -661px no-repeat;
   width: 12px;
   height: 12px;
   display: inline-block;
@@ -1921,8 +1932,11 @@ h1.node-title a:hover {
   top: 1px;
 }
 
-.row-type-page:before {
-  background: url('../images/icons-s0eb3728c55.png') 0 -1230px no-repeat;
+.row-type-page:before,
+.node-content-type-page:before,
+.row-type-document:before,
+.node-content-type-document:before {
+  background: url('../images/icons-sfd37165efe.png') 0 -1302px no-repeat;
   width: 9px;
   height: 12px;
   display: inline-block;
@@ -1931,8 +1945,9 @@ h1.node-title a:hover {
   top: 1px;
 }
 
-.row-type-poll:before {
-  background: url('../images/icons-s0eb3728c55.png') 0 -758px no-repeat;
+.row-type-poll:before,
+.node-content-type-poll:before {
+  background: url('../images/icons-sfd37165efe.png') 0 -630px no-repeat;
   width: 11px;
   height: 11px;
   display: inline-block;
@@ -1941,8 +1956,9 @@ h1.node-title a:hover {
   top: 1px;
 }
 
-.row-type-post:before {
-  background: url('../images/icons-s0eb3728c55.png') 0 -1073px no-repeat;
+.row-type-post:before,
+.node-content-type-post:before {
+  background: url('../images/icons-sfd37165efe.png') 0 -1175px no-repeat;
   width: 11px;
   height: 11px;
   display: inline-block;
@@ -1952,8 +1968,10 @@ h1.node-title a:hover {
 }
 
 .row-type-question:before,
-.row-type-answer:before {
-  background: url('../images/icons-s0eb3728c55.png') 0 -694px no-repeat;
+.row-type-answer:before,
+.node-content-type-question:before,
+.node-content-type-answer:before {
+  background: url('../images/icons-sfd37165efe.png') 0 -597px no-repeat;
   width: 13px;
   height: 13px;
   display: inline-block;
@@ -1962,8 +1980,9 @@ h1.node-title a:hover {
   top: 1px;
 }
 
-.row-type-wiki:before {
-  background: url('../images/icons-s0eb3728c55.png') 0 -534px no-repeat;
+.row-type-wiki:before,
+.node-content-type-wiki:before {
+  background: url('../images/icons-sfd37165efe.png') 0 -396px no-repeat;
   width: 13px;
   height: 13px;
   display: inline-block;
@@ -2172,7 +2191,7 @@ h1.node-title a:hover {
 }
 .page-node .field-name-field-topics .field-item:before {
   content: "";
-  background: url('../images/icons-s0eb3728c55.png') 0 -1292px no-repeat;
+  background: url('../images/icons-sfd37165efe.png') 0 -1364px no-repeat;
   width: 8px;
   height: 8px;
   display: inline-block;
@@ -2183,7 +2202,7 @@ h1.node-title a:hover {
 }
 .page-node .field-name-og-group-ref .field-item:before {
   content: "";
-  background: url('../images/icons-s0eb3728c55.png') 0 -1013px no-repeat;
+  background: url('../images/icons-sfd37165efe.png') 0 -990px no-repeat;
   width: 8px;
   height: 8px;
   display: inline-block;
@@ -2220,7 +2239,7 @@ h1.node-title a:hover {
 
 .comments-title:before {
   content: "";
-  background: url('../images/icons-s0eb3728c55.png') 0 -46px no-repeat;
+  background: url('../images/icons-sfd37165efe.png') 0 -46px no-repeat;
   width: 31px;
   height: 24px;
   display: inline-block;
@@ -2285,7 +2304,7 @@ ul.comment-links li {
 }
 .comment-reply:before {
   content: "";
-  background: url('../images/icons-s0eb3728c55.png') 0 -1166px no-repeat;
+  background: url('../images/icons-sfd37165efe.png') 0 -1206px no-repeat;
   width: 13px;
   height: 12px;
   display: inline-block;
@@ -2500,7 +2519,7 @@ ul.node-action-links a {
   width: 58px;
   height: 22px;
   display: inline-block;
-  background-image: url('../images/tag-featured.png?1379947793');
+  background-image: url('../images/tag-featured.png?1395768501');
   background-repeat: no-repeat;
   margin: 6px 0 0 5px;
 }
@@ -2509,7 +2528,7 @@ ul.node-action-links a {
   width: 27px;
   height: 22px;
   display: inline-block;
-  background-image: url('../images/tag-new.png?1379947793');
+  background-image: url('../images/tag-new.png?1395768501');
   background-repeat: no-repeat;
   margin: 4px 0 0 5px;
 }
@@ -2605,7 +2624,7 @@ ul.node-action-links a {
   }
 }
 .page-user .pane-user-field-facebook-url a:before {
-  background: url('../images/icons-s0eb3728c55.png') 0 -136px no-repeat;
+  background: url('../images/icons-sfd37165efe.png') 0 -136px no-repeat;
   width: 26px;
   height: 26px;
   display: inline-block;
@@ -2615,7 +2634,7 @@ ul.node-action-links a {
 }
 @media only screen and (max-width: 480px) {
   .page-user .pane-user-field-facebook-url a {
-    background: url('../images/icons-s0eb3728c55.png') 0 -136px no-repeat;
+    background: url('../images/icons-sfd37165efe.png') 0 -136px no-repeat;
     width: 26px;
     height: 26px;
     display: inline-block;
@@ -2625,7 +2644,7 @@ ul.node-action-links a {
   }
 }
 .page-user .pane-user-field-linkedin-url a:before {
-  background: url('../images/icons-s0eb3728c55.png') 0 0 no-repeat;
+  background: url('../images/icons-sfd37165efe.png') 0 0 no-repeat;
   width: 26px;
   height: 26px;
   display: inline-block;
@@ -2635,7 +2654,7 @@ ul.node-action-links a {
 }
 @media only screen and (max-width: 480px) {
   .page-user .pane-user-field-linkedin-url a {
-    background: url('../images/icons-s0eb3728c55.png') 0 0 no-repeat;
+    background: url('../images/icons-sfd37165efe.png') 0 0 no-repeat;
     width: 26px;
     height: 26px;
     display: inline-block;
@@ -2645,7 +2664,7 @@ ul.node-action-links a {
   }
 }
 .page-user .pane-user-field-twitter-url a:before {
-  background: url('../images/icons-s0eb3728c55.png') 0 -90px no-repeat;
+  background: url('../images/icons-sfd37165efe.png') 0 -90px no-repeat;
   width: 26px;
   height: 26px;
   display: inline-block;
@@ -2655,7 +2674,7 @@ ul.node-action-links a {
 }
 @media only screen and (max-width: 480px) {
   .page-user .pane-user-field-twitter-url a {
-    background: url('../images/icons-s0eb3728c55.png') 0 -90px no-repeat;
+    background: url('../images/icons-sfd37165efe.png') 0 -90px no-repeat;
     width: 26px;
     height: 26px;
     display: inline-block;
@@ -2785,7 +2804,7 @@ a:hover, a:focus {
   padding: 0;
 }
 #menu-bar.nav ul.menu li:hover, #menu-bar.nav ul.menu li.active-trail {
-  background: url('../images/main-nav-hover.png?1379947793') repeat-x left top;
+  background: url('../images/main-nav-hover.png?1395768501') repeat-x left top;
 }
 #menu-bar.nav ul.menu li:hover .arrow:before, #menu-bar.nav ul.menu li.active-trail .arrow:before {
   content: "";
@@ -2866,26 +2885,26 @@ a:hover, a:focus {
 }
 
 .main-menu-home a {
-  background: url('../images/icons/icon-home.png?1379947793') no-repeat center 10px;
+  background: url('../images/icons/icon-home.png?1395768501') no-repeat center 10px;
 }
 
 .main-menu-groups a {
-  background: url('../images/icons/icon-groups.png?1379947793') no-repeat center 10px;
+  background: url('../images/icons/icon-groups.png?1395768501') no-repeat center 10px;
 }
 
 .main-menu-events a {
-  background: url('../images/icons/icon-events.png?1379947793') no-repeat center 10px;
+  background: url('../images/icons/icon-events.png?1395768501') no-repeat center 10px;
 }
 
 .main-menu-people a {
-  background: url('../images/icons/icon-people.png?1379947793') no-repeat center 10px;
+  background: url('../images/icons/icon-people.png?1395768501') no-repeat center 10px;
 }
 
 #menu-bar.nav ul.menu li.main-menu-search {
   display: none;
 }
 #menu-bar.nav ul.menu li.main-menu-search a {
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat center 10px;
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat center 10px;
 }
 @media only screen and (max-width: 768px) {
   #menu-bar.nav ul.menu li.main-menu-search {
@@ -2927,7 +2946,7 @@ ul.commons-utility-links li.last a {
 }
 
 .unread-invitations a {
-  background: url('../images/icons-s0eb3728c55.png') 0 -394px no-repeat;
+  background: url('../images/icons-sfd37165efe.png') 0 -890px no-repeat;
   width: 14px;
   height: 14px;
   display: inline-block;
@@ -2938,7 +2957,7 @@ ul.commons-utility-links li.last a {
 
 .unread-messages a,
 .no-unread-messages a {
-  background: url('../images/icons-s0eb3728c55.png') 0 -500px no-repeat;
+  background: url('../images/icons-sfd37165efe.png') 0 -924px no-repeat;
   width: 18px;
   height: 14px;
   display: inline-block;
@@ -3390,7 +3409,7 @@ ul.action-links {
   margin: 0;
 }
 .pane-commons-groups-commons-groups-create-group a:before {
-  background: url('../images/icons-s0eb3728c55.png') 0 -257px no-repeat;
+  background: url('../images/icons-sfd37165efe.png') 0 -324px no-repeat;
   width: 15px;
   height: 15px;
   display: inline-block;
@@ -3601,7 +3620,7 @@ ul.action-links {
   cursor: pointer;
 }
 .commons-bw-create-choose span {
-  background: url('../images/icons-s0eb3728c55.png') 0 -1262px no-repeat;
+  background: url('../images/icons-sfd37165efe.png') 0 -1334px no-repeat;
   width: 8px;
   height: 10px;
   display: inline-block;
@@ -3663,7 +3682,7 @@ ul.action-links {
   padding: 10px 10px 10px 27px;
 }
 .commons-bw-create-all-widget-types li .commons-polls-create:before {
-  background: url('../images/icons-s0eb3728c55.png') 0 -758px no-repeat;
+  background: url('../images/icons-sfd37165efe.png') 0 -630px no-repeat;
   width: 11px;
   height: 11px;
   display: inline-block;
@@ -3676,7 +3695,7 @@ ul.action-links {
   top: 13px;
 }
 .commons-bw-create-all-widget-types li .commons-posts-create:before {
-  background: url('../images/icons-s0eb3728c55.png') 0 -1073px no-repeat;
+  background: url('../images/icons-sfd37165efe.png') 0 -1175px no-repeat;
   width: 11px;
   height: 11px;
   display: inline-block;
@@ -3689,7 +3708,7 @@ ul.action-links {
   top: 13px;
 }
 .commons-bw-create-all-widget-types li .commons-wikis-create:before {
-  background: url('../images/icons-s0eb3728c55.png') 0 -534px no-repeat;
+  background: url('../images/icons-sfd37165efe.png') 0 -396px no-repeat;
   width: 13px;
   height: 13px;
   display: inline-block;
@@ -3702,7 +3721,7 @@ ul.action-links {
   top: 13px;
 }
 .commons-bw-create-all-widget-types li .commons-events-create:before {
-  background: url('../images/icons-s0eb3728c55.png') 0 -821px no-repeat;
+  background: url('../images/icons-sfd37165efe.png') 0 -661px no-repeat;
   width: 12px;
   height: 12px;
   display: inline-block;
@@ -3715,7 +3734,7 @@ ul.action-links {
   top: 13px;
 }
 .commons-bw-create-all-widget-types li .commons-q-a-create:before {
-  background: url('../images/icons-s0eb3728c55.png') 0 -694px no-repeat;
+  background: url('../images/icons-sfd37165efe.png') 0 -597px no-repeat;
   width: 13px;
   height: 13px;
   display: inline-block;
@@ -3786,6 +3805,9 @@ ul.action-links {
 .commons-bw-partial-node-form.compact-form .form-item {
   margin: 0;
 }
+.commons-bw-partial-node-form.compact-form textarea {
+  resize: none;
+}
 .commons-bw-partial-node-form .user-picture {
   margin-top: 2.6em;
 }
@@ -3948,7 +3970,7 @@ ul.action-links {
   text-indent: -9999em;
 }
 .block-search .form-submit, .block-search .form-submit:hover {
-  background: transparent url('../images/icons/ico_search_wht.png?1379947793') no-repeat center center;
+  background: transparent url('../images/icons/ico_search_wht.png?1395768501') no-repeat center center;
   border: none;
 }
 @media only screen and (max-width: 768px) {
@@ -4404,12 +4426,12 @@ body.front.logged-in .view-commons-homepage-content .article.node.node-page .lin
   cursor: default;
 }
 #quicktabs-commons_follow_ui .flag-email-group a span,
-#quicktabs-commons_follow_ui .flag-email-node a span,
-#quicktabs-commons_follow_ui .flag-email-user a span,
-#quicktabs-commons_follow_ui .flag-email-term a span,
 #quicktabs-commons_follow_ui .flag-email-group span span,
+#quicktabs-commons_follow_ui .flag-email-node a span,
 #quicktabs-commons_follow_ui .flag-email-node span span,
+#quicktabs-commons_follow_ui .flag-email-user a span,
 #quicktabs-commons_follow_ui .flag-email-user span span,
+#quicktabs-commons_follow_ui .flag-email-term a span,
 #quicktabs-commons_follow_ui .flag-email-term span span {
   display: none;
 }
@@ -4418,13 +4440,13 @@ body.front.logged-in .view-commons-homepage-content .article.node.node-page .lin
  *  Placeholder styles
  */
 #menu-bar.nav .menu-item-193 a {
-  background-image: url('../images/icons/icon-home.png?1379947793');
+  background-image: url('../images/icons/icon-home.png?1395768501');
 }
 #menu-bar.nav .menu-item-194 a {
-  background-image: url('../images/icons/icon-groups.png?1379947793');
+  background-image: url('../images/icons/icon-groups.png?1395768501');
 }
 #menu-bar.nav .menu-item-195 a {
-  background-image: url('../images/icons/icon-events.png?1379947793');
+  background-image: url('../images/icons/icon-events.png?1395768501');
 }
 
 /**
@@ -4495,7 +4517,7 @@ body.front.logged-in .view-commons-homepage-content .article.node.node-page .lin
   margin: 0;
 }
 .pane-commons-events-commons-events-create-event-link a:before {
-  background: url('../images/icons-s0eb3728c55.png') 0 -326px no-repeat;
+  background: url('../images/icons-sfd37165efe.png') 0 -429px no-repeat;
   width: 15px;
   height: 15px;
   display: inline-block;
@@ -4531,12 +4553,12 @@ body.front.logged-in .view-commons-homepage-content .article.node.node-page .lin
 
 .action-item-search[type="submit"] {
   min-width: 15px;
-  background: #46bb2e url('../images/icons/icon-search.png?1379947793') no-repeat;
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #4fcd35), color-stop(100%, #3ea729));
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-linear-gradient(#4fcd35, #3ea729);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -moz-linear-gradient(#4fcd35, #3ea729);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -o-linear-gradient(#4fcd35, #3ea729);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, linear-gradient(#4fcd35, #3ea729);
+  background: #46bb2e url('../images/icons/icon-search.png?1395768501') no-repeat;
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #4fcd35), color-stop(100%, #3ea729));
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-linear-gradient(#4fcd35, #3ea729);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -moz-linear-gradient(#4fcd35, #3ea729);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -o-linear-gradient(#4fcd35, #3ea729);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, linear-gradient(#4fcd35, #3ea729);
   border-color: #27691a;
   text-shadow: -1px 1px 2px #379224, -1px -1px 2px #379224, 1px -1px 2px #379224, 1px 1px 2px #379224;
 }
@@ -4545,22 +4567,22 @@ body.front.logged-in .view-commons-homepage-content .article.node.node-page .lin
 }
 .action-item-search[type="submit"]:hover {
   color: white;
-  background: #3ea729 url('../images/icons/icon-search.png?1379947793') no-repeat;
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #46bb2e), color-stop(100%, #379224));
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-linear-gradient(#46bb2e, #379224);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -moz-linear-gradient(#46bb2e, #379224);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -o-linear-gradient(#46bb2e, #379224);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, linear-gradient(#46bb2e, #379224);
+  background: #3ea729 url('../images/icons/icon-search.png?1395768501') no-repeat;
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #46bb2e), color-stop(100%, #379224));
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-linear-gradient(#46bb2e, #379224);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -moz-linear-gradient(#46bb2e, #379224);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -o-linear-gradient(#46bb2e, #379224);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, linear-gradient(#46bb2e, #379224);
   border-color: #184010;
   text-shadow: -1px 1px 2px #379224, -1px -1px 2px #379224, 1px -1px 2px #379224, 1px 1px 2px #379224;
 }
 .action-item-search[type="submit"]:focus, .action-item-search[type="submit"]:active {
-  background: #46bb2e url('../images/icons/icon-search.png?1379947793') no-repeat;
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #3ea729), color-stop(100%, #4fcd35));
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-linear-gradient(#3ea729, #4fcd35);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -moz-linear-gradient(#3ea729, #4fcd35);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -o-linear-gradient(#3ea729, #4fcd35);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, linear-gradient(#3ea729, #4fcd35);
+  background: #46bb2e url('../images/icons/icon-search.png?1395768501') no-repeat;
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #3ea729), color-stop(100%, #4fcd35));
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-linear-gradient(#3ea729, #4fcd35);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -moz-linear-gradient(#3ea729, #4fcd35);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -o-linear-gradient(#3ea729, #4fcd35);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, linear-gradient(#3ea729, #4fcd35);
   border-color: #27691a;
   text-shadow: -1px 1px 2px #379224, -1px -1px 2px #379224, 1px -1px 2px #379224, 1px 1px 2px #379224;
 }
@@ -4939,7 +4961,7 @@ body.front.logged-in .view-commons-homepage-content .article.node.node-page .lin
 
 .message-contact:before {
   content: "";
-  background: url('../images/icons-s0eb3728c55.png') 0 -633px no-repeat;
+  background: url('../images/icons-sfd37165efe.png') 0 -531px no-repeat;
   width: 11px;
   height: 12px;
   display: inline-block;
@@ -5170,12 +5192,12 @@ body.front.logged-in .view-commons-homepage-content .article.node.node-page .lin
 }
 .palette-orange-red .action-item-search[type="submit"] {
   min-width: 15px;
-  background: #ff9126 url('../images/icons/icon-search.png?1379947793') no-repeat;
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #ff9e40), color-stop(100%, #ff840c));
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-linear-gradient(#ff9e40, #ff840c);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -moz-linear-gradient(#ff9e40, #ff840c);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -o-linear-gradient(#ff9e40, #ff840c);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, linear-gradient(#ff9e40, #ff840c);
+  background: #ff9126 url('../images/icons/icon-search.png?1395768501') no-repeat;
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #ff9e40), color-stop(100%, #ff840c));
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-linear-gradient(#ff9e40, #ff840c);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -moz-linear-gradient(#ff9e40, #ff840c);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -o-linear-gradient(#ff9e40, #ff840c);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, linear-gradient(#ff9e40, #ff840c);
   border-color: #bf5e00;
   text-shadow: -1px 1px 2px #f27700, -1px -1px 2px #f27700, 1px -1px 2px #f27700, 1px 1px 2px #f27700;
 }
@@ -5184,22 +5206,22 @@ body.front.logged-in .view-commons-homepage-content .article.node.node-page .lin
 }
 .palette-orange-red .action-item-search[type="submit"]:hover {
   color: white;
-  background: #ff840c url('../images/icons/icon-search.png?1379947793') no-repeat;
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #ff9126), color-stop(100%, #f27700));
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-linear-gradient(#ff9126, #f27700);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -moz-linear-gradient(#ff9126, #f27700);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -o-linear-gradient(#ff9126, #f27700);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, linear-gradient(#ff9126, #f27700);
+  background: #ff840c url('../images/icons/icon-search.png?1395768501') no-repeat;
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #ff9126), color-stop(100%, #f27700));
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-linear-gradient(#ff9126, #f27700);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -moz-linear-gradient(#ff9126, #f27700);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -o-linear-gradient(#ff9126, #f27700);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, linear-gradient(#ff9126, #f27700);
   border-color: #8c4500;
   text-shadow: -1px 1px 2px #f27700, -1px -1px 2px #f27700, 1px -1px 2px #f27700, 1px 1px 2px #f27700;
 }
 .palette-orange-red .action-item-search[type="submit"]:focus, .palette-orange-red .action-item-search[type="submit"]:active {
-  background: #ff9126 url('../images/icons/icon-search.png?1379947793') no-repeat;
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #ff840c), color-stop(100%, #ff9e40));
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-linear-gradient(#ff840c, #ff9e40);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -moz-linear-gradient(#ff840c, #ff9e40);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -o-linear-gradient(#ff840c, #ff9e40);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, linear-gradient(#ff840c, #ff9e40);
+  background: #ff9126 url('../images/icons/icon-search.png?1395768501') no-repeat;
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #ff840c), color-stop(100%, #ff9e40));
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-linear-gradient(#ff840c, #ff9e40);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -moz-linear-gradient(#ff840c, #ff9e40);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -o-linear-gradient(#ff840c, #ff9e40);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, linear-gradient(#ff840c, #ff9e40);
   border-color: #bf5e00;
   text-shadow: -1px 1px 2px #f27700, -1px -1px 2px #f27700, 1px -1px 2px #f27700, 1px 1px 2px #f27700;
 }
@@ -5380,12 +5402,12 @@ body.front.logged-in .view-commons-homepage-content .article.node.node-page .lin
 }
 .palette-magenta-blue .action-item-search[type="submit"] {
   min-width: 15px;
-  background: #0097bf url('../images/icons/icon-search.png?1379947793') no-repeat;
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #00abd9), color-stop(100%, #0083a6));
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-linear-gradient(#00abd9, #0083a6);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -moz-linear-gradient(#00abd9, #0083a6);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -o-linear-gradient(#00abd9, #0083a6);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, linear-gradient(#00abd9, #0083a6);
+  background: #0097bf url('../images/icons/icon-search.png?1395768501') no-repeat;
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #00abd9), color-stop(100%, #0083a6));
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-linear-gradient(#00abd9, #0083a6);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -moz-linear-gradient(#00abd9, #0083a6);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -o-linear-gradient(#00abd9, #0083a6);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, linear-gradient(#00abd9, #0083a6);
   border-color: #004659;
   text-shadow: -1px 1px 2px #006f8c, -1px -1px 2px #006f8c, 1px -1px 2px #006f8c, 1px 1px 2px #006f8c;
 }
@@ -5394,22 +5416,22 @@ body.front.logged-in .view-commons-homepage-content .article.node.node-page .lin
 }
 .palette-magenta-blue .action-item-search[type="submit"]:hover {
   color: white;
-  background: #0083a6 url('../images/icons/icon-search.png?1379947793') no-repeat;
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #0097bf), color-stop(100%, #006f8c));
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-linear-gradient(#0097bf, #006f8c);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -moz-linear-gradient(#0097bf, #006f8c);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -o-linear-gradient(#0097bf, #006f8c);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, linear-gradient(#0097bf, #006f8c);
+  background: #0083a6 url('../images/icons/icon-search.png?1395768501') no-repeat;
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #0097bf), color-stop(100%, #006f8c));
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-linear-gradient(#0097bf, #006f8c);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -moz-linear-gradient(#0097bf, #006f8c);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -o-linear-gradient(#0097bf, #006f8c);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, linear-gradient(#0097bf, #006f8c);
   border-color: #001e26;
   text-shadow: -1px 1px 2px #006f8c, -1px -1px 2px #006f8c, 1px -1px 2px #006f8c, 1px 1px 2px #006f8c;
 }
 .palette-magenta-blue .action-item-search[type="submit"]:focus, .palette-magenta-blue .action-item-search[type="submit"]:active {
-  background: #0097bf url('../images/icons/icon-search.png?1379947793') no-repeat;
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #0083a6), color-stop(100%, #00abd9));
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-linear-gradient(#0083a6, #00abd9);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -moz-linear-gradient(#0083a6, #00abd9);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -o-linear-gradient(#0083a6, #00abd9);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, linear-gradient(#0083a6, #00abd9);
+  background: #0097bf url('../images/icons/icon-search.png?1395768501') no-repeat;
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #0083a6), color-stop(100%, #00abd9));
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-linear-gradient(#0083a6, #00abd9);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -moz-linear-gradient(#0083a6, #00abd9);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -o-linear-gradient(#0083a6, #00abd9);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, linear-gradient(#0083a6, #00abd9);
   border-color: #004659;
   text-shadow: -1px 1px 2px #006f8c, -1px -1px 2px #006f8c, 1px -1px 2px #006f8c, 1px 1px 2px #006f8c;
 }
@@ -5590,12 +5612,12 @@ body.front.logged-in .view-commons-homepage-content .article.node.node-page .lin
 }
 .palette-blue-blue .action-item-search[type="submit"] {
   min-width: 15px;
-  background: #7ebd26 url('../images/icons/icon-search.png?1379947793') no-repeat;
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #8cd22a), color-stop(100%, #70a822));
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-linear-gradient(#8cd22a, #70a822);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -moz-linear-gradient(#8cd22a, #70a822);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -o-linear-gradient(#8cd22a, #70a822);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, linear-gradient(#8cd22a, #70a822);
+  background: #7ebd26 url('../images/icons/icon-search.png?1395768501') no-repeat;
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #8cd22a), color-stop(100%, #70a822));
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-linear-gradient(#8cd22a, #70a822);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -moz-linear-gradient(#8cd22a, #70a822);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -o-linear-gradient(#8cd22a, #70a822);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, linear-gradient(#8cd22a, #70a822);
   border-color: #456815;
   text-shadow: -1px 1px 2px #62931d, -1px -1px 2px #62931d, 1px -1px 2px #62931d, 1px 1px 2px #62931d;
 }
@@ -5604,22 +5626,22 @@ body.front.logged-in .view-commons-homepage-content .article.node.node-page .lin
 }
 .palette-blue-blue .action-item-search[type="submit"]:hover {
   color: white;
-  background: #70a822 url('../images/icons/icon-search.png?1379947793') no-repeat;
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #7ebd26), color-stop(100%, #62931d));
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-linear-gradient(#7ebd26, #62931d);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -moz-linear-gradient(#7ebd26, #62931d);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -o-linear-gradient(#7ebd26, #62931d);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, linear-gradient(#7ebd26, #62931d);
+  background: #70a822 url('../images/icons/icon-search.png?1395768501') no-repeat;
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #7ebd26), color-stop(100%, #62931d));
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-linear-gradient(#7ebd26, #62931d);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -moz-linear-gradient(#7ebd26, #62931d);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -o-linear-gradient(#7ebd26, #62931d);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, linear-gradient(#7ebd26, #62931d);
   border-color: #293e0c;
   text-shadow: -1px 1px 2px #62931d, -1px -1px 2px #62931d, 1px -1px 2px #62931d, 1px 1px 2px #62931d;
 }
 .palette-blue-blue .action-item-search[type="submit"]:focus, .palette-blue-blue .action-item-search[type="submit"]:active {
-  background: #7ebd26 url('../images/icons/icon-search.png?1379947793') no-repeat;
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #70a822), color-stop(100%, #8cd22a));
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-linear-gradient(#70a822, #8cd22a);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -moz-linear-gradient(#70a822, #8cd22a);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -o-linear-gradient(#70a822, #8cd22a);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, linear-gradient(#70a822, #8cd22a);
+  background: #7ebd26 url('../images/icons/icon-search.png?1395768501') no-repeat;
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #70a822), color-stop(100%, #8cd22a));
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-linear-gradient(#70a822, #8cd22a);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -moz-linear-gradient(#70a822, #8cd22a);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -o-linear-gradient(#70a822, #8cd22a);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, linear-gradient(#70a822, #8cd22a);
   border-color: #456815;
   text-shadow: -1px 1px 2px #62931d, -1px -1px 2px #62931d, 1px -1px 2px #62931d, 1px 1px 2px #62931d;
 }
@@ -5800,12 +5822,12 @@ body.front.logged-in .view-commons-homepage-content .article.node.node-page .lin
 }
 .palette-black-green .action-item-search[type="submit"] {
   min-width: 15px;
-  background: #4090ba url('../images/icons/icon-search.png?1379947793') no-repeat;
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #519cc3), color-stop(100%, #3981a7));
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-linear-gradient(#519cc3, #3981a7);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -moz-linear-gradient(#519cc3, #3981a7);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -o-linear-gradient(#519cc3, #3981a7);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, linear-gradient(#519cc3, #3981a7);
+  background: #4090ba url('../images/icons/icon-search.png?1395768501') no-repeat;
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #519cc3), color-stop(100%, #3981a7));
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-linear-gradient(#519cc3, #3981a7);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -moz-linear-gradient(#519cc3, #3981a7);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -o-linear-gradient(#519cc3, #3981a7);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, linear-gradient(#519cc3, #3981a7);
   border-color: #26556e;
   text-shadow: -1px 1px 2px #337394, -1px -1px 2px #337394, 1px -1px 2px #337394, 1px 1px 2px #337394;
 }
@@ -5814,22 +5836,22 @@ body.front.logged-in .view-commons-homepage-content .article.node.node-page .lin
 }
 .palette-black-green .action-item-search[type="submit"]:hover {
   color: white;
-  background: #3981a7 url('../images/icons/icon-search.png?1379947793') no-repeat;
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #4090ba), color-stop(100%, #337394));
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-linear-gradient(#4090ba, #337394);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -moz-linear-gradient(#4090ba, #337394);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -o-linear-gradient(#4090ba, #337394);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, linear-gradient(#4090ba, #337394);
+  background: #3981a7 url('../images/icons/icon-search.png?1395768501') no-repeat;
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #4090ba), color-stop(100%, #337394));
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-linear-gradient(#4090ba, #337394);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -moz-linear-gradient(#4090ba, #337394);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -o-linear-gradient(#4090ba, #337394);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, linear-gradient(#4090ba, #337394);
   border-color: #193848;
   text-shadow: -1px 1px 2px #337394, -1px -1px 2px #337394, 1px -1px 2px #337394, 1px 1px 2px #337394;
 }
 .palette-black-green .action-item-search[type="submit"]:focus, .palette-black-green .action-item-search[type="submit"]:active {
-  background: #4090ba url('../images/icons/icon-search.png?1379947793') no-repeat;
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #3981a7), color-stop(100%, #519cc3));
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-linear-gradient(#3981a7, #519cc3);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -moz-linear-gradient(#3981a7, #519cc3);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -o-linear-gradient(#3981a7, #519cc3);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, linear-gradient(#3981a7, #519cc3);
+  background: #4090ba url('../images/icons/icon-search.png?1395768501') no-repeat;
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #3981a7), color-stop(100%, #519cc3));
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-linear-gradient(#3981a7, #519cc3);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -moz-linear-gradient(#3981a7, #519cc3);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -o-linear-gradient(#3981a7, #519cc3);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, linear-gradient(#3981a7, #519cc3);
   border-color: #26556e;
   text-shadow: -1px 1px 2px #337394, -1px -1px 2px #337394, 1px -1px 2px #337394, 1px 1px 2px #337394;
 }
@@ -6010,12 +6032,12 @@ body.front.logged-in .view-commons-homepage-content .article.node.node-page .lin
 }
 .palette-brown-yellow .action-item-search[type="submit"] {
   min-width: 15px;
-  background: #e3ad40 url('../images/icons/icon-search.png?1379947793') no-repeat;
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #e6b756), color-stop(100%, #e0a32a));
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-linear-gradient(#e6b756, #e0a32a);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -moz-linear-gradient(#e6b756, #e0a32a);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -o-linear-gradient(#e6b756, #e0a32a);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, linear-gradient(#e6b756, #e0a32a);
+  background: #e3ad40 url('../images/icons/icon-search.png?1395768501') no-repeat;
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #e6b756), color-stop(100%, #e0a32a));
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-linear-gradient(#e6b756, #e0a32a);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -moz-linear-gradient(#e6b756, #e0a32a);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -o-linear-gradient(#e6b756, #e0a32a);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, linear-gradient(#e6b756, #e0a32a);
   border-color: #a57618;
   text-shadow: -1px 1px 2px #d1961f, -1px -1px 2px #d1961f, 1px -1px 2px #d1961f, 1px 1px 2px #d1961f;
 }
@@ -6024,22 +6046,22 @@ body.front.logged-in .view-commons-homepage-content .article.node.node-page .lin
 }
 .palette-brown-yellow .action-item-search[type="submit"]:hover {
   color: white;
-  background: #e0a32a url('../images/icons/icon-search.png?1379947793') no-repeat;
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #e3ad40), color-stop(100%, #d1961f));
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-linear-gradient(#e3ad40, #d1961f);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -moz-linear-gradient(#e3ad40, #d1961f);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -o-linear-gradient(#e3ad40, #d1961f);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, linear-gradient(#e3ad40, #d1961f);
+  background: #e0a32a url('../images/icons/icon-search.png?1395768501') no-repeat;
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #e3ad40), color-stop(100%, #d1961f));
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-linear-gradient(#e3ad40, #d1961f);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -moz-linear-gradient(#e3ad40, #d1961f);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -o-linear-gradient(#e3ad40, #d1961f);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, linear-gradient(#e3ad40, #d1961f);
   border-color: #785612;
   text-shadow: -1px 1px 2px #d1961f, -1px -1px 2px #d1961f, 1px -1px 2px #d1961f, 1px 1px 2px #d1961f;
 }
 .palette-brown-yellow .action-item-search[type="submit"]:focus, .palette-brown-yellow .action-item-search[type="submit"]:active {
-  background: #e3ad40 url('../images/icons/icon-search.png?1379947793') no-repeat;
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #e0a32a), color-stop(100%, #e6b756));
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-linear-gradient(#e0a32a, #e6b756);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -moz-linear-gradient(#e0a32a, #e6b756);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -o-linear-gradient(#e0a32a, #e6b756);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, linear-gradient(#e0a32a, #e6b756);
+  background: #e3ad40 url('../images/icons/icon-search.png?1395768501') no-repeat;
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #e0a32a), color-stop(100%, #e6b756));
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-linear-gradient(#e0a32a, #e6b756);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -moz-linear-gradient(#e0a32a, #e6b756);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -o-linear-gradient(#e0a32a, #e6b756);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, linear-gradient(#e0a32a, #e6b756);
   border-color: #a57618;
   text-shadow: -1px 1px 2px #d1961f, -1px -1px 2px #d1961f, 1px -1px 2px #d1961f, 1px 1px 2px #d1961f;
 }
@@ -6220,12 +6242,12 @@ body.front.logged-in .view-commons-homepage-content .article.node.node-page .lin
 }
 .palette-seafoam-orange .action-item-search[type="submit"] {
   min-width: 15px;
-  background: #b68800 url('../images/icons/icon-search.png?1379947793') no-repeat;
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #d09b00), color-stop(100%, #9d7500));
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-linear-gradient(#d09b00, #9d7500);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -moz-linear-gradient(#d09b00, #9d7500);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -o-linear-gradient(#d09b00, #9d7500);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, linear-gradient(#d09b00, #9d7500);
+  background: #b68800 url('../images/icons/icon-search.png?1395768501') no-repeat;
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #d09b00), color-stop(100%, #9d7500));
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-linear-gradient(#d09b00, #9d7500);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -moz-linear-gradient(#d09b00, #9d7500);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -o-linear-gradient(#d09b00, #9d7500);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, linear-gradient(#d09b00, #9d7500);
   border-color: #503c00;
   text-shadow: -1px 1px 2px #836200, -1px -1px 2px #836200, 1px -1px 2px #836200, 1px 1px 2px #836200;
 }
@@ -6234,22 +6256,22 @@ body.front.logged-in .view-commons-homepage-content .article.node.node-page .lin
 }
 .palette-seafoam-orange .action-item-search[type="submit"]:hover {
   color: white;
-  background: #9d7500 url('../images/icons/icon-search.png?1379947793') no-repeat;
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #b68800), color-stop(100%, #836200));
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-linear-gradient(#b68800, #836200);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -moz-linear-gradient(#b68800, #836200);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -o-linear-gradient(#b68800, #836200);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, linear-gradient(#b68800, #836200);
+  background: #9d7500 url('../images/icons/icon-search.png?1395768501') no-repeat;
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #b68800), color-stop(100%, #836200));
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-linear-gradient(#b68800, #836200);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -moz-linear-gradient(#b68800, #836200);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -o-linear-gradient(#b68800, #836200);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, linear-gradient(#b68800, #836200);
   border-color: #1d1600;
   text-shadow: -1px 1px 2px #836200, -1px -1px 2px #836200, 1px -1px 2px #836200, 1px 1px 2px #836200;
 }
 .palette-seafoam-orange .action-item-search[type="submit"]:focus, .palette-seafoam-orange .action-item-search[type="submit"]:active {
-  background: #b68800 url('../images/icons/icon-search.png?1379947793') no-repeat;
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #9d7500), color-stop(100%, #d09b00));
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-linear-gradient(#9d7500, #d09b00);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -moz-linear-gradient(#9d7500, #d09b00);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -o-linear-gradient(#9d7500, #d09b00);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, linear-gradient(#9d7500, #d09b00);
+  background: #b68800 url('../images/icons/icon-search.png?1395768501') no-repeat;
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #9d7500), color-stop(100%, #d09b00));
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-linear-gradient(#9d7500, #d09b00);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -moz-linear-gradient(#9d7500, #d09b00);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -o-linear-gradient(#9d7500, #d09b00);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, linear-gradient(#9d7500, #d09b00);
   border-color: #503c00;
   text-shadow: -1px 1px 2px #836200, -1px -1px 2px #836200, 1px -1px 2px #836200, 1px 1px 2px #836200;
 }
@@ -6430,12 +6452,12 @@ body.front.logged-in .view-commons-homepage-content .article.node.node-page .lin
 }
 .palette-black-blue-yellow .action-item-search[type="submit"] {
   min-width: 15px;
-  background: #d0a600 url('../images/icons/icon-search.png?1379947793') no-repeat;
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #eaba00), color-stop(100%, #b69200));
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-linear-gradient(#eaba00, #b69200);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -moz-linear-gradient(#eaba00, #b69200);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -o-linear-gradient(#eaba00, #b69200);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, linear-gradient(#eaba00, #b69200);
+  background: #d0a600 url('../images/icons/icon-search.png?1395768501') no-repeat;
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #eaba00), color-stop(100%, #b69200));
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-linear-gradient(#eaba00, #b69200);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -moz-linear-gradient(#eaba00, #b69200);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -o-linear-gradient(#eaba00, #b69200);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, linear-gradient(#eaba00, #b69200);
   border-color: #6a5500;
   text-shadow: -1px 1px 2px #9d7d00, -1px -1px 2px #9d7d00, 1px -1px 2px #9d7d00, 1px 1px 2px #9d7d00;
 }
@@ -6444,22 +6466,22 @@ body.front.logged-in .view-commons-homepage-content .article.node.node-page .lin
 }
 .palette-black-blue-yellow .action-item-search[type="submit"]:hover {
   color: white;
-  background: #b69200 url('../images/icons/icon-search.png?1379947793') no-repeat;
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #d0a600), color-stop(100%, #9d7d00));
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-linear-gradient(#d0a600, #9d7d00);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -moz-linear-gradient(#d0a600, #9d7d00);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -o-linear-gradient(#d0a600, #9d7d00);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, linear-gradient(#d0a600, #9d7d00);
+  background: #b69200 url('../images/icons/icon-search.png?1395768501') no-repeat;
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #d0a600), color-stop(100%, #9d7d00));
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-linear-gradient(#d0a600, #9d7d00);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -moz-linear-gradient(#d0a600, #9d7d00);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -o-linear-gradient(#d0a600, #9d7d00);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, linear-gradient(#d0a600, #9d7d00);
   border-color: #372c00;
   text-shadow: -1px 1px 2px #9d7d00, -1px -1px 2px #9d7d00, 1px -1px 2px #9d7d00, 1px 1px 2px #9d7d00;
 }
 .palette-black-blue-yellow .action-item-search[type="submit"]:focus, .palette-black-blue-yellow .action-item-search[type="submit"]:active {
-  background: #d0a600 url('../images/icons/icon-search.png?1379947793') no-repeat;
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #b69200), color-stop(100%, #eaba00));
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-linear-gradient(#b69200, #eaba00);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -moz-linear-gradient(#b69200, #eaba00);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -o-linear-gradient(#b69200, #eaba00);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, linear-gradient(#b69200, #eaba00);
+  background: #d0a600 url('../images/icons/icon-search.png?1395768501') no-repeat;
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #b69200), color-stop(100%, #eaba00));
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-linear-gradient(#b69200, #eaba00);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -moz-linear-gradient(#b69200, #eaba00);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -o-linear-gradient(#b69200, #eaba00);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, linear-gradient(#b69200, #eaba00);
   border-color: #6a5500;
   text-shadow: -1px 1px 2px #9d7d00, -1px -1px 2px #9d7d00, 1px -1px 2px #9d7d00, 1px 1px 2px #9d7d00;
 }
@@ -6640,12 +6662,12 @@ body.front.logged-in .view-commons-homepage-content .article.node.node-page .lin
 }
 .palette-brick-brick .action-item-search[type="submit"] {
   min-width: 15px;
-  background: #a12e1e url('../images/icons/icon-search.png?1379947793') no-repeat;
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #b63422), color-stop(100%, #8c281a));
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-linear-gradient(#b63422, #8c281a);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -moz-linear-gradient(#b63422, #8c281a);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -o-linear-gradient(#b63422, #8c281a);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, linear-gradient(#b63422, #8c281a);
+  background: #a12e1e url('../images/icons/icon-search.png?1395768501') no-repeat;
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #b63422), color-stop(100%, #8c281a));
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-linear-gradient(#b63422, #8c281a);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -moz-linear-gradient(#b63422, #8c281a);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -o-linear-gradient(#b63422, #8c281a);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, linear-gradient(#b63422, #8c281a);
   border-color: #4b150e;
   text-shadow: -1px 1px 2px #762216, -1px -1px 2px #762216, 1px -1px 2px #762216, 1px 1px 2px #762216;
 }
@@ -6654,22 +6676,22 @@ body.front.logged-in .view-commons-homepage-content .article.node.node-page .lin
 }
 .palette-brick-brick .action-item-search[type="submit"]:hover {
   color: white;
-  background: #8c281a url('../images/icons/icon-search.png?1379947793') no-repeat;
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #a12e1e), color-stop(100%, #762216));
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-linear-gradient(#a12e1e, #762216);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -moz-linear-gradient(#a12e1e, #762216);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -o-linear-gradient(#a12e1e, #762216);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, linear-gradient(#a12e1e, #762216);
+  background: #8c281a url('../images/icons/icon-search.png?1395768501') no-repeat;
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #a12e1e), color-stop(100%, #762216));
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-linear-gradient(#a12e1e, #762216);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -moz-linear-gradient(#a12e1e, #762216);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -o-linear-gradient(#a12e1e, #762216);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, linear-gradient(#a12e1e, #762216);
   border-color: #200906;
   text-shadow: -1px 1px 2px #762216, -1px -1px 2px #762216, 1px -1px 2px #762216, 1px 1px 2px #762216;
 }
 .palette-brick-brick .action-item-search[type="submit"]:focus, .palette-brick-brick .action-item-search[type="submit"]:active {
-  background: #a12e1e url('../images/icons/icon-search.png?1379947793') no-repeat;
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #8c281a), color-stop(100%, #b63422));
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-linear-gradient(#8c281a, #b63422);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -moz-linear-gradient(#8c281a, #b63422);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -o-linear-gradient(#8c281a, #b63422);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, linear-gradient(#8c281a, #b63422);
+  background: #a12e1e url('../images/icons/icon-search.png?1395768501') no-repeat;
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #8c281a), color-stop(100%, #b63422));
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-linear-gradient(#8c281a, #b63422);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -moz-linear-gradient(#8c281a, #b63422);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -o-linear-gradient(#8c281a, #b63422);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, linear-gradient(#8c281a, #b63422);
   border-color: #4b150e;
   text-shadow: -1px 1px 2px #762216, -1px -1px 2px #762216, 1px -1px 2px #762216, 1px 1px 2px #762216;
 }
@@ -6850,12 +6872,12 @@ body.front.logged-in .view-commons-homepage-content .article.node.node-page .lin
 }
 .palette-gray-lightgray-blue .action-item-search[type="submit"] {
   min-width: 15px;
-  background: #04b6e7 url('../images/icons/icon-search.png?1379947793') no-repeat;
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #0ac7fb), color-stop(100%, #04a2ce));
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-linear-gradient(#0ac7fb, #04a2ce);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -moz-linear-gradient(#0ac7fb, #04a2ce);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -o-linear-gradient(#0ac7fb, #04a2ce);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, linear-gradient(#0ac7fb, #04a2ce);
+  background: #04b6e7 url('../images/icons/icon-search.png?1395768501') no-repeat;
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #0ac7fb), color-stop(100%, #04a2ce));
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-linear-gradient(#0ac7fb, #04a2ce);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -moz-linear-gradient(#0ac7fb, #04a2ce);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -o-linear-gradient(#0ac7fb, #04a2ce);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, linear-gradient(#0ac7fb, #04a2ce);
   border-color: #026783;
   text-shadow: -1px 1px 2px #038fb5, -1px -1px 2px #038fb5, 1px -1px 2px #038fb5, 1px 1px 2px #038fb5;
 }
@@ -6864,22 +6886,22 @@ body.front.logged-in .view-commons-homepage-content .article.node.node-page .lin
 }
 .palette-gray-lightgray-blue .action-item-search[type="submit"]:hover {
   color: white;
-  background: #04a2ce url('../images/icons/icon-search.png?1379947793') no-repeat;
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #04b6e7), color-stop(100%, #038fb5));
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-linear-gradient(#04b6e7, #038fb5);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -moz-linear-gradient(#04b6e7, #038fb5);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -o-linear-gradient(#04b6e7, #038fb5);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, linear-gradient(#04b6e7, #038fb5);
+  background: #04a2ce url('../images/icons/icon-search.png?1395768501') no-repeat;
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #04b6e7), color-stop(100%, #038fb5));
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-linear-gradient(#04b6e7, #038fb5);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -moz-linear-gradient(#04b6e7, #038fb5);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -o-linear-gradient(#04b6e7, #038fb5);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, linear-gradient(#04b6e7, #038fb5);
   border-color: #014051;
   text-shadow: -1px 1px 2px #038fb5, -1px -1px 2px #038fb5, 1px -1px 2px #038fb5, 1px 1px 2px #038fb5;
 }
 .palette-gray-lightgray-blue .action-item-search[type="submit"]:focus, .palette-gray-lightgray-blue .action-item-search[type="submit"]:active {
-  background: #04b6e7 url('../images/icons/icon-search.png?1379947793') no-repeat;
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #04a2ce), color-stop(100%, #0ac7fb));
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-linear-gradient(#04a2ce, #0ac7fb);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -moz-linear-gradient(#04a2ce, #0ac7fb);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -o-linear-gradient(#04a2ce, #0ac7fb);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, linear-gradient(#04a2ce, #0ac7fb);
+  background: #04b6e7 url('../images/icons/icon-search.png?1395768501') no-repeat;
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #04a2ce), color-stop(100%, #0ac7fb));
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-linear-gradient(#04a2ce, #0ac7fb);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -moz-linear-gradient(#04a2ce, #0ac7fb);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -o-linear-gradient(#04a2ce, #0ac7fb);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, linear-gradient(#04a2ce, #0ac7fb);
   border-color: #026783;
   text-shadow: -1px 1px 2px #038fb5, -1px -1px 2px #038fb5, 1px -1px 2px #038fb5, 1px 1px 2px #038fb5;
 }
@@ -7060,12 +7082,12 @@ body.front.logged-in .view-commons-homepage-content .article.node.node-page .lin
 }
 .palette-black-white-red .action-item-search[type="submit"] {
   min-width: 15px;
-  background: #cc0000 url('../images/icons/icon-search.png?1379947793') no-repeat;
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #e60000), color-stop(100%, #b30000));
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-linear-gradient(#e60000, #b30000);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -moz-linear-gradient(#e60000, #b30000);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -o-linear-gradient(#e60000, #b30000);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, linear-gradient(#e60000, #b30000);
+  background: #cc0000 url('../images/icons/icon-search.png?1395768501') no-repeat;
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #e60000), color-stop(100%, #b30000));
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-linear-gradient(#e60000, #b30000);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -moz-linear-gradient(#e60000, #b30000);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -o-linear-gradient(#e60000, #b30000);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, linear-gradient(#e60000, #b30000);
   border-color: #660000;
   text-shadow: -1px 1px 2px #990000, -1px -1px 2px #990000, 1px -1px 2px #990000, 1px 1px 2px #990000;
 }
@@ -7074,22 +7096,22 @@ body.front.logged-in .view-commons-homepage-content .article.node.node-page .lin
 }
 .palette-black-white-red .action-item-search[type="submit"]:hover {
   color: white;
-  background: #b30000 url('../images/icons/icon-search.png?1379947793') no-repeat;
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #cc0000), color-stop(100%, #990000));
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-linear-gradient(#cc0000, #990000);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -moz-linear-gradient(#cc0000, #990000);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -o-linear-gradient(#cc0000, #990000);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, linear-gradient(#cc0000, #990000);
+  background: #b30000 url('../images/icons/icon-search.png?1395768501') no-repeat;
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #cc0000), color-stop(100%, #990000));
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-linear-gradient(#cc0000, #990000);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -moz-linear-gradient(#cc0000, #990000);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -o-linear-gradient(#cc0000, #990000);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, linear-gradient(#cc0000, #990000);
   border-color: #330000;
   text-shadow: -1px 1px 2px #990000, -1px -1px 2px #990000, 1px -1px 2px #990000, 1px 1px 2px #990000;
 }
 .palette-black-white-red .action-item-search[type="submit"]:focus, .palette-black-white-red .action-item-search[type="submit"]:active {
-  background: #cc0000 url('../images/icons/icon-search.png?1379947793') no-repeat;
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #b30000), color-stop(100%, #e60000));
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-linear-gradient(#b30000, #e60000);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -moz-linear-gradient(#b30000, #e60000);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -o-linear-gradient(#b30000, #e60000);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, linear-gradient(#b30000, #e60000);
+  background: #cc0000 url('../images/icons/icon-search.png?1395768501') no-repeat;
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #b30000), color-stop(100%, #e60000));
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-linear-gradient(#b30000, #e60000);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -moz-linear-gradient(#b30000, #e60000);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -o-linear-gradient(#b30000, #e60000);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, linear-gradient(#b30000, #e60000);
   border-color: #660000;
   text-shadow: -1px 1px 2px #990000, -1px -1px 2px #990000, 1px -1px 2px #990000, 1px 1px 2px #990000;
 }
@@ -7270,12 +7292,12 @@ body.front.logged-in .view-commons-homepage-content .article.node.node-page .lin
 }
 .palette-brown-burnt-orange .action-item-search[type="submit"] {
   min-width: 15px;
-  background: #e18728 url('../images/icons/icon-search.png?1379947793') no-repeat;
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #e4933e), color-stop(100%, #d27a1d));
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-linear-gradient(#e4933e, #d27a1d);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -moz-linear-gradient(#e4933e, #d27a1d);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -o-linear-gradient(#e4933e, #d27a1d);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, linear-gradient(#e4933e, #d27a1d);
+  background: #e18728 url('../images/icons/icon-search.png?1395768501') no-repeat;
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #e4933e), color-stop(100%, #d27a1d));
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-linear-gradient(#e4933e, #d27a1d);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -moz-linear-gradient(#e4933e, #d27a1d);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -o-linear-gradient(#e4933e, #d27a1d);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, linear-gradient(#e4933e, #d27a1d);
   border-color: #8f5314;
   text-shadow: -1px 1px 2px #bc6d1a, -1px -1px 2px #bc6d1a, 1px -1px 2px #bc6d1a, 1px 1px 2px #bc6d1a;
 }
@@ -7284,22 +7306,22 @@ body.front.logged-in .view-commons-homepage-content .article.node.node-page .lin
 }
 .palette-brown-burnt-orange .action-item-search[type="submit"]:hover {
   color: white;
-  background: #d27a1d url('../images/icons/icon-search.png?1379947793') no-repeat;
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #e18728), color-stop(100%, #bc6d1a));
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-linear-gradient(#e18728, #bc6d1a);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -moz-linear-gradient(#e18728, #bc6d1a);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -o-linear-gradient(#e18728, #bc6d1a);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, linear-gradient(#e18728, #bc6d1a);
+  background: #d27a1d url('../images/icons/icon-search.png?1395768501') no-repeat;
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #e18728), color-stop(100%, #bc6d1a));
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-linear-gradient(#e18728, #bc6d1a);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -moz-linear-gradient(#e18728, #bc6d1a);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -o-linear-gradient(#e18728, #bc6d1a);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, linear-gradient(#e18728, #bc6d1a);
   border-color: #62390e;
   text-shadow: -1px 1px 2px #bc6d1a, -1px -1px 2px #bc6d1a, 1px -1px 2px #bc6d1a, 1px 1px 2px #bc6d1a;
 }
 .palette-brown-burnt-orange .action-item-search[type="submit"]:focus, .palette-brown-burnt-orange .action-item-search[type="submit"]:active {
-  background: #e18728 url('../images/icons/icon-search.png?1379947793') no-repeat;
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #d27a1d), color-stop(100%, #e4933e));
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -webkit-linear-gradient(#d27a1d, #e4933e);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -moz-linear-gradient(#d27a1d, #e4933e);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, -o-linear-gradient(#d27a1d, #e4933e);
-  background: url('../images/icons/icon-search.png?1379947793') no-repeat, linear-gradient(#d27a1d, #e4933e);
+  background: #e18728 url('../images/icons/icon-search.png?1395768501') no-repeat;
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #d27a1d), color-stop(100%, #e4933e));
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -webkit-linear-gradient(#d27a1d, #e4933e);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -moz-linear-gradient(#d27a1d, #e4933e);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, -o-linear-gradient(#d27a1d, #e4933e);
+  background: url('../images/icons/icon-search.png?1395768501') no-repeat, linear-gradient(#d27a1d, #e4933e);
   border-color: #8f5314;
   text-shadow: -1px 1px 2px #bc6d1a, -1px -1px 2px #bc6d1a, 1px -1px 2px #bc6d1a, 1px 1px 2px #bc6d1a;
 }
diff --git a/themes/commons/commons_origins/css/lt-ie9.css b/themes/commons/commons_origins/css/lt-ie9.css
index 4c6511f..d53f039 100644
--- a/themes/commons/commons_origins/css/lt-ie9.css
+++ b/themes/commons/commons_origins/css/lt-ie9.css
@@ -10,7 +10,7 @@ html {
 }
 
 body.front.not-logged-in #content {
-  background: url('../images/commons-drop.png?1379947793') right top no-repeat;
+  background: url('../images/commons-drop.png?1395768501') right top no-repeat;
 }
 body.front.not-logged-in .region-three-33-top {
   margin-bottom: 24px;
diff --git a/themes/commons/commons_origins/css/responsive.custom.css b/themes/commons/commons_origins/css/responsive.custom.css
index 0ca7794..fa8baef 100644
--- a/themes/commons/commons_origins/css/responsive.custom.css
+++ b/themes/commons/commons_origins/css/responsive.custom.css
@@ -129,7 +129,7 @@
  */
 @media only screen and (min-width: 768px) {
   body.front.not-logged-in #content {
-    background: url('../images/commons-drop.png?1379947793') right top no-repeat;
+    background: url('../images/commons-drop.png?1395768501') right top no-repeat;
   }
   body.front.not-logged-in .region-three-33-top {
     margin-bottom: 24px;
diff --git a/themes/commons/commons_origins/images/bkg.png b/themes/commons/commons_origins/images/bkg.png
index 11d6fab..e81d5eb 100644
Binary files a/themes/commons/commons_origins/images/bkg.png and b/themes/commons/commons_origins/images/bkg.png differ
diff --git a/themes/commons/commons_origins/images/bkg_search.png b/themes/commons/commons_origins/images/bkg_search.png
index 485b3ba..da57115 100644
Binary files a/themes/commons/commons_origins/images/bkg_search.png and b/themes/commons/commons_origins/images/bkg_search.png differ
diff --git a/themes/commons/commons_origins/images/button.png b/themes/commons/commons_origins/images/button.png
index c465162..e064884 100755
Binary files a/themes/commons/commons_origins/images/button.png and b/themes/commons/commons_origins/images/button.png differ
diff --git a/themes/commons/commons_origins/images/commons-drop.png b/themes/commons/commons_origins/images/commons-drop.png
index 9371818..8cfe679 100644
Binary files a/themes/commons/commons_origins/images/commons-drop.png and b/themes/commons/commons_origins/images/commons-drop.png differ
diff --git a/themes/commons/commons_origins/images/commons-logo.png b/themes/commons/commons_origins/images/commons-logo.png
index b512b11..0285803 100644
Binary files a/themes/commons/commons_origins/images/commons-logo.png and b/themes/commons/commons_origins/images/commons-logo.png differ
diff --git a/themes/commons/commons_origins/images/footer-logo.png b/themes/commons/commons_origins/images/footer-logo.png
index 1ed345a..20fe355 100644
Binary files a/themes/commons/commons_origins/images/footer-logo.png and b/themes/commons/commons_origins/images/footer-logo.png differ
diff --git a/themes/commons/commons_origins/images/icons-s0eb3728c55.png b/themes/commons/commons_origins/images/icons-s0eb3728c55.png
deleted file mode 100644
index ad4f346..0000000
Binary files a/themes/commons/commons_origins/images/icons-s0eb3728c55.png and /dev/null differ
diff --git a/themes/commons/commons_origins/images/icons-sfd37165efe.png b/themes/commons/commons_origins/images/icons-sfd37165efe.png
new file mode 100644
index 0000000..2c5d73f
Binary files /dev/null and b/themes/commons/commons_origins/images/icons-sfd37165efe.png differ
diff --git a/themes/commons/commons_origins/images/icons/all.png b/themes/commons/commons_origins/images/icons/all.png
index ddf0b16..250416e 100644
Binary files a/themes/commons/commons_origins/images/icons/all.png and b/themes/commons/commons_origins/images/icons/all.png differ
diff --git a/themes/commons/commons_origins/images/icons/comments-dark.png b/themes/commons/commons_origins/images/icons/comments-dark.png
index 598bcd9..5e079ed 100644
Binary files a/themes/commons/commons_origins/images/icons/comments-dark.png and b/themes/commons/commons_origins/images/icons/comments-dark.png differ
diff --git a/themes/commons/commons_origins/images/icons/comments.png b/themes/commons/commons_origins/images/icons/comments.png
index 0bf7803..f6f3d5c 100644
Binary files a/themes/commons/commons_origins/images/icons/comments.png and b/themes/commons/commons_origins/images/icons/comments.png differ
diff --git a/themes/commons/commons_origins/images/icons/docs.png b/themes/commons/commons_origins/images/icons/docs.png
index 128d00e..9cd6875 100644
Binary files a/themes/commons/commons_origins/images/icons/docs.png and b/themes/commons/commons_origins/images/icons/docs.png differ
diff --git a/themes/commons/commons_origins/images/icons/facebook.png b/themes/commons/commons_origins/images/icons/facebook.png
index 45cb2f2..c5a51b9 100644
Binary files a/themes/commons/commons_origins/images/icons/facebook.png and b/themes/commons/commons_origins/images/icons/facebook.png differ
diff --git a/themes/commons/commons_origins/images/icons/follow-large.png b/themes/commons/commons_origins/images/icons/follow-large.png
index cb49e5e..30578a1 100644
Binary files a/themes/commons/commons_origins/images/icons/follow-large.png and b/themes/commons/commons_origins/images/icons/follow-large.png differ
diff --git a/themes/commons/commons_origins/images/icons/groups.png b/themes/commons/commons_origins/images/icons/groups.png
index a2316ee..35472c9 100644
Binary files a/themes/commons/commons_origins/images/icons/groups.png and b/themes/commons/commons_origins/images/icons/groups.png differ
diff --git a/themes/commons/commons_origins/images/icons/ico_arrow_wht.png b/themes/commons/commons_origins/images/icons/ico_arrow_wht.png
index c9a77e3..abc00fc 100644
Binary files a/themes/commons/commons_origins/images/icons/ico_arrow_wht.png and b/themes/commons/commons_origins/images/icons/ico_arrow_wht.png differ
diff --git a/themes/commons/commons_origins/images/icons/ico_search_wht.png b/themes/commons/commons_origins/images/icons/ico_search_wht.png
index 769ae94..bea84f1 100644
Binary files a/themes/commons/commons_origins/images/icons/ico_search_wht.png and b/themes/commons/commons_origins/images/icons/ico_search_wht.png differ
diff --git a/themes/commons/commons_origins/images/icons/icon-envelope.png b/themes/commons/commons_origins/images/icons/icon-envelope.png
index e5c77ca..a00cab9 100644
Binary files a/themes/commons/commons_origins/images/icons/icon-envelope.png and b/themes/commons/commons_origins/images/icons/icon-envelope.png differ
diff --git a/themes/commons/commons_origins/images/icons/icon-events.png b/themes/commons/commons_origins/images/icons/icon-events.png
index c578eee..f1751b7 100644
Binary files a/themes/commons/commons_origins/images/icons/icon-events.png and b/themes/commons/commons_origins/images/icons/icon-events.png differ
diff --git a/themes/commons/commons_origins/images/icons/icon-gray-alert.png b/themes/commons/commons_origins/images/icons/icon-gray-alert.png
index 072702b..ad56b42 100644
Binary files a/themes/commons/commons_origins/images/icons/icon-gray-alert.png and b/themes/commons/commons_origins/images/icons/icon-gray-alert.png differ
diff --git a/themes/commons/commons_origins/images/icons/icon-gray-docs.png b/themes/commons/commons_origins/images/icons/icon-gray-docs.png
new file mode 100644
index 0000000..e63668c
Binary files /dev/null and b/themes/commons/commons_origins/images/icons/icon-gray-docs.png differ
diff --git a/themes/commons/commons_origins/images/icons/icon-gray-follow.png b/themes/commons/commons_origins/images/icons/icon-gray-follow.png
index 3adecd1..9bfdb91 100644
Binary files a/themes/commons/commons_origins/images/icons/icon-gray-follow.png and b/themes/commons/commons_origins/images/icons/icon-gray-follow.png differ
diff --git a/themes/commons/commons_origins/images/icons/icon-gray-idea.png b/themes/commons/commons_origins/images/icons/icon-gray-idea.png
index 236709e..c60cd27 100644
Binary files a/themes/commons/commons_origins/images/icons/icon-gray-idea.png and b/themes/commons/commons_origins/images/icons/icon-gray-idea.png differ
diff --git a/themes/commons/commons_origins/images/icons/icon-gray-poll.png b/themes/commons/commons_origins/images/icons/icon-gray-poll.png
index 136a984..fe2a38d 100644
Binary files a/themes/commons/commons_origins/images/icons/icon-gray-poll.png and b/themes/commons/commons_origins/images/icons/icon-gray-poll.png differ
diff --git a/themes/commons/commons_origins/images/icons/icon-gray-post.png b/themes/commons/commons_origins/images/icons/icon-gray-post.png
index a68867e..b0585a8 100644
Binary files a/themes/commons/commons_origins/images/icons/icon-gray-post.png and b/themes/commons/commons_origins/images/icons/icon-gray-post.png differ
diff --git a/themes/commons/commons_origins/images/icons/icon-gray-question.png b/themes/commons/commons_origins/images/icons/icon-gray-question.png
index c8aa662..47a66ac 100644
Binary files a/themes/commons/commons_origins/images/icons/icon-gray-question.png and b/themes/commons/commons_origins/images/icons/icon-gray-question.png differ
diff --git a/themes/commons/commons_origins/images/icons/icon-groups-small.png b/themes/commons/commons_origins/images/icons/icon-groups-small.png
index c411350..8138129 100644
Binary files a/themes/commons/commons_origins/images/icons/icon-groups-small.png and b/themes/commons/commons_origins/images/icons/icon-groups-small.png differ
diff --git a/themes/commons/commons_origins/images/icons/icon-groups.png b/themes/commons/commons_origins/images/icons/icon-groups.png
index a1420d0..6b5ba7d 100644
Binary files a/themes/commons/commons_origins/images/icons/icon-groups.png and b/themes/commons/commons_origins/images/icons/icon-groups.png differ
diff --git a/themes/commons/commons_origins/images/icons/icon-home.png b/themes/commons/commons_origins/images/icons/icon-home.png
index 6310ba6..445995b 100644
Binary files a/themes/commons/commons_origins/images/icons/icon-home.png and b/themes/commons/commons_origins/images/icons/icon-home.png differ
diff --git a/themes/commons/commons_origins/images/icons/icon-more.png b/themes/commons/commons_origins/images/icons/icon-more.png
index 226b9ab..dd24abb 100644
Binary files a/themes/commons/commons_origins/images/icons/icon-more.png and b/themes/commons/commons_origins/images/icons/icon-more.png differ
diff --git a/themes/commons/commons_origins/images/icons/icon-people.png b/themes/commons/commons_origins/images/icons/icon-people.png
index 57baf80..e4684dd 100644
Binary files a/themes/commons/commons_origins/images/icons/icon-people.png and b/themes/commons/commons_origins/images/icons/icon-people.png differ
diff --git a/themes/commons/commons_origins/images/icons/icon-person.png b/themes/commons/commons_origins/images/icons/icon-person.png
index 9b7ad86..ba254a9 100644
Binary files a/themes/commons/commons_origins/images/icons/icon-person.png and b/themes/commons/commons_origins/images/icons/icon-person.png differ
diff --git a/themes/commons/commons_origins/images/icons/icon-search.png b/themes/commons/commons_origins/images/icons/icon-search.png
index a7a43c7..1177d54 100644
Binary files a/themes/commons/commons_origins/images/icons/icon-search.png and b/themes/commons/commons_origins/images/icons/icon-search.png differ
diff --git a/themes/commons/commons_origins/images/icons/ideas.png b/themes/commons/commons_origins/images/icons/ideas.png
index 565bd0c..1f1bc10 100644
Binary files a/themes/commons/commons_origins/images/icons/ideas.png and b/themes/commons/commons_origins/images/icons/ideas.png differ
diff --git a/themes/commons/commons_origins/images/icons/like.png b/themes/commons/commons_origins/images/icons/like.png
index bbd0eff..ea015ca 100644
Binary files a/themes/commons/commons_origins/images/icons/like.png and b/themes/commons/commons_origins/images/icons/like.png differ
diff --git a/themes/commons/commons_origins/images/icons/linkedin.png b/themes/commons/commons_origins/images/icons/linkedin.png
index 317d833..1619f7d 100644
Binary files a/themes/commons/commons_origins/images/icons/linkedin.png and b/themes/commons/commons_origins/images/icons/linkedin.png differ
diff --git a/themes/commons/commons_origins/images/icons/message.png b/themes/commons/commons_origins/images/icons/message.png
index f916eda..c6625f4 100644
Binary files a/themes/commons/commons_origins/images/icons/message.png and b/themes/commons/commons_origins/images/icons/message.png differ
diff --git a/themes/commons/commons_origins/images/icons/picture.png b/themes/commons/commons_origins/images/icons/picture.png
new file mode 100644
index 0000000..b487cc3
Binary files /dev/null and b/themes/commons/commons_origins/images/icons/picture.png differ
diff --git a/themes/commons/commons_origins/images/icons/polls.png b/themes/commons/commons_origins/images/icons/polls.png
index c71cc56..30351d8 100644
Binary files a/themes/commons/commons_origins/images/icons/polls.png and b/themes/commons/commons_origins/images/icons/polls.png differ
diff --git a/themes/commons/commons_origins/images/icons/posts.png b/themes/commons/commons_origins/images/icons/posts.png
index 5831a17..c124f00 100644
Binary files a/themes/commons/commons_origins/images/icons/posts.png and b/themes/commons/commons_origins/images/icons/posts.png differ
diff --git a/themes/commons/commons_origins/images/icons/qa.png b/themes/commons/commons_origins/images/icons/qa.png
index e20e104..91d3c80 100644
Binary files a/themes/commons/commons_origins/images/icons/qa.png and b/themes/commons/commons_origins/images/icons/qa.png differ
diff --git a/themes/commons/commons_origins/images/icons/share.png b/themes/commons/commons_origins/images/icons/share.png
index c13e153..7eb7174 100644
Binary files a/themes/commons/commons_origins/images/icons/share.png and b/themes/commons/commons_origins/images/icons/share.png differ
diff --git a/themes/commons/commons_origins/images/icons/spam.png b/themes/commons/commons_origins/images/icons/spam.png
index cacc120..018bfd0 100644
Binary files a/themes/commons/commons_origins/images/icons/spam.png and b/themes/commons/commons_origins/images/icons/spam.png differ
diff --git a/themes/commons/commons_origins/images/icons/tags.png b/themes/commons/commons_origins/images/icons/tags.png
index e24aacd..869c5af 100644
Binary files a/themes/commons/commons_origins/images/icons/tags.png and b/themes/commons/commons_origins/images/icons/tags.png differ
diff --git a/themes/commons/commons_origins/images/icons/twitter.png b/themes/commons/commons_origins/images/icons/twitter.png
index f31c69d..a9852ea 100644
Binary files a/themes/commons/commons_origins/images/icons/twitter.png and b/themes/commons/commons_origins/images/icons/twitter.png differ
diff --git a/themes/commons/commons_origins/images/icons/wikis.png b/themes/commons/commons_origins/images/icons/wikis.png
index bc99e65..ba3eb30 100644
Binary files a/themes/commons/commons_origins/images/icons/wikis.png and b/themes/commons/commons_origins/images/icons/wikis.png differ
diff --git a/themes/commons/commons_origins/images/jquery.selectBox-arrow.gif b/themes/commons/commons_origins/images/jquery.selectBox-arrow.gif
index 2796795..d8b7993 100755
Binary files a/themes/commons/commons_origins/images/jquery.selectBox-arrow.gif and b/themes/commons/commons_origins/images/jquery.selectBox-arrow.gif differ
diff --git a/themes/commons/commons_origins/images/logo-general.png b/themes/commons/commons_origins/images/logo-general.png
index febf20a..aa00b0a 100644
Binary files a/themes/commons/commons_origins/images/logo-general.png and b/themes/commons/commons_origins/images/logo-general.png differ
diff --git a/themes/commons/commons_origins/images/main-nav-arrow.png b/themes/commons/commons_origins/images/main-nav-arrow.png
index 5253570..0c78233 100644
Binary files a/themes/commons/commons_origins/images/main-nav-arrow.png and b/themes/commons/commons_origins/images/main-nav-arrow.png differ
diff --git a/themes/commons/commons_origins/images/main-nav-hover.png b/themes/commons/commons_origins/images/main-nav-hover.png
index 4a257cc..347b9cc 100644
Binary files a/themes/commons/commons_origins/images/main-nav-hover.png and b/themes/commons/commons_origins/images/main-nav-hover.png differ
diff --git a/themes/commons/commons_origins/images/node-promoted-star.png b/themes/commons/commons_origins/images/node-promoted-star.png
index cac6b7f..787d5f5 100644
Binary files a/themes/commons/commons_origins/images/node-promoted-star.png and b/themes/commons/commons_origins/images/node-promoted-star.png differ
diff --git a/themes/commons/commons_origins/images/palettes/default.png b/themes/commons/commons_origins/images/palettes/default.png
index aed9660..4034a02 100644
Binary files a/themes/commons/commons_origins/images/palettes/default.png and b/themes/commons/commons_origins/images/palettes/default.png differ
diff --git a/themes/commons/commons_origins/images/palettes/palette-black-blue-yellow.png b/themes/commons/commons_origins/images/palettes/palette-black-blue-yellow.png
index 5d22ebd..a305b9f 100755
Binary files a/themes/commons/commons_origins/images/palettes/palette-black-blue-yellow.png and b/themes/commons/commons_origins/images/palettes/palette-black-blue-yellow.png differ
diff --git a/themes/commons/commons_origins/images/palettes/palette-black-green.png b/themes/commons/commons_origins/images/palettes/palette-black-green.png
index d60fddb..a09ddbb 100755
Binary files a/themes/commons/commons_origins/images/palettes/palette-black-green.png and b/themes/commons/commons_origins/images/palettes/palette-black-green.png differ
diff --git a/themes/commons/commons_origins/images/palettes/palette-black-white-red.png b/themes/commons/commons_origins/images/palettes/palette-black-white-red.png
index ba498b9..9813fc9 100755
Binary files a/themes/commons/commons_origins/images/palettes/palette-black-white-red.png and b/themes/commons/commons_origins/images/palettes/palette-black-white-red.png differ
diff --git a/themes/commons/commons_origins/images/palettes/palette-blue-blue.png b/themes/commons/commons_origins/images/palettes/palette-blue-blue.png
index 9b7d83d..dc27585 100755
Binary files a/themes/commons/commons_origins/images/palettes/palette-blue-blue.png and b/themes/commons/commons_origins/images/palettes/palette-blue-blue.png differ
diff --git a/themes/commons/commons_origins/images/palettes/palette-brick-brick.png b/themes/commons/commons_origins/images/palettes/palette-brick-brick.png
index 871c39e..a96c53b 100755
Binary files a/themes/commons/commons_origins/images/palettes/palette-brick-brick.png and b/themes/commons/commons_origins/images/palettes/palette-brick-brick.png differ
diff --git a/themes/commons/commons_origins/images/palettes/palette-brown-burnt-orange.png b/themes/commons/commons_origins/images/palettes/palette-brown-burnt-orange.png
index abba19a..56416be 100755
Binary files a/themes/commons/commons_origins/images/palettes/palette-brown-burnt-orange.png and b/themes/commons/commons_origins/images/palettes/palette-brown-burnt-orange.png differ
diff --git a/themes/commons/commons_origins/images/palettes/palette-brown-yellow.png b/themes/commons/commons_origins/images/palettes/palette-brown-yellow.png
index 6bf69d3..908b9ba 100755
Binary files a/themes/commons/commons_origins/images/palettes/palette-brown-yellow.png and b/themes/commons/commons_origins/images/palettes/palette-brown-yellow.png differ
diff --git a/themes/commons/commons_origins/images/palettes/palette-gray-lightgray-blue.png b/themes/commons/commons_origins/images/palettes/palette-gray-lightgray-blue.png
index f05301a..8100c07 100755
Binary files a/themes/commons/commons_origins/images/palettes/palette-gray-lightgray-blue.png and b/themes/commons/commons_origins/images/palettes/palette-gray-lightgray-blue.png differ
diff --git a/themes/commons/commons_origins/images/palettes/palette-magenta-blue.png b/themes/commons/commons_origins/images/palettes/palette-magenta-blue.png
index 9a77647..6ba09a3 100755
Binary files a/themes/commons/commons_origins/images/palettes/palette-magenta-blue.png and b/themes/commons/commons_origins/images/palettes/palette-magenta-blue.png differ
diff --git a/themes/commons/commons_origins/images/palettes/palette-orange-red.png b/themes/commons/commons_origins/images/palettes/palette-orange-red.png
index 6963119..d1ca678 100755
Binary files a/themes/commons/commons_origins/images/palettes/palette-orange-red.png and b/themes/commons/commons_origins/images/palettes/palette-orange-red.png differ
diff --git a/themes/commons/commons_origins/images/palettes/palette-seafoam-orange.png b/themes/commons/commons_origins/images/palettes/palette-seafoam-orange.png
index 67a31af..230ada9 100755
Binary files a/themes/commons/commons_origins/images/palettes/palette-seafoam-orange.png and b/themes/commons/commons_origins/images/palettes/palette-seafoam-orange.png differ
diff --git a/themes/commons/commons_origins/images/tag-featured.png b/themes/commons/commons_origins/images/tag-featured.png
index 3e5d44e..01f2a1f 100644
Binary files a/themes/commons/commons_origins/images/tag-featured.png and b/themes/commons/commons_origins/images/tag-featured.png differ
diff --git a/themes/commons/commons_origins/images/tag-new.png b/themes/commons/commons_origins/images/tag-new.png
index 017796b..8e389f7 100644
Binary files a/themes/commons/commons_origins/images/tag-new.png and b/themes/commons/commons_origins/images/tag-new.png differ
diff --git a/themes/commons/commons_origins/images/user_img_arrow.png b/themes/commons/commons_origins/images/user_img_arrow.png
index 8773a12..570b31d 100644
Binary files a/themes/commons/commons_origins/images/user_img_arrow.png and b/themes/commons/commons_origins/images/user_img_arrow.png differ
diff --git a/themes/commons/commons_origins/sass/_post-icons.scss b/themes/commons/commons_origins/sass/_post-icons.scss
new file mode 100644
index 0000000..589f40f
--- /dev/null
+++ b/themes/commons/commons_origins/sass/_post-icons.scss
@@ -0,0 +1,73 @@
+//
+// @file
+// Apply icons for various post types.
+//
+// Any new content types should be added to this file if it has a special icon.
+// Any new content types will have .row-type-[type] and
+// .node-content-type-[type] associated with them. New icons can be added to
+// the images/icons directory. The the name of the file sans the .png extension
+// is the name to feed to the sprite_url_height_width() mixin.
+//
+
+/* Apply icons to row row types. */
+[class*="row-type-"] {
+  @include box-sizing(border-box);
+  padding-left: 20px;
+
+  &:before {
+    content: "";
+    float: left;
+    margin-top: .1em;
+    margin-left: -20px;
+  }
+}
+
+.node-content-type:before {
+  content: "";
+}
+
+.row-type-event,
+.node-content-type-event {
+  &:before {
+    @include sprite_url_height_width($icons, events);
+  }
+}
+
+.row-type-page,
+.node-content-type-page,
+.row-type-document,
+.node-content-type-document {
+  &:before {
+    @include sprite_url_height_width($icons, icon-gray-docs);
+  }
+}
+
+.row-type-poll,
+.node-content-type-poll {
+  &:before {
+    @include sprite_url_height_width($icons, polls);
+  }
+}
+
+.row-type-post,
+.node-content-type-post {
+  &:before {
+    @include sprite_url_height_width($icons, posts);
+  }
+}
+
+.row-type-question,
+.row-type-answer,
+.node-content-type-question,
+.node-content-type-answer {
+  &:before {
+    @include sprite_url_height_width($icons, qa);
+  }
+}
+
+.row-type-wiki,
+.node-content-type-wiki {
+  &:before {
+    @include sprite_url_height_width($icons, wikis);
+  }
+}
diff --git a/themes/commons/commons_origins/sass/commons-media.scss b/themes/commons/commons_origins/sass/commons-media.scss
index 3742746..4ce99dc 100644
--- a/themes/commons/commons_origins/sass/commons-media.scss
+++ b/themes/commons/commons_origins/sass/commons-media.scss
@@ -49,66 +49,146 @@ table[id^="field-media-values"] {
     padding-left: px-to-em(100px + $gutter-width);
   }
 
+  .media-widget {
+    .button {
+      display: block;
+
+      @include respond(large) {
+        max-width: 50%;
+      }
+    }
+  }
+}
+
+.form-type-media {
   .preview {
-    float: left;
-    font-size: 1em;
-    margin-left: -(px-to-em(100px + $gutter-width));
-    width: px-to-em(100px);
-    min-height: px-to-em(100px);
-    background: $light_gray;
-    cursor: pointer;
+    @include sprite_url_height_width($icons, picture);
+    margin-right: $gutter-width;
   }
 
   @include respond(only-small) {
-    .form-item {
-      padding-left: 0;
+    .preview {
+      display: block;
+      float: none;
+      margin: 10px auto;
     }
 
-    .preview {
+    .button,
+    input[type="submit"] {
       display: block;
       float: none;
-      margin: $gutter-width auto;
+      margin: 10px auto;
+      width: 100%;
     }
   }
+}
 
-  .media-item {
-    padding: 0;
-    background-color: transparent;
+// Override the default jQuery Dialog to match styles of Ember admin theme.
+// Once commons has a native style built and the module is set to use Commons
+// Origins, this can be removed.
+.media-wrapper {
+  position: absolute;
+  overflow: hidden;
+  padding: 0;
+  border: 1px solid #555555;
+  min-width: 100%;
+  max-width: 100%;
+  @include box-shadow(0 0 0 0.5625em rgba(0, 0, 0, 0.2));
+  @include box-sizing(border-box);
+
+  &,
+  .ui-corner-all {
+    @include border-radius(0);
+  }
+
+  .ui-dialog-title {
+    display: block;
+    margin: 0;
+    line-height: 1.5em;
+    font-size: 2.25em;
+    font-family: "Helvetica Neue", helvetica, "Segoe UI", segoe, "Ubuntu", "Droid Sans", "Arial", sans-serif;
+    font-weight: 200;
+  }
+
+  .ui-dialog-titlebar {
+    position: relative;
+    padding: 0.70711em 1em 0;
     border: none;
+    color: #848484;
+    background: #303030;
+  }
 
-    img {
-      display: block;
-      margin: 0;
+  .ui-dialog-titlebar-close {
+    position: absolute;
+    float: none;
+    display: block;
+    top: 0.35355em;
+    right: 0.35355em;
+    width: 1em;
+    height: 1em;
+    overflow: hidden;
+    margin: 0;
+    padding: 0;
+    text-align: center;
+    line-height: 1em;
+    color: white;
+    background: none;
+    font-weight: normal;
+
+    &:hover {
+      text-decoration: none;
+      border: none;
     }
 
-    .label-wrapper {
-      position: static;
-
-      label {
-        margin: 0;
-      }
+    &:before {
+      content: "\2715";
     }
   }
 
-  .media-widget {
-    .preview {
-      .media-item {
-        margin: 0;
-
-        .label-wrapper {
-          label {
-            color: $white;
-          }
-        }
-      }
+  .ui-dialog-content {
+    position: relative;
+    border: 0;
+    background: none;
+    overflow: auto;
+    zoom: 1;
+  }
+
+  .ui-dialog-buttonpane {
+    text-align: left;
+    border-width: 1px 0 0 0;
+    background-image: none;
+    margin: .5em 0 0 0;
+    padding: .3em 1em .5em .4em;
+
+    .ui-dialog-buttonset {
+      float: right;
     }
 
-    .button {
-      display: block;
+    button {
+      margin: .5em .4em .5em 0;
+      cursor: pointer;
+    }
+  }
 
-      @include respond(large) {
-        max-width: 50%;
-      }
+  .ui-resizable-se {
+    width: 14px;
+    height: 14px;
+    right: 3px;
+    bottom: 3px;
+  }
+
+  .ui-draggable .ui-dialog-titlebar {
+    cursor: move;
+  }
+
+  @media (min-width: 22.85714em) {
+    min-width: 0;
+  }
+
+  @media (min-width: 28.57143em) {
+    .ui-dialog-titlebar {
+      padding-right: 2em;
+      padding-left: 2em;
     }
   }
 }
diff --git a/themes/commons/commons_origins/sass/global.styles.scss b/themes/commons/commons_origins/sass/global.styles.scss
index ca98417..946215b 100755
--- a/themes/commons/commons_origins/sass/global.styles.scss
+++ b/themes/commons/commons_origins/sass/global.styles.scss
@@ -842,6 +842,7 @@ legend {
 // Generate the invisible classes that we will extend.
 @include buttons;
 
+.button,
 button,
 [type="reset"],
 [type="submit"],
@@ -1011,7 +1012,7 @@ button,
     }
   }
 
-  .unflag-action {
+  a.unflag-action {
     @extend %button-active;
   }
 
@@ -1507,54 +1508,8 @@ h1.node-title {
   }
 }
 
-/* Apply icons to row row types. */
-[class*="row-type-"] {
-  @include box-sizing(border-box);
-  padding-left: 20px;
-
-  &:before {
-    content: "";
-    float: left;
-    margin-top: .1em;
-    margin-left: -20px;
-  }
-}
-
-.row-type-event {
-  &:before {
-    @include sprite_url_height_width($icons, events);
-  }
-}
-.row-type-page {
-  &:before {
-    @include sprite_url_height_width($icons, docs);
-  }
-}
-
-.row-type-poll {
-  &:before {
-    @include sprite_url_height_width($icons, polls);
-  }
-}
-
-.row-type-post {
-  &:before {
-    @include sprite_url_height_width($icons, posts);
-  }
-}
-
-.row-type-question,
-.row-type-answer {
-  &:before {
-    @include sprite_url_height_width($icons, qa);
-  }
-}
-
-.row-type-wiki {
-  &:before {
-    @include sprite_url_height_width($icons, wikis);
-  }
-}
+// Load the post icon styles.
+@import 'post-icons';
 
 /* Titles fields */
 .views-field-title {
@@ -3409,6 +3364,10 @@ body.page-node .pane-views-panes {
     .form-item {
       margin: 0;
     }
+
+    textarea {
+      resize: none;
+    }
   }
 
   .user-picture {
@@ -4123,7 +4082,10 @@ body.front.logged-in .view-commons-homepage-content .article.node {
       input {
         cursor: default;
       }
+    }
 
+    a,
+    span {
       span {
         display: none;
       }
diff --git a/themes/commons/commons_origins/template.php b/themes/commons/commons_origins/template.php
index ce26a21..c6bdbe4 100755
--- a/themes/commons/commons_origins/template.php
+++ b/themes/commons/commons_origins/template.php
@@ -50,6 +50,20 @@ function commons_origins_commons_utility_links_alter(&$element) {
 }
 
 /**
+ * Implements hook_preprocess_media_oembed().
+ */
+function commons_origins_preprocess_media_oembed(&$variables) {
+  $content = $variables['content'];
+  $type = $variables['type'];
+
+  // Video and rich type must have HTML content.
+  // Wrap the HTML content in a <div> to allow it to be made responsive.
+  if (in_array($type, array('video', 'rich'))) {
+    $variables['content'] = '<div class="oembed">' . $content . '</div>';
+  }
+}
+
+/**
  * Implements hook_preprocess_search_result().
  */
 function commons_origins_preprocess_search_result(&$variables, $hook) {
@@ -274,12 +288,6 @@ function commons_origins_preprocess_page(&$variables, $hook) {
  */
 function commons_origins_preprocess_node(&$variables, $hook) {
   $node = $variables['node'];
-  $wrapper = entity_metadata_wrapper('node', $node);
-
-  // Append a feature label to featured node teasers.
-  if ($variables['teaser'] && $variables['promote']) {
-    $variables['submitted'] .= ' <span class="featured-node-tooltip">' . t('Featured') . ' ' . $variables['type'] . '</span>';
-  }
 
   // Some content does not get a user image on the full node.
   $no_avatar = array(
@@ -371,26 +379,6 @@ function commons_origins_preprocess_node(&$variables, $hook) {
     }
   }
 
-  // Replace the submitted text on nodes with something a bit more pertinent to
-  // the content type.
-  if (variable_get('node_submitted_' . $node->type, TRUE)) {
-    $node_type_info = node_type_get_type($variables['node']);
-    $placeholders = array(
-      '!type' => '<span class="node-content-type">' . check_plain($node_type_info->name) . '</span>',
-      '!user' => $variables['name'],
-      '!date' => $variables['date'],
-      '@interval' => format_interval(REQUEST_TIME - $node->created),
-    );
-
-    if (!empty($node->{OG_AUDIENCE_FIELD}) && $wrapper->{OG_AUDIENCE_FIELD}->count() == 1) {
-      $placeholders['!group'] = l($wrapper->{OG_AUDIENCE_FIELD}->get(0)->label(), 'node/' . $wrapper->{OG_AUDIENCE_FIELD}->get(0)->getIdentifier());
-      $variables['submitted'] = t('!type created @interval ago in the !group group by !user', $placeholders);
-    }
-    else {
-      $variables['submitted'] = t('!type created @interval ago by !user', $placeholders);
-    }
-  }
-
   // Add a class to the node when there is a logo image.
   if (!empty($variables['field_logo'])) {
     $variables['classes_array'][] = 'logo-available';
@@ -1287,3 +1275,60 @@ function commons_origins_preprocess_commons_search_solr_user_results(&$variables
   // Hide the results title.
   $variables['title_attributes_array']['class'][] = 'element-invisible';
 }
+
+/**
+ * Implements hook_process_node().
+ */
+function commons_origins_process_node(&$variables, $hook) {
+  $node = $variables['node'];
+  $wrapper = entity_metadata_wrapper('node', $node);
+
+  // Use timeago module for formatting node submission date
+  // if it is enabled and also configured to be used on nodes.
+  if (module_exists('timeago') && variable_get('timeago_node', 1)) {
+    $variables['date'] = timeago_format_date($node->created, $variables['date']);
+    $use_timeago_date_format = TRUE;
+  }
+  else {
+    $use_timeago_date_format = FALSE;
+  }
+
+  // Replace the submitted text on nodes with something a bit more pertinent to
+  // the content type.
+  if (variable_get('node_submitted_' . $node->type, TRUE)) {
+    $node_type_info = node_type_get_type($variables['node']);
+    $type_attributes = array('class' => array(
+      'node-content-type',
+      drupal_html_class('node-content-type-' . $node->type),
+    ));
+    $placeholders = array(
+      '!type' => '<span' . drupal_attributes($type_attributes) . '>' . check_plain($node_type_info->name) . '</span>',
+      '!user' => $variables['name'],
+      '!date' => $variables['date'],
+      '@interval' => format_interval(REQUEST_TIME - $node->created),
+    );
+    // Show what group the content belongs to if applicable.
+    if (!empty($node->{OG_AUDIENCE_FIELD}) && $wrapper->{OG_AUDIENCE_FIELD}->count() == 1) {
+      $placeholders['!group'] = l($wrapper->{OG_AUDIENCE_FIELD}->get(0)->label(), 'node/' . $wrapper->{OG_AUDIENCE_FIELD}->get(0)->getIdentifier());
+      if ($use_timeago_date_format == TRUE) {
+        $variables['submitted'] = t('!type created !date in the !group group by !user', $placeholders);
+      }
+      else {
+        $variables['submitted'] = t('!type created @interval ago in the !group group by !user', $placeholders);
+      }
+    }
+    else {
+      if ($use_timeago_date_format == TRUE) {
+        $variables['submitted'] = t('!type created !date by !user', $placeholders);
+      }
+      else {
+        $variables['submitted'] = t('!type created @interval ago by !user', $placeholders);
+      }
+    }
+  }
+
+  // Append a feature label to featured node teasers.
+  if ($variables['teaser'] && $variables['promote']) {
+    $variables['submitted'] .= ' <span class="featured-node-tooltip">' . t('Featured') . ' ' . $variables['type'] . '</span>';
+  }
+}
