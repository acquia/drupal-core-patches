diff --git a/commons-dev.make b/commons-dev.make
index 08406b7..fe536aa 100644
--- a/commons-dev.make
+++ b/commons-dev.make
@@ -1,4 +1,4 @@
-; This Drush make script assembles a development version of the Acquia Commons distribution.
+; This Drush make script assembles a development version of the Drupal Commons distribution.
 ; To package Commons using this script, install Drush make (http://drupal.org/project/drush_make).
 ; Packaging with the --working-copy flag is recommended for developers since
 ; it reduces the effort necessary to roll a patch against Commons components
@@ -7,7 +7,9 @@
 core = 6.x
 api = 2
 
-projects[drupal][version] = "6.22"
+projects[drupal][version] = "6.31"
+; http://drupal.org/node/1564996#comment-5963056
+projects[drupal][patch][] = "http://drupal.org/files/1564996_one_time_watchdog_more_info-D6.patch"
 
 projects[drupal_commons][type] = "profile"
 projects[drupal_commons][download][type] = "git"
diff --git a/commons-prod.make b/commons-prod.make
new file mode 100644
index 0000000..127c28c
--- /dev/null
+++ b/commons-prod.make
@@ -0,0 +1,16 @@
+; This Drush make script assembles a development version of the Drupal Commons distribution.
+; To package Commons using this script, install Drush make (http://drupal.org/project/drush_make).
+; Packaging with the --working-copy flag is recommended for developers since
+; it reduces the effort necessary to roll a patch against Commons components
+; that live at http://drupal.org/project/commons .
+
+core = 6.x
+api = 2
+
+projects[drupal][version] = "6.31"
+; http://drupal.org/node/1564996#comment-5963056
+projects[drupal][patch][] = "http://drupal.org/files/1564996_one_time_watchdog_more_info-D6.patch"
+
+projects[drupal_commons][type] = "profile"
+projects[drupal_commons][download][type] = "file"
+projects[drupal_commons][download][url] = "http://ftp.drupal.org/files/projects/commons-6.x-2.17.tar.gz"
diff --git a/drupal_commons.make b/drupal_commons.make
index de3cb6e..2636c7e 100644
--- a/drupal_commons.make
+++ b/drupal_commons.make
@@ -1,5 +1,4 @@
 core = 6.x
-
 api = 2
 
 ; Modules
@@ -11,24 +10,48 @@ projects[admin][version] = "2.0"
 ; Historically Commons placed Acquia connector in the Acquia subdirectory.
 ; Leaving it there to simplify the upgrade process.
 projects[acquia_connector][subdir] = "acquia"
+projects[acquia_connector][version] = "2.15"
+
+projects[apachesolr][type] = "module"
+projects[apachesolr][version] = "1.8"
+projects[apachesolr][subdir] = "acquia/acquia_search"
 
 projects[acquia_search][type] = "module"
-projects[acquia_search][download][type] = "get"
-projects[acquia_search][download][url] = "http://network.acquia.com/files/downloads/acquia-search-current.tar.gz"
 projects[acquia_search][subdir] = "acquia"
+projects[acquia_search][version] = "1.5702"
 
-projects[ajax_load][download][type] = "git"
-projects[ajax_load][download][url] = "http://git.drupal.org/project/ajax_load.git" 
-projects[ajax_load][download][revision] = "8b0921252fcf599e7b15276bd815bcf81521eb27"
+projects[ajax_load][version] = 1.4
 projects[ajax_load][subdir] = "contrib"
 
+; Commons Answers dependencies:
+projects[answers][subdir] ="contrib"
+
+projects[vote_up_down][subdir] = "contrib"
+
+projects[views_attach][version] = 2.x-dev
+projects[views_attach][download][type] = "git"
+projects[views_attach][download][revision] = 6.x-2.x
+projects[views_attach][subdir] = "contrib"
+
+; http://drupal.org/node/1409556#comment-5489412
+projects[views_attach][patch][] = "http://drupal.org/files/1409556-attach-empty-b.patch"
+
+; Temporarily grab VotingAPI from the 6.x-2.x
+; branch per http://drupal.org/node/1418000
+projects[votingapi][version] = 2.x-dev
+projects[votingapi][subdir] = "contrib"
+projects[votingapi][download][type] = "git"
+projects[votingapi][download][revision] = '6.x-2.x'
+
+projects[nodereference_count][subdir] = "contrib"
+projects[nodereference_url][subdir] = "contrib"
+; End Commons Answers dependencies
+
 projects[better_formats][subdir] = "contrib"
 
 projects[boxes][subdir] = "contrib"
-projects[boxes][version] = "1.0"
 
 projects[ctools][subdir] = "contrib"
-projects[ctools][version] = "1.8"
 
 projects[calendar][subdir] = "contrib"
 projects[calendar][version] = "2.4"
@@ -45,7 +68,7 @@ projects[cck][subdir] = "contrib"
 projects[cck][version] = "2.9"
 
 projects[context][subdir] = "contrib"
-projects[context][version] = "3.0"
+projects[context][version] = "3.3"
 
 ; Context patches in PATCHES.txt from Acquia Commons GitHub repo:
 
@@ -57,16 +80,7 @@ projects[context_og][version] = "3.0"
 
 projects[date][subdir] = "contrib"
 
-
 projects[diff][subdir] = "contrib"
-projects[diff][download][type] = "git"
-projects[diff][download][url] = "http://git.drupal.org/project/diff.git"
-projects[diff][download][revision] = "6.x-2.x"
-
-; http://drupal.org/node/372957#comment-5458068
-projects[diff][patch][] = "http://drupal.org/files/372957-diff-strip-html-73.patch"
-
-projects[tagging][subdir] = "contrib"
 
 projects[editablefields][subdir] = "contrib"
 projects[editablefields][version] = "2.0"
@@ -78,18 +92,18 @@ projects[editablefields][patch][] = "http://drupal.org/files/issues/editablefiel
 projects[features][subdir] = "contrib"
 
 projects[filefield][subdir] = "contrib"
-projects[filefield][version] = "3.10"
+projects[filefield][version] = "3.12"
 
 projects[flag][subdir] = "contrib"
-projects[flag][version] = "1.3"
+projects[flag][version] = "1.5"
 
 projects[freelinking][subdir] = "contrib"
-projects[freelinking][version] = "1.10"
 
 projects[getid3][subdir] = "contrib"
 
 
 libraries[getid3][download][type] = "get"
+libraries[getid3][type] = "libraries"
 libraries[getid3][destination] = "libraries"
 libraries[getid3][download][url] = "http://downloads.sourceforge.net/project/getid3/getID3%28%29%201.x/1.9.1/getid3-1.9.1-20110810.zip?r=http%3A%2F%2Fsourceforge.net%2Fprojects%2Fgetid3%2Ffiles%2FgetID3%2528%2529%25201.x%2F1.9.1%2F&ts=1320871534"
 libraries[getid3][directory_name] = "getid3"
@@ -110,7 +124,7 @@ projects[imagecache_profiles][subdir] = "contrib"
 projects[imagecache_profiles][version] = "1.3"
 
 projects[imagefield][subdir] = "contrib"
-projects[imagefield][version] = "3.10"
+projects[imagefield][version] = "3.11"
 
 projects[insert][subdir] = "contrib"
 
@@ -121,6 +135,7 @@ projects[invite][version] = "2.0-beta3"
 projects[jquery_ui][subdir] = "contrib"
 
 libraries[jquery_ui][download][type] = "get"
+libraries[jquery_ui][type] = "libraries"
 libraries[jquery_ui][destination] = "modules/contrib/jquery_ui"
 libraries[jquery_ui][download][url] = "http://jquery-ui.googlecode.com/files/jquery.ui-1.6.zip"
 libraries[jquery_ui][directory_name] = "jquery.ui"
@@ -137,29 +152,23 @@ projects[mimemail][subdir] = "contrib"
 ; Leaving it there to simplify the upgrade process.
 
 projects[mollom][subdir] = "acquia"
+projects[mollom][version] = "2.6"
 
 
 projects[notifications][subdir] = "contrib"
 projects[notifications][version] = "2.3"
 
 projects[og][subdir] = "contrib"
-projects[og][version] = "2.2"
+projects[og][version] = "2.4"
 
 ; OG patches in PATCHES.txt from Acquia Commons GitHub repo:
 
-; http://drupal.org/node/1051258
-projects[og][patch][] = "http://drupal.org/files/issues/og_notifications-add-form-labels.patch"
-
 ; http://drupal.org/node/835030
 ;projects[og][patch][] = "http://drupal.org/files/issues/og_notifications-subscriptions-not-saving-835030.patch"
 
 ; http://drupal.org/node/1128492
 projects[og][patch][] = "http://drupal.org/files/issues/og_views-add-leave-group-field.patch"
 
-; http://drupal.org/node/793588#comment-5304624
-projects[og][patch][] = "http://drupal.org/files/add_uid_index_to_og_uid-793588-4-D6.patch"
-
-
 projects[og_aggregator][subdir] = "contrib"
 projects[og_aggregator][version] = "1.4"
 
@@ -177,13 +186,11 @@ projects[og_aggregator][version] = "1.4"
 ; Does not apply to og_aggregator 1.4 but has been committed upstream.
 ; projects[og_aggregator][patch][] = "http://drupal.org/files/issues/og_aggregator-fix-wsod.patch
 
-
 projects[og_features][subdir] = "contrib"
-projects[og_features][version] = "1.2"
+projects[og_features][version] = "1.4"
 
 projects[og_invite_link][subdir] = "contrib"
 
-
 projects[og_statistics][subdir] = "contrib"
 projects[og_statistics][version] = "1.0-rc5"
 
@@ -197,25 +204,21 @@ projects[og_statistics][patch][] = "http://drupal.org/files/issues/og_statistics
 
 projects[og_subgroups][subdir] = "contrib"
 
-
 projects[password_policy][subdir] = "contrib"
 
 projects[pathauto][subdir] = "contrib"
 
-projects[quant][download][type] = "git"
-projects[quant][download][url] = "http://git.drupal.org/project/quant.git"
-projects[quant][download][revision] = "2d204b2"
 projects[quant][subdir] = "contrib"
 
 projects[rules][subdir] = "contrib"
-projects[rules][version] = "1.4"
+projects[rules][version] = "1.5"
 ; http://drupal.org/node/978620#comment-3763720
 projects[rules][patch][] = "http://drupal.org/files/issues/rules.rules_defaults_alter_0.patch"
 
 projects[strongarm][subdir] = "contrib"
 
 projects[tagadelic][subdir] = "contrib"
-projects[tagadelic][version] = "1.3"
+projects[tagadelic][version] = "1.5"
 
 projects[tagadelic_views][subdir] = "contrib"
 projects[tagadelic_views][version] = "1.2"
@@ -223,18 +226,13 @@ projects[tagadelic_views][version] = "1.2"
 projects[token][subdir] = "contrib"
 
 projects[transliteration][subdir] = "contrib"
-projects[transliteration][version] = "3.0"
+projects[transliteration][version] = "3.1"
 
+projects[userpoints_contrib][version] = 1.x-dev
 projects[userpoints_contrib][subdir] = "contrib"
 projects[userpoints_contrib][download][type] = "git"
-projects[userpoints_contrib][download][url] = "http://git.drupal.org/project/userpoints.git"
 projects[userpoints_contrib][download][revision] = "0359e9497882d98080b5854b19ebc1bd34a7c24a"
 
-; Based on the date of 5ae09b723a8197f29d9ee7f562777ef221cb16de from the GitHub Acquia Commons repo.
-projects[userpoints_contrib][download][type] = git
-projects[userpoints_contrib][download][url] = "http://git.drupal.org/project/userpoints_contrib.git"
-projects[userpoints_contrib][version] = "0359e9497882d98080b5854b19ebc1bd34a7c24a"
-
 projects[user_badges][subdir] = "contrib"
 projects[user_badges][version] = "1.6"
 
@@ -245,17 +243,16 @@ projects[user_badges][patch][] = "http://drupal.org/files/issues/user_badges-for
 ; http://drupal.org/node/986822#comment-4001216
 projects[user_badges][patch][] = "http://drupal.org/files/issues/user_badges-undefined-constant-986822.patch"
 
+
 projects[user_relationships][subdir] = "contrib"
-projects[user_relationships][download][type] = "git"
-; UR's last release was ~1 year ago with some non-trivial commits since then.
-projects[user_relationships][download][revision] = "6.x-1.x"
+
+; User_relationships patches in PATCHES.txt from Acquia Commons GitHub repo:
+; http://drupal.org/node/1121038#comment-6198978
+projects[user_relationships][patch][] = "http://drupal.org/files/1121038-user-relationships-disable-notifications-8.patch"
 
 ; http://drupal.org/node/1322858#comment-5171120
 projects[user_relationships][patch][] = "http://drupal.org/files/ur_alter_remove_links.patch"
 
-; User_relationships patches in PATCHES.txt from Acquia Commons GitHub repo:
-; http://drupal.org/node/1121038#comment-4322488
-projects[user_relationships][patch][] = "http://drupal.org/files/issues/user_relationships_disable_notifications_0_0.patch"
 
 projects[user_terms][subdir] = "contrib"
 
@@ -271,6 +268,8 @@ projects[userpoints_nc][patch][] = "http://drupal.org/files/issues/userpoints_nc
 
 projects[userpoints_user_picture][subdir] = "contrib"
 projects[userpoints_user_picture][version] = "1.2"
+; http://drupal.org/node/1075668#comment-5926324
+projects[userpoints_user_picture][patch][] = "http://drupal.org/files/userpoints_user_picture_undefined_index_fix_1075668_7.patch"
 
 projects[vertical_tabs][subdir] = "contrib"
 
@@ -279,19 +278,24 @@ projects[views][subdir] = "contrib"
 ; http://drupal.org/node/402944#comment-4650020
 projects[views][patch][] = "http://drupal.org/files/issues/views-402944-31.patch"
 
+projects[views_content_cache][subdir] = "contrib"
+projects[views_content_cache][version] = "2.3"
+
+projects[views_field_view][subdir] = "contrib"
+
 projects[views_slideshow][subdir] = "contrib"
-projects[views_slideshow][version] = "2.3"
+projects[views_slideshow][version] = "2.4"
 
 projects[wikitools][subdir] = "contrib"
 projects[wikitools][version] = "1.3"
 
-
+projects[wysiwyg][version] = 2.x-dev
 projects[wysiwyg][download][type] = "git"
-projects[wysiwyg][download][url] = "http://git.drupal.org/project/wysiwyg.git"
 projects[wysiwyg][download][revision] = "ddfaf684a45eb2ba3e4f866e5e5e6e1c10c8c020"
 projects[wysiwyg][subdir] = "contrib"
 
 libraries[ckeditor][download][type] = "get"
+libraries[ckeditor][type] = "libraries"
 libraries[ckeditor][destination] = "libraries"
 libraries[ckeditor][download][url] = "http://download.cksource.com/CKEditor/CKEditor/CKEditor%203.6.2/ckeditor_3.6.2.tar.gz"
 libraries[ckeditor][directory_name] = "ckeditor"
@@ -300,35 +304,30 @@ libraries[ckeditor][patch][] = "http://drupal.org/files/1337004-ckeditor-remove-
 projects[wysiwyg_filter][subdir] = "contrib"
 projects[wysiwyg_filter][version] = "1.5"
 
-projects[activity_log][download][type] = "git"
-projects[activity_log][download][url] = "http://git.drupal.org/project/activity_log.git"
-projects[activity_log][download][revision] = "6.x-2.x"
+projects[activity_log][version] = "2.0-beta2"
 projects[activity_log][type] = "module"
 projects[activity_log][subdir] = "contrib"
 
 ; http://drupal.org/node/1306252#comment-5412352
 projects[activity_log][patch][] = "http://drupal.org/files/1306252-activity_log_node_og_dupes-b.patch"
 
-projects[digests][download][type] = "git"
-projects[digests][download][url] = "http://git.drupal.org/project/digests.git"
-projects[digests][download][revision] = "6.x-1.x"
+projects[digests][version] = "1.0"
 projects[digests][type] = "module"
 projects[digests][subdir] = "contrib"
 
+projects[tidy_node_links][version] = 1.x-dev
 projects[tidy_node_links][download][type] = "git"
 projects[tidy_node_links][download][url] = "http://git.drupal.org/sandbox/ezrag/1344006.git"
 projects[tidy_node_links][download][revision] = "6.x-1.x"
 projects[tidy_node_links][type] = "module"
 projects[tidy_node_links][subdir] = "contrib"
 
-projects[facebook_status][download][type] = "git"
-projects[facebook_status][download][url] = "http://git.drupal.org/project/facebook_status.git"
-projects[facebook_status][download][revision] = "6.x-3.x"
 projects[facebook_status][subdir] = "contrib"
+projects[facebook_status][version] = "3.1"
 
+projects[fbsmp][version] = 2.x-dev
 projects[fbsmp][subdir] = "contrib"
 projects[fbsmp][download][type] = "git"
-projects[fbsmp][download][url] = "http://git.drupal.org/project/fbsmp.git"
 projects[fbsmp][download][revision] = 6.x-2.x
 
 projects[mailhandler][subdir] = "contrib"
@@ -339,12 +338,10 @@ projects[mailcomment][version] = "1.0"
 
 ; Modules no longer in use, to be removed in a future release:
 
-projects[homebox][subdir] = "contrib"
-projects[shoutbox][subdir] = "contrib"
-projects[image][subdir] = "contrib"
+;projects[homebox][subdir] = "contrib"
+;projects[shoutbox][subdir] = "contrib"
+;projects[image][subdir] = "contrib"
 
 ; Themes:
 
 projects[fusion][type] = "theme"
-
-
diff --git a/drupal_commons.profile b/drupal_commons.profile
index 27ae3a8..5f83785 100644
--- a/drupal_commons.profile
+++ b/drupal_commons.profile
@@ -129,6 +129,14 @@ function drupal_commons_profile_tasks(&$task, $url) {
     
     // Feature installation operations
     $features = variable_get('commons_selected_features', array());
+    // The Acquia Network feature module is deprecated
+    // per http://drupal.org/node/1408284.
+    if (in_array('acquia_network_subscription', $features)) {
+      unset($features['feature-acquia_network_subscription']);
+      drupal_install_modules(array('acquia_agent', 'acquia_spi'));
+    }
+    
+
     foreach ($features as $feature) {
       $operations[] = array('features_install_modules', array(array($feature)));
     }
@@ -194,7 +202,6 @@ function drupal_commons_config_taxonomy() {
     'relations' => '1',
     'tags' => '1',
     'module' => 'taxonomy',
-    'help' => st('Press enter or click !plus between tags.', array('!plus' => '\'+\'')),
   );
   taxonomy_save_vocabulary($vocab); 
   
@@ -495,10 +502,6 @@ function drupal_commons_cleanup() {
   
   // Rebuild node types
   node_types_rebuild();
-
-  // Rebuild Activity Log templates
-  module_load_include('module', 'activity_log');
-  _activity_log_rebuild_templates();
   
   // Clear drupal message queue for non-warning/errors
   drupal_get_messages('status', TRUE);
@@ -528,11 +531,12 @@ function drupal_commons_cleanup() {
     'commons_home' => array('page_manager_pages'),
     'commons_reputation' => array('menu_links'),
     'commons_admin' => array('user_permission'),
-    'acquia_network_subscription' => array('user_permission')
+    'commons_answers' => array('user_permission'),
   );
   
   // Make sure we only try to revert features we've enabled
   $enabled = variable_get('commons_selected_features', array('commons_core'));
+  
   foreach ($revert as $feature => $value) {
     if (!in_array($feature, $enabled)) {
       unset($revert[$feature]);
@@ -545,7 +549,8 @@ function drupal_commons_cleanup() {
   
   // Create a test group which contains a node
   drupal_commons_create_group();
-  
+  // Rebuild Activity Log templates.
+  activity_log_rebuild_everything();
   // Remove the feature choices
   variable_del('commons_selected_features');
   
diff --git a/includes/form.inc b/includes/form.inc
index 72cd50c..931e7c4 100644
--- a/includes/form.inc
+++ b/includes/form.inc
@@ -70,6 +70,12 @@ function drupal_commons_features_form(&$form_state, $url) {
     '#default_value' => 1,
     '#description' => st('Used to create threaded topical discussions within a group.'),
   );
+  $form['content']['feature-commons_answers'] = array(
+    '#type' => 'checkbox',
+    '#title' => st('Answers'),
+    '#default_value' => 1,
+    '#description' => t('Allows users to submit questions and answers, and vote for the best answer.'),
+  );
   $form['content']['feature-commons_document'] = array(
     '#type' => 'checkbox',
     '#title' => st('Documents'),
@@ -159,8 +165,8 @@ function drupal_commons_features_form(&$form_state, $url) {
   $form['acquia']['feature-acquia_network_subscription'] = array(
     '#type' => 'checkbox',
     '#title' => st('Acquia Network'),
-    '#default_value' => 0,
-    '#description' => st('Select this either if you wish to try a free trial of the Acquia Network or want to enter the keys for your existing Acquia Network subscription.'),
+    '#default_value' => 1,
+    '#description' => st('Leave this enabled to use the Acquia Network with your existing subscription or with a free 30 day trial.'),
   );
   
   // Redirect URL to remain inside the installation after submission
diff --git a/modules/features/commons_answers/commons_answers.features.inc b/modules/features/commons_answers/commons_answers.features.inc
new file mode 100644
index 0000000..4ba5bdb
--- /dev/null
+++ b/modules/features/commons_answers/commons_answers.features.inc
@@ -0,0 +1,20 @@
+<?php
+
+/**
+ * Implementation of hook_ctools_plugin_api().
+ */
+function commons_answers_ctools_plugin_api() {
+  list($module, $api) = func_get_args();
+  if ($module == "strongarm" && $api == "strongarm") {
+    return array("version" => 1);
+  }
+}
+
+/**
+ * Implementation of hook_views_api().
+ */
+function commons_answers_views_api() {
+  return array(
+    'api' => '2',
+  );
+}
diff --git a/modules/features/commons_answers/commons_answers.features.menu_links.inc b/modules/features/commons_answers/commons_answers.features.menu_links.inc
new file mode 100644
index 0000000..f458cb5
--- /dev/null
+++ b/modules/features/commons_answers/commons_answers.features.menu_links.inc
@@ -0,0 +1,34 @@
+<?php
+
+/**
+ * Implementation of hook_menu_default_menu_links().
+ */
+function commons_answers_menu_default_menu_links() {
+  $menu_links = array();
+
+  // Exported menu link: primary-links:questions/all
+  $menu_links['primary-links:questions/all'] = array(
+    'menu_name' => 'primary-links',
+    'link_path' => 'questions/all',
+    'router_path' => 'questions/all',
+    'link_title' => 'Q & A',
+    'options' => array(
+      'attributes' => array(
+        'title' => '',
+      ),
+    ),
+    'module' => 'menu',
+    'hidden' => '0',
+    'external' => '0',
+    'has_children' => '0',
+    'expanded' => '0',
+    'weight' => '0',
+    'parent_path' => 'community',
+  );
+  // Translatables
+  // Included for use with string extractors like potx.
+  t('Q & A');
+
+
+  return $menu_links;
+}
diff --git a/modules/features/commons_answers/commons_answers.features.user_permission.inc b/modules/features/commons_answers/commons_answers.features.user_permission.inc
new file mode 100644
index 0000000..6749f9f
--- /dev/null
+++ b/modules/features/commons_answers/commons_answers.features.user_permission.inc
@@ -0,0 +1,149 @@
+<?php
+
+/**
+ * Implementation of hook_user_default_permissions().
+ */
+function commons_answers_user_default_permissions() {
+  $permissions = array();
+
+  // Exported permission: access vote up/down statistics
+  $permissions['access vote up/down statistics'] = array(
+    'name' => 'access vote up/down statistics',
+    'roles' => array(
+      '0' => 'community manager',
+      '1' => 'content manager',
+      '2' => 'site admin',
+    ),
+  );
+
+  // Exported permission: administer vote up/down
+  $permissions['administer vote up/down'] = array(
+    'name' => 'administer vote up/down',
+    'roles' => array(),
+  );
+
+  // Exported permission: administer vote up/down on nodes
+  $permissions['administer vote up/down on nodes'] = array(
+    'name' => 'administer vote up/down on nodes',
+    'roles' => array(
+      '0' => 'community manager',
+      '1' => 'content manager',
+      '2' => 'site admin',
+    ),
+  );
+
+  // Exported permission: create answer content
+  $permissions['create answer content'] = array(
+    'name' => 'create answer content',
+    'roles' => array(
+      '0' => 'authenticated user',
+    ),
+  );
+
+  // Exported permission: create question content
+  $permissions['create question content'] = array(
+    'name' => 'create question content',
+    'roles' => array(
+      '0' => 'authenticated user',
+    ),
+  );
+
+  // Exported permission: delete any answer content
+  $permissions['delete any answer content'] = array(
+    'name' => 'delete any answer content',
+    'roles' => array(
+      '0' => 'content manager',
+    ),
+  );
+
+  // Exported permission: delete any question content
+  $permissions['delete any question content'] = array(
+    'name' => 'delete any question content',
+    'roles' => array(
+      '0' => 'content manager',
+    ),
+  );
+
+  // Exported permission: edit any answer content
+  $permissions['edit any answer content'] = array(
+    'name' => 'edit any answer content',
+    'roles' => array(
+      '0' => 'community manager',
+      '1' => 'content manager',
+    ),
+  );
+
+  // Exported permission: edit any question content
+  $permissions['edit any question content'] = array(
+    'name' => 'edit any question content',
+    'roles' => array(
+      '0' => 'community manager',
+      '1' => 'content manager',
+    ),
+  );
+
+  // Exported permission: reset vote up/down votes
+  $permissions['reset vote up/down votes'] = array(
+    'name' => 'reset vote up/down votes',
+    'roles' => array(
+      '0' => 'authenticated user',
+    ),
+  );
+
+  // Exported permission: see vote up/down node stats
+  $permissions['see vote up/down node stats'] = array(
+    'name' => 'see vote up/down node stats',
+    'roles' => array(
+      '0' => 'anonymous user',
+      '1' => 'authenticated user',
+      '2' => 'community manager',
+      '3' => 'content manager',
+      '4' => 'site admin',
+    ),
+  );
+
+  // Exported permission: use vote up/down
+  $permissions['use vote up/down'] = array(
+    'name' => 'use vote up/down',
+    'roles' => array(
+      '0' => 'authenticated user',
+    ),
+  );
+
+  // Exported permission: use vote up/down on nodes
+  $permissions['use vote up/down on nodes'] = array(
+    'name' => 'use vote up/down on nodes',
+    'roles' => array(
+      '0' => 'authenticated user',
+    ),
+  );
+
+  // Exported permission: view field_answer_count
+  $permissions['view field_answer_count'] = array(
+    'name' => 'view field_answer_count',
+    'roles' => array(
+      '0' => 'anonymous user',
+      '1' => 'authenticated user',
+    ),
+  );
+
+  // Exported permission: view field_answer_question
+  $permissions['view field_answer_question'] = array(
+    'name' => 'view field_answer_question',
+    'roles' => array(
+      '0' => 'anonymous user',
+      '1' => 'authenticated user',
+    ),
+  );
+
+  // Exported permission: view vote up/down count on nodes
+  $permissions['view vote up/down count on nodes'] = array(
+    'name' => 'view vote up/down count on nodes',
+    'roles' => array(
+      '0' => 'anonymous user',
+      '1' => 'authenticated user',
+    ),
+  );
+
+  return $permissions;
+}
diff --git a/modules/features/commons_answers/commons_answers.info b/modules/features/commons_answers/commons_answers.info
new file mode 100644
index 0000000..9d9625c
--- /dev/null
+++ b/modules/features/commons_answers/commons_answers.info
@@ -0,0 +1,41 @@
+name = "Commons Answers"
+description = "Find the best answer to each question"
+core = "6.x"
+package = "Commons"
+dependencies[] = "answers"
+dependencies[] = "content"
+dependencies[] = "content_permissions"
+dependencies[] = "features"
+dependencies[] = "menu"
+dependencies[] = "og_views"
+dependencies[] = "strongarm"
+dependencies[] = "tidy_node_links"
+dependencies[] = "views"
+dependencies[] = "views_attach"
+dependencies[] = "vud_node"
+features[ctools][] = "strongarm:strongarm:1"
+features[menu_links][] = "primary-links:questions/all"
+features[user_permission][] = "access vote up/down statistics"
+features[user_permission][] = "administer vote up/down"
+features[user_permission][] = "administer vote up/down on nodes"
+features[user_permission][] = "create answer content"
+features[user_permission][] = "create question content"
+features[user_permission][] = "delete any answer content"
+features[user_permission][] = "delete any question content"
+features[user_permission][] = "edit any answer content"
+features[user_permission][] = "edit any question content"
+features[user_permission][] = "reset vote up/down votes"
+features[user_permission][] = "see vote up/down node stats"
+features[user_permission][] = "use vote up/down"
+features[user_permission][] = "use vote up/down on nodes"
+features[user_permission][] = "view field_answer_count"
+features[user_permission][] = "view field_answer_question"
+features[user_permission][] = "view vote up/down count on nodes"
+features[variable][] = "og_content_type_usage_answer"
+features[variable][] = "og_content_type_usage_question"
+features[variable][] = "og_max_groups_answer"
+features[variable][] = "og_max_groups_question"
+features[variable][] = "pathauto_node_answer_pattern"
+features[variable][] = "pathauto_node_question_pattern"
+features[views][] = "group_tab_questions"
+features[views_api][] = "api:2"
diff --git a/modules/features/commons_answers/commons_answers.module b/modules/features/commons_answers/commons_answers.module
new file mode 100644
index 0000000..dd7de99
--- /dev/null
+++ b/modules/features/commons_answers/commons_answers.module
@@ -0,0 +1,304 @@
+<?php
+
+include_once('commons_answers.features.inc');
+
+/**
+ * Implementation of hook_nodeapi().
+ */
+function commons_answers_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
+  if ($node->type == 'question' && ($op == 'update ' || $op == 'presave')) {
+    commons_answers_update_question_answers_groups($node);
+  } 
+}
+
+function commons_answers_ctools_plugin_directory($module, $plugin) {
+  if ($module == 'vud') {
+    return $plugin;
+  }
+}
+
+
+/**
+** Implementation of hook_strongarm_alter().
+**/
+function commons_answers_strongarm_alter(&$items) {
+  // Enable comments on Answer nodes.
+  if (isset($items['comment_answer'])) {
+    $items['comment_answer']->value = '2';
+  }
+  
+}
+
+
+/**
+ * Implementation of hook_vud_node_widget_alter().
+ */
+function commons_answers_vud_node_widget_alter(&$widget, $node) {
+  // Use the thumbs widget for the Anwser content type
+  // and alter the widget to use Commons' green/red up/down arrows.
+  if ($node->type == 'answer') {
+    $widget = 'thumbs';
+    drupal_add_css(drupal_get_path('module', 'commons_answers') . '/css/commons_answers.css', 'theme');
+  }
+}
+
+/**
+* Implementation of hook_form_alter().
+**/
+function commons_answers_form_alter(&$form, &$form_state, $form_id) {
+  if ($form_id == 'question_node_form' && isset($form['#node'])) {
+    $form['body_field']['body']['#title'] = t('Additional information');
+  }
+}
+/**
+ * Implementation of hook_form_FORM_ID_alter().
+ */
+function commons_answers_form_commons_core_group_create_content_block_form_alter(&$form, &$form_state) {
+  // We expose this through the contextual "Add an answer" forms.
+  unset($form['node_type']['#options']['answer']);
+}
+
+/**
+ * Implementation of hook_views_default_views_alter().
+ */
+function commons_answers_views_default_views_alter(&$views) {
+  // Alter the default questions_answers view to always include the footer
+  // that contains our "Add an answer" form.
+  if (!empty($views['question_answers'])) {
+    $views['question_answers']->display['default']->display_options['footer_format'] = '1';
+    $views['question_answers']->display['default']->display_options['footer_empty'] = 1;
+    $views['question_answers']->display['default']->display_options['empty'] = ' ';
+    $views['question_answers']->display['default']->display_options['empty_format'] = '1';
+    $views['question_answers']->display['node_content_1']->display_options['show_empty'] = 1;
+  }
+  // Display a '0' when no questions have been answered and use the
+  // 'small' date format.
+  foreach (array('all_questions', 'user_questions') as $view_id) {
+    if (!empty($views[$view_id])) {
+      $views[$view_id]->display['default']->display_options['fields']['created']['date_format'] = 'small';
+      $views[$view_id]->display['default']->display_options['fields']['field_answer_count_value']['empty'] = '0';
+      $views[$view_id]->display['default']->display_options['fields']['field_answer_count_value']['empty_zero'] = 0;
+      $views[$view_id]->display['default']->display_options['fields']['field_answer_count_value']['hide_alter_empty'] = 0;
+    }
+  }
+}
+
+/**
+ * Implementation of hook_views_pre_render().
+ */
+function commons_answers_views_pre_render(&$view) {
+  if (user_access('create answer content') && $view->name == 'question_answers') {
+    $question_nid = $view->args[0];
+    // Generate a simplified Answer submission form and prepopulate it
+    // with the question NID.
+    $view->attachment_after = drupal_get_form('commons_answers_add_answer_form', $question_nid);
+  }
+   
+   if (user_access('create question content') && in_array($view->name, array('all_questions', 'user_questions', 'group_tab_questions'))) {
+    if ($view->name == 'group_tab_questions') {
+      // @TODO: This should support questions that are members of multiple groups.
+      $group_nid = $view->args[0];
+    }
+    $view->attachment_after = drupal_get_form('commons_answers_add_question_form', $group_nid);
+  }
+}
+
+/**
+ * Implementation of hook_og_features_registry()
+ */
+function commons_answers_og_features_registry() {
+  $registry = array();
+  
+  // Feature: commons_answers
+  $feature = new stdClass;
+  $feature->id = 'commons_answers';
+  $feature->name = t('Commons Answers');
+  $feature->description = t('Enable your group members to create Questions and answers');
+  $feature->components = array(
+    'node' => array(
+      'question',
+    ),
+  );
+  $registry[$feature->id] = $feature;
+  
+  return $registry;
+}
+
+/**
+ * Implementation of hook_og_create_links().
+ */
+function commons_answers_og_create_links($group) {
+  $links = array();
+  $links['create_question'] = l(t('Question'), 'node/add/question');
+  return $links;
+}
+
+/**
+ * Update group membership for answers so that they match that of the question.
+ */
+function commons_answers_update_question_answers_groups($question_node) {
+  // Use the question_answers view to find answers to this question.
+  $view = views_get_view('question_answers');
+  $view->set_display('node_content_1');      
+  $view->set_arguments(array($question_node->nid));
+  $result = $view->execute();
+  if (!empty($view->result)) {
+    foreach ($view->result as $result) {
+      $answer_node = node_load($result->nid);
+      $answer_node->og_groups = $question_node->og_groups;
+      $answer_node->og_public = $question_node->og_public;  
+      node_save($answer_node);
+    }
+  }
+}
+
+
+function commons_answers_add_question_form(&$form_state, $group_nid) {
+  $form['question'] = array(
+    '#type' => 'fieldset', 
+    '#title' => t('Ask a question'), 
+    '#collapsible' => FALSE, 
+    '#collapsed' => FALSE,
+  );
+  $form['question']['title'] = array(
+    '#type' => 'textfield',
+    '#title' => t('Question'),
+    '#required' => TRUE,
+  );
+  $form['question']['body'] = array(
+    '#type' => 'textarea',
+    '#title' => t('Additional information'),
+  );
+  $form['question']['submit'] = array(
+    '#type' => 'submit',
+    '#value' => t('Add question'),
+  );
+  $form['group_nid'] = array(
+    '#type' => 'value',
+    '#value' => $group_nid,
+  );
+  return $form;
+}
+
+function commons_answers_add_question_form_submit($form, &$form_state) {
+  global $user;
+  $account = $user;
+  $node = new stdClass();
+  if (!empty($form_state['values']['group_nid'])) {
+    $group_nid = $form_state['values']['group_nid']; 
+    $group = node_load($group_nid);
+    // Set the question to be private if the group is private.
+    // This will automatically propogate to answers submitted
+    // to this question.
+    $node->og_public = !$group->og_private;
+  }
+
+  $title = $form_state['values']['title'];
+  $question = $form_state['values']['body'];
+  
+
+  $node->title = $title;
+  $node->body = $question;
+  $node->type = 'question';
+  $node->created = $SERVER['REQUEST_TIME'];
+  $node->promote = 0;
+  $node->sticky = 0;
+  // Filtered HTML should be format 1 in Commons.
+  $formats = filter_formats();
+  if (!empty($formats)) {
+    $format = array_shift($formats);
+    $node->format = $format->format;
+  }   
+  $node->status = 1;
+  $node->uid = $account->uid;
+  // By default, the questin 
+  $node->og_groups = array($group_nid);
+  node_save($node);
+  drupal_set_message(t('The question has been created.'));
+}
+
+
+
+function commons_answers_add_answer_form(&$form_state, $question_nid) {
+  $form['answer'] = array(
+    '#type' => 'textarea',
+    '#title' => t('Add answer'),
+    '#required' => TRUE,
+  );
+  $form['submit'] = array(
+    '#type' => 'submit',
+    '#value' => t('Add answer'),
+  );
+  $form['question_nid'] = array(
+    '#type' => 'value',
+    '#value' => $question_nid,
+  );
+  return $form;
+}
+
+function commons_answers_add_answer_form_submit($form, &$form_state) { 
+  global $user;
+  $account = $user;
+  $question_nid = $form_state['values']['question_nid']; 
+  $question_node = node_load($question_nid);
+  $answer = $form_state['values']['answer'];
+  $node = new stdClass();
+  // Provide a human-readable title for listings where the title
+  // may be displayed, such as admin/content/node or a listing of answers.
+  $node->title = substr($answer, 0, 30);
+  if (strlen($answer) > 30) {
+    $node->title .= '...';
+  }
+  $node->body = $answer;
+  $node->type = 'answer';
+  $node->created = $_SERVER['REQUEST_TIME'];
+  $node->promote = 0;
+  $node->sticky = 0;
+  // Filtered HTML should be format 1 in Commons.
+  $formats = filter_formats();
+  if (!empty($formats)) {
+    $format = array_shift($formats);
+    $node->format = $format->format;
+  }   
+  $node->status = 1;
+  $node->uid= $account->uid;
+  $node->field_answer_question[0]['nid'] = $question_nid;
+  if (!empty($question_node->og_groups)) {
+    $node->og_groups = $question_node->og_groups;
+    $node->og_public = $question_node->og_public;  
+  }
+  node_save($node);
+
+  if (!empty($node->nid)) {
+    $form_state['redirect'] = array('node/' . $question_nid, '', 'node-' . $node->nid);  
+  }
+}
+
+/**
+* Implementation of hook_tidy_node_links_toolkit_alter().
+*/
+function commons_answers_tidy_node_links_toolkit_alter(&$toolkit, $node) {
+  if ($node->type == 'question') {
+    drupal_add_css($module_path . '/css/tidy_node_links_answers.css');
+    $toolkit->set_mapping_class('CommonsAnswersTidyNodeLinksImpl');
+  }
+}
+
+/**
+ * Custom tidy node links mapping for questions
+ */
+class CommonsAnswersTidyNodeLinksImpl extends TidyNodeLinksMappingWithThemeFunctions {
+  public function get_mapping() {
+    $map = parent::get_mapping();
+    $map['statistics_counter'] = array(
+      'css_class' => 'statistics_counter',
+      'display_class' => 'TidyNodeLinksElementWithThemeFunctions',
+    );
+    //Remove the "Post an answer" link in favor of the simplified answer submission form.
+    $map['answer_field_answer_question']=array(
+	'visible' => TRUE,
+      'display_class' => 'TidyNodeLinksElementWithThemeFunctions',
+    );
+    return $map;
+  }
+}
diff --git a/modules/features/commons_answers/commons_answers.strongarm.inc b/modules/features/commons_answers/commons_answers.strongarm.inc
new file mode 100644
index 0000000..3eb2675
--- /dev/null
+++ b/modules/features/commons_answers/commons_answers.strongarm.inc
@@ -0,0 +1,52 @@
+<?php
+
+/**
+ * Implementation of hook_strongarm().
+ */
+function commons_answers_strongarm() {
+  $export = array();
+
+  $strongarm = new stdClass;
+  $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
+  $strongarm->api_version = 1;
+  $strongarm->name = 'og_content_type_usage_answer';
+  $strongarm->value = 'group_post_standard';
+  $export['og_content_type_usage_answer'] = $strongarm;
+
+  $strongarm = new stdClass;
+  $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
+  $strongarm->api_version = 1;
+  $strongarm->name = 'og_content_type_usage_question';
+  $strongarm->value = 'group_post_standard';
+  $export['og_content_type_usage_question'] = $strongarm;
+
+  $strongarm = new stdClass;
+  $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
+  $strongarm->api_version = 1;
+  $strongarm->name = 'og_max_groups_answer';
+  $strongarm->value = '';
+  $export['og_max_groups_answer'] = $strongarm;
+
+  $strongarm = new stdClass;
+  $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
+  $strongarm->api_version = 1;
+  $strongarm->name = 'og_max_groups_question';
+  $strongarm->value = '';
+  $export['og_max_groups_question'] = $strongarm;
+
+  $strongarm = new stdClass;
+  $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
+  $strongarm->api_version = 1;
+  $strongarm->name = 'pathauto_node_answer_pattern';
+  $strongarm->value = 'answer/[title-raw]';
+  $export['pathauto_node_answer_pattern'] = $strongarm;
+
+  $strongarm = new stdClass;
+  $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
+  $strongarm->api_version = 1;
+  $strongarm->name = 'pathauto_node_question_pattern';
+  $strongarm->value = 'question/[title-raw]';
+  $export['pathauto_node_question_pattern'] = $strongarm;
+
+  return $export;
+}
diff --git a/modules/features/commons_answers/commons_answers.views_default.inc b/modules/features/commons_answers/commons_answers.views_default.inc
new file mode 100644
index 0000000..675f646
--- /dev/null
+++ b/modules/features/commons_answers/commons_answers.views_default.inc
@@ -0,0 +1,345 @@
+<?php
+
+/**
+ * Implementation of hook_views_default_views().
+ */
+function commons_answers_views_default_views() {
+  $views = array();
+
+  // Exported view: group_tab_questions
+  $view = new view;
+  $view->name = 'group_tab_questions';
+  $view->description = 'Show a tab for group questions';
+  $view->tag = '';
+  $view->base_table = 'node';
+  $view->core = 6;
+  $view->api_version = '2';
+  $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
+  $handler = $view->new_display('default', 'Defaults', 'default');
+  $handler->override_option('relationships', array(
+    'group_nid' => array(
+      'label' => 'Group node (post)',
+      'required' => 0,
+      'id' => 'group_nid',
+      'table' => 'og_ancestry',
+      'field' => 'group_nid',
+      'override' => array(
+        'button' => 'Override',
+      ),
+      'relationship' => 'none',
+    ),
+  ));
+  $handler->override_option('fields', array(
+    'title' => array(
+      'label' => 'Question',
+      'alter' => array(
+        'alter_text' => 0,
+        'text' => '',
+        'make_link' => 0,
+        'path' => '',
+        'absolute' => 0,
+        'link_class' => '',
+        'alt' => '',
+        'rel' => '',
+        'prefix' => '',
+        'suffix' => '',
+        'target' => '',
+        'help' => '',
+        'trim' => 0,
+        'max_length' => '',
+        'word_boundary' => 1,
+        'ellipsis' => 1,
+        'html' => 0,
+        'strip_tags' => 0,
+      ),
+      'empty' => '',
+      'hide_empty' => 0,
+      'empty_zero' => 0,
+      'hide_alter_empty' => 1,
+      'link_to_node' => 1,
+      'exclude' => 0,
+      'id' => 'title',
+      'table' => 'node',
+      'field' => 'title',
+      'override' => array(
+        'button' => 'Override',
+      ),
+      'relationship' => 'none',
+    ),
+    'created' => array(
+      'label' => 'Post date',
+      'alter' => array(
+        'alter_text' => 0,
+        'text' => '',
+        'make_link' => 0,
+        'path' => '',
+        'absolute' => 0,
+        'link_class' => '',
+        'alt' => '',
+        'rel' => '',
+        'prefix' => '',
+        'suffix' => '',
+        'target' => '',
+        'help' => '',
+        'trim' => 0,
+        'max_length' => '',
+        'word_boundary' => 1,
+        'ellipsis' => 1,
+        'html' => 0,
+        'strip_tags' => 1,
+      ),
+      'empty' => '',
+      'hide_empty' => 0,
+      'empty_zero' => 0,
+      'hide_alter_empty' => 1,
+      'date_format' => 'small',
+      'custom_date_format' => '',
+      'exclude' => 0,
+      'id' => 'created',
+      'table' => 'node',
+      'field' => 'created',
+      'override' => array(
+        'button' => 'Override',
+      ),
+      'relationship' => 'none',
+    ),
+    'field_answer_count_value' => array(
+      'label' => 'Answers',
+      'alter' => array(
+        'alter_text' => 0,
+        'text' => '',
+        'make_link' => 0,
+        'path' => '',
+        'absolute' => 0,
+        'link_class' => '',
+        'alt' => '',
+        'rel' => '',
+        'prefix' => '',
+        'suffix' => '',
+        'target' => '',
+        'help' => '',
+        'trim' => 0,
+        'max_length' => '',
+        'word_boundary' => 1,
+        'ellipsis' => 1,
+        'html' => 0,
+        'strip_tags' => 0,
+      ),
+      'empty' => '0',
+      'hide_empty' => 0,
+      'empty_zero' => 0,
+      'hide_alter_empty' => 0,
+      'link_to_node' => 0,
+      'label_type' => 'custom',
+      'format' => 'default',
+      'multiple' => array(
+        'group' => TRUE,
+        'multiple_number' => '',
+        'multiple_from' => '',
+        'multiple_reversed' => FALSE,
+      ),
+      'exclude' => 0,
+      'id' => 'field_answer_count_value',
+      'table' => 'node_data_field_answer_count',
+      'field' => 'field_answer_count_value',
+      'relationship' => 'none',
+    ),
+  ));
+  $handler->override_option('sorts', array(
+    'created_1' => array(
+      'id' => 'created_1',
+      'table' => 'node',
+      'field' => 'created',
+    ),
+  ));
+  $handler->override_option('arguments', array(
+    'group_nid' => array(
+      'default_action' => 'not found',
+      'style_plugin' => 'default_summary',
+      'style_options' => array(),
+      'wildcard' => 'all',
+      'wildcard_substitution' => 'All',
+      'title' => '%1 - Q & A',
+      'breadcrumb' => '',
+      'default_argument_type' => 'fixed',
+      'default_argument' => '',
+      'validate_type' => 'og_group_types',
+      'validate_fail' => 'not found',
+      'break_phrase' => 0,
+      'not' => 0,
+      'id' => 'group_nid',
+      'table' => 'og_ancestry',
+      'field' => 'group_nid',
+      'validate_user_argument_type' => 'uid',
+      'validate_user_roles' => array(
+        2 => 0,
+        3 => 0,
+        4 => 0,
+        5 => 0,
+      ),
+      'override' => array(
+        'button' => 'Override',
+      ),
+      'relationship' => 'none',
+      'default_options_div_prefix' => '',
+      'default_argument_user' => 0,
+      'default_argument_fixed' => '',
+      'default_argument_php' => '',
+      'validate_argument_node_type' => array(
+        'blog' => 0,
+        'poll' => 0,
+        'discussion' => 0,
+        'document' => 0,
+        'event' => 0,
+        'wiki' => 0,
+        'group' => 0,
+        'notice' => 0,
+        'page' => 0,
+      ),
+      'validate_argument_node_access' => 0,
+      'validate_argument_nid_type' => 'nid',
+      'validate_argument_vocabulary' => array(
+        2 => 0,
+        3 => 0,
+      ),
+      'validate_argument_type' => 'tid',
+      'validate_argument_transform' => 0,
+      'validate_user_restrict_roles' => 0,
+      'validate_argument_node_flag_name' => '*relationship*',
+      'validate_argument_node_flag_test' => 'flaggable',
+      'validate_argument_node_flag_id_type' => 'id',
+      'validate_argument_user_flag_name' => '*relationship*',
+      'validate_argument_user_flag_test' => 'flaggable',
+      'validate_argument_user_flag_id_type' => 'id',
+      'validate_argument_is_member' => 'OG_VIEWS_DO_NOT_VALIDATE_MEMBERSHIP',
+      'validate_argument_group_node_type' => array(
+        'group' => 0,
+      ),
+      'validate_argument_php' => '',
+    ),
+  ));
+  $handler->override_option('filters', array(
+    'picg' => array(
+      'operator' => '=',
+      'value' => '',
+      'group' => '0',
+      'exposed' => FALSE,
+      'expose' => array(
+        'operator' => FALSE,
+        'label' => '',
+      ),
+      'id' => 'picg',
+      'table' => 'og_ancestry',
+      'field' => 'picg',
+      'relationship' => 'none',
+    ),
+    'type' => array(
+      'operator' => 'in',
+      'value' => array(
+        'question' => 'question',
+      ),
+      'group' => '0',
+      'exposed' => FALSE,
+      'expose' => array(
+        'operator' => FALSE,
+        'label' => '',
+      ),
+      'id' => 'type',
+      'table' => 'node',
+      'field' => 'type',
+      'override' => array(
+        'button' => 'Override',
+      ),
+      'relationship' => 'none',
+    ),
+    'status' => array(
+      'operator' => '=',
+      'value' => '1',
+      'group' => '0',
+      'exposed' => FALSE,
+      'expose' => array(
+        'operator' => FALSE,
+        'label' => '',
+      ),
+      'id' => 'status',
+      'table' => 'node',
+      'field' => 'status',
+      'override' => array(
+        'button' => 'Override',
+      ),
+      'relationship' => 'none',
+    ),
+  ));
+  $handler->override_option('access', array(
+    'type' => 'perm',
+    'perm' => 'access content',
+  ));
+  $handler->override_option('cache', array(
+    'type' => 'none',
+  ));
+  $handler->override_option('title', 'Group Q & A');
+  $handler->override_option('header_format', '1');
+  $handler->override_option('header_empty', 0);
+  $handler->override_option('empty', 'No questions have been added to this group yet.');
+  $handler->override_option('empty_format', '1');
+  $handler->override_option('use_pager', '1');
+  $handler->override_option('distinct', 1);
+  $handler->override_option('style_plugin', 'table');
+  $handler->override_option('style_options', array(
+    'grouping' => '',
+    'override' => 1,
+    'sticky' => 0,
+    'order' => 'asc',
+    'summary' => '',
+    'columns' => array(
+      'title' => 'title',
+      'created' => 'created',
+      'field_answer_count_value' => 'field_answer_count_value',
+    ),
+    'info' => array(
+      'title' => array(
+        'sortable' => 0,
+        'separator' => '',
+      ),
+      'created' => array(
+        'sortable' => 0,
+        'separator' => '',
+      ),
+      'field_answer_count_value' => array(
+        'sortable' => 0,
+        'separator' => '',
+      ),
+    ),
+    'default' => '-1',
+  ));
+  $handler->override_option('row_options', array(
+    'inline' => array(
+      'picture' => 'picture',
+      'created' => 'created',
+      'name' => 'name',
+      'timestamp' => 'timestamp',
+    ),
+    'separator' => '',
+    'hide_empty' => 0,
+  ));
+  $handler = $view->new_display('page', 'Page', 'page_1');
+  $handler->override_option('path', 'node/%/questions');
+  $handler->override_option('menu', array(
+    'type' => 'tab',
+    'title' => 'Q & A',
+    'description' => 'View the group questions',
+    'weight' => '4',
+    'name' => 'navigation',
+  ));
+  $handler->override_option('tab_options', array(
+    'type' => 'none',
+    'title' => '',
+    'description' => '',
+    'weight' => 0,
+    'name' => 'navigation',
+  ));
+
+  $views[$view->name] = $view;
+
+  return $views;
+}
diff --git a/modules/features/commons_answers/css/commons_answers.css b/modules/features/commons_answers/css/commons_answers.css
new file mode 100644
index 0000000..7e05576
--- /dev/null
+++ b/modules/features/commons_answers/css/commons_answers.css
@@ -0,0 +1,8 @@
+.vud-widget-thumbs .up-inactive,
+.vud-widget-thumbs .down-inactive,
+.vud-widget-thumbs .up-active,
+.vud-widget-thumbs .down-active {
+  background-image: url(../thumbs-sprite.png);
+}
+
+
diff --git a/modules/features/commons_answers/css/tidy_node_links_answers.css b/modules/features/commons_answers/css/tidy_node_links_answers.css
new file mode 100644
index 0000000..fd36874
--- /dev/null
+++ b/modules/features/commons_answers/css/tidy_node_links_answers.css
@@ -0,0 +1,30 @@
+/*Node Links Style*/
+
+ .node .inner .links .statistics_counter_clear_style{
+    float: left;
+    background-color: #FFFFFF;
+    border-color: #6699CC;
+    border-style: solid;
+    border-width: 0 1px 1px 0;
+    padding: 7px 17px;
+}
+.node .inner .links .statistics_counter_clear_style a{
+    color: white;
+    font-family: "Helvetica Neue",Helvetica,Arial,Sans-serif;
+    font-size: 12px;
+}
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
diff --git a/modules/features/commons_answers/thumbs-sprite.png b/modules/features/commons_answers/thumbs-sprite.png
new file mode 100644
index 0000000..19ad0e5
Binary files /dev/null and b/modules/features/commons_answers/thumbs-sprite.png differ
diff --git a/modules/features/commons_blog/commons_blog.views_default.inc b/modules/features/commons_blog/commons_blog.views_default.inc
index 2130f3c..d321265 100644
--- a/modules/features/commons_blog/commons_blog.views_default.inc
+++ b/modules/features/commons_blog/commons_blog.views_default.inc
@@ -11,10 +11,9 @@ function commons_blog_views_default_views() {
   $view->name = 'blog_latest_comments';
   $view->description = 'The latest comments on all blog posts';
   $view->tag = '';
-  $view->view_php = '';
   $view->base_table = 'comments';
-  $view->is_cacheable = FALSE;
-  $view->api_version = 2;
+  $view->core = 0;
+  $view->api_version = '2';
   $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
   $handler = $view->new_display('default', 'Defaults', 'default');
   $handler->override_option('relationships', array(
@@ -267,6 +266,20 @@ function commons_blog_views_default_views() {
         'button' => 'Override',
       ),
     ),
+    'nid' => array(
+      'operator' => '=',
+      'value' => '',
+      'group' => '0',
+      'exposed' => FALSE,
+      'expose' => array(
+        'operator' => FALSE,
+        'label' => '',
+      ),
+      'id' => 'nid',
+      'table' => 'node_access',
+      'field' => 'nid',
+      'relationship' => 'nid',
+    ),
   ));
   $handler->override_option('access', array(
     'type' => 'perm',
@@ -306,10 +319,9 @@ function commons_blog_views_default_views() {
   $view->name = 'content_blog_page';
   $view->description = 'A global view of all site blogs';
   $view->tag = '';
-  $view->view_php = '';
   $view->base_table = 'node';
-  $view->is_cacheable = FALSE;
-  $view->api_version = 2;
+  $view->core = 0;
+  $view->api_version = '2';
   $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
   $handler = $view->new_display('default', 'Defaults', 'default');
   $handler->override_option('relationships', array(
@@ -585,8 +597,8 @@ function commons_blog_views_default_views() {
       'link_to_taxonomy' => 1,
       'limit' => 0,
       'vids' => array(
-        '2' => 0,
-        '3' => 0,
+        2 => 0,
+        3 => 0,
       ),
       'exclude' => 0,
       'id' => 'tid',
@@ -746,7 +758,7 @@ function commons_blog_views_default_views() {
       ),
       'type' => 'textfield',
       'limit' => TRUE,
-      'vid' => '2',
+      'vid' => '1',
       'id' => 'tid',
       'table' => 'term_node',
       'field' => 'tid',
@@ -916,10 +928,9 @@ function commons_blog_views_default_views() {
   $view->name = 'group_block_blog_latest';
   $view->description = 'The latest group blog posts block';
   $view->tag = '';
-  $view->view_php = '';
   $view->base_table = 'node';
-  $view->is_cacheable = FALSE;
-  $view->api_version = 2;
+  $view->core = 0;
+  $view->api_version = '2';
   $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
   $handler = $view->new_display('default', 'Defaults', 'default');
   $handler->override_option('relationships', array(
@@ -1177,10 +1188,10 @@ function commons_blog_views_default_views() {
       'field' => 'group_nid',
       'validate_user_argument_type' => 'uid',
       'validate_user_roles' => array(
-        '2' => 0,
-        '3' => 0,
-        '4' => 0,
-        '5' => 0,
+        2 => 0,
+        3 => 0,
+        4 => 0,
+        5 => 0,
       ),
       'override' => array(
         'button' => 'Override',
@@ -1204,8 +1215,8 @@ function commons_blog_views_default_views() {
       'validate_argument_node_access' => 0,
       'validate_argument_nid_type' => 'nid',
       'validate_argument_vocabulary' => array(
-        '2' => 0,
-        '3' => 0,
+        2 => 0,
+        3 => 0,
       ),
       'validate_argument_type' => 'tid',
       'validate_argument_transform' => 0,
@@ -1315,10 +1326,9 @@ function commons_blog_views_default_views() {
   $view->name = 'group_block_blog_latest_comments';
   $view->description = 'The latest comments on group blog posts';
   $view->tag = '';
-  $view->view_php = '';
   $view->base_table = 'comments';
-  $view->is_cacheable = FALSE;
-  $view->api_version = 2;
+  $view->core = 0;
+  $view->api_version = '2';
   $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
   $handler = $view->new_display('default', 'Defaults', 'default');
   $handler->override_option('relationships', array(
@@ -1508,10 +1518,10 @@ function commons_blog_views_default_views() {
       'relationship' => 'nid',
       'validate_user_argument_type' => 'uid',
       'validate_user_roles' => array(
-        '2' => 0,
-        '3' => 0,
-        '4' => 0,
-        '5' => 0,
+        2 => 0,
+        3 => 0,
+        4 => 0,
+        5 => 0,
       ),
       'override' => array(
         'button' => 'Override',
@@ -1534,8 +1544,8 @@ function commons_blog_views_default_views() {
       'validate_argument_node_access' => 0,
       'validate_argument_nid_type' => 'nid',
       'validate_argument_vocabulary' => array(
-        '2' => 0,
-        '3' => 0,
+        2 => 0,
+        3 => 0,
       ),
       'validate_argument_type' => 'tid',
       'validate_argument_transform' => 0,
@@ -1624,6 +1634,20 @@ function commons_blog_views_default_views() {
         'button' => 'Override',
       ),
     ),
+    'nid' => array(
+      'operator' => '=',
+      'value' => '',
+      'group' => '0',
+      'exposed' => FALSE,
+      'expose' => array(
+        'operator' => FALSE,
+        'label' => '',
+      ),
+      'id' => 'nid',
+      'table' => 'node_access',
+      'field' => 'nid',
+      'relationship' => 'nid',
+    ),
   ));
   $handler->override_option('access', array(
     'type' => 'perm',
@@ -1663,10 +1687,9 @@ function commons_blog_views_default_views() {
   $view->name = 'group_tab_blogs';
   $view->description = 'Show a tab for group blog posts';
   $view->tag = '';
-  $view->view_php = '';
   $view->base_table = 'node';
-  $view->is_cacheable = FALSE;
-  $view->api_version = 2;
+  $view->core = 0;
+  $view->api_version = '2';
   $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
   $handler = $view->new_display('default', 'Defaults', 'default');
   $handler->override_option('relationships', array(
@@ -1950,8 +1973,8 @@ function commons_blog_views_default_views() {
       'link_to_taxonomy' => 1,
       'limit' => 0,
       'vids' => array(
-        '2' => 0,
-        '3' => 0,
+        2 => 0,
+        3 => 0,
       ),
       'exclude' => 0,
       'id' => 'tid',
@@ -2011,10 +2034,10 @@ function commons_blog_views_default_views() {
       'field' => 'group_nid',
       'validate_user_argument_type' => 'uid',
       'validate_user_roles' => array(
-        '2' => 0,
-        '3' => 0,
-        '4' => 0,
-        '5' => 0,
+        2 => 0,
+        3 => 0,
+        4 => 0,
+        5 => 0,
       ),
       'override' => array(
         'button' => 'Override',
@@ -2038,8 +2061,8 @@ function commons_blog_views_default_views() {
       'validate_argument_node_access' => 0,
       'validate_argument_nid_type' => 'nid',
       'validate_argument_vocabulary' => array(
-        '2' => 0,
-        '3' => 0,
+        2 => 0,
+        3 => 0,
       ),
       'validate_argument_type' => 'tid',
       'validate_argument_transform' => 0,
@@ -2167,7 +2190,7 @@ function commons_blog_views_default_views() {
       ),
       'type' => 'textfield',
       'limit' => TRUE,
-      'vid' => '2',
+      'vid' => '1',
       'id' => 'tid',
       'table' => 'term_node',
       'field' => 'tid',
@@ -2211,7 +2234,7 @@ function commons_blog_views_default_views() {
   $handler = $view->new_display('page', 'Page', 'page_1');
   $handler->override_option('path', 'node/%/content/blogs');
   $handler->override_option('menu', array(
-    'type' => 'tab',
+    'type' => 'none',
     'title' => 'Blogs',
     'description' => 'View the group blog posts',
     'weight' => '4',
diff --git a/modules/features/commons_core/commons_core.admin.inc b/modules/features/commons_core/commons_core.admin.inc
index 1967a27..6729315 100644
--- a/modules/features/commons_core/commons_core.admin.inc
+++ b/modules/features/commons_core/commons_core.admin.inc
@@ -62,9 +62,9 @@ function commons_core_admin_settings() {
   
   $form['group_settings']['commons_email_selective_group'] = array(
     '#type' => 'checkbox',
-    '#title' => t('Alert users when added to a selective group'),
+    '#title' => t('Alert users when added or removed from a selective group'),
     '#default_value' => variable_get('commons_email_selective_group', 1),
-    '#description' => t('If checked, an email alert will be sent to users that are added to groups that are marked as either invite-only or closed.'),
+    '#description' => t('If checked, an email alert will be sent to users that are added or removed from groups that are marked as either invite-only or closed.'),
   );
   
   $form['group_settings']['commons_group_admin_edit_comments'] = array(
diff --git a/modules/features/commons_core/commons_core.blocks.inc b/modules/features/commons_core/commons_core.blocks.inc
index 21438bf..c861bf8 100644
--- a/modules/features/commons_core/commons_core.blocks.inc
+++ b/modules/features/commons_core/commons_core.blocks.inc
@@ -66,9 +66,20 @@ function _commons_core_block_list() {
     'info' => t('Create a notice'),
     'cache' => BLOCK_CACHE_GLOBAL,
   );
+  $blocks['your_content'] = array(
+    'info' => t('Your content'),
+    'cache' => BLOCK_CACHE_GLOBAL,
+  );
   return $blocks;
 }
 
+function _commons_core_your_content_block_view() {
+  $block = array();
+  $block['subject'] = t('Your content');
+  $block['content'] = l(t('Your posts and comments'), 'mycontent/mine', array('attributes' => array('class' => 'my-content')));
+  $block['content'] .= l(t('Your bookmarks'), 'bookmarks', array('attributes' => array('class' => 'my-bookmarks')));
+  return $block;
+}
 /**
  * Display a block with global user statistics
  */
@@ -193,8 +204,8 @@ function _commons_core_group_menu_block_view() {
     $details = og_block_details();
     if (isset($details['content'])) {
       return array(
-        'subject' => l(t('Group menu'), "node/{$group->nid}", array('attributes' => array('title' => t('Return to !group', array('!group' => $group->title))))),
-        'content' => $details['content']
+        'subject' => t('Group menu'),
+        'content' => $details['content'],
       );
     }
   }
diff --git a/modules/features/commons_core/commons_core.context.inc b/modules/features/commons_core/commons_core.context.inc
index 887ae05..bd0e4f9 100644
--- a/modules/features/commons_core/commons_core.context.inc
+++ b/modules/features/commons_core/commons_core.context.inc
@@ -5,6 +5,7 @@
  */
 function commons_core_context_default_contexts() {
   $export = array();
+
   $context = new stdClass;
   $context->disabled = FALSE; /* Edit this to true to make a default context disabled initially */
   $context->api_version = 3;
@@ -37,8 +38,8 @@ function commons_core_context_default_contexts() {
   // Included for use with string extractors like potx.
   t('Bookmarks');
   t('The bookmarks page');
-
   $export['bookmarks'] = $context;
+
   $context = new stdClass;
   $context->disabled = FALSE; /* Edit this to true to make a default context disabled initially */
   $context->api_version = 3;
@@ -82,8 +83,8 @@ function commons_core_context_default_contexts() {
   // Included for use with string extractors like potx.
   t('Show on every page');
   t('Sitewide');
-
   $export['global'] = $context;
+
   $context = new stdClass;
   $context->disabled = FALSE; /* Edit this to true to make a default context disabled initially */
   $context->api_version = 3;
@@ -107,7 +108,31 @@ function commons_core_context_default_contexts() {
           'module' => 'commons_core',
           'delta' => 'group_create_content',
           'region' => 'sidebar_last',
-          'weight' => -1,
+          'weight' => -5,
+        ),
+        'commons_core-group_menu' => array(
+          'module' => 'commons_core',
+          'delta' => 'group_menu',
+          'region' => 'sidebar_last',
+          'weight' => 1,
+        ),
+        'views-24dcb59a56254e5a470ee2f23590eed2' => array(
+          'module' => 'views',
+          'delta' => '24dcb59a56254e5a470ee2f23590eed2',
+          'region' => 'sidebar_last',
+          'weight' => 2,
+        ),
+        'views-bookmarks_your_group-block_1' => array(
+          'module' => 'views',
+          'delta' => 'bookmarks_your_group-block_1',
+          'region' => 'sidebar_last',
+          'weight' => 3,
+        ),
+        'commons_core-group_members' => array(
+          'module' => 'commons_core',
+          'delta' => 'group_members',
+          'region' => 'sidebar_last',
+          'weight' => 4,
         ),
       ),
     ),
@@ -118,8 +143,8 @@ function commons_core_context_default_contexts() {
   // Included for use with string extractors like potx.
   t('Group');
   t('The context of a group');
-
   $export['group-context'] = $context;
+
   $context = new stdClass;
   $context->disabled = FALSE; /* Edit this to true to make a default context disabled initially */
   $context->api_version = 3;
@@ -139,32 +164,21 @@ function commons_core_context_default_contexts() {
   $context->reactions = array(
     'block' => array(
       'blocks' => array(
-        'commons_core-group_menu' => array(
-          'module' => 'commons_core',
-          'delta' => 'group_menu',
-          'region' => 'sidebar_last',
-          'weight' => 0,
-        ),
-        'commons_core-group_members' => array(
-          'module' => 'commons_core',
-          'delta' => 'group_members',
-          'region' => 'sidebar_last',
-          'weight' => 1,
-        ),
-        'views-24dcb59a56254e5a470ee2f23590eed2' => array(
+        'views-group_links-block_1' => array(
           'module' => 'views',
-          'delta' => '24dcb59a56254e5a470ee2f23590eed2',
+          'delta' => 'group_links-block_1',
           'region' => 'sidebar_last',
-          'weight' => 3,
+          'weight' => 0,
         ),
-        'views-group_node-block_1' => array(
+        'views-group_tab_content-block_1' => array(
           'module' => 'views',
-          'delta' => 'group_node-block_1',
+          'delta' => 'group_tab_content-block_1',
           'region' => 'content',
           'weight' => 0,
         ),
       ),
     ),
+    'breadcrumb' => 'groups',
   );
   $context->condition_mode = 0;
 
@@ -172,8 +186,8 @@ function commons_core_context_default_contexts() {
   // Included for use with string extractors like potx.
   t('Group');
   t('The group home page');
-
   $export['group-home'] = $context;
+
   $context = new stdClass;
   $context->disabled = FALSE; /* Edit this to true to make a default context disabled initially */
   $context->api_version = 3;
@@ -230,8 +244,8 @@ function commons_core_context_default_contexts() {
   // Translatables
   // Included for use with string extractors like potx.
   t('The list of available groups on the site');
-
   $export['group-listing'] = $context;
+
   $context = new stdClass;
   $context->disabled = FALSE; /* Edit this to true to make a default context disabled initially */
   $context->api_version = 3;
@@ -274,8 +288,8 @@ function commons_core_context_default_contexts() {
   // Translatables
   // Included for use with string extractors like potx.
   t('A listing of your groups');
-
   $export['group-listing-mine'] = $context;
+
   $context = new stdClass;
   $context->disabled = FALSE; /* Edit this to true to make a default context disabled initially */
   $context->api_version = 3;
@@ -321,7 +335,7 @@ function commons_core_context_default_contexts() {
   // Included for use with string extractors like potx.
   t('Notice listing and nodes');
   t('Notices');
-
   $export['notices'] = $context;
+
   return $export;
 }
diff --git a/modules/features/commons_core/commons_core.features.fieldgroup.inc b/modules/features/commons_core/commons_core.features.fieldgroup.inc
index 814f2c6..a7de7bf 100644
--- a/modules/features/commons_core/commons_core.features.fieldgroup.inc
+++ b/modules/features/commons_core/commons_core.features.fieldgroup.inc
@@ -19,10 +19,6 @@ function commons_core_fieldgroup_default_groups() {
       ),
       'display' => array(
         'weight' => '3',
-        '4' => array(
-          'format' => 'fieldset',
-          'exclude' => 1,
-        ),
         'label' => 'hidden',
         'teaser' => array(
           'format' => 'simple',
@@ -32,6 +28,10 @@ function commons_core_fieldgroup_default_groups() {
           'format' => 'simple',
           'exclude' => 0,
         ),
+        '4' => array(
+          'format' => 'fieldset',
+          'exclude' => 1,
+        ),
         'description' => '',
         '2' => array(
           'format' => 'fieldset',
@@ -63,10 +63,6 @@ function commons_core_fieldgroup_default_groups() {
       ),
       'display' => array(
         'weight' => '4',
-        '4' => array(
-          'format' => 'fieldset',
-          'exclude' => 1,
-        ),
         'label' => 'above',
         'teaser' => array(
           'format' => 'fieldset_collapsed',
@@ -76,6 +72,10 @@ function commons_core_fieldgroup_default_groups() {
           'format' => 'fieldset_collapsed',
           'exclude' => 0,
         ),
+        '4' => array(
+          'format' => 'fieldset',
+          'exclude' => 1,
+        ),
         'description' => '',
         '2' => array(
           'format' => 'fieldset',
diff --git a/modules/features/commons_core/commons_core.features.inc b/modules/features/commons_core/commons_core.features.inc
index 5f295bc..0618776 100644
--- a/modules/features/commons_core/commons_core.features.inc
+++ b/modules/features/commons_core/commons_core.features.inc
@@ -59,29 +59,6 @@ function commons_core_imagecache_default_presets() {
             'upscale' => 0,
           ),
         ),
-        '1' => array(
-          'weight' => '0',
-          'module' => 'imagecache_canvasactions',
-          'action' => 'canvasactions_definecanvas',
-          'data' => array(
-            'RGB' => array(
-              'HEX' => '',
-            ),
-            'under' => 1,
-            'exact' => array(
-              'width' => '380',
-              'height' => '90',
-              'xpos' => 'left',
-              'ypos' => 'top',
-            ),
-            'relative' => array(
-              'leftdiff' => '',
-              'rightdiff' => '',
-              'topdiff' => '',
-              'bottomdiff' => '',
-            ),
-          ),
-        ),
       ),
     ),
     'group_images_featured' => array(
@@ -222,8 +199,8 @@ function commons_core_imagecache_default_presets() {
           'module' => 'imagecache',
           'action' => 'imagecache_scale_and_crop',
           'data' => array(
-            'width' => '30',
-            'height' => '30',
+            'width' => '50',
+            'height' => '50',
           ),
         ),
       ),
diff --git a/modules/features/commons_core/commons_core.form.inc b/modules/features/commons_core/commons_core.form.inc
index ef399d9..129a58e 100644
--- a/modules/features/commons_core/commons_core.form.inc
+++ b/modules/features/commons_core/commons_core.form.inc
@@ -96,29 +96,16 @@ function commons_core_form_views_exposed_form_alter(&$form, &$form_state) {
         }
       }
       break;
+    case 'views-exposed-form-group-tab-content-block-1':
+      $form['#action'] = url($_GET['q']);
+      // Modify the group filter form so that everything can fit in one line.
+      $form['keys']['#size'] = 25;
+      $form['uid']['#size'] = 20;
+      $form['uid']['#description'] = '';
   }
 }
 
 /**
- * Implementation of hook_form_FORM_ID_alter()
- * 
- * Alter the Tagging admin settings form
- */
-function commons_core_form_tagging_admin_settings_alter(&$form, &$form_state) {
-  // Remove checkbox
-  unset($form['tagging_show_suggestion_example']);
-  
-  // Add a field to supply static suggestions
-  $form['commons_tag_suggestions'] = array(
-    '#type' => 'textarea',
-    '#title' => t('Static tag suggestions'),
-    '#description' => t('Enter a comma-separated list of terms that will show up as tag suggestions when creating content items.'),
-    '#weight' => -5,
-    '#default_value' => variable_get('commons_tag_suggestions', ''),
-  );
-}
-
-/**
  * Alter a node form
  */
 function commons_core_node_form_alter(&$form, &$form_state) {
@@ -280,7 +267,7 @@ function commons_core_group_create_content_block_form(&$form_state) {
         // Load the node type
         if ($type = node_get_types('type', $type)) {
           // Add the type
-          $types[$type->type] = $type->name;
+          $types[$type->type] = t($type->name);
         }
       }
     }
@@ -292,7 +279,7 @@ function commons_core_group_create_content_block_form(&$form_state) {
       if (og_is_group_post_type($id)) {
         // Check create permissions
         if (node_access('create', $id)) {
-          $types[$id] = $type->name;
+          $types[$id] = t($type->name);
         } 
       }
     }
@@ -428,6 +415,7 @@ function commons_core_join_form() {
             // Remove description
             unset($pfield['#description']);
             // Add to our form
+            $pfield['#title'] = t($pfield['#title']);
             $form[$pkey] = $pfield;
           }
           unset($rform[$key][$pkey]);
@@ -480,29 +468,37 @@ function commons_core_join_form() {
 function commons_core_form_search_theme_form_alter(&$form, &$form_state) {
   $path = drupal_get_path('module', 'commons_core');
   drupal_add_js($path . '/js/commons_core.js');
-  drupal_add_css($path . '/css/commons_core.css');
-  
+  drupal_add_css($path . '/css/commons_core.css');  
   $options = array();
-  $group = NULL;
-  $form_state['solr'] = module_exists('apachesolr_search');
-  $menu_item = menu_get_item($_GET['q']);
-  
-  if ($form_state['group'] = og_features_get_group_context()) {
+  $menu_item = menu_get_item();
+  $form['apachesolr_og'] = array(
+    '#type' => 'value',
+    '#value' => module_exists('apachesolr_og') && variable_get('apachesolr_search_make_default', 0),
+  );
+  $form['apachesolr'] = array(
+    '#type' => 'value',
+    '#value' => module_exists('apachesolr_search') && variable_get('apachesolr_search_make_default', 0),
+  );
+
+
+  if ($form_state['group'] = og_get_group_context()) {
     // If a node is being viewed, add the nodes type within the group as a search
     // context option.
+
+    $group_title = $form_state['group']->title;
+    // Truncate the title, if needed
+    $limit = variable_get('commons_search_group_title_length', 20);
+    if ($limit && drupal_strlen($group_title) > $limit) {
+      $group_title = truncate_utf8($group_title, $limit, TRUE, TRUE);
+    }
     if (is_array($menu_item['load_functions']) && $key = array_search('node_load', $menu_item['load_functions'])) {
       $form_state['node'] = $menu_item['map'][$key];
       if ($form_state['solr'] && $form_state['node'] != $form_state['group']) {
-        $options['type'] = t('@type posts in @group', array('@type' => ucfirst($form_state['node']->type), '@group' => $form_state['group']->title));
+        $options['type'] = t('@type posts in @group', array('@type' => ucfirst($form_state['node']->type), '@group' => $group_title));
       }
     }
     // Add the group as a possible search context.
-    $options['group'] = check_plain($form_state['group']->title);
-    // Truncate the title, if needed
-    $limit = variable_get('commons_search_group_title_length', 30);
-    if ($limit && strlen($options['group']) > $limit) {
-      $options['group'] = substr($options['group'], 0, $limit) . '...';
-    }
+    $options['group'] = check_plain($group_title);
   }
 
   $options['site'] = t('Entire site');
@@ -522,10 +518,15 @@ function commons_core_form_search_theme_form_alter(&$form, &$form_state) {
   $form['submit']['#weight'] = 2;
   $form['search_theme_form']['#title'] = t('Search');
   
-  // Replace the core search submit handler with our own
-  foreach ($form['#submit'] as $key => $callback) {
-    if ($callback == 'search_box_form_submit') {
-      $form['#submit'][$key] = 'commons_core_search_submit';
+
+  $key = array_search('search_box_form_submit', $form['#submit']);
+  if ($key !== FALSE) {
+    // Replace the search module's function.
+    $form['#submit'][$key] = 'commons_core_search_submit';
+  }
+  else {
+    if (!in_array('commons_core_search_submit', $form['#submit'])) {
+      $form['#submit'][] = 'commons_core_search_submit';
     }
   }
 }
@@ -534,7 +535,36 @@ function commons_core_form_search_theme_form_alter(&$form, &$form_state) {
  * Custom submit handler for the search box
  */
 function commons_core_search_submit($form, &$form_state) {
-  // Copied from search_box_form_submit().
+  $query = array();
+  // Identify our search terms.
+  $form_id = $form['form_id']['#value'];
+  $terms = trim($form_state['values'][$form_id]);
+
+  // Redirect to the appropriate search path and query string.
+
+  // User profiles are not indexed by ApacheSolr out-of-the-box.
+  if ($form_state['values']['refine'] == 'users') {
+    $form_state['redirect'] = 'search/user/' . $terms;
+    return;
+  }
+
+  // Are we searching with ApacheSolr and the group filter?
+  if (isset($form_state['redirect']) && strpos($form_state['redirect'], 'search/apachesolr_search') !== FALSE && $form_state['values']['refine'] == 'group' && $form_state['values']['apachesolr_og']) {
+    // If so, add the group query string to the existing ApacheSolr search path.
+    $query['filters'] = _apachesolr_og_gid_key() . ':' . $form_state['group']->nid;
+    $form_state['redirect'] = array($form_state['redirect'], $query);
+    return;
+  }
+
+  // Are we doing a site-wide ApacheSolr search? If so, ApacheSolr has already
+  // set the proper $form_state['redirect'] for us.
+  if ($form_state['values']['apachesolr'] && $form_state['values']['refine'] == 'site') {
+    return;
+  }
+
+  // We're not using ApacheSolr nor searching on users. That leaves
+  // site-wide and group-specific searches powered by Drupal core.
+
   if (isset($_REQUEST['destination'])) {
     unset($_REQUEST['destination']);
   }
@@ -542,38 +572,19 @@ function commons_core_search_submit($form, &$form_state) {
     unset($_REQUEST['edit']['destination']);
   }
 
-  $form_id = $form['form_id']['#value'];
-  $terms = trim($form_state['values'][$form_id]);
+
   $query = array();
   
-  // Build a path and query based on the input and options
-  switch ($form_state['values']['refine']) {
-    case 'type':
-      if ($form_state['solr']) {
-        $path = 'search/apachesolr_search/' . $terms;
-        $query['filters'] = 'group:' . $form_state['group']->nid . ' type:' . $form_state['node']->type;
-      }
-      break;
-    
-    case 'group':
-      if ($form_state['solr']) {
-        $path = 'search/apachesolr_search/' . $terms;
-        $query['filters'] = 'group:' . $form_state['group']->nid;
-      } 
-      else {
-        $path = 'og/search/' . $form_state['group']->nid;
-        $query['keys'] = str_replace(' ', '+', $terms);
-      }
-      break;
-    
-    case 'users':
-      $path = 'search/user/' . $terms;
-      break;
+  // We're doing a group search.
+  if ($form_state['values']['refine'] == 'group') {
+    $path = 'og/search/' . $form_state['group']->nid;
+    $query['keys'] = str_replace(' ', '+', $terms);
+  }
 
-    default:
+  else {
+    // We're doing a site-wide core search.
       $path = 'search/node/' . $terms;
-      break;
   }
-  
+
   $form_state['redirect'] = array($path, $query);
 }
diff --git a/modules/features/commons_core/commons_core.info b/modules/features/commons_core/commons_core.info
index fdb1764..c89fe2c 100644
--- a/modules/features/commons_core/commons_core.info
+++ b/modules/features/commons_core/commons_core.info
@@ -1,4 +1,7 @@
+name = "Commons Core"
+description = "The main components of Commons"
 core = "6.x"
+package = "Commons"
 dependencies[] = "ajax_load"
 dependencies[] = "chart"
 dependencies[] = "comment"
@@ -21,7 +24,6 @@ dependencies[] = "imagefield"
 dependencies[] = "insert"
 dependencies[] = "link"
 dependencies[] = "menu"
-dependencies[] = "node"
 dependencies[] = "og"
 dependencies[] = "og_access"
 dependencies[] = "og_features"
@@ -41,7 +43,6 @@ dependencies[] = "taxonomy"
 dependencies[] = "text"
 dependencies[] = "token"
 dependencies[] = "tracker"
-dependencies[] = "user"
 dependencies[] = "user_relationship_blocks"
 dependencies[] = "user_relationship_mailer"
 dependencies[] = "user_relationship_views"
@@ -51,11 +52,12 @@ dependencies[] = "user_relationships_ui"
 dependencies[] = "user_terms"
 dependencies[] = "views"
 dependencies[] = "views_bulk_operations"
+dependencies[] = "views_content_cache"
+dependencies[] = "views_field_view"
 dependencies[] = "views_slideshow"
 dependencies[] = "views_slideshow_singleframe"
 dependencies[] = "wysiwyg"
 dependencies[] = "wysiwyg_filter"
-description = "The main components of Commons"
 features[content][] = "group-field_featured_group"
 features[content][] = "group-field_group_image"
 features[content][] = "group-field_grouplink"
@@ -204,15 +206,13 @@ features[variable][] = "og_home_page_view"
 features[variable][] = "og_private_groups"
 features[variable][] = "og_statistics_include_unapproved_members"
 features[variable][] = "og_visibility"
+features[variable][] = "quant_height"
+features[variable][] = "quant_width"
 features[variable][] = "remove_markup_default_group"
 features[variable][] = "remove_markup_default_notice"
 features[variable][] = "remove_markup_default_page"
-features[variable][] = "quant_height"
-features[variable][] = "quant_width"
 features[variable][] = "tagadelic_block_tags_1"
 features[variable][] = "tagadelic_sort_order"
-features[variable][] = "tagging_inject_1"
-features[variable][] = "tagging_show_suggestion_example"
 features[variable][] = "theme_settings"
 features[variable][] = "user_picture_dimensions"
 features[variable][] = "user_picture_imagecache_comments"
@@ -234,9 +234,12 @@ features[variable][] = "wysiwyg_filter_styles_layout_1"
 features[variable][] = "wysiwyg_filter_styles_text_1"
 features[variable][] = "wysiwyg_filter_valid_elements_parsed_1"
 features[variable][] = "wysiwyg_filter_valid_elements_raw_1"
+features[views][] = "bookmarks_your_group"
 features[views][] = "group_block_latest_content"
 features[views][] = "group_block_members"
+features[views][] = "group_links"
 features[views][] = "group_node"
+features[views][] = "group_tab_content"
 features[views][] = "groups_featured_groups"
 features[views][] = "groups_main_listing"
 features[views][] = "groups_most_active"
@@ -246,6 +249,8 @@ features[views][] = "groups_newest_groups"
 features[views][] = "most_bookmarked"
 features[views][] = "my_recent_items"
 features[views][] = "my_unread_items"
+features[views][] = "new_groups_field"
+features[views][] = "new_your_groups"
 features[views][] = "newest_users"
 features[views][] = "notice_latest_comments"
 features[views][] = "og_my_content"
@@ -253,5 +258,3 @@ features[views][] = "recent_notices"
 features[views][] = "tag_cloud"
 features[views][] = "user_meta"
 features[views_api][] = "api:2"
-name = "Commons Core"
-package = "Commons"
diff --git a/modules/features/commons_core/commons_core.install b/modules/features/commons_core/commons_core.install
index 759625a..c0883fa 100644
--- a/modules/features/commons_core/commons_core.install
+++ b/modules/features/commons_core/commons_core.install
@@ -413,4 +413,37 @@ function commons_core_update_6015() {
     drupal_install_modules(array('tidy_node_links'));
   }
   return array();
+}
+
+/**
+** 
+** Enable dependencies and update configuration for the new Commons homepage
+** implemented at http://drupal.org/node/1411684.
+** 
+*/
+function commons_core_update_6016() {
+  // Enable new dependencies of the Commons core module.
+  drupal_install_modules(array('views_field_view', 'views_content_cache'));
+  // Don't intercept requests to frontpage and redirect them away.
+  // See http://drupal.org/node/1411684 for more.
+  variable_set('commons_status_streams_auth_frontpage', 0);
+  // We've increased the size of the user_picture_meta preset. Revert it.
+  features_revert(array('commons_core' => array('imagecache')));
+  // Flush the user_picture_meta cache so that the new preset takes effect.
+  // We could revert all features but prefer to do a targeted revert here so
+  // that folks can examine their configurations before reverting manually.
+  imagecache_preset_flush('user_picture_meta');
+  return array();
+}
+
+/**
+* Revert Commons_core ImageCache presets and flush the 'group_images' preset,
+* which used to set an incorrect image attribute. This was removed as part of
+* the new group homepage implementation at http://drupal.org/node/1419150.
+*/
+
+function commons_core_update_6017() {
+  features_revert(array('commons_core' => array('imagecache')));
+  imagecache_preset_flush('group_images');
+  return array();
 }
\ No newline at end of file
diff --git a/modules/features/commons_core/commons_core.module b/modules/features/commons_core/commons_core.module
index 82bd3bc..38cf53c 100644
--- a/modules/features/commons_core/commons_core.module
+++ b/modules/features/commons_core/commons_core.module
@@ -64,10 +64,12 @@ function commons_core_menu_alter(&$items) {
     $items['node/%node']['file path'] = $path;
   }
   
+  
   // Override group node tab title from 'View' to 'Home'
   $items['node/%node/view']['title callback'] = 'commons_core_set_node_tab_title';
   $items['node/%node/view']['title arguments'] = array(1);
   
+
   // (Optionally) override comment edit permissions
   $items['comment/edit']['page callback'] = 'commons_core_comment_edit';
   $items['comment/edit']['file'] = 'commons_core.overrides.inc';
@@ -87,7 +89,6 @@ function commons_core_block($op = 'list', $delta = 0, $edit = array()) {
  */
 function commons_core_form_alter(&$form, &$form_state, $form_id) {
   module_load_include('inc', 'commons_core', 'commons_core.form');
-
   // A node is being added or edited
   if ($form['#id'] == 'node-form') {
     commons_core_node_form_alter($form, $form_state);
@@ -178,6 +179,7 @@ function commons_core_init() {
  */
 function commons_core_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
   switch ($op) {
+
     case 'validate':
       // Make sure the "group sticky" field was used correctly
       _commons_core_check_group_sticky($node);
@@ -214,6 +216,7 @@ function commons_core_link_alter(&$links, $node, $comment = NULL) {
   }
 }
 
+  
 /**
  * Implementation of hook_theme()
  */
@@ -242,15 +245,6 @@ function commons_core_theme() {
 **/
 function commons_core_strongarm_alter(&$items) {
   $commons_tags_vid = variable_get('commons_tags_vid', 1);
-  // If these variables are set but the Commons tags vid isn't 1,
-  // changing the value isn't sufficient: we need to 
-  // create a different variable for each one.
-  if (isset($items['tagging_inject_1']) && $commons_tags_vid != 1) {
-    $new_item = $items['tagging_inject_1'];
-    unset($items['tagging_inject_1']);
-    $new_item->name = 'tagging_inject_' . $commons_tags_vid;
-    $items['tagging_inject_' . $commons_tags_vid] = $new_item;
-  }
   if (isset($items['tagadelic_block_tags_1']) && $commons_tags_vid !=1) {
     $new_item = $items['tagadelic_block_tags_1'];
     unset($items['tagadelic_block_tags_1']);
@@ -386,24 +380,6 @@ function commons_core_field_access($op, $field, $account = NULL, $node = NULL) {
   }
 }
 
-/**
- * Implementation of hook_tagging_suggestions()
- */
-function commons_core_tagging_suggestions($vid, $node) {
-  $suggestions = array();
-  
-  // Check if there are suggestions stored
-  if ($tags = variable_get('commons_tag_suggestions', '')) {
-    $tags = array_reverse(explode(',', $tags));
-    foreach ($tags as $tag) {
-      $suggestions[] = array(
-        '#name' => trim($tag),
-      );
-    }
-  }
-
-  return $suggestions;
-}
 
 /**
  * Implementation of hook_user_relationships_remove_link_alter().
@@ -532,6 +508,28 @@ function commons_core_wysiwyg_editor_settings_alter(&$settings, $context) {
     $settings['width'] = '95%';
   }
 }
+
+/**
+ * Implementation of hook_mollom_form_list().
+ */
+function commons_core_mollom_form_list() {
+  // "Join & learn more" block form
+  $forms['commons_core_join_form'] = array(
+    'title' => t('Join & learn more form'),
+    'entity' => 'user',
+  );
+  return $forms;
+}
+
+/**
+ * Implementation of hook_mollom_form_info().
+ */
+function commons_core_mollom_form_info($form_id) {
+  switch ($form_id) {
+    case 'commons_core_join_form':
+      return user_mollom_form_info('user_register');
+  }
+}
  
 /**
  * Callback to optionally force a login
@@ -596,9 +594,8 @@ function commons_core_force_login() {
  */
 function commons_core_set_node_tab_title($node) {
   if (og_is_group_type($node->type)) {
-    return variable_get('commons_group_tab_title', t('Home'));
+    return variable_get('commons_group_tab_title', t('Content'));
   }
-  
   return t('View');
 }
 
@@ -631,15 +628,12 @@ function commons_core_is_community_manager($user = NULL) {
  */
 function commons_core_set_breadcrumb($path) {
   $breadcrumb = array();
-  
   // Break the path into pieces
   $path = explode('/', $path);
-  
   switch ($path[0]) {
     case 'taxonomy':
       $breadcrumb[] = l(t('Tags'), 'tagadelic');
       break;
-      
     case 'content':
       if ($path[1]) {
         $breadcrumb[] = l(t('Community'), 'groups'); 
@@ -653,6 +647,7 @@ function commons_core_set_breadcrumb($path) {
     case 'analytics':
     case 'tagadelic':
       $breadcrumb[] = l(t('Community'), 'groups');
+
       break;
       
     case 'groups':
@@ -672,6 +667,12 @@ function commons_core_set_breadcrumb($path) {
     case 'node':
       if (isset($path[1]) && is_numeric($path[1])) {
         if ($node = menu_get_object('node')) {
+          if (!empty($node->og_groups)) {
+            // Make 'Community' the active menu item.
+            $item = menu_get_item();
+            $item['href'] = 'community';
+            menu_set_item(NULL, $item);
+          }
           if (og_is_group_type($node->type)) {
             $breadcrumb[] = l(t('Groups'), 'groups');
           }
@@ -715,7 +716,6 @@ function commons_core_set_breadcrumb($path) {
   if (!empty($breadcrumb)) {
     // If so, add a frontpage link to the beginning
     array_unshift($breadcrumb, l(t('Home'), '<front>'));
-    
     // And set them
     drupal_set_breadcrumb($breadcrumb);
   }
diff --git a/modules/features/commons_core/commons_core.overrides.inc b/modules/features/commons_core/commons_core.overrides.inc
index e470b4a..f37b613 100644
--- a/modules/features/commons_core/commons_core.overrides.inc
+++ b/modules/features/commons_core/commons_core.overrides.inc
@@ -16,7 +16,7 @@ function commons_core_node_page_view($node) {
     // Make context aware of the node view since hook_nodeapi() won't
     // be triggered here
     context_node_condition($node, 'view');
-    
+    drupal_set_title(check_plain($node->title));
     // Return nothing, allowing context to handle the content
     return '';
   }
diff --git a/modules/features/commons_core/commons_core.strongarm.inc b/modules/features/commons_core/commons_core.strongarm.inc
index 27a68f0..7bea53d 100644
--- a/modules/features/commons_core/commons_core.strongarm.inc
+++ b/modules/features/commons_core/commons_core.strongarm.inc
@@ -187,41 +187,41 @@ function commons_core_strongarm() {
   $strongarm->name = 'og_visibility';
   $strongarm->value = '2';
   $export['og_visibility'] = $strongarm;
-  
+
   $strongarm = new stdClass;
   $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
   $strongarm->api_version = 1;
-  $strongarm->name = 'remove_markup_default_group';
-  $strongarm->value = 1;
-  $export['remove_markup_default_group'] = $strongarm;
-  
+  $strongarm->name = 'quant_height';
+  $strongarm->value = '175';
+  $export['quant_height'] = $strongarm;
+
   $strongarm = new stdClass;
   $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
   $strongarm->api_version = 1;
-  $strongarm->name = 'remove_markup_default_notice';
-  $strongarm->value = 1;
-  $export['remove_markup_default_notice'] = $strongarm;
-  
+  $strongarm->name = 'quant_width';
+  $strongarm->value = '425';
+  $export['quant_width'] = $strongarm;
+
   $strongarm = new stdClass;
   $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
   $strongarm->api_version = 1;
-  $strongarm->name = 'remove_markup_default_page';
+  $strongarm->name = 'remove_markup_default_group';
   $strongarm->value = 1;
-  $export['remove_markup_default_page'] = $strongarm;
+  $export['remove_markup_default_group'] = $strongarm;
 
   $strongarm = new stdClass;
   $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
   $strongarm->api_version = 1;
-  $strongarm->name = 'quant_height';
-  $strongarm->value = '175';
-  $export['quant_height'] = $strongarm;
+  $strongarm->name = 'remove_markup_default_notice';
+  $strongarm->value = 1;
+  $export['remove_markup_default_notice'] = $strongarm;
 
   $strongarm = new stdClass;
   $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
   $strongarm->api_version = 1;
-  $strongarm->name = 'quant_width';
-  $strongarm->value = '425';
-  $export['quant_width'] = $strongarm;
+  $strongarm->name = 'remove_markup_default_page';
+  $strongarm->value = 1;
+  $export['remove_markup_default_page'] = $strongarm;
 
   $strongarm = new stdClass;
   $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
@@ -240,20 +240,6 @@ function commons_core_strongarm() {
   $strongarm = new stdClass;
   $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
   $strongarm->api_version = 1;
-  $strongarm->name = 'tagging_inject_1';
-  $strongarm->value = 1;
-  $export['tagging_inject_1'] = $strongarm;
-
-  $strongarm = new stdClass;
-  $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
-  $strongarm->api_version = 1;
-  $strongarm->name = 'tagging_show_suggestion_example';
-  $strongarm->value = 0;
-  $export['tagging_show_suggestion_example'] = $strongarm;
-
-  $strongarm = new stdClass;
-  $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
-  $strongarm->api_version = 1;
   $strongarm->name = 'theme_settings';
   $strongarm->value = array(
     'toggle_logo' => 1,
@@ -287,6 +273,13 @@ function commons_core_strongarm() {
   $strongarm = new stdClass;
   $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
   $strongarm->api_version = 1;
+  $strongarm->name = 'user_pictures';
+  $strongarm->value = '1';
+  $export['user_pictures'] = $strongarm;
+
+  $strongarm = new stdClass;
+  $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
+  $strongarm->api_version = 1;
   $strongarm->name = 'user_picture_dimensions';
   $strongarm->value = '';
   $export['user_picture_dimensions'] = $strongarm;
@@ -322,13 +315,6 @@ function commons_core_strongarm() {
   $strongarm = new stdClass;
   $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
   $strongarm->api_version = 1;
-  $strongarm->name = 'user_pictures';
-  $strongarm->value = '1';
-  $export['user_pictures'] = $strongarm;
-
-  $strongarm = new stdClass;
-  $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
-  $strongarm->api_version = 1;
   $strongarm->name = 'user_relationships_notifications_disabled';
   $strongarm->value = 1;
   $export['user_relationships_notifications_disabled'] = $strongarm;
diff --git a/modules/features/commons_core/commons_core.views_default.inc b/modules/features/commons_core/commons_core.views_default.inc
index 9f9a935..7110baf 100644
--- a/modules/features/commons_core/commons_core.views_default.inc
+++ b/modules/features/commons_core/commons_core.views_default.inc
@@ -6,249 +6,51 @@
 function commons_core_views_default_views() {
   $views = array();
 
-  // Exported view: group_block_latest_content
+  // Exported view: bookmarks_your_group
   $view = new view;
-  $view->name = 'group_block_latest_content';
-  $view->description = 'The latest group posts block';
+  $view->name = 'bookmarks_your_group';
+  $view->description = 'Lists the current user\'s bookmarks in a group';
   $view->tag = '';
   $view->base_table = 'node';
-  $view->core = 0;
+  $view->core = 6;
   $view->api_version = '2';
   $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
   $handler = $view->new_display('default', 'Defaults', 'default');
   $handler->override_option('relationships', array(
-    'group_nid' => array(
-      'label' => 'Group node (post)',
-      'required' => 0,
-      'id' => 'group_nid',
-      'table' => 'og_ancestry',
-      'field' => 'group_nid',
+    'flag_content_rel' => array(
+      'label' => 'bookmarks',
+      'required' => 1,
+      'flag' => 'bookmarks',
+      'user_scope' => 'current',
+      'id' => 'flag_content_rel',
+      'table' => 'node',
+      'field' => 'flag_content_rel',
+      'relationship' => 'none',
       'override' => array(
         'button' => 'Override',
       ),
-      'relationship' => 'none',
     ),
   ));
   $handler->override_option('fields', array(
-    'picture' => array(
-      'label' => '',
-      'alter' => array(
-        'alter_text' => 0,
-        'text' => '',
-        'make_link' => 0,
-        'path' => '',
-        'link_class' => '',
-        'alt' => '',
-        'prefix' => '',
-        'suffix' => '',
-        'target' => '',
-        'help' => '',
-        'trim' => 0,
-        'max_length' => '',
-        'word_boundary' => 1,
-        'ellipsis' => 1,
-        'strip_tags' => 0,
-        'html' => 0,
-      ),
-      'empty' => '',
-      'hide_empty' => 0,
-      'empty_zero' => 0,
-      'imagecache_preset' => 'user_picture_meta',
-      'exclude' => 0,
-      'id' => 'picture',
-      'table' => 'users',
-      'field' => 'picture',
-      'override' => array(
-        'button' => 'Override',
-      ),
-      'relationship' => 'none',
-    ),
     'title' => array(
-      'label' => '',
-      'alter' => array(
-        'alter_text' => 0,
-        'text' => '',
-        'make_link' => 0,
-        'path' => '',
-        'link_class' => '',
-        'alt' => '',
-        'prefix' => '',
-        'suffix' => '',
-        'target' => '',
-        'help' => '',
-        'trim' => 0,
-        'max_length' => '',
-        'word_boundary' => 1,
-        'ellipsis' => 1,
-        'html' => 0,
-        'strip_tags' => 0,
-      ),
-      'empty' => '',
-      'hide_empty' => 0,
-      'empty_zero' => 0,
-      'link_to_node' => 1,
-      'exclude' => 0,
       'id' => 'title',
       'table' => 'node',
       'field' => 'title',
-      'override' => array(
-        'button' => 'Override',
-      ),
-      'relationship' => 'none',
-    ),
-    'timestamp' => array(
-      'label' => '',
-      'alter' => array(
-        'alter_text' => 0,
-        'text' => '',
-        'make_link' => 0,
-        'path' => '',
-        'link_class' => '',
-        'alt' => '',
-        'prefix' => '',
-        'suffix' => '',
-        'target' => '',
-        'help' => '',
-        'trim' => 0,
-        'max_length' => '',
-        'word_boundary' => 1,
-        'ellipsis' => 1,
-        'html' => 0,
-        'strip_tags' => 0,
-      ),
-      'empty' => '',
-      'hide_empty' => 0,
-      'empty_zero' => 0,
-      'link_to_node' => 0,
-      'comments' => 1,
-      'exclude' => 0,
-      'id' => 'timestamp',
-      'table' => 'history_user',
-      'field' => 'timestamp',
-      'override' => array(
-        'button' => 'Override',
-      ),
-      'relationship' => 'none',
-    ),
-    'created' => array(
-      'label' => 'Posted',
-      'alter' => array(
-        'alter_text' => 0,
-        'text' => '',
-        'make_link' => 0,
-        'path' => '',
-        'link_class' => '',
-        'alt' => '',
-        'prefix' => '',
-        'suffix' => '',
-        'target' => '',
-        'help' => '',
-        'trim' => 0,
-        'max_length' => '',
-        'word_boundary' => 1,
-        'ellipsis' => 1,
-        'html' => 0,
-        'strip_tags' => 0,
-      ),
-      'empty' => '',
-      'hide_empty' => 0,
-      'empty_zero' => 0,
-      'date_format' => 'small',
-      'custom_date_format' => '',
-      'exclude' => 0,
-      'id' => 'created',
-      'table' => 'node',
-      'field' => 'created',
-      'override' => array(
-        'button' => 'Override',
-      ),
-      'relationship' => 'none',
-    ),
-    'name' => array(
-      'label' => '',
-      'alter' => array(
-        'alter_text' => 1,
-        'text' => 'by [name]',
-        'make_link' => 0,
-        'path' => '',
-        'link_class' => '',
-        'alt' => '',
-        'prefix' => '',
-        'suffix' => '',
-        'target' => '',
-        'help' => '',
-        'trim' => 0,
-        'max_length' => '',
-        'word_boundary' => 1,
-        'ellipsis' => 1,
-        'html' => 0,
-        'strip_tags' => 0,
-      ),
-      'empty' => '',
-      'hide_empty' => 0,
-      'empty_zero' => 0,
-      'link_to_user' => 1,
-      'overwrite_anonymous' => 0,
-      'anonymous_text' => '',
-      'exclude' => 0,
-      'id' => 'name',
-      'table' => 'users',
-      'field' => 'name',
-      'override' => array(
-        'button' => 'Override',
-      ),
-      'relationship' => 'none',
-    ),
-    'comment_count' => array(
-      'label' => '',
-      'alter' => array(
-        'alter_text' => 1,
-        'text' => '[comment_count] comment(s)',
-        'make_link' => 0,
-        'path' => '',
-        'link_class' => '',
-        'alt' => '',
-        'prefix' => '',
-        'suffix' => '',
-        'target' => '',
-        'help' => '',
-        'trim' => 0,
-        'max_length' => '',
-        'word_boundary' => 1,
-        'ellipsis' => 1,
-        'html' => 0,
-        'strip_tags' => 0,
-      ),
-      'empty' => '-',
-      'hide_empty' => 0,
-      'empty_zero' => 0,
-      'set_precision' => FALSE,
-      'precision' => 0,
-      'decimal' => '.',
-      'separator' => ',',
-      'prefix' => '',
-      'suffix' => '',
-      'exclude' => 0,
-      'id' => 'comment_count',
-      'table' => 'node_comment_statistics',
-      'field' => 'comment_count',
-      'override' => array(
-        'button' => 'Override',
-      ),
-      'relationship' => 'none',
+      'label' => 'Title',
+      'link_to_node' => 1,
     ),
   ));
   $handler->override_option('sorts', array(
-    'created' => array(
+    'timestamp' => array(
       'order' => 'DESC',
       'granularity' => 'second',
-      'id' => 'created',
-      'table' => 'node',
-      'field' => 'created',
+      'id' => 'timestamp',
+      'table' => 'flag_content',
+      'field' => 'timestamp',
+      'relationship' => 'flag_content_rel',
       'override' => array(
         'button' => 'Override',
       ),
-      'relationship' => 'none',
     ),
   ));
   $handler->override_option('arguments', array(
@@ -262,7 +64,7 @@ function commons_core_views_default_views() {
       'breadcrumb' => '',
       'default_argument_type' => 'og_group_node',
       'default_argument' => '',
-      'validate_type' => 'og_group_types',
+      'validate_type' => 'none',
       'validate_fail' => 'not found',
       'break_phrase' => 0,
       'not' => 0,
@@ -281,12 +83,23 @@ function commons_core_views_default_views() {
       ),
       'relationship' => 'none',
       'default_options_div_prefix' => '',
+      'default_taxonomy_tid_term_page' => 0,
+      'default_taxonomy_tid_node' => 0,
+      'default_taxonomy_tid_limit' => 0,
+      'default_taxonomy_tid_vids' => array(
+        2 => 0,
+        1 => 0,
+        3 => 0,
+      ),
       'default_argument_user' => 0,
       'default_argument_fixed' => '',
+      'default_argument_activity_log_stream_owner_type' => 'user',
       'default_argument_php' => '',
       'validate_argument_node_type' => array(
         'blog' => 0,
         'poll' => 0,
+        'answer' => 0,
+        'question' => 0,
         'discussion' => 0,
         'document' => 0,
         'event' => 0,
@@ -299,6 +112,7 @@ function commons_core_views_default_views() {
       'validate_argument_nid_type' => 'nid',
       'validate_argument_vocabulary' => array(
         2 => 0,
+        1 => 0,
         3 => 0,
       ),
       'validate_argument_type' => 'tid',
@@ -310,7 +124,7 @@ function commons_core_views_default_views() {
       'validate_argument_user_flag_name' => '*relationship*',
       'validate_argument_user_flag_test' => 'flaggable',
       'validate_argument_user_flag_id_type' => 'id',
-      'validate_argument_is_member' => 'OG_VIEWS_DO_NOT_VALIDATE_MEMBERSHIP',
+      'validate_argument_is_member' => '0',
       'validate_argument_group_node_type' => array(
         'group' => 0,
       ),
@@ -318,23 +132,9 @@ function commons_core_views_default_views() {
     ),
   ));
   $handler->override_option('filters', array(
-    'picg' => array(
-      'operator' => '=',
-      'value' => '',
-      'group' => '0',
-      'exposed' => FALSE,
-      'expose' => array(
-        'operator' => FALSE,
-        'label' => '',
-      ),
-      'id' => 'picg',
-      'table' => 'og_ancestry',
-      'field' => 'picg',
-      'relationship' => 'none',
-    ),
     'status' => array(
       'operator' => '=',
-      'value' => '1',
+      'value' => 1,
       'group' => '0',
       'exposed' => FALSE,
       'expose' => array(
@@ -344,60 +144,136 @@ function commons_core_views_default_views() {
       'id' => 'status',
       'table' => 'node',
       'field' => 'status',
-      'override' => array(
-        'button' => 'Override',
-      ),
       'relationship' => 'none',
     ),
   ));
   $handler->override_option('access', array(
-    'type' => 'perm',
-    'perm' => 'access content',
+    'type' => 'role',
+    'role' => array(
+      2 => '2',
+    ),
+    'perm' => '',
   ));
   $handler->override_option('cache', array(
     'type' => 'none',
   ));
-  $handler->override_option('title', 'Recent content');
-  $handler->override_option('header_format', '1');
-  $handler->override_option('header_empty', 0);
-  $handler->override_option('empty', 'No posts have been made in this group yet.');
+  $handler->override_option('title', 'Your Bookmarks in this Group');
+  $handler->override_option('empty', 'You have not yet bookmarked any content in this group. Click the "Bookmark this" link when viewing a piece of content to add it to this list.');
   $handler->override_option('empty_format', '1');
-  $handler->override_option('use_ajax', TRUE);
-  $handler->override_option('items_per_page', 5);
-  $handler->override_option('use_pager', 'mini');
-  $handler->override_option('pager_element', 3);
-  $handler->override_option('distinct', 1);
-  $handler->override_option('style_plugin', 'list');
+  $handler->override_option('items_per_page', '25');
+  $handler->override_option('use_pager', TRUE);
+  $handler->override_option('use_more', 1);
+  $handler->override_option('use_more_always', 0);
+  $handler->override_option('use_more_text', 'All your bookmarked content in this group');
+  $handler->override_option('style_plugin', 'table');
   $handler->override_option('style_options', array(
     'grouping' => '',
-    'type' => 'ul',
-  ));
-  $handler->override_option('row_options', array(
-    'inline' => array(
-      'created' => 'created',
+    'override' => FALSE,
+    'sticky' => 1,
+    'columns' => array(
+      'type' => 'type',
+      'title' => 'title',
       'name' => 'name',
+      'comment_count' => 'comment_count',
+      'last_comment_timestamp' => 'last_comment_timestamp',
+      'ops' => 'ops',
+    ),
+    'default' => 'last_comment_timestamp',
+    'order' => 'desc',
+    'info' => array(
+      'type' => array(
+        'sortable' => TRUE,
+      ),
+      'title' => array(
+        'sortable' => TRUE,
+      ),
+      'name' => array(
+        'sortable' => TRUE,
+      ),
+      'comment_count' => array(
+        'sortable' => TRUE,
+      ),
+      'last_comment_timestamp' => array(
+        'sortable' => TRUE,
+      ),
     ),
-    'separator' => '',
-    'hide_empty' => 0,
   ));
   $handler = $view->new_display('block', 'Block', 'block_1');
-  $handler->override_option('block_description', 'Latest group content');
+  $handler->override_option('fields', array(
+    'title' => array(
+      'label' => '',
+      'alter' => array(
+        'alter_text' => 0,
+        'text' => '',
+        'make_link' => 0,
+        'path' => '',
+        'absolute' => 0,
+        'link_class' => '',
+        'alt' => '',
+        'rel' => '',
+        'prefix' => '',
+        'suffix' => '',
+        'target' => '',
+        'help' => '',
+        'trim' => 0,
+        'max_length' => '',
+        'word_boundary' => 1,
+        'ellipsis' => 1,
+        'html' => 0,
+        'strip_tags' => 0,
+      ),
+      'empty' => '',
+      'hide_empty' => 0,
+      'empty_zero' => 0,
+      'hide_alter_empty' => 1,
+      'link_to_node' => 1,
+      'exclude' => 0,
+      'id' => 'title',
+      'table' => 'node',
+      'field' => 'title',
+      'override' => array(
+        'button' => 'Use default',
+      ),
+      'relationship' => 'none',
+    ),
+  ));
+  $handler->override_option('items_per_page', 5);
+  $handler->override_option('use_pager', '0');
+  $handler->override_option('style_plugin', 'list');
+  $handler->override_option('style_options', array(
+    'grouping' => '',
+    'type' => 'ul',
+  ));
+  $handler->override_option('block_description', '');
   $handler->override_option('block_caching', -1);
 
   $views[$view->name] = $view;
 
-  // Exported view: group_block_members
+  // Exported view: group_block_latest_content
   $view = new view;
-  $view->name = 'group_block_members';
-  $view->description = 'A helper view to provide the block of group members and admins';
+  $view->name = 'group_block_latest_content';
+  $view->description = 'The latest group posts block';
   $view->tag = '';
-  $view->base_table = 'users';
+  $view->base_table = 'node';
   $view->core = 0;
   $view->api_version = '2';
   $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
   $handler = $view->new_display('default', 'Defaults', 'default');
+  $handler->override_option('relationships', array(
+    'group_nid' => array(
+      'label' => 'Group node (post)',
+      'required' => 0,
+      'id' => 'group_nid',
+      'table' => 'og_ancestry',
+      'field' => 'group_nid',
+      'override' => array(
+        'button' => 'Override',
+      ),
+      'relationship' => 'none',
+    ),
+  ));
   $handler->override_option('fields', array(
-    'picture' => array(
+    'title' => array(
       'label' => '',
       'alter' => array(
         'alter_text' => 0,
@@ -420,11 +296,11 @@ function commons_core_views_default_views() {
       'empty' => '',
       'hide_empty' => 0,
       'empty_zero' => 0,
-      'imagecache_preset' => 'user_picture_meta',
+      'link_to_node' => 1,
       'exclude' => 0,
-      'id' => 'picture',
-      'table' => 'users',
-      'field' => 'picture',
+      'id' => 'title',
+      'table' => 'node',
+      'field' => 'title',
       'override' => array(
         'button' => 'Override',
       ),
@@ -436,7 +312,7 @@ function commons_core_views_default_views() {
       'order' => 'DESC',
       'granularity' => 'second',
       'id' => 'created',
-      'table' => 'og_uid',
+      'table' => 'node',
       'field' => 'created',
       'override' => array(
         'button' => 'Override',
@@ -445,7 +321,7 @@ function commons_core_views_default_views() {
     ),
   ));
   $handler->override_option('arguments', array(
-    'nid' => array(
+    'group_nid' => array(
       'default_action' => 'default',
       'style_plugin' => 'default_summary',
       'style_options' => array(),
@@ -459,9 +335,9 @@ function commons_core_views_default_views() {
       'validate_fail' => 'not found',
       'break_phrase' => 0,
       'not' => 0,
-      'id' => 'nid',
-      'table' => 'og_uid',
-      'field' => 'nid',
+      'id' => 'group_nid',
+      'table' => 'og_ancestry',
+      'field' => 'group_nid',
       'validate_user_argument_type' => 'uid',
       'validate_user_roles' => array(
         2 => 0,
@@ -474,8 +350,8 @@ function commons_core_views_default_views() {
       ),
       'relationship' => 'none',
       'default_options_div_prefix' => '',
-      'default_argument_fixed' => '',
       'default_argument_user' => 0,
+      'default_argument_fixed' => '',
       'default_argument_php' => '',
       'validate_argument_node_type' => array(
         'blog' => 0,
@@ -511,40 +387,18 @@ function commons_core_views_default_views() {
     ),
   ));
   $handler->override_option('filters', array(
-    'is_admin' => array(
-      'operator' => 'in',
-      'value' => array(
-        1 => '1',
-      ),
-      'group' => '0',
-      'exposed' => FALSE,
-      'expose' => array(
-        'operator' => FALSE,
-        'label' => '',
-      ),
-      'id' => 'is_admin',
-      'table' => 'og_uid',
-      'field' => 'is_admin',
-      'override' => array(
-        'button' => 'Override',
-      ),
-      'relationship' => 'none',
-    ),
-    'is_active' => array(
+    'picg' => array(
       'operator' => '=',
-      'value' => '1',
+      'value' => '',
       'group' => '0',
       'exposed' => FALSE,
       'expose' => array(
         'operator' => FALSE,
         'label' => '',
       ),
-      'id' => 'is_active',
-      'table' => 'og_uid',
-      'field' => 'is_active',
-      'override' => array(
-        'button' => 'Override',
-      ),
+      'id' => 'picg',
+      'table' => 'og_ancestry',
+      'field' => 'picg',
       'relationship' => 'none',
     ),
     'status' => array(
@@ -557,7 +411,7 @@ function commons_core_views_default_views() {
         'label' => '',
       ),
       'id' => 'status',
-      'table' => 'users',
+      'table' => 'node',
       'field' => 'status',
       'override' => array(
         'button' => 'Override',
@@ -566,105 +420,91 @@ function commons_core_views_default_views() {
     ),
   ));
   $handler->override_option('access', array(
-    'type' => 'none',
+    'type' => 'perm',
+    'perm' => 'access content',
   ));
   $handler->override_option('cache', array(
     'type' => 'none',
   ));
-  $handler->override_option('items_per_page', 6);
+  $handler->override_option('title', 'Recent content');
+  $handler->override_option('header_format', '1');
+  $handler->override_option('header_empty', 0);
+  $handler->override_option('empty', 'No posts have been made in this group yet.');
+  $handler->override_option('empty_format', '1');
+  $handler->override_option('use_ajax', TRUE);
+  $handler->override_option('items_per_page', 5);
+  $handler->override_option('use_pager', '0');
+  $handler->override_option('pager_element', 3);
+  $handler->override_option('use_more', 1);
+  $handler->override_option('use_more_always', 0);
   $handler->override_option('distinct', 1);
-  $handler->override_option('style_plugin', 'grid');
+  $handler->override_option('style_plugin', 'list');
   $handler->override_option('style_options', array(
     'grouping' => '',
-    'columns' => '6',
-    'alignment' => 'horizontal',
-    'fill_single_line' => 1,
+    'type' => 'ul',
   ));
-  $handler = $view->new_display('block', 'Group managers', 'block_1');
-  $handler->override_option('block_description', '');
+  $handler->override_option('row_options', array(
+    'inline' => array(
+      'created' => 'created',
+      'timestamp' => 'timestamp',
+    ),
+    'separator' => '',
+    'hide_empty' => 0,
+  ));
+  $handler = $view->new_display('block', 'Block', 'block_1');
+  $handler->override_option('block_description', 'Latest group content');
   $handler->override_option('block_caching', -1);
-  $handler = $view->new_display('block', 'Group members', 'block_2');
-  $handler->override_option('filters', array(
-    'is_admin' => array(
-      'operator' => 'not in',
-      'value' => array(
-        1 => '1',
-      ),
-      'group' => '0',
-      'exposed' => FALSE,
-      'expose' => array(
-        'operator' => FALSE,
-        'label' => '',
+  $handler = $view->new_display('page', 'Page', 'page_1');
+  $handler->override_option('fields', array(
+    'title' => array(
+      'label' => '',
+      'alter' => array(
+        'alter_text' => 0,
+        'text' => '',
+        'make_link' => 0,
+        'path' => '',
+        'link_class' => '',
+        'alt' => '',
+        'prefix' => '',
+        'suffix' => '',
+        'target' => '',
+        'help' => '',
+        'trim' => 0,
+        'max_length' => '',
+        'word_boundary' => 1,
+        'ellipsis' => 1,
+        'html' => 0,
+        'strip_tags' => 0,
       ),
-      'id' => 'is_admin',
-      'table' => 'og_uid',
-      'field' => 'is_admin',
+      'empty' => '',
+      'hide_empty' => 0,
+      'empty_zero' => 0,
+      'link_to_node' => 1,
+      'exclude' => 0,
+      'id' => 'title',
+      'table' => 'node',
+      'field' => 'title',
       'override' => array(
-        'button' => 'Use default',
+        'button' => 'Override',
       ),
       'relationship' => 'none',
     ),
-    'is_active' => array(
-      'operator' => '=',
-      'value' => '1',
-      'group' => '0',
-      'exposed' => FALSE,
-      'expose' => array(
-        'operator' => FALSE,
-        'label' => '',
-      ),
-      'id' => 'is_active',
-      'table' => 'og_uid',
-      'field' => 'is_active',
-      'override' => array(
-        'button' => 'Override',
-      ),
-      'relationship' => 'none',
-    ),
-    'status' => array(
-      'operator' => '=',
-      'value' => '1',
-      'group' => '0',
-      'exposed' => FALSE,
-      'expose' => array(
-        'operator' => FALSE,
-        'label' => '',
-      ),
-      'id' => 'status',
+    'name' => array(
+      'id' => 'name',
       'table' => 'users',
-      'field' => 'status',
-      'override' => array(
-        'button' => 'Override',
-      ),
-      'relationship' => 'none',
+      'field' => 'name',
     ),
-  ));
-  $handler->override_option('items_per_page', 18);
-  $handler->override_option('block_description', '');
-  $handler->override_option('block_caching', -1);
-
-  $views[$view->name] = $view;
-
-  // Exported view: group_node
-  $view = new view;
-  $view->name = 'group_node';
-  $view->description = 'Group profile';
-  $view->tag = '';
-  $view->base_table = 'node';
-  $view->core = 0;
-  $view->api_version = '2';
-  $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
-  $handler = $view->new_display('default', 'Defaults', 'default');
-  $handler->override_option('fields', array(
-    'field_group_image_fid' => array(
-      'label' => '',
+    'created' => array(
+      'label' => 'Post date',
       'alter' => array(
         'alter_text' => 0,
         'text' => '',
         'make_link' => 0,
         'path' => '',
+        'absolute' => 0,
         'link_class' => '',
         'alt' => '',
+        'rel' => '',
         'prefix' => '',
         'suffix' => '',
         'target' => '',
@@ -679,131 +519,29 @@ function commons_core_views_default_views() {
       'empty' => '',
       'hide_empty' => 0,
       'empty_zero' => 0,
-      'link_to_node' => 0,
-      'label_type' => 'none',
-      'format' => 'group_images_showcase_default',
-      'multiple' => array(
-        'group' => TRUE,
-        'multiple_number' => '',
-        'multiple_from' => '',
-        'multiple_reversed' => FALSE,
-      ),
-      'exclude' => 0,
-      'id' => 'field_group_image_fid',
-      'table' => 'node_data_field_group_image',
-      'field' => 'field_group_image_fid',
-      'relationship' => 'none',
-    ),
-    'subscribe' => array(
-      'label' => '',
-      'alter' => array(
-        'alter_text' => 0,
-        'text' => '[subscribe]',
-        'make_link' => 0,
-        'path' => '',
-        'link_class' => '',
-        'alt' => '',
-        'prefix' => '',
-        'suffix' => '',
-        'target' => '',
-        'help' => '',
-        'trim' => 0,
-        'max_length' => '',
-        'word_boundary' => 1,
-        'ellipsis' => 1,
-        'html' => 0,
-        'strip_tags' => 0,
-      ),
-      'empty' => '',
-      'hide_empty' => 1,
-      'empty_zero' => 0,
+      'hide_alter_empty' => 1,
+      'date_format' => 'small',
+      'custom_date_format' => '',
       'exclude' => 0,
-      'id' => 'subscribe',
-      'table' => 'og',
-      'field' => 'subscribe',
-      'relationship' => 'none',
+      'id' => 'created',
+      'table' => 'node',
+      'field' => 'created',
       'override' => array(
-        'button' => 'Override',
-      ),
-    ),
-    'body' => array(
-      'label' => '',
-      'alter' => array(
-        'alter_text' => 0,
-        'text' => '',
-        'make_link' => 0,
-        'path' => '',
-        'link_class' => '',
-        'alt' => '',
-        'prefix' => '',
-        'suffix' => '',
-        'target' => '',
-        'help' => '',
-        'trim' => 0,
-        'max_length' => '',
-        'word_boundary' => 1,
-        'ellipsis' => 1,
-        'html' => 0,
-        'strip_tags' => 0,
-      ),
-      'empty' => '',
-      'hide_empty' => 0,
-      'empty_zero' => 0,
-      'exclude' => 0,
-      'id' => 'body',
-      'table' => 'node_revisions',
-      'field' => 'body',
-      'relationship' => 'none',
-    ),
-    'tid' => array(
-      'label' => '',
-      'alter' => array(
-        'alter_text' => 0,
-        'text' => '',
-        'make_link' => 0,
-        'path' => '',
-        'link_class' => '',
-        'alt' => '',
-        'prefix' => '',
-        'suffix' => '',
-        'target' => '',
-        'help' => '',
-        'trim' => 0,
-        'max_length' => '',
-        'word_boundary' => 1,
-        'ellipsis' => 1,
-        'html' => 0,
-        'strip_tags' => 0,
-      ),
-      'empty' => '',
-      'hide_empty' => 0,
-      'empty_zero' => 0,
-      'type' => 'separator',
-      'separator' => ', ',
-      'link_to_taxonomy' => 1,
-      'limit' => 0,
-      'vids' => array(
-        5 => 0,
-        2 => 0,
-        3 => 0,
-        6 => 0,
-        4 => 0,
+        'button' => 'Use default',
       ),
-      'exclude' => 0,
-      'id' => 'tid',
-      'table' => 'term_node',
-      'field' => 'tid',
       'relationship' => 'none',
     ),
-    'field_grouplink_url' => array(
-      'label' => '',
+    'type' => array(
+      'label' => 'Type',
       'alter' => array(
         'alter_text' => 0,
         'text' => '',
         'make_link' => 0,
         'path' => '',
+        'absolute' => 0,
         'link_class' => '',
         'alt' => '',
+        'rel' => '',
         'prefix' => '',
         'suffix' => '',
         'target' => '',
@@ -818,78 +556,37 @@ function commons_core_views_default_views() {
       'empty' => '',
       'hide_empty' => 0,
       'empty_zero' => 0,
+      'hide_alter_empty' => 1,
       'link_to_node' => 0,
-      'label_type' => 'none',
-      'format' => 'default',
-      'multiple' => array(
-        'group' => 1,
-        'multiple_number' => '',
-        'multiple_from' => '',
-        'multiple_reversed' => 0,
-      ),
+      'machine_name' => 0,
       'exclude' => 0,
-      'id' => 'field_grouplink_url',
-      'table' => 'node_data_field_grouplink',
-      'field' => 'field_grouplink_url',
-      'relationship' => 'none',
-    ),
-    'field_featured_group_value' => array(
-      'label' => '',
-      'alter' => array(
-        'alter_text' => 0,
-        'text' => '',
-        'make_link' => 0,
-        'path' => '',
-        'link_class' => '',
-        'alt' => '',
-        'prefix' => '',
-        'suffix' => '',
-        'target' => '',
-        'help' => '',
-        'trim' => 0,
-        'max_length' => '',
-        'word_boundary' => 1,
-        'ellipsis' => 1,
-        'html' => 0,
-        'strip_tags' => 0,
-      ),
-      'empty' => '',
-      'hide_empty' => 0,
-      'empty_zero' => 0,
-      'link_to_node' => 0,
-      'label_type' => 'none',
-      'format' => 'editable',
-      'multiple' => array(
-        'group' => TRUE,
-        'multiple_number' => '',
-        'multiple_from' => '',
-        'multiple_reversed' => FALSE,
+      'id' => 'type',
+      'table' => 'node',
+      'field' => 'type',
+      'override' => array(
+        'button' => 'Use default',
       ),
-      'exclude' => 0,
-      'id' => 'field_featured_group_value',
-      'table' => 'node_data_field_featured_group',
-      'field' => 'field_featured_group_value',
       'relationship' => 'none',
     ),
   ));
   $handler->override_option('arguments', array(
-    'nid' => array(
+    'group_nid' => array(
       'default_action' => 'default',
       'style_plugin' => 'default_summary',
       'style_options' => array(),
       'wildcard' => 'all',
       'wildcard_substitution' => 'All',
-      'title' => '',
+      'title' => 'Recent content in %1',
       'breadcrumb' => '',
-      'default_argument_type' => 'node',
+      'default_argument_type' => 'og_group_node',
       'default_argument' => '',
       'validate_type' => 'og_group_types',
       'validate_fail' => 'not found',
       'break_phrase' => 0,
       'not' => 0,
-      'id' => 'nid',
-      'table' => 'node',
-      'field' => 'nid',
+      'id' => 'group_nid',
+      'table' => 'og_ancestry',
+      'field' => 'group_nid',
       'validate_user_argument_type' => 'uid',
       'validate_user_roles' => array(
         2 => 0,
@@ -897,14 +594,19 @@ function commons_core_views_default_views() {
         4 => 0,
         5 => 0,
       ),
+      'override' => array(
+        'button' => 'Use default',
+      ),
       'relationship' => 'none',
       'default_options_div_prefix' => '',
-      'default_argument_fixed' => '',
       'default_argument_user' => 0,
+      'default_argument_fixed' => '',
       'default_argument_php' => '',
       'validate_argument_node_type' => array(
         'blog' => 0,
         'poll' => 0,
+        'answer' => 0,
+        'question' => 0,
         'discussion' => 0,
         'document' => 0,
         'event' => 0,
@@ -917,6 +619,7 @@ function commons_core_views_default_views() {
       'validate_argument_nid_type' => 'nid',
       'validate_argument_vocabulary' => array(
         2 => 0,
+        1 => 0,
         3 => 0,
       ),
       'validate_argument_type' => 'tid',
@@ -928,94 +631,150 @@ function commons_core_views_default_views() {
       'validate_argument_user_flag_name' => '*relationship*',
       'validate_argument_user_flag_test' => 'flaggable',
       'validate_argument_user_flag_id_type' => 'id',
-      'validate_argument_is_member' => 'OG_VIEWS_DO_NOT_VALIDATE_MEMBERSHIP',
+      'validate_argument_is_member' => '0',
       'validate_argument_group_node_type' => array(
         'group' => 0,
       ),
       'validate_argument_php' => '',
-      'override' => array(
-        'button' => 'Override',
+      'default_taxonomy_tid_term_page' => 0,
+      'default_taxonomy_tid_node' => 0,
+      'default_taxonomy_tid_limit' => 0,
+      'default_taxonomy_tid_vids' => array(
+        2 => 0,
+        1 => 0,
+        3 => 0,
       ),
+      'default_argument_activity_log_stream_owner_type' => 'user',
     ),
   ));
-  $handler->override_option('filters', array(
-    'type' => array(
-      'operator' => 'in',
-      'value' => array(
-        'group' => 'group',
-      ),
-      'group' => '0',
-      'exposed' => FALSE,
-      'expose' => array(
-        'operator' => FALSE,
-        'label' => '',
-      ),
-      'id' => 'type',
-      'table' => 'node',
-      'field' => 'type',
-      'relationship' => 'none',
+  $handler->override_option('items_per_page', 20);
+  $handler->override_option('style_plugin', 'table');
+  $handler->override_option('style_options', array(
+    'grouping' => '',
+    'override' => 1,
+    'sticky' => 0,
+    'order' => 'asc',
+    'summary' => '',
+    'columns' => array(
+      'title' => 'title',
+      'name' => 'name',
+      'created' => 'created',
+      'type' => 'type',
     ),
-    'status' => array(
-      'operator' => '=',
-      'value' => '1',
-      'group' => '0',
-      'exposed' => FALSE,
-      'expose' => array(
-        'operator' => FALSE,
-        'label' => '',
+    'info' => array(
+      'title' => array(
+        'sortable' => 1,
+        'separator' => '',
       ),
-      'id' => 'status',
-      'table' => 'node',
-      'field' => 'status',
-      'override' => array(
-        'button' => 'Override',
+      'name' => array(
+        'sortable' => 1,
+        'separator' => '',
+      ),
+      'created' => array(
+        'sortable' => 1,
+        'separator' => '',
+      ),
+      'type' => array(
+        'sortable' => 1,
+        'separator' => '',
       ),
-      'relationship' => 'none',
     ),
+    'default' => 'created',
   ));
-  $handler->override_option('access', array(
-    'type' => 'perm',
-    'perm' => 'access content',
+  $handler->override_option('path', 'node/%/recent-content');
+  $handler->override_option('menu', array(
+    'type' => 'none',
+    'title' => '',
+    'description' => '',
+    'weight' => 0,
+    'name' => 'navigation',
   ));
-  $handler->override_option('cache', array(
+  $handler->override_option('tab_options', array(
     'type' => 'none',
+    'title' => '',
+    'description' => '',
+    'weight' => 0,
+    'name' => 'navigation',
+  ));
+
+  $views[$view->name] = $view;
+
+  // Exported view: group_block_members
+  $view = new view;
+  $view->name = 'group_block_members';
+  $view->description = 'A helper view to provide the block of group members and admins';
+  $view->tag = '';
+  $view->base_table = 'users';
+  $view->core = 0;
+  $view->api_version = '2';
+  $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
+  $handler = $view->new_display('default', 'Defaults', 'default');
+  $handler->override_option('fields', array(
+    'picture' => array(
+      'label' => '',
+      'alter' => array(
+        'alter_text' => 0,
+        'text' => '',
+        'make_link' => 0,
+        'path' => '',
+        'link_class' => '',
+        'alt' => '',
+        'prefix' => '',
+        'suffix' => '',
+        'target' => '',
+        'help' => '',
+        'trim' => 0,
+        'max_length' => '',
+        'word_boundary' => 1,
+        'ellipsis' => 1,
+        'html' => 0,
+        'strip_tags' => 0,
+      ),
+      'empty' => '',
+      'hide_empty' => 0,
+      'empty_zero' => 0,
+      'imagecache_preset' => 'user_picture_meta',
+      'exclude' => 0,
+      'id' => 'picture',
+      'table' => 'users',
+      'field' => 'picture',
+      'override' => array(
+        'button' => 'Override',
+      ),
+      'relationship' => 'none',
+    ),
   ));
-  $handler->override_option('items_per_page', 1);
-  $handler = $view->new_display('block', 'Block', 'block_1');
-  $handler->override_option('block_description', 'Group node');
-  $handler->override_option('block_caching', -1);
-  $handler = $view->new_display('feed', 'Feed', 'feed_1');
   $handler->override_option('sorts', array(
     'created' => array(
       'order' => 'DESC',
       'granularity' => 'second',
       'id' => 'created',
-      'table' => 'node',
+      'table' => 'og_uid',
       'field' => 'created',
       'override' => array(
-        'button' => 'Use default',
+        'button' => 'Override',
       ),
       'relationship' => 'none',
     ),
   ));
   $handler->override_option('arguments', array(
-    'group_nid' => array(
-      'default_action' => 'not found',
+    'nid' => array(
+      'default_action' => 'default',
       'style_plugin' => 'default_summary',
       'style_options' => array(),
       'wildcard' => 'all',
       'wildcard_substitution' => 'All',
-      'title' => 'Recent posts in %1',
+      'title' => '',
       'breadcrumb' => '',
-      'default_argument_type' => 'fixed',
+      'default_argument_type' => 'og_group_node',
       'default_argument' => '',
-      'validate_type' => 'node',
+      'validate_type' => 'og_group_types',
       'validate_fail' => 'not found',
       'break_phrase' => 0,
       'not' => 0,
-      'id' => 'group_nid',
-      'table' => 'og_ancestry',
-      'field' => 'group_nid',
+      'id' => 'nid',
+      'table' => 'og_uid',
+      'field' => 'nid',
       'validate_user_argument_type' => 'uid',
       'validate_user_roles' => array(
         2 => 0,
@@ -1024,7 +783,7 @@ function commons_core_views_default_views() {
         5 => 0,
       ),
       'override' => array(
-        'button' => 'Use default',
+        'button' => 'Override',
       ),
       'relationship' => 'none',
       'default_options_div_prefix' => '',
@@ -1042,7 +801,7 @@ function commons_core_views_default_views() {
         'notice' => 0,
         'page' => 0,
       ),
-      'validate_argument_node_access' => 1,
+      'validate_argument_node_access' => 0,
       'validate_argument_nid_type' => 'nid',
       'validate_argument_vocabulary' => array(
         2 => 0,
@@ -1065,6 +824,42 @@ function commons_core_views_default_views() {
     ),
   ));
   $handler->override_option('filters', array(
+    'is_admin' => array(
+      'operator' => 'in',
+      'value' => array(
+        1 => '1',
+      ),
+      'group' => '0',
+      'exposed' => FALSE,
+      'expose' => array(
+        'operator' => FALSE,
+        'label' => '',
+      ),
+      'id' => 'is_admin',
+      'table' => 'og_uid',
+      'field' => 'is_admin',
+      'override' => array(
+        'button' => 'Override',
+      ),
+      'relationship' => 'none',
+    ),
+    'is_active' => array(
+      'operator' => '=',
+      'value' => '1',
+      'group' => '0',
+      'exposed' => FALSE,
+      'expose' => array(
+        'operator' => FALSE,
+        'label' => '',
+      ),
+      'id' => 'is_active',
+      'table' => 'og_uid',
+      'field' => 'is_active',
+      'override' => array(
+        'button' => 'Override',
+      ),
+      'relationship' => 'none',
+    ),
     'status' => array(
       'operator' => '=',
       'value' => '1',
@@ -1075,7 +870,7 @@ function commons_core_views_default_views() {
         'label' => '',
       ),
       'id' => 'status',
-      'table' => 'node',
+      'table' => 'users',
       'field' => 'status',
       'override' => array(
         'button' => 'Override',
@@ -1084,105 +879,107 @@ function commons_core_views_default_views() {
     ),
   ));
   $handler->override_option('access', array(
-    'type' => 'perm',
-    'perm' => 'view group content rss feeds',
-  ));
-  $handler->override_option('items_per_page', 20);
-  $handler->override_option('distinct', 1);
-  $handler->override_option('style_plugin', 'rss');
-  $handler->override_option('style_options', array(
-    'mission_description' => FALSE,
-    'description' => '',
-  ));
-  $handler->override_option('row_plugin', 'node_rss');
-  $handler->override_option('row_options', array(
-    'relationship' => 'none',
-    'item_length' => 'default',
-  ));
-  $handler->override_option('path', 'node/%/feed');
-  $handler->override_option('menu', array(
     'type' => 'none',
-    'title' => '',
-    'description' => '',
-    'weight' => 0,
-    'name' => 'navigation',
   ));
-  $handler->override_option('tab_options', array(
+  $handler->override_option('cache', array(
     'type' => 'none',
-    'title' => '',
-    'description' => '',
-    'weight' => 0,
-    'name' => 'navigation',
   ));
-  $handler->override_option('displays', array(
-    'block_1' => 'block_1',
-    'default' => 0,
+  $handler->override_option('items_per_page', 6);
+  $handler->override_option('distinct', 1);
+  $handler->override_option('style_plugin', 'grid');
+  $handler->override_option('style_options', array(
+    'grouping' => '',
+    'columns' => '6',
+    'alignment' => 'horizontal',
+    'fill_single_line' => 1,
   ));
-  $handler->override_option('sitename_title', FALSE);
-
-  $views[$view->name] = $view;
-
-  // Exported view: groups_featured_groups
-  $view = new view;
-  $view->name = 'groups_featured_groups';
-  $view->description = 'A block displaying the featured groups';
-  $view->tag = '';
-  $view->base_table = 'node';
-  $view->core = 0;
-  $view->api_version = '2';
-  $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
-  $handler = $view->new_display('default', 'Defaults', 'default');
-  $handler->override_option('fields', array(
-    'field_group_image_fid' => array(
-      'label' => '',
-      'alter' => array(
-        'alter_text' => 0,
-        'text' => '',
-        'make_link' => 0,
-        'path' => '',
-        'link_class' => '',
-        'alt' => '',
-        'prefix' => '',
-        'suffix' => '',
-        'target' => '',
-        'help' => '',
-        'trim' => 0,
-        'max_length' => '',
-        'word_boundary' => 1,
-        'ellipsis' => 1,
-        'html' => 0,
-        'strip_tags' => 0,
+  $handler = $view->new_display('block', 'Group managers', 'block_1');
+  $handler->override_option('block_description', '');
+  $handler->override_option('block_caching', -1);
+  $handler = $view->new_display('block', 'Group members', 'block_2');
+  $handler->override_option('filters', array(
+    'is_admin' => array(
+      'operator' => 'not in',
+      'value' => array(
+        1 => '1',
       ),
-      'empty' => '',
-      'hide_empty' => 0,
-      'empty_zero' => 0,
-      'link_to_node' => 0,
-      'label_type' => 'none',
-      'format' => 'group_images_featured_linked',
-      'multiple' => array(
-        'group' => TRUE,
-        'multiple_number' => '',
-        'multiple_from' => '',
-        'multiple_reversed' => FALSE,
+      'group' => '0',
+      'exposed' => FALSE,
+      'expose' => array(
+        'operator' => FALSE,
+        'label' => '',
+      ),
+      'id' => 'is_admin',
+      'table' => 'og_uid',
+      'field' => 'is_admin',
+      'override' => array(
+        'button' => 'Use default',
       ),
-      'exclude' => 0,
-      'id' => 'field_group_image_fid',
-      'table' => 'node_data_field_group_image',
-      'field' => 'field_group_image_fid',
       'relationship' => 'none',
+    ),
+    'is_active' => array(
+      'operator' => '=',
+      'value' => '1',
+      'group' => '0',
+      'exposed' => FALSE,
+      'expose' => array(
+        'operator' => FALSE,
+        'label' => '',
+      ),
+      'id' => 'is_active',
+      'table' => 'og_uid',
+      'field' => 'is_active',
       'override' => array(
         'button' => 'Override',
       ),
+      'relationship' => 'none',
     ),
-    'subscribe' => array(
+    'status' => array(
+      'operator' => '=',
+      'value' => '1',
+      'group' => '0',
+      'exposed' => FALSE,
+      'expose' => array(
+        'operator' => FALSE,
+        'label' => '',
+      ),
+      'id' => 'status',
+      'table' => 'users',
+      'field' => 'status',
+      'override' => array(
+        'button' => 'Override',
+      ),
+      'relationship' => 'none',
+    ),
+  ));
+  $handler->override_option('items_per_page', 18);
+  $handler->override_option('block_description', '');
+  $handler->override_option('block_caching', -1);
+
+  $views[$view->name] = $view;
+
+  // Exported view: group_links
+  $view = new view;
+  $view->name = 'group_links';
+  $view->description = 'Links specified by group admins as being valuable to the group.';
+  $view->tag = '';
+  $view->base_table = 'node';
+  $view->core = 6;
+  $view->api_version = '2';
+  $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
+  $handler = $view->new_display('default', 'Defaults', 'default');
+  $handler->override_option('fields', array(
+    'field_grouplink_url' => array(
       'label' => '',
       'alter' => array(
         'alter_text' => 0,
         'text' => '',
         'make_link' => 0,
         'path' => '',
+        'absolute' => 0,
         'link_class' => '',
         'alt' => '',
+        'rel' => '',
         'prefix' => '',
         'suffix' => '',
         'target' => '',
@@ -1194,27 +991,183 @@ function commons_core_views_default_views() {
         'html' => 0,
         'strip_tags' => 0,
       ),
-      'empty' => '',
-      'hide_empty' => 1,
+      'empty' => 'This group has no group-specific links. ',
+      'hide_empty' => 0,
       'empty_zero' => 0,
+      'hide_alter_empty' => 0,
+      'link_to_node' => 0,
+      'label_type' => 'none',
+      'format' => 'default',
+      'multiple' => array(
+        'group' => 0,
+        'multiple_number' => '',
+        'multiple_from' => '',
+        'multiple_reversed' => 0,
+      ),
       'exclude' => 0,
-      'id' => 'subscribe',
-      'table' => 'og',
-      'field' => 'subscribe',
+      'id' => 'field_grouplink_url',
+      'table' => 'node_data_field_grouplink',
+      'field' => 'field_grouplink_url',
       'relationship' => 'none',
       'override' => array(
         'button' => 'Override',
       ),
     ),
-    'leave_group' => array(
+  ));
+  $handler->override_option('arguments', array(
+    'nid' => array(
+      'default_action' => 'default',
+      'style_plugin' => 'default_summary',
+      'style_options' => array(),
+      'wildcard' => 'all',
+      'wildcard_substitution' => 'All',
+      'title' => 'Group links',
+      'breadcrumb' => '',
+      'default_argument_type' => 'og_group_node',
+      'default_argument' => '',
+      'validate_type' => 'none',
+      'validate_fail' => 'not found',
+      'break_phrase' => 0,
+      'not' => 0,
+      'id' => 'nid',
+      'table' => 'node',
+      'field' => 'nid',
+      'validate_user_argument_type' => 'uid',
+      'validate_user_roles' => array(
+        2 => 0,
+        16 => 0,
+        6 => 0,
+        7 => 0,
+        8 => 0,
+        5 => 0,
+        11 => 0,
+        12 => 0,
+        26 => 0,
+        9 => 0,
+        21 => 0,
+      ),
+      'relationship' => 'none',
+      'default_options_div_prefix' => '',
+      'default_taxonomy_tid_term_page' => 0,
+      'default_taxonomy_tid_node' => 0,
+      'default_taxonomy_tid_limit' => 0,
+      'default_taxonomy_tid_vids' => array(
+        3 => 0,
+        4 => 0,
+        11 => 0,
+        5 => 0,
+        2 => 0,
+        6 => 0,
+        7 => 0,
+      ),
+      'default_argument_user' => 0,
+      'default_argument_fixed' => '',
+      'default_argument_activity_log_stream_owner_type' => 'user',
+      'default_argument_image_size' => '_original',
+      'default_argument_php' => '',
+      'validate_argument_node_type' => array(
+        'blog' => 0,
+        'poll' => 0,
+        'answer' => 0,
+        'question' => 0,
+        'image' => 0,
+        'discussion' => 0,
+        'document' => 0,
+        'event' => 0,
+        'wiki' => 0,
+        'client_report' => 0,
+        'employee_contact_info' => 0,
+        'escalation' => 0,
+        'mockup' => 0,
+        'rsa' => 0,
+        'rsa_credentials' => 0,
+        'forum' => 0,
+        'group' => 0,
+        'notice' => 0,
+        'page' => 0,
+        'bio' => 0,
+        'book' => 0,
+        'magic_slate' => 0,
+        'profile' => 0,
+        'pspartner' => 0,
+        'psproduct' => 0,
+        'psproject' => 0,
+        'release_notes' => 0,
+        'webform' => 0,
+      ),
+      'validate_argument_node_access' => 0,
+      'validate_argument_nid_type' => 'nid',
+      'validate_argument_vocabulary' => array(
+        3 => 0,
+        4 => 0,
+        11 => 0,
+        5 => 0,
+        2 => 0,
+        6 => 0,
+        7 => 0,
+      ),
+      'validate_argument_type' => 'tid',
+      'validate_argument_transform' => 0,
+      'validate_user_restrict_roles' => 0,
+      'validate_argument_node_flag_name' => '*relationship*',
+      'validate_argument_node_flag_test' => 'flaggable',
+      'validate_argument_node_flag_id_type' => 'id',
+      'validate_argument_user_flag_name' => '*relationship*',
+      'validate_argument_user_flag_test' => 'flaggable',
+      'validate_argument_user_flag_id_type' => 'id',
+      'image_size' => array(
+        '_original' => '_original',
+        'thumbnail' => 'thumbnail',
+        'preview' => 'preview',
+      ),
+      'validate_argument_is_member' => '0',
+      'validate_argument_group_node_type' => array(
+        'group' => 0,
+      ),
+      'validate_argument_php' => '',
+    ),
+  ));
+  $handler->override_option('access', array(
+    'type' => 'none',
+  ));
+  $handler->override_option('cache', array(
+    'type' => 'none',
+  ));
+  $handler->override_option('title', 'Group links');
+  $handler->override_option('empty_format', '1');
+  $handler->override_option('style_plugin', 'list');
+  $handler->override_option('style_options', array(
+    'grouping' => '',
+    'type' => 'ul',
+  ));
+  $handler = $view->new_display('block', 'Block', 'block_1');
+  $handler->override_option('block_description', '');
+  $handler->override_option('block_caching', -1);
+
+  $views[$view->name] = $view;
+
+  // Exported view: group_node
+  $view = new view;
+  $view->name = 'group_node';
+  $view->description = 'Group profile';
+  $view->tag = '';
+  $view->base_table = 'node';
+  $view->core = 0;
+  $view->api_version = '2';
+  $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
+  $handler = $view->new_display('default', 'Defaults', 'default');
+  $handler->override_option('fields', array(
+    'field_group_image_fid' => array(
       'label' => '',
       'alter' => array(
         'alter_text' => 0,
         'text' => '',
         'make_link' => 0,
         'path' => '',
+        'absolute' => 0,
         'link_class' => '',
         'alt' => '',
+        'rel' => '',
         'prefix' => '',
         'suffix' => '',
         'target' => '',
@@ -1227,23 +1180,29 @@ function commons_core_views_default_views() {
         'strip_tags' => 0,
       ),
       'empty' => '',
-      'hide_empty' => 1,
+      'hide_empty' => 0,
       'empty_zero' => 0,
-      'text' => 'Leave',
-      'exclude' => 0,
-      'id' => 'leave_group',
-      'table' => 'og_uid',
-      'field' => 'leave_group',
-      'override' => array(
-        'button' => 'Override',
+      'hide_alter_empty' => 1,
+      'link_to_node' => 0,
+      'label_type' => 'none',
+      'format' => 'group_images_thumb_default',
+      'multiple' => array(
+        'group' => TRUE,
+        'multiple_number' => '',
+        'multiple_from' => '',
+        'multiple_reversed' => FALSE,
       ),
+      'exclude' => 0,
+      'id' => 'field_group_image_fid',
+      'table' => 'node_data_field_group_image',
+      'field' => 'field_group_image_fid',
       'relationship' => 'none',
     ),
-    'title' => array(
+    'subscribe' => array(
       'label' => '',
       'alter' => array(
         'alter_text' => 0,
-        'text' => '',
+        'text' => '[subscribe]',
         'make_link' => 0,
         'path' => '',
         'link_class' => '',
@@ -1260,20 +1219,19 @@ function commons_core_views_default_views() {
         'strip_tags' => 0,
       ),
       'empty' => '',
-      'hide_empty' => 0,
+      'hide_empty' => 1,
       'empty_zero' => 0,
-      'link_to_node' => 1,
-      'exclude' => 1,
-      'id' => 'title',
-      'table' => 'node',
-      'field' => 'title',
+      'exclude' => 0,
+      'id' => 'subscribe',
+      'table' => 'og',
+      'field' => 'subscribe',
+      'relationship' => 'none',
       'override' => array(
         'button' => 'Override',
       ),
-      'relationship' => 'none',
     ),
-    'tid' => array(
-      'label' => 'Tags',
+    'body' => array(
+      'label' => '',
       'alter' => array(
         'alter_text' => 0,
         'text' => '',
@@ -1292,77 +1250,97 @@ function commons_core_views_default_views() {
         'html' => 0,
         'strip_tags' => 0,
       ),
-      'empty' => 'none',
+      'empty' => '',
       'hide_empty' => 0,
       'empty_zero' => 0,
-      'type' => 'separator',
-      'separator' => ', ',
-      'link_to_taxonomy' => 1,
-      'limit' => 0,
-      'vids' => array(
-        2 => 0,
-        3 => 0,
-        5 => 0,
-        6 => 0,
-        4 => 0,
-      ),
-      'exclude' => 1,
-      'id' => 'tid',
-      'table' => 'term_node',
-      'field' => 'tid',
+      'exclude' => 0,
+      'id' => 'body',
+      'table' => 'node_revisions',
+      'field' => 'body',
       'relationship' => 'none',
-      'override' => array(
-        'button' => 'Override',
-      ),
     ),
-    'description' => array(
-      'label' => '',
-      'alter' => array(
-        'alter_text' => 1,
-        'text' => '<div class="title">[title] </div>
-      <div class="tags">Tags: [tid]</div>
-      <div class="description">[description] </div>',
-        'make_link' => 0,
-        'path' => '',
-        'link_class' => '',
-        'alt' => '',
-        'prefix' => '',
-        'suffix' => '',
-        'target' => '',
-        'help' => '',
-        'trim' => 0,
-        'max_length' => '',
-        'word_boundary' => 1,
-        'ellipsis' => 1,
-        'html' => 0,
-        'strip_tags' => 0,
+  ));
+  $handler->override_option('arguments', array(
+    'nid' => array(
+      'default_action' => 'default',
+      'style_plugin' => 'default_summary',
+      'style_options' => array(),
+      'wildcard' => 'all',
+      'wildcard_substitution' => 'All',
+      'title' => '',
+      'breadcrumb' => '',
+      'default_argument_type' => 'node',
+      'default_argument' => '',
+      'validate_type' => 'og_group_types',
+      'validate_fail' => 'not found',
+      'break_phrase' => 0,
+      'not' => 0,
+      'id' => 'nid',
+      'table' => 'node',
+      'field' => 'nid',
+      'validate_user_argument_type' => 'uid',
+      'validate_user_roles' => array(
+        2 => 0,
+        3 => 0,
+        4 => 0,
+        5 => 0,
       ),
-      'empty' => '',
-      'hide_empty' => 0,
-      'empty_zero' => 0,
-      'exclude' => 0,
-      'id' => 'description',
-      'table' => 'og',
-      'field' => 'description',
       'relationship' => 'none',
+      'default_options_div_prefix' => '',
+      'default_argument_fixed' => '',
+      'default_argument_user' => 0,
+      'default_argument_php' => '',
+      'validate_argument_node_type' => array(
+        'blog' => 0,
+        'poll' => 0,
+        'discussion' => 0,
+        'document' => 0,
+        'event' => 0,
+        'wiki' => 0,
+        'group' => 0,
+        'notice' => 0,
+        'page' => 0,
+      ),
+      'validate_argument_node_access' => 0,
+      'validate_argument_nid_type' => 'nid',
+      'validate_argument_vocabulary' => array(
+        2 => 0,
+        3 => 0,
+      ),
+      'validate_argument_type' => 'tid',
+      'validate_argument_transform' => 0,
+      'validate_user_restrict_roles' => 0,
+      'validate_argument_node_flag_name' => '*relationship*',
+      'validate_argument_node_flag_test' => 'flaggable',
+      'validate_argument_node_flag_id_type' => 'id',
+      'validate_argument_user_flag_name' => '*relationship*',
+      'validate_argument_user_flag_test' => 'flaggable',
+      'validate_argument_user_flag_id_type' => 'id',
+      'validate_argument_is_member' => 'OG_VIEWS_DO_NOT_VALIDATE_MEMBERSHIP',
+      'validate_argument_group_node_type' => array(
+        'group' => 0,
+      ),
+      'validate_argument_php' => '',
+      'override' => array(
+        'button' => 'Override',
+      ),
     ),
   ));
   $handler->override_option('filters', array(
-    'type_groups_all' => array(
-      'operator' => '=',
-      'value' => '',
+    'type' => array(
+      'operator' => 'in',
+      'value' => array(
+        'group' => 'group',
+      ),
       'group' => '0',
       'exposed' => FALSE,
       'expose' => array(
         'operator' => FALSE,
         'label' => '',
       ),
-      'id' => 'type_groups_all',
-      'table' => 'og',
-      'field' => 'type_groups_all',
-      'override' => array(
-        'button' => 'Override',
-      ),
+      'id' => 'type',
+      'table' => 'node',
+      'field' => 'type',
       'relationship' => 'none',
     ),
     'status' => array(
@@ -1382,118 +1360,46 @@ function commons_core_views_default_views() {
       ),
       'relationship' => 'none',
     ),
-    'directory' => array(
-      'operator' => '=',
-      'value' => '1',
-      'group' => '0',
-      'exposed' => FALSE,
-      'expose' => array(
-        'operator' => FALSE,
-        'label' => '',
-      ),
-      'id' => 'directory',
-      'table' => 'og',
-      'field' => 'directory',
-      'relationship' => 'none',
-    ),
-    'private' => array(
-      'operator' => '=',
-      'value' => '0',
-      'group' => '0',
-      'exposed' => FALSE,
-      'expose' => array(
-        'operator' => FALSE,
-        'label' => '',
-      ),
-      'id' => 'private',
-      'table' => 'og',
-      'field' => 'private',
-      'relationship' => 'none',
-    ),
-    'field_featured_group_value_many_to_one' => array(
-      'operator' => 'or',
-      'value' => array(
-        'Featured' => 'Featured',
-      ),
-      'group' => '0',
-      'exposed' => FALSE,
-      'expose' => array(
-        'operator' => FALSE,
-        'label' => '',
-      ),
-      'id' => 'field_featured_group_value_many_to_one',
-      'table' => 'node_data_field_featured_group',
-      'field' => 'field_featured_group_value_many_to_one',
-      'relationship' => 'none',
-      'reduce_duplicates' => 0,
-    ),
   ));
   $handler->override_option('access', array(
-    'type' => 'none',
+    'type' => 'perm',
+    'perm' => 'access content',
   ));
   $handler->override_option('cache', array(
     'type' => 'none',
   ));
-  $handler->override_option('title', 'Featured groups');
-  $handler->override_option('empty_format', '1');
-  $handler->override_option('items_per_page', 0);
-  $handler->override_option('use_pager', '0');
-  $handler->override_option('pager_element', 2);
-  $handler->override_option('distinct', 1);
-  $handler->override_option('style_plugin', 'slideshow');
-  $handler->override_option('style_options', array(
-    'type' => 'ul',
-    'mode' => 'views_slideshow_singleframe',
-    'views_slideshow_singleframe-prefix' => '',
-    'views_slideshow_singleframe' => array(
-      'timeout' => '5000',
-      'delay' => '0',
-      'speed' => '700',
-      'start_paused' => 0,
-      'fixed_height' => '1',
-      'random' => '1',
-      'pause' => '1',
-      'pause_on_click' => '0',
-      'pause_when_hidden' => 0,
-      'pause_when_hidden_type' => 'full',
-      'amount_allowed_visible' => '',
-      'remember_slide' => 0,
-      'remember_slide_days' => '1',
-      'controls' => '1',
-      'pager' => '0',
-      'pager_type' => 'Numbered',
-      'pager_hover' => '2',
-      'pager_click_to_page' => 0,
-      'image_count' => '0',
-      'items_per_slide' => '1',
-      'effect' => 'scrollHorz',
-      'sync' => '1',
-      'nowrap' => '0',
-      'advanced' => '',
-      'ie' => array(
-        'cleartype' => 'true',
-        'cleartypenobg' => 'false',
-      ),
-    ),
-  ));
+  $handler->override_option('items_per_page', 1);
   $handler = $view->new_display('block', 'Block', 'block_1');
-  $handler->override_option('block_description', 'Featured groups (slider)');
+  $handler->override_option('block_description', 'Group node');
   $handler->override_option('block_caching', -1);
 
   $views[$view->name] = $view;
 
-  // Exported view: groups_main_listing
+  // Exported view: group_tab_content
   $view = new view;
-  $view->name = 'groups_main_listing';
-  $view->description = 'The main listing of all groups';
+  $view->name = 'group_tab_content';
+  $view->description = 'Show a tab for group content';
   $view->tag = '';
   $view->base_table = 'node';
-  $view->core = 0;
+  $view->core = 6;
   $view->api_version = '2';
   $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
   $handler = $view->new_display('default', 'Defaults', 'default');
+  $handler->override_option('relationships', array(
+    'group_nid' => array(
+      'label' => 'Group node (post)',
+      'required' => 0,
+      'id' => 'group_nid',
+      'table' => 'og_ancestry',
+      'field' => 'group_nid',
+      'override' => array(
+        'button' => 'Override',
+      ),
+      'relationship' => 'none',
+    ),
+  ));
   $handler->override_option('fields', array(
-    'field_group_image_fid' => array(
+    'picture' => array(
       'label' => '',
       'alter' => array(
         'alter_text' => 0,
@@ -1510,41 +1416,31 @@ function commons_core_views_default_views() {
         'max_length' => '',
         'word_boundary' => 1,
         'ellipsis' => 1,
-        'html' => 0,
         'strip_tags' => 0,
+        'html' => 0,
       ),
       'empty' => '',
       'hide_empty' => 0,
       'empty_zero' => 0,
-      'link_to_node' => 0,
-      'label_type' => 'none',
-      'format' => 'group_images_medium_linked',
-      'multiple' => array(
-        'group' => TRUE,
-        'multiple_number' => '',
-        'multiple_from' => '',
-        'multiple_reversed' => FALSE,
-      ),
+      'imagecache_preset' => 'user_picture_meta',
       'exclude' => 0,
-      'id' => 'field_group_image_fid',
-      'table' => 'node_data_field_group_image',
-      'field' => 'field_group_image_fid',
+      'id' => 'picture',
+      'table' => 'users',
+      'field' => 'picture',
       'override' => array(
         'button' => 'Override',
       ),
       'relationship' => 'none',
     ),
     'title' => array(
-      'label' => 'Title',
+      'label' => '',
       'alter' => array(
         'alter_text' => 0,
         'text' => '',
         'make_link' => 0,
         'path' => '',
-        'absolute' => 0,
         'link_class' => '',
         'alt' => '',
-        'rel' => '',
         'prefix' => '',
         'suffix' => '',
         'target' => '',
@@ -1559,22 +1455,21 @@ function commons_core_views_default_views() {
       'empty' => '',
       'hide_empty' => 0,
       'empty_zero' => 0,
-      'hide_alter_empty' => 1,
       'link_to_node' => 1,
       'exclude' => 0,
       'id' => 'title',
       'table' => 'node',
       'field' => 'title',
-      'relationship' => 'none',
       'override' => array(
         'button' => 'Override',
       ),
+      'relationship' => 'none',
     ),
-    'tid' => array(
-      'label' => '',
+    'name' => array(
+      'label' => 'Posted by',
       'alter' => array(
-        'alter_text' => 1,
-        'text' => '<em>[tid]</em>',
+        'alter_text' => 0,
+        'text' => '',
         'make_link' => 0,
         'path' => '',
         'absolute' => 0,
@@ -1593,29 +1488,23 @@ function commons_core_views_default_views() {
         'strip_tags' => 0,
       ),
       'empty' => '',
-      'hide_empty' => 1,
+      'hide_empty' => 0,
       'empty_zero' => 0,
       'hide_alter_empty' => 1,
-      'type' => 'separator',
-      'separator' => ', ',
-      'link_to_taxonomy' => 1,
-      'limit' => 0,
-      'vids' => array(
-        2 => 0,
-        1 => 0,
-        3 => 0,
-      ),
+      'link_to_user' => 1,
+      'overwrite_anonymous' => 0,
+      'anonymous_text' => '',
       'exclude' => 0,
-      'id' => 'tid',
-      'table' => 'term_node',
-      'field' => 'tid',
+      'id' => 'name',
+      'table' => 'users',
+      'field' => 'name',
       'override' => array(
         'button' => 'Override',
       ),
       'relationship' => 'none',
     ),
-    'posts_count' => array(
-      'label' => 'Posts',
+    'created' => array(
+      'label' => '',
       'alter' => array(
         'alter_text' => 0,
         'text' => '',
@@ -1640,73 +1529,26 @@ function commons_core_views_default_views() {
       'hide_empty' => 0,
       'empty_zero' => 0,
       'hide_alter_empty' => 1,
-      'set_precision' => FALSE,
-      'precision' => 0,
-      'decimal' => '.',
-      'separator' => ',',
-      'format_plural' => 0,
-      'format_plural_singular' => '1',
-      'format_plural_plural' => '@count',
-      'prefix' => '',
-      'suffix' => '',
+      'date_format' => 'small',
+      'custom_date_format' => '',
       'exclude' => 0,
-      'id' => 'posts_count',
-      'table' => 'og_statistics',
-      'field' => 'posts_count',
-      'relationship' => 'none',
-    ),
-    'members_count' => array(
-      'label' => 'Members',
-      'alter' => array(
-        'alter_text' => 0,
-        'text' => '',
-        'make_link' => 0,
-        'path' => '',
-        'absolute' => 0,
-        'link_class' => '',
-        'alt' => '',
-        'rel' => '',
-        'prefix' => '',
-        'suffix' => '',
-        'target' => '',
-        'help' => '',
-        'trim' => 0,
-        'max_length' => '',
-        'word_boundary' => 1,
-        'ellipsis' => 1,
-        'html' => 0,
-        'strip_tags' => 0,
+      'id' => 'created',
+      'table' => 'node',
+      'field' => 'created',
+      'override' => array(
+        'button' => 'Override',
       ),
-      'empty' => '',
-      'hide_empty' => 0,
-      'empty_zero' => 0,
-      'hide_alter_empty' => 1,
-      'set_precision' => FALSE,
-      'precision' => 0,
-      'decimal' => '.',
-      'separator' => ',',
-      'format_plural' => 0,
-      'format_plural_singular' => '1',
-      'format_plural_plural' => '@count',
-      'prefix' => '',
-      'suffix' => '',
-      'exclude' => 0,
-      'id' => 'members_count',
-      'table' => 'og_statistics',
-      'field' => 'members_count',
       'relationship' => 'none',
     ),
-    'description' => array(
-      'label' => 'Description',
+    'timestamp' => array(
+      'label' => '',
       'alter' => array(
         'alter_text' => 0,
         'text' => '',
         'make_link' => 0,
         'path' => '',
-        'absolute' => 0,
         'link_class' => '',
         'alt' => '',
-        'rel' => '',
         'prefix' => '',
         'suffix' => '',
         'target' => '',
@@ -1715,24 +1557,25 @@ function commons_core_views_default_views() {
         'max_length' => '',
         'word_boundary' => 1,
         'ellipsis' => 1,
-        'html' => 0,
         'strip_tags' => 0,
+        'html' => 0,
       ),
       'empty' => '',
       'hide_empty' => 0,
       'empty_zero' => 0,
-      'hide_alter_empty' => 1,
+      'link_to_node' => 0,
+      'comments' => 1,
       'exclude' => 0,
-      'id' => 'description',
-      'table' => 'og',
-      'field' => 'description',
-      'relationship' => 'none',
+      'id' => 'timestamp',
+      'table' => 'history_user',
+      'field' => 'timestamp',
       'override' => array(
         'button' => 'Override',
       ),
+      'relationship' => 'none',
     ),
-    'created' => array(
-      'label' => 'Created',
+    'teaser' => array(
+      'label' => '',
       'alter' => array(
         'alter_text' => 0,
         'text' => '',
@@ -1746,30 +1589,31 @@ function commons_core_views_default_views() {
         'suffix' => '',
         'target' => '',
         'help' => '',
-        'trim' => 0,
-        'max_length' => '',
+        'trim' => 1,
+        'max_length' => '210',
         'word_boundary' => 1,
         'ellipsis' => 1,
-        'html' => 0,
+        'html' => 1,
         'strip_tags' => 0,
       ),
       'empty' => '',
       'hide_empty' => 0,
       'empty_zero' => 0,
       'hide_alter_empty' => 1,
-      'date_format' => 'custom',
-      'custom_date_format' => 'Y-m-d',
       'exclude' => 0,
-      'id' => 'created',
-      'table' => 'node',
-      'field' => 'created',
+      'id' => 'teaser',
+      'table' => 'node_revisions',
+      'field' => 'teaser',
+      'override' => array(
+        'button' => 'Override',
+      ),
       'relationship' => 'none',
     ),
-    'subscribe' => array(
+    'comment_count' => array(
       'label' => '',
       'alter' => array(
-        'alter_text' => 0,
-        'text' => '',
+        'alter_text' => 1,
+        'text' => '[comment_count] comment(s)',
         'make_link' => 0,
         'path' => '',
         'link_class' => '',
@@ -1785,20 +1629,26 @@ function commons_core_views_default_views() {
         'html' => 0,
         'strip_tags' => 0,
       ),
-      'empty' => '',
-      'hide_empty' => 1,
+      'empty' => '-',
+      'hide_empty' => 0,
       'empty_zero' => 0,
+      'set_precision' => FALSE,
+      'precision' => 0,
+      'decimal' => '.',
+      'separator' => ',',
+      'prefix' => '',
+      'suffix' => '',
       'exclude' => 0,
-      'id' => 'subscribe',
-      'table' => 'og',
-      'field' => 'subscribe',
-      'relationship' => 'none',
+      'id' => 'comment_count',
+      'table' => 'node_comment_statistics',
+      'field' => 'comment_count',
       'override' => array(
         'button' => 'Override',
       ),
+      'relationship' => 'none',
     ),
-    'leave_group' => array(
-      'label' => '',
+    'tid' => array(
+      'label' => 'Tags',
       'alter' => array(
         'alter_text' => 0,
         'text' => '',
@@ -1823,11 +1673,19 @@ function commons_core_views_default_views() {
       'hide_empty' => 1,
       'empty_zero' => 0,
       'hide_alter_empty' => 1,
-      'text' => 'Leave',
+      'type' => 'separator',
+      'separator' => ', ',
+      'link_to_taxonomy' => 1,
+      'limit' => 0,
+      'vids' => array(
+        2 => 0,
+        1 => 0,
+        3 => 0,
+      ),
       'exclude' => 0,
-      'id' => 'leave_group',
-      'table' => 'og_uid',
-      'field' => 'leave_group',
+      'id' => 'tid',
+      'table' => 'term_node',
+      'field' => 'tid',
       'override' => array(
         'button' => 'Override',
       ),
@@ -1835,11 +1693,16 @@ function commons_core_views_default_views() {
     ),
   ));
   $handler->override_option('sorts', array(
+    'score' => array(
+      'order' => 'DESC',
+      'id' => 'score',
+      'table' => 'search_index',
+      'field' => 'score',
+      'relationship' => 'none',
+    ),
     'created' => array(
       'order' => 'DESC',
       'granularity' => 'second',
-      'exposed' => TRUE,
-      'identifier' => 'unsorted',
       'id' => 'created',
       'table' => 'node',
       'field' => 'created',
@@ -1847,302 +1710,1732 @@ function commons_core_views_default_views() {
         'button' => 'Override',
       ),
       'relationship' => 'none',
-      'expose' => array(
-        'label' => 'Created',
-        'identifier' => 'created_sort',
-        'order' => 'unsorted',
+    ),
+  ));
+  $handler->override_option('arguments', array(
+    'group_nid' => array(
+      'default_action' => 'default',
+      'style_plugin' => 'default_summary',
+      'style_options' => array(),
+      'wildcard' => 'all',
+      'wildcard_substitution' => 'All',
+      'title' => '',
+      'breadcrumb' => '',
+      'default_argument_type' => 'node',
+      'default_argument' => '',
+      'validate_type' => 'og_group_types',
+      'validate_fail' => 'not found',
+      'break_phrase' => 0,
+      'not' => 0,
+      'id' => 'group_nid',
+      'table' => 'og_ancestry',
+      'field' => 'group_nid',
+      'validate_user_argument_type' => 'uid',
+      'validate_user_roles' => array(
+        2 => 0,
+        3 => 0,
+        4 => 0,
+        5 => 0,
+      ),
+      'override' => array(
+        'button' => 'Override',
+      ),
+      'relationship' => 'none',
+      'default_options_div_prefix' => '',
+      'default_argument_user' => 0,
+      'default_argument_fixed' => '',
+      'default_argument_php' => '',
+      'validate_argument_node_type' => array(
+        'blog' => 0,
+        'poll' => 0,
+        'answer' => 0,
+        'question' => 0,
+        'discussion' => 0,
+        'document' => 0,
+        'event' => 0,
+        'wiki' => 0,
+        'group' => 0,
+        'notice' => 0,
+        'page' => 0,
+      ),
+      'validate_argument_node_access' => 0,
+      'validate_argument_nid_type' => 'nid',
+      'validate_argument_vocabulary' => array(
+        2 => 0,
+        1 => 0,
+        3 => 0,
+      ),
+      'validate_argument_type' => 'tid',
+      'validate_argument_transform' => 0,
+      'validate_user_restrict_roles' => 0,
+      'validate_argument_node_flag_name' => '*relationship*',
+      'validate_argument_node_flag_test' => 'flaggable',
+      'validate_argument_node_flag_id_type' => 'id',
+      'validate_argument_user_flag_name' => '*relationship*',
+      'validate_argument_user_flag_test' => 'flaggable',
+      'validate_argument_user_flag_id_type' => 'id',
+      'validate_argument_is_member' => '0',
+      'validate_argument_group_node_type' => array(
+        'group' => 0,
+      ),
+      'validate_argument_php' => '',
+      'default_taxonomy_tid_term_page' => 0,
+      'default_taxonomy_tid_node' => 0,
+      'default_taxonomy_tid_limit' => 0,
+      'default_taxonomy_tid_vids' => array(
+        2 => 0,
+        1 => 0,
+        3 => 0,
       ),
+      'default_argument_activity_log_stream_owner_type' => 'user',
     ),
   ));
   $handler->override_option('filters', array(
-    'status' => array(
-      'id' => 'status',
-      'table' => 'node',
-      'field' => 'status',
+    'picg' => array(
       'operator' => '=',
-      'value' => 1,
-      'group' => 0,
+      'value' => '',
+      'group' => '0',
       'exposed' => FALSE,
       'expose' => array(
         'operator' => FALSE,
         'label' => '',
       ),
+      'id' => 'picg',
+      'table' => 'og_ancestry',
+      'field' => 'picg',
       'relationship' => 'none',
-      'expose_button' => array(
-        'button' => 'Expose',
-      ),
     ),
-    'type_groups_all' => array(
+    'type' => array(
+      'operator' => 'in',
+      'value' => array(
+        'blog' => 'blog',
+        'discussion' => 'discussion',
+        'document' => 'document',
+        'event' => 'event',
+        'poll' => 'poll',
+        'question' => 'question',
+        'wiki' => 'wiki',
+      ),
+      'group' => '0',
+      'exposed' => TRUE,
+      'expose' => array(
+        'use_operator' => 0,
+        'operator' => 'type_op',
+        'identifier' => 'type',
+        'label' => 'Content type',
+        'optional' => 1,
+        'single' => 1,
+        'remember' => 0,
+        'reduce' => 1,
+      ),
+      'id' => 'type',
+      'table' => 'node',
+      'field' => 'type',
+      'override' => array(
+        'button' => 'Override',
+      ),
+      'relationship' => 'none',
+    ),
+    'status' => array(
+      'operator' => '=',
+      'value' => '1',
+      'group' => '0',
+      'exposed' => FALSE,
+      'expose' => array(
+        'operator' => FALSE,
+        'label' => '',
+      ),
+      'id' => 'status',
+      'table' => 'node',
+      'field' => 'status',
+      'override' => array(
+        'button' => 'Override',
+      ),
+      'relationship' => 'none',
+    ),
+    'keys' => array(
+      'operator' => 'optional',
+      'value' => '',
+      'group' => '0',
+      'exposed' => TRUE,
+      'expose' => array(
+        'use_operator' => 0,
+        'operator' => 'keys_op',
+        'identifier' => 'keys',
+        'label' => 'Keywords',
+        'optional' => 1,
+        'remember' => 0,
+      ),
+      'id' => 'keys',
+      'table' => 'search_index',
+      'field' => 'keys',
+      'override' => array(
+        'button' => 'Override',
+      ),
+      'relationship' => 'none',
+    ),
+    'uid' => array(
+      'operator' => 'in',
+      'value' => '',
+      'group' => '0',
+      'exposed' => TRUE,
+      'expose' => array(
+        'use_operator' => 0,
+        'operator' => 'uid_op',
+        'identifier' => 'uid',
+        'label' => 'Author',
+        'optional' => 1,
+        'remember' => 0,
+        'reduce' => 0,
+      ),
+      'id' => 'uid',
+      'table' => 'users',
+      'field' => 'uid',
+      'override' => array(
+        'button' => 'Override',
+      ),
+      'relationship' => 'none',
+    ),
+  ));
+  $handler->override_option('access', array(
+    'type' => 'perm',
+    'perm' => 'access content',
+  ));
+  $handler->override_option('cache', array(
+    'type' => 'none',
+  ));
+  $handler->override_option('header_format', '1');
+  $handler->override_option('header_empty', 0);
+  $handler->override_option('empty', 'There is no matching content in the group.');
+  $handler->override_option('empty_format', '1');
+  $handler->override_option('use_ajax', TRUE);
+  $handler->override_option('use_pager', '1');
+  $handler->override_option('distinct', 1);
+  $handler->override_option('style_plugin', 'list');
+  $handler->override_option('style_options', array(
+    'grouping' => '',
+    'type' => 'ul',
+  ));
+  $handler->override_option('row_options', array(
+    'inline' => array(
+      'picture' => 'picture',
+      'created' => 'created',
+      'name' => 'name',
+      'timestamp' => 'timestamp',
+    ),
+    'separator' => '',
+    'hide_empty' => 0,
+  ));
+  $handler = $view->new_display('block', 'Block', 'block_1');
+  $handler->override_option('block_description', '');
+  $handler->override_option('block_caching', -1);
+
+  $views[$view->name] = $view;
+
+  // Exported view: groups_featured_groups
+  $view = new view;
+  $view->name = 'groups_featured_groups';
+  $view->description = 'A block displaying the featured groups';
+  $view->tag = '';
+  $view->base_table = 'node';
+  $view->core = 0;
+  $view->api_version = '2';
+  $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
+  $handler = $view->new_display('default', 'Defaults', 'default');
+  $handler->override_option('fields', array(
+    'field_group_image_fid' => array(
+      'label' => '',
+      'alter' => array(
+        'alter_text' => 0,
+        'text' => '',
+        'make_link' => 0,
+        'path' => '',
+        'link_class' => '',
+        'alt' => '',
+        'prefix' => '',
+        'suffix' => '',
+        'target' => '',
+        'help' => '',
+        'trim' => 0,
+        'max_length' => '',
+        'word_boundary' => 1,
+        'ellipsis' => 1,
+        'html' => 0,
+        'strip_tags' => 0,
+      ),
+      'empty' => '',
+      'hide_empty' => 0,
+      'empty_zero' => 0,
+      'link_to_node' => 0,
+      'label_type' => 'none',
+      'format' => 'group_images_featured_linked',
+      'multiple' => array(
+        'group' => TRUE,
+        'multiple_number' => '',
+        'multiple_from' => '',
+        'multiple_reversed' => FALSE,
+      ),
+      'exclude' => 0,
+      'id' => 'field_group_image_fid',
+      'table' => 'node_data_field_group_image',
+      'field' => 'field_group_image_fid',
+      'relationship' => 'none',
+      'override' => array(
+        'button' => 'Override',
+      ),
+    ),
+    'subscribe' => array(
+      'label' => '',
+      'alter' => array(
+        'alter_text' => 0,
+        'text' => '',
+        'make_link' => 0,
+        'path' => '',
+        'link_class' => '',
+        'alt' => '',
+        'prefix' => '',
+        'suffix' => '',
+        'target' => '',
+        'help' => '',
+        'trim' => 0,
+        'max_length' => '',
+        'word_boundary' => 1,
+        'ellipsis' => 1,
+        'html' => 0,
+        'strip_tags' => 0,
+      ),
+      'empty' => '',
+      'hide_empty' => 1,
+      'empty_zero' => 0,
+      'exclude' => 0,
+      'id' => 'subscribe',
+      'table' => 'og',
+      'field' => 'subscribe',
+      'relationship' => 'none',
+      'override' => array(
+        'button' => 'Override',
+      ),
+    ),
+    'leave_group' => array(
+      'label' => '',
+      'alter' => array(
+        'alter_text' => 0,
+        'text' => '',
+        'make_link' => 0,
+        'path' => '',
+        'link_class' => '',
+        'alt' => '',
+        'prefix' => '',
+        'suffix' => '',
+        'target' => '',
+        'help' => '',
+        'trim' => 0,
+        'max_length' => '',
+        'word_boundary' => 1,
+        'ellipsis' => 1,
+        'html' => 0,
+        'strip_tags' => 0,
+      ),
+      'empty' => '',
+      'hide_empty' => 1,
+      'empty_zero' => 0,
+      'text' => 'Leave',
+      'exclude' => 0,
+      'id' => 'leave_group',
+      'table' => 'og_uid',
+      'field' => 'leave_group',
+      'override' => array(
+        'button' => 'Override',
+      ),
+      'relationship' => 'none',
+    ),
+    'title' => array(
+      'label' => '',
+      'alter' => array(
+        'alter_text' => 0,
+        'text' => '',
+        'make_link' => 0,
+        'path' => '',
+        'link_class' => '',
+        'alt' => '',
+        'prefix' => '',
+        'suffix' => '',
+        'target' => '',
+        'help' => '',
+        'trim' => 0,
+        'max_length' => '',
+        'word_boundary' => 1,
+        'ellipsis' => 1,
+        'html' => 0,
+        'strip_tags' => 0,
+      ),
+      'empty' => '',
+      'hide_empty' => 0,
+      'empty_zero' => 0,
+      'link_to_node' => 1,
+      'exclude' => 1,
+      'id' => 'title',
+      'table' => 'node',
+      'field' => 'title',
+      'override' => array(
+        'button' => 'Override',
+      ),
+      'relationship' => 'none',
+    ),
+    'tid' => array(
+      'label' => 'Tags',
+      'alter' => array(
+        'alter_text' => 0,
+        'text' => '',
+        'make_link' => 0,
+        'path' => '',
+        'link_class' => '',
+        'alt' => '',
+        'prefix' => '',
+        'suffix' => '',
+        'target' => '',
+        'help' => '',
+        'trim' => 0,
+        'max_length' => '',
+        'word_boundary' => 1,
+        'ellipsis' => 1,
+        'html' => 0,
+        'strip_tags' => 0,
+      ),
+      'empty' => 'none',
+      'hide_empty' => 0,
+      'empty_zero' => 0,
+      'type' => 'separator',
+      'separator' => ', ',
+      'link_to_taxonomy' => 1,
+      'limit' => 0,
+      'vids' => array(
+        2 => 0,
+        3 => 0,
+        5 => 0,
+        6 => 0,
+        4 => 0,
+      ),
+      'exclude' => 1,
+      'id' => 'tid',
+      'table' => 'term_node',
+      'field' => 'tid',
+      'relationship' => 'none',
+      'override' => array(
+        'button' => 'Override',
+      ),
+    ),
+    'description' => array(
+      'label' => '',
+      'alter' => array(
+        'alter_text' => 1,
+        'text' => '<div class="title">[title] </div>
+      <div class="tags">Tags: [tid]</div>
+      <div class="description">[description] </div>',
+        'make_link' => 0,
+        'path' => '',
+        'link_class' => '',
+        'alt' => '',
+        'prefix' => '',
+        'suffix' => '',
+        'target' => '',
+        'help' => '',
+        'trim' => 0,
+        'max_length' => '',
+        'word_boundary' => 1,
+        'ellipsis' => 1,
+        'html' => 0,
+        'strip_tags' => 0,
+      ),
+      'empty' => '',
+      'hide_empty' => 0,
+      'empty_zero' => 0,
+      'exclude' => 0,
+      'id' => 'description',
+      'table' => 'og',
+      'field' => 'description',
+      'relationship' => 'none',
+    ),
+  ));
+  $handler->override_option('filters', array(
+    'type_groups_all' => array(
+      'operator' => '=',
+      'value' => '',
+      'group' => '0',
+      'exposed' => FALSE,
+      'expose' => array(
+        'operator' => FALSE,
+        'label' => '',
+      ),
+      'id' => 'type_groups_all',
+      'table' => 'og',
+      'field' => 'type_groups_all',
+      'override' => array(
+        'button' => 'Override',
+      ),
+      'relationship' => 'none',
+    ),
+    'status' => array(
+      'operator' => '=',
+      'value' => '1',
+      'group' => '0',
+      'exposed' => FALSE,
+      'expose' => array(
+        'operator' => FALSE,
+        'label' => '',
+      ),
+      'id' => 'status',
+      'table' => 'node',
+      'field' => 'status',
+      'override' => array(
+        'button' => 'Override',
+      ),
+      'relationship' => 'none',
+    ),
+    'directory' => array(
+      'operator' => '=',
+      'value' => '1',
+      'group' => '0',
+      'exposed' => FALSE,
+      'expose' => array(
+        'operator' => FALSE,
+        'label' => '',
+      ),
+      'id' => 'directory',
+      'table' => 'og',
+      'field' => 'directory',
+      'relationship' => 'none',
+    ),
+    'private' => array(
+      'operator' => '=',
+      'value' => '0',
+      'group' => '0',
+      'exposed' => FALSE,
+      'expose' => array(
+        'operator' => FALSE,
+        'label' => '',
+      ),
+      'id' => 'private',
+      'table' => 'og',
+      'field' => 'private',
+      'relationship' => 'none',
+    ),
+    'field_featured_group_value_many_to_one' => array(
+      'operator' => 'or',
+      'value' => array(
+        'Featured' => 'Featured',
+      ),
+      'group' => '0',
+      'exposed' => FALSE,
+      'expose' => array(
+        'operator' => FALSE,
+        'label' => '',
+      ),
+      'id' => 'field_featured_group_value_many_to_one',
+      'table' => 'node_data_field_featured_group',
+      'field' => 'field_featured_group_value_many_to_one',
+      'relationship' => 'none',
+      'reduce_duplicates' => 0,
+    ),
+  ));
+  $handler->override_option('access', array(
+    'type' => 'none',
+  ));
+  $handler->override_option('cache', array(
+    'type' => 'none',
+  ));
+  $handler->override_option('title', 'Featured groups');
+  $handler->override_option('empty_format', '1');
+  $handler->override_option('items_per_page', 0);
+  $handler->override_option('use_pager', '0');
+  $handler->override_option('pager_element', 2);
+  $handler->override_option('distinct', 1);
+  $handler->override_option('style_plugin', 'slideshow');
+  $handler->override_option('style_options', array(
+    'type' => 'ul',
+    'mode' => 'views_slideshow_singleframe',
+    'views_slideshow_singleframe-prefix' => '',
+    'views_slideshow_singleframe' => array(
+      'timeout' => '5000',
+      'delay' => '0',
+      'speed' => '700',
+      'start_paused' => 0,
+      'fixed_height' => '1',
+      'random' => '1',
+      'pause' => '1',
+      'pause_on_click' => '0',
+      'pause_when_hidden' => 0,
+      'pause_when_hidden_type' => 'full',
+      'amount_allowed_visible' => '',
+      'remember_slide' => 0,
+      'remember_slide_days' => '1',
+      'controls' => '1',
+      'pager' => '0',
+      'pager_type' => 'Numbered',
+      'pager_hover' => '2',
+      'pager_click_to_page' => 0,
+      'image_count' => '0',
+      'items_per_slide' => '1',
+      'effect' => 'scrollHorz',
+      'sync' => '1',
+      'nowrap' => '0',
+      'advanced' => '',
+      'ie' => array(
+        'cleartype' => 'true',
+        'cleartypenobg' => 'false',
+      ),
+    ),
+  ));
+  $handler = $view->new_display('block', 'Block', 'block_1');
+  $handler->override_option('block_description', 'Featured groups (slider)');
+  $handler->override_option('block_caching', -1);
+
+  $views[$view->name] = $view;
+
+  // Exported view: groups_main_listing
+  $view = new view;
+  $view->name = 'groups_main_listing';
+  $view->description = 'The main listing of all groups';
+  $view->tag = '';
+  $view->base_table = 'node';
+  $view->core = 0;
+  $view->api_version = '2';
+  $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
+  $handler = $view->new_display('default', 'Defaults', 'default');
+  $handler->override_option('fields', array(
+    'field_group_image_fid' => array(
+      'label' => '',
+      'alter' => array(
+        'alter_text' => 0,
+        'text' => '',
+        'make_link' => 0,
+        'path' => '',
+        'link_class' => '',
+        'alt' => '',
+        'prefix' => '',
+        'suffix' => '',
+        'target' => '',
+        'help' => '',
+        'trim' => 0,
+        'max_length' => '',
+        'word_boundary' => 1,
+        'ellipsis' => 1,
+        'html' => 0,
+        'strip_tags' => 0,
+      ),
+      'empty' => '',
+      'hide_empty' => 0,
+      'empty_zero' => 0,
+      'link_to_node' => 0,
+      'label_type' => 'none',
+      'format' => 'group_images_medium_linked',
+      'multiple' => array(
+        'group' => TRUE,
+        'multiple_number' => '',
+        'multiple_from' => '',
+        'multiple_reversed' => FALSE,
+      ),
+      'exclude' => 0,
+      'id' => 'field_group_image_fid',
+      'table' => 'node_data_field_group_image',
+      'field' => 'field_group_image_fid',
+      'override' => array(
+        'button' => 'Override',
+      ),
+      'relationship' => 'none',
+    ),
+    'title' => array(
+      'label' => 'Title',
+      'alter' => array(
+        'alter_text' => 0,
+        'text' => '',
+        'make_link' => 0,
+        'path' => '',
+        'absolute' => 0,
+        'link_class' => '',
+        'alt' => '',
+        'rel' => '',
+        'prefix' => '',
+        'suffix' => '',
+        'target' => '',
+        'help' => '',
+        'trim' => 0,
+        'max_length' => '',
+        'word_boundary' => 1,
+        'ellipsis' => 1,
+        'html' => 0,
+        'strip_tags' => 0,
+      ),
+      'empty' => '',
+      'hide_empty' => 0,
+      'empty_zero' => 0,
+      'hide_alter_empty' => 1,
+      'link_to_node' => 1,
+      'exclude' => 0,
+      'id' => 'title',
+      'table' => 'node',
+      'field' => 'title',
+      'relationship' => 'none',
+      'override' => array(
+        'button' => 'Override',
+      ),
+    ),
+    'tid' => array(
+      'label' => '',
+      'alter' => array(
+        'alter_text' => 1,
+        'text' => '<em>[tid]</em>',
+        'make_link' => 0,
+        'path' => '',
+        'absolute' => 0,
+        'link_class' => '',
+        'alt' => '',
+        'rel' => '',
+        'prefix' => '',
+        'suffix' => '',
+        'target' => '',
+        'help' => '',
+        'trim' => 0,
+        'max_length' => '',
+        'word_boundary' => 1,
+        'ellipsis' => 1,
+        'html' => 0,
+        'strip_tags' => 0,
+      ),
+      'empty' => '',
+      'hide_empty' => 1,
+      'empty_zero' => 0,
+      'hide_alter_empty' => 1,
+      'type' => 'separator',
+      'separator' => ', ',
+      'link_to_taxonomy' => 1,
+      'limit' => 0,
+      'vids' => array(
+        2 => 0,
+        1 => 0,
+        3 => 0,
+      ),
+      'exclude' => 0,
+      'id' => 'tid',
+      'table' => 'term_node',
+      'field' => 'tid',
+      'override' => array(
+        'button' => 'Override',
+      ),
+      'relationship' => 'none',
+    ),
+    'posts_count' => array(
+      'label' => 'Posts',
+      'alter' => array(
+        'alter_text' => 0,
+        'text' => '',
+        'make_link' => 0,
+        'path' => '',
+        'absolute' => 0,
+        'link_class' => '',
+        'alt' => '',
+        'rel' => '',
+        'prefix' => '',
+        'suffix' => '',
+        'target' => '',
+        'help' => '',
+        'trim' => 0,
+        'max_length' => '',
+        'word_boundary' => 1,
+        'ellipsis' => 1,
+        'html' => 0,
+        'strip_tags' => 0,
+      ),
+      'empty' => '',
+      'hide_empty' => 0,
+      'empty_zero' => 0,
+      'hide_alter_empty' => 1,
+      'set_precision' => FALSE,
+      'precision' => 0,
+      'decimal' => '.',
+      'separator' => ',',
+      'format_plural' => 0,
+      'format_plural_singular' => '1',
+      'format_plural_plural' => '@count',
+      'prefix' => '',
+      'suffix' => '',
+      'exclude' => 0,
+      'id' => 'posts_count',
+      'table' => 'og_statistics',
+      'field' => 'posts_count',
+      'relationship' => 'none',
+    ),
+    'members_count' => array(
+      'label' => 'Members',
+      'alter' => array(
+        'alter_text' => 0,
+        'text' => '',
+        'make_link' => 0,
+        'path' => '',
+        'absolute' => 0,
+        'link_class' => '',
+        'alt' => '',
+        'rel' => '',
+        'prefix' => '',
+        'suffix' => '',
+        'target' => '',
+        'help' => '',
+        'trim' => 0,
+        'max_length' => '',
+        'word_boundary' => 1,
+        'ellipsis' => 1,
+        'html' => 0,
+        'strip_tags' => 0,
+      ),
+      'empty' => '',
+      'hide_empty' => 0,
+      'empty_zero' => 0,
+      'hide_alter_empty' => 1,
+      'set_precision' => FALSE,
+      'precision' => 0,
+      'decimal' => '.',
+      'separator' => ',',
+      'format_plural' => 0,
+      'format_plural_singular' => '1',
+      'format_plural_plural' => '@count',
+      'prefix' => '',
+      'suffix' => '',
+      'exclude' => 0,
+      'id' => 'members_count',
+      'table' => 'og_statistics',
+      'field' => 'members_count',
+      'relationship' => 'none',
+    ),
+    'description' => array(
+      'label' => 'Description',
+      'alter' => array(
+        'alter_text' => 0,
+        'text' => '',
+        'make_link' => 0,
+        'path' => '',
+        'absolute' => 0,
+        'link_class' => '',
+        'alt' => '',
+        'rel' => '',
+        'prefix' => '',
+        'suffix' => '',
+        'target' => '',
+        'help' => '',
+        'trim' => 0,
+        'max_length' => '',
+        'word_boundary' => 1,
+        'ellipsis' => 1,
+        'html' => 0,
+        'strip_tags' => 0,
+      ),
+      'empty' => '',
+      'hide_empty' => 0,
+      'empty_zero' => 0,
+      'hide_alter_empty' => 1,
+      'exclude' => 0,
+      'id' => 'description',
+      'table' => 'og',
+      'field' => 'description',
+      'relationship' => 'none',
+      'override' => array(
+        'button' => 'Override',
+      ),
+    ),
+    'created' => array(
+      'label' => 'Created',
+      'alter' => array(
+        'alter_text' => 0,
+        'text' => '',
+        'make_link' => 0,
+        'path' => '',
+        'absolute' => 0,
+        'link_class' => '',
+        'alt' => '',
+        'rel' => '',
+        'prefix' => '',
+        'suffix' => '',
+        'target' => '',
+        'help' => '',
+        'trim' => 0,
+        'max_length' => '',
+        'word_boundary' => 1,
+        'ellipsis' => 1,
+        'html' => 0,
+        'strip_tags' => 0,
+      ),
+      'empty' => '',
+      'hide_empty' => 0,
+      'empty_zero' => 0,
+      'hide_alter_empty' => 1,
+      'date_format' => 'custom',
+      'custom_date_format' => 'Y-m-d',
+      'exclude' => 0,
+      'id' => 'created',
+      'table' => 'node',
+      'field' => 'created',
+      'relationship' => 'none',
+    ),
+    'subscribe' => array(
+      'label' => '',
+      'alter' => array(
+        'alter_text' => 0,
+        'text' => '',
+        'make_link' => 0,
+        'path' => '',
+        'link_class' => '',
+        'alt' => '',
+        'prefix' => '',
+        'suffix' => '',
+        'target' => '',
+        'help' => '',
+        'trim' => 0,
+        'max_length' => '',
+        'word_boundary' => 1,
+        'ellipsis' => 1,
+        'html' => 0,
+        'strip_tags' => 0,
+      ),
+      'empty' => '',
+      'hide_empty' => 1,
+      'empty_zero' => 0,
+      'exclude' => 0,
+      'id' => 'subscribe',
+      'table' => 'og',
+      'field' => 'subscribe',
+      'relationship' => 'none',
+      'override' => array(
+        'button' => 'Override',
+      ),
+    ),
+    'leave_group' => array(
+      'label' => '',
+      'alter' => array(
+        'alter_text' => 0,
+        'text' => '',
+        'make_link' => 0,
+        'path' => '',
+        'absolute' => 0,
+        'link_class' => '',
+        'alt' => '',
+        'rel' => '',
+        'prefix' => '',
+        'suffix' => '',
+        'target' => '',
+        'help' => '',
+        'trim' => 0,
+        'max_length' => '',
+        'word_boundary' => 1,
+        'ellipsis' => 1,
+        'html' => 0,
+        'strip_tags' => 0,
+      ),
+      'empty' => '',
+      'hide_empty' => 1,
+      'empty_zero' => 0,
+      'hide_alter_empty' => 1,
+      'text' => 'Leave',
+      'exclude' => 0,
+      'id' => 'leave_group',
+      'table' => 'og_uid',
+      'field' => 'leave_group',
+      'override' => array(
+        'button' => 'Override',
+      ),
+      'relationship' => 'none',
+    ),
+  ));
+  $handler->override_option('sorts', array(
+    'created' => array(
+      'order' => 'DESC',
+      'granularity' => 'second',
+      'exposed' => TRUE,
+      'identifier' => 'unsorted',
+      'id' => 'created',
+      'table' => 'node',
+      'field' => 'created',
+      'override' => array(
+        'button' => 'Override',
+      ),
+      'relationship' => 'none',
+      'expose' => array(
+        'label' => 'Created',
+        'identifier' => 'created_sort',
+        'order' => 'unsorted',
+      ),
+    ),
+  ));
+  $handler->override_option('filters', array(
+    'status' => array(
+      'id' => 'status',
+      'table' => 'node',
+      'field' => 'status',
+      'operator' => '=',
+      'value' => 1,
+      'group' => 0,
+      'exposed' => FALSE,
+      'expose' => array(
+        'operator' => FALSE,
+        'label' => '',
+      ),
+      'relationship' => 'none',
+      'expose_button' => array(
+        'button' => 'Expose',
+      ),
+    ),
+    'type_groups_all' => array(
+      'id' => 'type_groups_all',
+      'table' => 'og',
+      'field' => 'type_groups_all',
+      'operator' => '=',
+      'value' => '',
+      'group' => 0,
+      'exposed' => FALSE,
+      'expose' => array(
+        'operator' => FALSE,
+        'label' => '',
+      ),
+      'relationship' => 'none',
+      'expose_button' => array(
+        'button' => 'Expose',
+      ),
+    ),
+    'directory' => array(
+      'id' => 'directory',
+      'table' => 'og',
+      'field' => 'directory',
+      'operator' => '=',
+      'value' => 1,
+      'group' => 0,
+      'exposed' => FALSE,
+      'expose' => array(
+        'operator' => FALSE,
+        'label' => '',
+      ),
+      'relationship' => 'none',
+      'expose_button' => array(
+        'button' => 'Expose',
+      ),
+    ),
+  ));
+  $handler->override_option('access', array(
+    'type' => 'none',
+    'role' => array(),
+    'perm' => '',
+  ));
+  $handler->override_option('cache', array(
+    'type' => 'none',
+  ));
+  $handler->override_option('title', 'Groups');
+  $handler->override_option('header_format', '1');
+  $handler->override_option('header_empty', 1);
+  $handler->override_option('empty', 'There are currently no groups');
+  $handler->override_option('empty_format', '1');
+  $handler->override_option('use_pager', '1');
+  $handler->override_option('distinct', 1);
+  $handler->override_option('style_plugin', 'table');
+  $handler->override_option('style_options', array(
+    'grouping' => '',
+    'override' => 1,
+    'sticky' => 0,
+    'order' => 'desc',
+    'summary' => '',
+    'columns' => array(
+      'field_group_image_fid' => 'field_group_image_fid',
+      'title' => 'title',
+      'tid' => 'title',
+      'posts_count' => 'posts_count',
+      'members_count' => 'members_count',
+      'description' => 'description',
+      'created' => 'created',
+      'subscribe' => 'subscribe',
+      'leave_group' => 'subscribe',
+    ),
+    'info' => array(
+      'field_group_image_fid' => array(
+        'separator' => '',
+      ),
+      'title' => array(
+        'sortable' => 1,
+        'separator' => '<br />',
+      ),
+      'tid' => array(
+        'separator' => '',
+      ),
+      'posts_count' => array(
+        'sortable' => 1,
+        'separator' => '',
+      ),
+      'members_count' => array(
+        'sortable' => 1,
+        'separator' => '',
+      ),
+      'description' => array(
+        'separator' => '',
+      ),
+      'created' => array(
+        'sortable' => 1,
+        'separator' => '',
+      ),
+      'subscribe' => array(
+        'separator' => '',
+      ),
+      'leave_group' => array(
+        'separator' => '',
+      ),
+    ),
+    'default' => 'created',
+  ));
+  $handler = $view->new_display('feed', 'Feed', 'feed');
+  $handler->override_option('sorts', array(
+    'created' => array(
+      'order' => 'DESC',
+      'granularity' => 'second',
+      'id' => 'created',
+      'table' => 'node',
+      'field' => 'created',
+      'override' => array(
+        'button' => 'Use default',
+      ),
+      'relationship' => 'none',
+    ),
+  ));
+  $handler->override_option('filters', array(
+    'status' => array(
+      'id' => 'status',
+      'table' => 'node',
+      'field' => 'status',
+      'operator' => '=',
+      'value' => 1,
+      'group' => 0,
+      'exposed' => FALSE,
+      'expose' => array(
+        'operator' => FALSE,
+        'label' => '',
+      ),
+      'relationship' => 'none',
+      'expose_button' => array(
+        'button' => 'Expose',
+      ),
+    ),
+    'title' => array(
+      'operator' => 'contains',
+      'value' => '',
+      'group' => 0,
+      'exposed' => TRUE,
+      'expose' => array(
+        'use_operator' => 0,
+        'operator' => 'title_oper',
+        'identifier' => 'title',
+        'label' => 'Group name',
+        'optional' => 1,
+        'remember' => 0,
+      ),
+      'case' => 0,
+      'id' => 'title',
+      'table' => 'node',
+      'field' => 'title',
+      'relationship' => 'none',
+      'expose_button' => array(
+        'button' => 'Hide',
+      ),
+      'override' => array(
+        'button' => 'Override',
+      ),
+    ),
+    'type_groups_all' => array(
+      'id' => 'type_groups_all',
+      'table' => 'og',
+      'field' => 'type_groups_all',
+      'operator' => '=',
+      'value' => '',
+      'group' => 0,
+      'exposed' => FALSE,
+      'expose' => array(
+        'operator' => FALSE,
+        'label' => '',
+      ),
+      'relationship' => 'none',
+      'expose_button' => array(
+        'button' => 'Expose',
+      ),
+    ),
+    'directory' => array(
+      'id' => 'directory',
+      'table' => 'og',
+      'field' => 'directory',
+      'operator' => '=',
+      'value' => 1,
+      'group' => 0,
+      'exposed' => FALSE,
+      'expose' => array(
+        'operator' => FALSE,
+        'label' => '',
+      ),
+      'relationship' => 'none',
+      'expose_button' => array(
+        'button' => 'Expose',
+      ),
+    ),
+    'private' => array(
+      'operator' => '=',
+      'value' => '0',
+      'group' => '0',
+      'exposed' => FALSE,
+      'expose' => array(
+        'operator' => FALSE,
+        'label' => '',
+      ),
+      'id' => 'private',
+      'table' => 'og',
+      'field' => 'private',
+      'override' => array(
+        'button' => 'Use default',
+      ),
+      'relationship' => 'none',
+    ),
+  ));
+  $handler->override_option('access', array(
+    'type' => 'perm',
+    'perm' => 'view content rss feeds',
+  ));
+  $handler->override_option('items_per_page', 20);
+  $handler->override_option('style_plugin', 'rss');
+  $handler->override_option('style_options', array(
+    'mission_description' => FALSE,
+    'description' => '',
+  ));
+  $handler->override_option('row_plugin', 'node_rss');
+  $handler->override_option('row_options', array(
+    'item_length' => 'default',
+  ));
+  $handler->override_option('path', 'groups/all/feed');
+  $handler->override_option('menu', array(
+    'type' => 'none',
+    'title' => '',
+    'description' => '',
+    'weight' => 0,
+    'name' => 'navigation',
+  ));
+  $handler->override_option('tab_options', array(
+    'type' => 'none',
+    'title' => '',
+    'description' => '',
+    'weight' => 0,
+    'name' => 'navigation',
+  ));
+  $handler->override_option('displays', array(
+    'page' => 'page',
+    'page_1' => 'page_1',
+    'default' => 0,
+  ));
+  $handler->override_option('sitename_title', FALSE);
+  $handler = $view->new_display('page', 'Page', 'page_1');
+  $handler->override_option('sorts', array());
+  $handler->override_option('path', 'groups');
+  $handler->override_option('menu', array(
+    'type' => 'none',
+    'title' => '',
+    'description' => '',
+    'weight' => 0,
+    'name' => 'navigation',
+  ));
+  $handler->override_option('tab_options', array(
+    'type' => 'none',
+    'title' => '',
+    'description' => '',
+    'weight' => 0,
+    'name' => 'navigation',
+  ));
+
+  $views[$view->name] = $view;
+
+  // Exported view: groups_most_active
+  $view = new view;
+  $view->name = 'groups_most_active';
+  $view->description = 'A block displaying the most active groups';
+  $view->tag = '';
+  $view->base_table = 'node';
+  $view->core = 0;
+  $view->api_version = '2';
+  $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
+  $handler = $view->new_display('default', 'Defaults', 'default');
+  $handler->override_option('fields', array(
+    'field_group_image_fid' => array(
+      'label' => '',
+      'alter' => array(
+        'alter_text' => 0,
+        'text' => '',
+        'make_link' => 0,
+        'path' => '',
+        'link_class' => '',
+        'alt' => '',
+        'prefix' => '',
+        'suffix' => '',
+        'target' => '',
+        'help' => '',
+        'trim' => 0,
+        'max_length' => '',
+        'word_boundary' => 1,
+        'ellipsis' => 1,
+        'html' => 0,
+        'strip_tags' => 0,
+      ),
+      'empty' => '',
+      'hide_empty' => 0,
+      'empty_zero' => 0,
+      'link_to_node' => 0,
+      'label_type' => 'none',
+      'format' => 'group_images_thumb_linked',
+      'multiple' => array(
+        'group' => TRUE,
+        'multiple_number' => '',
+        'multiple_from' => '',
+        'multiple_reversed' => FALSE,
+      ),
+      'exclude' => 0,
+      'id' => 'field_group_image_fid',
+      'table' => 'node_data_field_group_image',
+      'field' => 'field_group_image_fid',
+      'override' => array(
+        'button' => 'Override',
+      ),
+      'relationship' => 'none',
+    ),
+    'title' => array(
+      'label' => '',
+      'alter' => array(
+        'alter_text' => 0,
+        'text' => '',
+        'make_link' => 0,
+        'path' => '',
+        'link_class' => '',
+        'alt' => '',
+        'prefix' => '',
+        'suffix' => '',
+        'target' => '',
+        'help' => '',
+        'trim' => 0,
+        'max_length' => '',
+        'word_boundary' => 1,
+        'ellipsis' => 1,
+        'html' => 0,
+        'strip_tags' => 0,
+      ),
+      'empty' => '',
+      'hide_empty' => 0,
+      'empty_zero' => 0,
+      'link_to_node' => 1,
+      'exclude' => 0,
+      'id' => 'title',
+      'table' => 'node',
+      'field' => 'title',
+      'override' => array(
+        'button' => 'Override',
+      ),
+      'relationship' => 'none',
+    ),
+    'members_count' => array(
+      'label' => '',
+      'alter' => array(
+        'alter_text' => 1,
+        'text' => '[members_count] member(s)',
+        'make_link' => 0,
+        'path' => '',
+        'link_class' => '',
+        'alt' => '',
+        'prefix' => '',
+        'suffix' => '',
+        'target' => '',
+        'help' => '',
+        'trim' => 0,
+        'max_length' => '',
+        'word_boundary' => 1,
+        'ellipsis' => 1,
+        'html' => 0,
+        'strip_tags' => 0,
+      ),
+      'empty' => '',
+      'hide_empty' => 0,
+      'empty_zero' => 0,
+      'set_precision' => FALSE,
+      'precision' => 0,
+      'decimal' => '.',
+      'separator' => ',',
+      'prefix' => '',
+      'suffix' => '',
+      'exclude' => 0,
+      'id' => 'members_count',
+      'table' => 'og_statistics',
+      'field' => 'members_count',
+      'relationship' => 'none',
+    ),
+    'posts_count' => array(
+      'label' => '',
+      'alter' => array(
+        'alter_text' => 1,
+        'text' => '[posts_count] post(s)',
+        'make_link' => 0,
+        'path' => '',
+        'link_class' => '',
+        'alt' => '',
+        'prefix' => '',
+        'suffix' => '',
+        'target' => '',
+        'help' => '',
+        'trim' => 0,
+        'max_length' => '',
+        'word_boundary' => 1,
+        'ellipsis' => 1,
+        'html' => 0,
+        'strip_tags' => 0,
+      ),
+      'empty' => '',
+      'hide_empty' => 0,
+      'empty_zero' => 0,
+      'set_precision' => FALSE,
+      'precision' => 0,
+      'decimal' => '.',
+      'separator' => ',',
+      'prefix' => '',
+      'suffix' => '',
+      'exclude' => 0,
+      'id' => 'posts_count',
+      'table' => 'og_statistics',
+      'field' => 'posts_count',
+      'relationship' => 'none',
+    ),
+  ));
+  $handler->override_option('sorts', array(
+    'members_count' => array(
+      'order' => 'DESC',
+      'id' => 'members_count',
+      'table' => 'og_statistics',
+      'field' => 'members_count',
+      'relationship' => 'none',
+    ),
+    'posts_count' => array(
+      'order' => 'DESC',
+      'id' => 'posts_count',
+      'table' => 'og_statistics',
+      'field' => 'posts_count',
+      'relationship' => 'none',
+    ),
+  ));
+  $handler->override_option('filters', array(
+    'type_groups_all' => array(
+      'operator' => '=',
+      'value' => '',
+      'group' => '0',
+      'exposed' => FALSE,
+      'expose' => array(
+        'operator' => FALSE,
+        'label' => '',
+      ),
       'id' => 'type_groups_all',
       'table' => 'og',
       'field' => 'type_groups_all',
+      'override' => array(
+        'button' => 'Override',
+      ),
+      'relationship' => 'none',
+    ),
+    'status' => array(
       'operator' => '=',
-      'value' => '',
-      'group' => 0,
+      'value' => '1',
+      'group' => '0',
       'exposed' => FALSE,
       'expose' => array(
         'operator' => FALSE,
         'label' => '',
       ),
-      'relationship' => 'none',
-      'expose_button' => array(
-        'button' => 'Expose',
+      'id' => 'status',
+      'table' => 'node',
+      'field' => 'status',
+      'override' => array(
+        'button' => 'Override',
       ),
+      'relationship' => 'none',
     ),
     'directory' => array(
+      'operator' => '=',
+      'value' => '1',
+      'group' => '0',
+      'exposed' => FALSE,
+      'expose' => array(
+        'operator' => FALSE,
+        'label' => '',
+      ),
       'id' => 'directory',
       'table' => 'og',
       'field' => 'directory',
+      'relationship' => 'none',
+    ),
+    'private' => array(
       'operator' => '=',
-      'value' => 1,
-      'group' => 0,
+      'value' => '0',
+      'group' => '0',
       'exposed' => FALSE,
       'expose' => array(
         'operator' => FALSE,
         'label' => '',
       ),
+      'id' => 'private',
+      'table' => 'og',
+      'field' => 'private',
       'relationship' => 'none',
-      'expose_button' => array(
-        'button' => 'Expose',
-      ),
     ),
   ));
   $handler->override_option('access', array(
     'type' => 'none',
-    'role' => array(),
-    'perm' => '',
   ));
   $handler->override_option('cache', array(
     'type' => 'none',
   ));
-  $handler->override_option('title', 'Groups');
-  $handler->override_option('header_format', '1');
-  $handler->override_option('header_empty', 1);
-  $handler->override_option('empty', 'There are currently no groups');
+  $handler->override_option('title', 'Most active groups');
+  $handler->override_option('empty', 'No groups have been created yet');
   $handler->override_option('empty_format', '1');
-  $handler->override_option('use_pager', '1');
+  $handler->override_option('use_ajax', TRUE);
+  $handler->override_option('items_per_page', 5);
+  $handler->override_option('use_pager', 'mini');
+  $handler->override_option('pager_element', 2);
   $handler->override_option('distinct', 1);
-  $handler->override_option('style_plugin', 'table');
-  $handler->override_option('style_options', array(
-    'grouping' => '',
-    'override' => 1,
-    'sticky' => 0,
-    'order' => 'desc',
-    'summary' => '',
-    'columns' => array(
-      'field_group_image_fid' => 'field_group_image_fid',
-      'title' => 'title',
-      'tid' => 'title',
-      'posts_count' => 'posts_count',
-      'members_count' => 'members_count',
-      'description' => 'description',
-      'created' => 'created',
-      'subscribe' => 'subscribe',
-      'leave_group' => 'subscribe',
-    ),
-    'info' => array(
-      'field_group_image_fid' => array(
-        'separator' => '',
-      ),
-      'title' => array(
-        'sortable' => 1,
-        'separator' => '<br />',
-      ),
-      'tid' => array(
-        'separator' => '',
-      ),
-      'posts_count' => array(
-        'sortable' => 1,
-        'separator' => '',
-      ),
-      'members_count' => array(
-        'sortable' => 1,
-        'separator' => '',
-      ),
-      'description' => array(
-        'separator' => '',
+  $handler->override_option('style_plugin', 'list');
+  $handler = $view->new_display('block', 'Block', 'block_1');
+  $handler->override_option('block_description', 'Most active groups');
+  $handler->override_option('block_caching', -1);
+
+  $views[$view->name] = $view;
+
+  // Exported view: groups_my_groups
+  $view = new view;
+  $view->name = 'groups_my_groups';
+  $view->description = 'A block displaying the current user\'s groups';
+  $view->tag = '';
+  $view->base_table = 'node';
+  $view->core = 0;
+  $view->api_version = '2';
+  $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
+  $handler = $view->new_display('default', 'Defaults', 'default');
+  $handler->override_option('relationships', array(
+    'nid' => array(
+      'label' => 'Group node (member)',
+      'required' => 0,
+      'id' => 'nid',
+      'table' => 'og_uid',
+      'field' => 'nid',
+      'override' => array(
+        'button' => 'Override',
       ),
-      'created' => array(
-        'sortable' => 1,
-        'separator' => '',
+      'relationship' => 'none',
+    ),
+  ));
+  $handler->override_option('fields', array(
+    'field_group_image_fid' => array(
+      'label' => '',
+      'alter' => array(
+        'alter_text' => 0,
+        'text' => '',
+        'make_link' => 0,
+        'path' => '',
+        'link_class' => '',
+        'alt' => '',
+        'prefix' => '',
+        'suffix' => '',
+        'target' => '',
+        'help' => '',
+        'trim' => 0,
+        'max_length' => '',
+        'word_boundary' => 1,
+        'ellipsis' => 1,
+        'html' => 0,
+        'strip_tags' => 0,
       ),
-      'subscribe' => array(
-        'separator' => '',
+      'empty' => '',
+      'hide_empty' => 0,
+      'empty_zero' => 0,
+      'link_to_node' => 0,
+      'label_type' => 'none',
+      'format' => 'group_images_thumb_linked',
+      'multiple' => array(
+        'group' => TRUE,
+        'multiple_number' => '',
+        'multiple_from' => '',
+        'multiple_reversed' => FALSE,
       ),
-      'leave_group' => array(
-        'separator' => '',
+      'exclude' => 0,
+      'id' => 'field_group_image_fid',
+      'table' => 'node_data_field_group_image',
+      'field' => 'field_group_image_fid',
+      'override' => array(
+        'button' => 'Override',
       ),
+      'relationship' => 'none',
     ),
-    'default' => 'created',
-  ));
-  $handler = $view->new_display('feed', 'Feed', 'feed');
-  $handler->override_option('sorts', array(
-    'created' => array(
-      'order' => 'DESC',
-      'granularity' => 'second',
-      'id' => 'created',
+    'title' => array(
+      'label' => '',
+      'alter' => array(
+        'alter_text' => 0,
+        'text' => '',
+        'make_link' => 0,
+        'path' => '',
+        'link_class' => '',
+        'alt' => '',
+        'prefix' => '',
+        'suffix' => '',
+        'target' => '',
+        'help' => '',
+        'trim' => 0,
+        'max_length' => '',
+        'word_boundary' => 1,
+        'ellipsis' => 1,
+        'html' => 0,
+        'strip_tags' => 0,
+      ),
+      'empty' => '',
+      'hide_empty' => 0,
+      'empty_zero' => 0,
+      'link_to_node' => 1,
+      'exclude' => 0,
+      'id' => 'title',
       'table' => 'node',
-      'field' => 'created',
+      'field' => 'title',
       'override' => array(
-        'button' => 'Use default',
+        'button' => 'Override',
       ),
       'relationship' => 'none',
     ),
-  ));
-  $handler->override_option('filters', array(
-    'status' => array(
-      'id' => 'status',
-      'table' => 'node',
-      'field' => 'status',
-      'operator' => '=',
-      'value' => 1,
-      'group' => 0,
-      'exposed' => FALSE,
-      'expose' => array(
-        'operator' => FALSE,
-        'label' => '',
+    'post_count_new' => array(
+      'label' => '',
+      'alter' => array(
+        'alter_text' => 1,
+        'text' => '[post_count_new] post(s)',
+        'make_link' => 0,
+        'path' => '',
+        'link_class' => '',
+        'alt' => '',
+        'prefix' => '',
+        'suffix' => '',
+        'target' => '',
+        'help' => '',
+        'trim' => 0,
+        'max_length' => '',
+        'word_boundary' => 1,
+        'ellipsis' => 1,
+        'html' => 0,
+        'strip_tags' => 0,
       ),
-      'relationship' => 'none',
-      'expose_button' => array(
-        'button' => 'Expose',
+      'empty' => '',
+      'hide_empty' => 1,
+      'empty_zero' => 0,
+      'set_precision' => FALSE,
+      'precision' => 0,
+      'decimal' => '.',
+      'separator' => ',',
+      'prefix' => '',
+      'suffix' => '',
+      'exclude' => 0,
+      'id' => 'post_count_new',
+      'table' => 'og',
+      'field' => 'post_count_new',
+      'override' => array(
+        'button' => 'Override',
       ),
+      'relationship' => 'none',
     ),
+  ));
+  $handler->override_option('sorts', array(
     'title' => array(
-      'operator' => 'contains',
-      'value' => '',
-      'group' => 0,
-      'exposed' => TRUE,
-      'expose' => array(
-        'use_operator' => 0,
-        'operator' => 'title_oper',
-        'identifier' => 'title',
-        'label' => 'Group name',
-        'optional' => 1,
-        'remember' => 0,
-      ),
-      'case' => 0,
+      'order' => 'ASC',
       'id' => 'title',
       'table' => 'node',
       'field' => 'title',
-      'relationship' => 'none',
-      'expose_button' => array(
-        'button' => 'Hide',
-      ),
       'override' => array(
         'button' => 'Override',
       ),
+      'relationship' => 'none',
     ),
+  ));
+  $handler->override_option('filters', array(
     'type_groups_all' => array(
-      'id' => 'type_groups_all',
-      'table' => 'og',
-      'field' => 'type_groups_all',
       'operator' => '=',
       'value' => '',
-      'group' => 0,
+      'group' => '0',
       'exposed' => FALSE,
       'expose' => array(
         'operator' => FALSE,
         'label' => '',
       ),
-      'relationship' => 'none',
-      'expose_button' => array(
-        'button' => 'Expose',
-      ),
-    ),
-    'directory' => array(
-      'id' => 'directory',
+      'id' => 'type_groups_all',
       'table' => 'og',
-      'field' => 'directory',
-      'operator' => '=',
-      'value' => 1,
-      'group' => 0,
-      'exposed' => FALSE,
-      'expose' => array(
-        'operator' => FALSE,
-        'label' => '',
+      'field' => 'type_groups_all',
+      'override' => array(
+        'button' => 'Override',
       ),
       'relationship' => 'none',
-      'expose_button' => array(
-        'button' => 'Expose',
-      ),
     ),
-    'private' => array(
+    'status' => array(
       'operator' => '=',
-      'value' => '0',
+      'value' => '1',
       'group' => '0',
       'exposed' => FALSE,
       'expose' => array(
         'operator' => FALSE,
         'label' => '',
       ),
-      'id' => 'private',
-      'table' => 'og',
-      'field' => 'private',
+      'id' => 'status',
+      'table' => 'node',
+      'field' => 'status',
       'override' => array(
-        'button' => 'Use default',
+        'button' => 'Override',
+      ),
+      'relationship' => 'none',
+    ),
+    'uid' => array(
+      'operator' => '=',
+      'value' => '1',
+      'group' => '0',
+      'exposed' => FALSE,
+      'expose' => array(
+        'operator' => FALSE,
+        'label' => '',
+      ),
+      'id' => 'uid',
+      'table' => 'og_uid',
+      'field' => 'uid',
+      'override' => array(
+        'button' => 'Override',
       ),
       'relationship' => 'none',
     ),
   ));
-  $handler->override_option('access', array(
-    'type' => 'perm',
-    'perm' => 'view content rss feeds',
-  ));
-  $handler->override_option('items_per_page', 20);
-  $handler->override_option('style_plugin', 'rss');
-  $handler->override_option('style_options', array(
-    'mission_description' => FALSE,
-    'description' => '',
-  ));
-  $handler->override_option('row_plugin', 'node_rss');
-  $handler->override_option('row_options', array(
-    'item_length' => 'default',
-  ));
-  $handler->override_option('path', 'groups/all/feed');
-  $handler->override_option('menu', array(
-    'type' => 'none',
-    'title' => '',
-    'description' => '',
-    'weight' => 0,
-    'name' => 'navigation',
-  ));
-  $handler->override_option('tab_options', array(
-    'type' => 'none',
-    'title' => '',
-    'description' => '',
-    'weight' => 0,
-    'name' => 'navigation',
-  ));
-  $handler->override_option('displays', array(
-    'page' => 'page',
-    'page_1' => 'page_1',
-    'default' => 0,
-  ));
-  $handler->override_option('sitename_title', FALSE);
-  $handler = $view->new_display('page', 'Page', 'page_1');
-  $handler->override_option('sorts', array());
-  $handler->override_option('path', 'groups');
-  $handler->override_option('menu', array(
-    'type' => 'none',
-    'title' => '',
-    'description' => '',
-    'weight' => 0,
-    'name' => 'navigation',
+  $handler->override_option('access', array(
+    'type' => 'role',
+    'role' => array(
+      2 => 2,
+    ),
   ));
-  $handler->override_option('tab_options', array(
+  $handler->override_option('cache', array(
     'type' => 'none',
-    'title' => '',
-    'description' => '',
-    'weight' => 0,
-    'name' => 'navigation',
   ));
+  $handler->override_option('title', 'Your groups');
+  $handler->override_option('empty', 'You haven\'t joined any groups yet');
+  $handler->override_option('empty_format', '1');
+  $handler->override_option('use_ajax', TRUE);
+  $handler->override_option('items_per_page', 5);
+  $handler->override_option('use_pager', 'mini');
+  $handler->override_option('pager_element', 1);
+  $handler->override_option('distinct', 1);
+  $handler->override_option('style_plugin', 'list');
+  $handler = $view->new_display('block', 'Block', 'block_1');
+  $handler->override_option('block_description', 'Current user\'s groups');
+  $handler->override_option('block_caching', -1);
 
   $views[$view->name] = $view;
 
-  // Exported view: groups_most_active
+  // Exported view: groups_my_groups_listing
   $view = new view;
-  $view->name = 'groups_most_active';
-  $view->description = 'A block displaying the most active groups';
+  $view->name = 'groups_my_groups_listing';
+  $view->description = 'The page listing of my groups';
   $view->tag = '';
   $view->base_table = 'node';
   $view->core = 0;
@@ -2175,7 +3468,7 @@ function commons_core_views_default_views() {
       'empty_zero' => 0,
       'link_to_node' => 0,
       'label_type' => 'none',
-      'format' => 'group_images_thumb_linked',
+      'format' => 'group_images_medium_linked',
       'multiple' => array(
         'group' => TRUE,
         'multiple_number' => '',
@@ -2215,20 +3508,65 @@ function commons_core_views_default_views() {
       'hide_empty' => 0,
       'empty_zero' => 0,
       'link_to_node' => 1,
-      'exclude' => 0,
+      'exclude' => 1,
       'id' => 'title',
       'table' => 'node',
       'field' => 'title',
+      'relationship' => 'none',
+      'override' => array(
+        'button' => 'Override',
+      ),
+    ),
+    'tid' => array(
+      'label' => 'Tags',
+      'alter' => array(
+        'alter_text' => 0,
+        'text' => '',
+        'make_link' => 0,
+        'path' => '',
+        'link_class' => '',
+        'alt' => '',
+        'prefix' => '',
+        'suffix' => '',
+        'target' => '',
+        'help' => '',
+        'trim' => 0,
+        'max_length' => '',
+        'word_boundary' => 1,
+        'ellipsis' => 1,
+        'html' => 0,
+        'strip_tags' => 0,
+      ),
+      'empty' => '',
+      'hide_empty' => 1,
+      'empty_zero' => 0,
+      'type' => 'separator',
+      'separator' => ', ',
+      'link_to_taxonomy' => 1,
+      'limit' => 0,
+      'vids' => array(
+        5 => 0,
+        2 => 0,
+        3 => 0,
+        6 => 0,
+        4 => 0,
+      ),
+      'exclude' => 1,
+      'id' => 'tid',
+      'table' => 'term_node',
+      'field' => 'tid',
       'override' => array(
         'button' => 'Override',
       ),
       'relationship' => 'none',
     ),
-    'members_count' => array(
+    'description' => array(
       'label' => '',
       'alter' => array(
         'alter_text' => 1,
-        'text' => '[members_count] member(s)',
+        'text' => '<div class="title">[title]</div>
+    <div class="tags">Tags: [tid] </div>
+    <div class="description">[description] </div>',
         'make_link' => 0,
         'path' => '',
         'link_class' => '',
@@ -2247,23 +3585,20 @@ function commons_core_views_default_views() {
       'empty' => '',
       'hide_empty' => 0,
       'empty_zero' => 0,
-      'set_precision' => FALSE,
-      'precision' => 0,
-      'decimal' => '.',
-      'separator' => ',',
-      'prefix' => '',
-      'suffix' => '',
       'exclude' => 0,
-      'id' => 'members_count',
-      'table' => 'og_statistics',
-      'field' => 'members_count',
+      'id' => 'description',
+      'table' => 'og',
+      'field' => 'description',
       'relationship' => 'none',
+      'override' => array(
+        'button' => 'Override',
+      ),
     ),
-    'posts_count' => array(
+    'leave_group' => array(
       'label' => '',
       'alter' => array(
-        'alter_text' => 1,
-        'text' => '[posts_count] post(s)',
+        'alter_text' => 0,
+        'text' => '',
         'make_link' => 0,
         'path' => '',
         'link_class' => '',
@@ -2282,54 +3617,75 @@ function commons_core_views_default_views() {
       'empty' => '',
       'hide_empty' => 0,
       'empty_zero' => 0,
-      'set_precision' => FALSE,
-      'precision' => 0,
-      'decimal' => '.',
-      'separator' => ',',
-      'prefix' => '',
-      'suffix' => '',
+      'text' => 'Leave group',
       'exclude' => 0,
-      'id' => 'posts_count',
-      'table' => 'og_statistics',
-      'field' => 'posts_count',
+      'id' => 'leave_group',
+      'table' => 'og_uid',
+      'field' => 'leave_group',
+      'override' => array(
+        'button' => 'Override',
+      ),
       'relationship' => 'none',
     ),
   ));
   $handler->override_option('sorts', array(
-    'members_count' => array(
+    'score' => array(
       'order' => 'DESC',
-      'id' => 'members_count',
-      'table' => 'og_statistics',
-      'field' => 'members_count',
+      'id' => 'score',
+      'table' => 'search_index',
+      'field' => 'score',
+      'override' => array(
+        'button' => 'Override',
+      ),
       'relationship' => 'none',
     ),
-    'posts_count' => array(
-      'order' => 'DESC',
-      'id' => 'posts_count',
-      'table' => 'og_statistics',
-      'field' => 'posts_count',
+    'title' => array(
+      'order' => 'ASC',
+      'id' => 'title',
+      'table' => 'node',
+      'field' => 'title',
+      'override' => array(
+        'button' => 'Override',
+      ),
       'relationship' => 'none',
     ),
   ));
   $handler->override_option('filters', array(
-    'type_groups_all' => array(
+    'status' => array(
+      'id' => 'status',
+      'table' => 'node',
+      'field' => 'status',
       'operator' => '=',
-      'value' => '',
-      'group' => '0',
+      'value' => 1,
+      'group' => 0,
       'exposed' => FALSE,
       'expose' => array(
         'operator' => FALSE,
         'label' => '',
       ),
+      'relationship' => 'none',
+      'expose_button' => array(
+        'button' => 'Expose',
+      ),
+    ),
+    'type_groups_all' => array(
       'id' => 'type_groups_all',
       'table' => 'og',
       'field' => 'type_groups_all',
-      'override' => array(
-        'button' => 'Override',
+      'operator' => '=',
+      'value' => '',
+      'group' => 0,
+      'exposed' => FALSE,
+      'expose' => array(
+        'operator' => FALSE,
+        'label' => '',
       ),
       'relationship' => 'none',
+      'expose_button' => array(
+        'button' => 'Expose',
+      ),
     ),
-    'status' => array(
+    'uid' => array(
       'operator' => '=',
       'value' => '1',
       'group' => '0',
@@ -2338,87 +3694,113 @@ function commons_core_views_default_views() {
         'operator' => FALSE,
         'label' => '',
       ),
-      'id' => 'status',
-      'table' => 'node',
-      'field' => 'status',
+      'id' => 'uid',
+      'table' => 'og_uid',
+      'field' => 'uid',
       'override' => array(
         'button' => 'Override',
       ),
       'relationship' => 'none',
     ),
-    'directory' => array(
-      'operator' => '=',
-      'value' => '1',
+    'keys' => array(
+      'operator' => 'optional',
+      'value' => '',
       'group' => '0',
-      'exposed' => FALSE,
+      'exposed' => TRUE,
       'expose' => array(
-        'operator' => FALSE,
-        'label' => '',
+        'use_operator' => 0,
+        'operator' => 'keys_op',
+        'identifier' => 'keys',
+        'label' => 'Search',
+        'optional' => 1,
+        'remember' => 0,
+      ),
+      'id' => 'keys',
+      'table' => 'search_index',
+      'field' => 'keys',
+      'override' => array(
+        'button' => 'Override',
       ),
-      'id' => 'directory',
-      'table' => 'og',
-      'field' => 'directory',
       'relationship' => 'none',
     ),
-    'private' => array(
-      'operator' => '=',
-      'value' => '0',
+    'tid' => array(
+      'operator' => 'or',
+      'value' => '',
       'group' => '0',
-      'exposed' => FALSE,
+      'exposed' => TRUE,
       'expose' => array(
-        'operator' => FALSE,
-        'label' => '',
+        'use_operator' => 0,
+        'operator' => 'tid_op',
+        'identifier' => 'tid',
+        'label' => 'Tags',
+        'optional' => 1,
+        'single' => 0,
+        'remember' => 0,
+      ),
+      'type' => 'textfield',
+      'limit' => TRUE,
+      'vid' => '1',
+      'id' => 'tid',
+      'table' => 'term_node',
+      'field' => 'tid',
+      'hierarchy' => 0,
+      'override' => array(
+        'button' => 'Override',
       ),
-      'id' => 'private',
-      'table' => 'og',
-      'field' => 'private',
       'relationship' => 'none',
+      'reduce_duplicates' => 0,
     ),
   ));
   $handler->override_option('access', array(
-    'type' => 'none',
+    'type' => 'role',
+    'role' => array(
+      2 => 2,
+    ),
   ));
   $handler->override_option('cache', array(
     'type' => 'none',
   ));
-  $handler->override_option('title', 'Most active groups');
-  $handler->override_option('empty', 'No groups have been created yet');
+  $handler->override_option('title', 'My groups');
+  $handler->override_option('header_format', '1');
+  $handler->override_option('header_empty', 1);
+  $handler->override_option('empty', 'You haven\'t joined any groups yet');
   $handler->override_option('empty_format', '1');
-  $handler->override_option('use_ajax', TRUE);
-  $handler->override_option('items_per_page', 5);
-  $handler->override_option('use_pager', 'mini');
-  $handler->override_option('pager_element', 2);
+  $handler->override_option('use_pager', '1');
   $handler->override_option('distinct', 1);
   $handler->override_option('style_plugin', 'list');
-  $handler = $view->new_display('block', 'Block', 'block_1');
-  $handler->override_option('block_description', 'Most active groups');
-  $handler->override_option('block_caching', -1);
+  $handler->override_option('style_options', array(
+    'grouping' => '',
+    'type' => 'ul',
+  ));
+  $handler = $view->new_display('page', 'Page', 'page_1');
+  $handler->override_option('path', 'groups/mine');
+  $handler->override_option('menu', array(
+    'type' => 'none',
+    'title' => '',
+    'description' => '',
+    'weight' => 0,
+    'name' => 'navigation',
+  ));
+  $handler->override_option('tab_options', array(
+    'type' => 'none',
+    'title' => '',
+    'description' => '',
+    'weight' => 0,
+    'name' => 'navigation',
+  ));
 
   $views[$view->name] = $view;
 
-  // Exported view: groups_my_groups
+  // Exported view: groups_newest_groups
   $view = new view;
-  $view->name = 'groups_my_groups';
-  $view->description = 'A block displaying the current user\'s groups';
+  $view->name = 'groups_newest_groups';
+  $view->description = 'A block displaying the newest groups';
   $view->tag = '';
   $view->base_table = 'node';
   $view->core = 0;
   $view->api_version = '2';
   $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
   $handler = $view->new_display('default', 'Defaults', 'default');
-  $handler->override_option('relationships', array(
-    'nid' => array(
-      'label' => 'Group node (member)',
-      'required' => 0,
-      'id' => 'nid',
-      'table' => 'og_uid',
-      'field' => 'nid',
-      'override' => array(
-        'button' => 'Override',
-      ),
-      'relationship' => 'none',
-    ),
-  ));
   $handler->override_option('fields', array(
     'field_group_image_fid' => array(
       'label' => '',
@@ -2494,11 +3876,11 @@ function commons_core_views_default_views() {
       ),
       'relationship' => 'none',
     ),
-    'post_count_new' => array(
+    'description' => array(
       'label' => '',
       'alter' => array(
-        'alter_text' => 1,
-        'text' => '[post_count_new] post(s)',
+        'alter_text' => 0,
+        'text' => '[description]',
         'make_link' => 0,
         'path' => '',
         'link_class' => '',
@@ -2515,18 +3897,12 @@ function commons_core_views_default_views() {
         'strip_tags' => 0,
       ),
       'empty' => '',
-      'hide_empty' => 1,
+      'hide_empty' => 0,
       'empty_zero' => 0,
-      'set_precision' => FALSE,
-      'precision' => 0,
-      'decimal' => '.',
-      'separator' => ',',
-      'prefix' => '',
-      'suffix' => '',
       'exclude' => 0,
-      'id' => 'post_count_new',
+      'id' => 'description',
       'table' => 'og',
-      'field' => 'post_count_new',
+      'field' => 'description',
       'override' => array(
         'button' => 'Override',
       ),
@@ -2534,11 +3910,12 @@ function commons_core_views_default_views() {
     ),
   ));
   $handler->override_option('sorts', array(
-    'title' => array(
-      'order' => 'ASC',
-      'id' => 'title',
+    'created' => array(
+      'order' => 'DESC',
+      'granularity' => 'second',
+      'id' => 'created',
       'table' => 'node',
-      'field' => 'title',
+      'field' => 'created',
       'override' => array(
         'button' => 'Override',
       ),
@@ -2580,7 +3957,7 @@ function commons_core_views_default_views() {
       ),
       'relationship' => 'none',
     ),
-    'uid' => array(
+    'directory' => array(
       'operator' => '=',
       'value' => '1',
       'group' => '0',
@@ -2589,174 +3966,79 @@ function commons_core_views_default_views() {
         'operator' => FALSE,
         'label' => '',
       ),
-      'id' => 'uid',
-      'table' => 'og_uid',
-      'field' => 'uid',
-      'override' => array(
-        'button' => 'Override',
+      'id' => 'directory',
+      'table' => 'og',
+      'field' => 'directory',
+      'relationship' => 'none',
+    ),
+    'private' => array(
+      'operator' => '=',
+      'value' => '0',
+      'group' => '0',
+      'exposed' => FALSE,
+      'expose' => array(
+        'operator' => FALSE,
+        'label' => '',
       ),
+      'id' => 'private',
+      'table' => 'og',
+      'field' => 'private',
       'relationship' => 'none',
     ),
   ));
   $handler->override_option('access', array(
-    'type' => 'role',
-    'role' => array(
-      2 => 2,
-    ),
+    'type' => 'none',
   ));
   $handler->override_option('cache', array(
-    'type' => 'none',
+    'type' => 'time',
+    'results_lifespan' => '1800',
+    'output_lifespan' => '1800',
   ));
-  $handler->override_option('title', 'Your groups');
-  $handler->override_option('empty', 'You haven\'t joined any groups yet');
+  $handler->override_option('title', 'Newest groups');
+  $handler->override_option('empty', 'No groups have been created yet');
   $handler->override_option('empty_format', '1');
   $handler->override_option('use_ajax', TRUE);
   $handler->override_option('items_per_page', 5);
   $handler->override_option('use_pager', 'mini');
-  $handler->override_option('pager_element', 1);
-  $handler->override_option('distinct', 1);
+  $handler->override_option('pager_element', 3);
+  $handler->override_option('distinct', 0);
   $handler->override_option('style_plugin', 'list');
   $handler = $view->new_display('block', 'Block', 'block_1');
-  $handler->override_option('block_description', 'Current user\'s groups');
-  $handler->override_option('block_caching', -1);
-
-  $views[$view->name] = $view;
-
-  // Exported view: groups_my_groups_listing
-  $view = new view;
-  $view->name = 'groups_my_groups_listing';
-  $view->description = 'The page listing of my groups';
-  $view->tag = '';
-  $view->base_table = 'node';
-  $view->core = 0;
-  $view->api_version = '2';
-  $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
-  $handler = $view->new_display('default', 'Defaults', 'default');
-  $handler->override_option('fields', array(
-    'field_group_image_fid' => array(
-      'label' => '',
-      'alter' => array(
-        'alter_text' => 0,
-        'text' => '',
-        'make_link' => 0,
-        'path' => '',
-        'link_class' => '',
-        'alt' => '',
-        'prefix' => '',
-        'suffix' => '',
-        'target' => '',
-        'help' => '',
-        'trim' => 0,
-        'max_length' => '',
-        'word_boundary' => 1,
-        'ellipsis' => 1,
-        'html' => 0,
-        'strip_tags' => 0,
-      ),
-      'empty' => '',
-      'hide_empty' => 0,
-      'empty_zero' => 0,
-      'link_to_node' => 0,
-      'label_type' => 'none',
-      'format' => 'group_images_medium_linked',
-      'multiple' => array(
-        'group' => TRUE,
-        'multiple_number' => '',
-        'multiple_from' => '',
-        'multiple_reversed' => FALSE,
-      ),
-      'exclude' => 0,
-      'id' => 'field_group_image_fid',
-      'table' => 'node_data_field_group_image',
-      'field' => 'field_group_image_fid',
-      'override' => array(
-        'button' => 'Override',
-      ),
-      'relationship' => 'none',
-    ),
-    'title' => array(
-      'label' => '',
-      'alter' => array(
-        'alter_text' => 0,
-        'text' => '',
-        'make_link' => 0,
-        'path' => '',
-        'link_class' => '',
-        'alt' => '',
-        'prefix' => '',
-        'suffix' => '',
-        'target' => '',
-        'help' => '',
-        'trim' => 0,
-        'max_length' => '',
-        'word_boundary' => 1,
-        'ellipsis' => 1,
-        'html' => 0,
-        'strip_tags' => 0,
-      ),
-      'empty' => '',
-      'hide_empty' => 0,
-      'empty_zero' => 0,
-      'link_to_node' => 1,
-      'exclude' => 1,
-      'id' => 'title',
-      'table' => 'node',
-      'field' => 'title',
-      'relationship' => 'none',
-      'override' => array(
-        'button' => 'Override',
-      ),
-    ),
-    'tid' => array(
-      'label' => 'Tags',
-      'alter' => array(
-        'alter_text' => 0,
-        'text' => '',
-        'make_link' => 0,
-        'path' => '',
-        'link_class' => '',
-        'alt' => '',
-        'prefix' => '',
-        'suffix' => '',
-        'target' => '',
-        'help' => '',
-        'trim' => 0,
-        'max_length' => '',
-        'word_boundary' => 1,
-        'ellipsis' => 1,
-        'html' => 0,
-        'strip_tags' => 0,
-      ),
-      'empty' => '',
-      'hide_empty' => 1,
-      'empty_zero' => 0,
-      'type' => 'separator',
-      'separator' => ', ',
-      'link_to_taxonomy' => 1,
-      'limit' => 0,
-      'vids' => array(
-        5 => 0,
-        2 => 0,
-        3 => 0,
-        6 => 0,
-        4 => 0,
-      ),
-      'exclude' => 1,
-      'id' => 'tid',
-      'table' => 'term_node',
-      'field' => 'tid',
+  $handler->override_option('block_description', 'Newest groups');
+  $handler->override_option('block_caching', -1);
+
+  $views[$view->name] = $view;
+
+  // Exported view: most_bookmarked
+  $view = new view;
+  $view->name = 'most_bookmarked';
+  $view->description = 'The most bookmarked nodes';
+  $view->tag = '';
+  $view->base_table = 'node';
+  $view->core = 0;
+  $view->api_version = '2';
+  $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
+  $handler = $view->new_display('default', 'Defaults', 'default');
+  $handler->override_option('relationships', array(
+    'flag_count_rel' => array(
+      'label' => 'counter',
+      'required' => 1,
+      'flag' => 'bookmarks',
+      'id' => 'flag_count_rel',
+      'table' => 'node',
+      'field' => 'flag_count_rel',
       'override' => array(
         'button' => 'Override',
       ),
       'relationship' => 'none',
     ),
-    'description' => array(
+  ));
+  $handler->override_option('fields', array(
+    'title' => array(
       'label' => '',
       'alter' => array(
-        'alter_text' => 1,
-        'text' => '<div class="title">[title]</div>
-    <div class="tags">Tags: [tid] </div>
-    <div class="description">[description] </div>',
+        'alter_text' => 0,
+        'text' => '',
         'make_link' => 0,
         'path' => '',
         'link_class' => '',
@@ -2775,16 +4057,17 @@ function commons_core_views_default_views() {
       'empty' => '',
       'hide_empty' => 0,
       'empty_zero' => 0,
+      'link_to_node' => 1,
       'exclude' => 0,
-      'id' => 'description',
-      'table' => 'og',
-      'field' => 'description',
-      'relationship' => 'none',
+      'id' => 'title',
+      'table' => 'node',
+      'field' => 'title',
       'override' => array(
         'button' => 'Override',
       ),
+      'relationship' => 'none',
     ),
-    'leave_group' => array(
+    'timestamp' => array(
       'label' => '',
       'alter' => array(
         'alter_text' => 0,
@@ -2807,11 +4090,12 @@ function commons_core_views_default_views() {
       'empty' => '',
       'hide_empty' => 0,
       'empty_zero' => 0,
-      'text' => 'Leave group',
+      'link_to_node' => 0,
+      'comments' => 1,
       'exclude' => 0,
-      'id' => 'leave_group',
-      'table' => 'og_uid',
-      'field' => 'leave_group',
+      'id' => 'timestamp',
+      'table' => 'history_user',
+      'field' => 'timestamp',
       'override' => array(
         'button' => 'Override',
       ),
@@ -2819,63 +4103,21 @@ function commons_core_views_default_views() {
     ),
   ));
   $handler->override_option('sorts', array(
-    'score' => array(
+    'count' => array(
+      'exposed' => FALSE,
       'order' => 'DESC',
-      'id' => 'score',
-      'table' => 'search_index',
-      'field' => 'score',
-      'override' => array(
-        'button' => 'Override',
-      ),
-      'relationship' => 'none',
-    ),
-    'title' => array(
-      'order' => 'ASC',
-      'id' => 'title',
-      'table' => 'node',
-      'field' => 'title',
+      'identifier' => 'unsorted',
+      'id' => 'count',
+      'table' => 'flag_counts',
+      'field' => 'count',
+      'relationship' => 'flag_count_rel',
       'override' => array(
         'button' => 'Override',
       ),
-      'relationship' => 'none',
     ),
   ));
   $handler->override_option('filters', array(
     'status' => array(
-      'id' => 'status',
-      'table' => 'node',
-      'field' => 'status',
-      'operator' => '=',
-      'value' => 1,
-      'group' => 0,
-      'exposed' => FALSE,
-      'expose' => array(
-        'operator' => FALSE,
-        'label' => '',
-      ),
-      'relationship' => 'none',
-      'expose_button' => array(
-        'button' => 'Expose',
-      ),
-    ),
-    'type_groups_all' => array(
-      'id' => 'type_groups_all',
-      'table' => 'og',
-      'field' => 'type_groups_all',
-      'operator' => '=',
-      'value' => '',
-      'group' => 0,
-      'exposed' => FALSE,
-      'expose' => array(
-        'operator' => FALSE,
-        'label' => '',
-      ),
-      'relationship' => 'none',
-      'expose_button' => array(
-        'button' => 'Expose',
-      ),
-    ),
-    'uid' => array(
       'operator' => '=',
       'value' => '1',
       'group' => '0',
@@ -2884,119 +4126,115 @@ function commons_core_views_default_views() {
         'operator' => FALSE,
         'label' => '',
       ),
-      'id' => 'uid',
-      'table' => 'og_uid',
-      'field' => 'uid',
-      'override' => array(
-        'button' => 'Override',
-      ),
-      'relationship' => 'none',
-    ),
-    'keys' => array(
-      'operator' => 'optional',
-      'value' => '',
-      'group' => '0',
-      'exposed' => TRUE,
-      'expose' => array(
-        'use_operator' => 0,
-        'operator' => 'keys_op',
-        'identifier' => 'keys',
-        'label' => 'Search',
-        'optional' => 1,
-        'remember' => 0,
-      ),
-      'id' => 'keys',
-      'table' => 'search_index',
-      'field' => 'keys',
-      'override' => array(
-        'button' => 'Override',
-      ),
-      'relationship' => 'none',
-    ),
-    'tid' => array(
-      'operator' => 'or',
-      'value' => '',
-      'group' => '0',
-      'exposed' => TRUE,
-      'expose' => array(
-        'use_operator' => 0,
-        'operator' => 'tid_op',
-        'identifier' => 'tid',
-        'label' => 'Tags',
-        'optional' => 1,
-        'single' => 0,
-        'remember' => 0,
-      ),
-      'type' => 'textfield',
-      'limit' => TRUE,
-      'vid' => '1',
-      'id' => 'tid',
-      'table' => 'term_node',
-      'field' => 'tid',
-      'hierarchy' => 0,
+      'id' => 'status',
+      'table' => 'node',
+      'field' => 'status',
       'override' => array(
         'button' => 'Override',
       ),
       'relationship' => 'none',
-      'reduce_duplicates' => 0,
     ),
   ));
   $handler->override_option('access', array(
-    'type' => 'role',
-    'role' => array(
-      2 => 2,
-    ),
+    'type' => 'perm',
+    'perm' => 'access content',
   ));
   $handler->override_option('cache', array(
     'type' => 'none',
   ));
-  $handler->override_option('title', 'My groups');
-  $handler->override_option('header_format', '1');
-  $handler->override_option('header_empty', 1);
-  $handler->override_option('empty', 'You haven\'t joined any groups yet');
+  $handler->override_option('title', 'Most bookmarked');
+  $handler->override_option('empty', 'No items have been bookmarked yet');
   $handler->override_option('empty_format', '1');
-  $handler->override_option('use_pager', '1');
-  $handler->override_option('distinct', 1);
+  $handler->override_option('items_per_page', 5);
+  $handler->override_option('row_options', array(
+    'inline' => array(
+      'name' => 'name',
+      'timestamp' => 'timestamp',
+    ),
+    'separator' => '',
+    'hide_empty' => 0,
+  ));
+  $handler = $view->new_display('block', 'Block', 'block_1');
   $handler->override_option('style_plugin', 'list');
   $handler->override_option('style_options', array(
     'grouping' => '',
     'type' => 'ul',
   ));
-  $handler = $view->new_display('page', 'Page', 'page_1');
-  $handler->override_option('path', 'groups/mine');
-  $handler->override_option('menu', array(
-    'type' => 'none',
-    'title' => '',
-    'description' => '',
-    'weight' => 0,
-    'name' => 'navigation',
-  ));
-  $handler->override_option('tab_options', array(
-    'type' => 'none',
-    'title' => '',
-    'description' => '',
-    'weight' => 0,
-    'name' => 'navigation',
+  $handler->override_option('row_options', array(
+    'inline' => array(
+      'title' => 'title',
+      'timestamp' => 'timestamp',
+    ),
+    'separator' => '',
+    'hide_empty' => 0,
   ));
+  $handler->override_option('block_description', 'Most bookmarked');
+  $handler->override_option('block_caching', -1);
 
   $views[$view->name] = $view;
 
-  // Exported view: groups_newest_groups
+  // Exported view: my_recent_items
   $view = new view;
-  $view->name = 'groups_newest_groups';
-  $view->description = 'A block displaying the newest groups';
+  $view->name = 'my_recent_items';
+  $view->description = 'Items I\'ve recently created';
   $view->tag = '';
   $view->base_table = 'node';
   $view->core = 0;
   $view->api_version = '2';
   $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
   $handler = $view->new_display('default', 'Defaults', 'default');
+  $handler->override_option('relationships', array(
+    'group_nid' => array(
+      'label' => 'Group node (post)',
+      'required' => 0,
+      'id' => 'group_nid',
+      'table' => 'og_ancestry',
+      'field' => 'group_nid',
+      'override' => array(
+        'button' => 'Override',
+      ),
+      'relationship' => 'none',
+    ),
+  ));
   $handler->override_option('fields', array(
-    'field_group_image_fid' => array(
+    'title' => array(
+      'label' => '',
+      'alter' => array(
+        'alter_text' => 0,
+        'text' => '',
+        'make_link' => 0,
+        'path' => '',
+        'link_class' => '',
+        'alt' => '',
+        'prefix' => '',
+        'suffix' => '',
+        'target' => '',
+        'help' => '',
+        'trim' => 0,
+        'max_length' => '',
+        'word_boundary' => 1,
+        'ellipsis' => 1,
+        'strip_tags' => 0,
+        'html' => 0,
+      ),
+      'empty' => '',
+      'hide_empty' => 0,
+      'empty_zero' => 0,
+      'link_to_node' => 1,
+      'exclude' => 0,
+      'id' => 'title',
+      'table' => 'node',
+      'field' => 'title',
+      'override' => array(
+        'button' => 'Override',
+      ),
+      'relationship' => 'none',
+    ),
+    'type' => array(
       'label' => '',
       'alter' => array(
-        'alter_text' => 0,
-        'text' => '',
+        'alter_text' => 1,
+        'text' => '<i>([type])</i>',
         'make_link' => 0,
         'path' => '',
         'link_class' => '',
@@ -3016,28 +4254,20 @@ function commons_core_views_default_views() {
       'hide_empty' => 0,
       'empty_zero' => 0,
       'link_to_node' => 0,
-      'label_type' => 'none',
-      'format' => 'group_images_thumb_linked',
-      'multiple' => array(
-        'group' => TRUE,
-        'multiple_number' => '',
-        'multiple_from' => '',
-        'multiple_reversed' => FALSE,
-      ),
+      'machine_name' => 0,
       'exclude' => 0,
-      'id' => 'field_group_image_fid',
-      'table' => 'node_data_field_group_image',
-      'field' => 'field_group_image_fid',
+      'id' => 'type',
+      'table' => 'node',
+      'field' => 'type',
       'override' => array(
         'button' => 'Override',
       ),
       'relationship' => 'none',
     ),
-    'title' => array(
+    'nothing' => array(
       'label' => '',
       'alter' => array(
-        'alter_text' => 0,
-        'text' => '',
+        'text' => 'in ',
         'make_link' => 0,
         'path' => '',
         'link_class' => '',
@@ -3056,21 +4286,53 @@ function commons_core_views_default_views() {
       'empty' => '',
       'hide_empty' => 0,
       'empty_zero' => 0,
-      'link_to_node' => 1,
       'exclude' => 0,
-      'id' => 'title',
-      'table' => 'node',
-      'field' => 'title',
+      'id' => 'nothing',
+      'table' => 'views',
+      'field' => 'nothing',
       'override' => array(
         'button' => 'Override',
       ),
       'relationship' => 'none',
     ),
-    'description' => array(
+    'group_nid' => array(
       'label' => '',
       'alter' => array(
-        'alter_text' => 0,
-        'text' => '[description]',
+        'alter_text' => FALSE,
+        'text' => '',
+        'make_link' => FALSE,
+        'path' => '',
+        'alt' => '',
+        'link_class' => '',
+        'prefix' => '',
+        'suffix' => '',
+        'target' => '',
+        'trim' => FALSE,
+        'max_length' => '',
+        'word_boundary' => TRUE,
+        'ellipsis' => TRUE,
+        'strip_tags' => FALSE,
+        'html' => FALSE,
+      ),
+      'empty' => '',
+      'hide_empty' => 0,
+      'empty_zero' => 0,
+      'type' => 'separator',
+      'separator' => ', ',
+      'exclude' => 0,
+      'id' => 'group_nid',
+      'table' => 'og_ancestry',
+      'field' => 'group_nid',
+      'override' => array(
+        'button' => 'Override',
+      ),
+      'relationship' => 'none',
+    ),
+    'changed' => array(
+      'label' => '',
+      'alter' => array(
+        'alter_text' => 1,
+        'text' => ' - [changed]',
         'make_link' => 0,
         'path' => '',
         'link_class' => '',
@@ -3083,16 +4345,18 @@ function commons_core_views_default_views() {
         'max_length' => '',
         'word_boundary' => 1,
         'ellipsis' => 1,
-        'html' => 0,
         'strip_tags' => 0,
+        'html' => 0,
       ),
       'empty' => '',
       'hide_empty' => 0,
       'empty_zero' => 0,
+      'date_format' => 'time ago',
+      'custom_date_format' => '',
       'exclude' => 0,
-      'id' => 'description',
-      'table' => 'og',
-      'field' => 'description',
+      'id' => 'changed',
+      'table' => 'node',
+      'field' => 'changed',
       'override' => array(
         'button' => 'Override',
       ),
@@ -3100,12 +4364,12 @@ function commons_core_views_default_views() {
     ),
   ));
   $handler->override_option('sorts', array(
-    'created' => array(
+    'changed' => array(
       'order' => 'DESC',
       'granularity' => 'second',
-      'id' => 'created',
+      'id' => 'changed',
       'table' => 'node',
-      'field' => 'created',
+      'field' => 'changed',
       'override' => array(
         'button' => 'Override',
       ),
@@ -3113,41 +4377,43 @@ function commons_core_views_default_views() {
     ),
   ));
   $handler->override_option('filters', array(
-    'type_groups_all' => array(
+    'status' => array(
       'operator' => '=',
-      'value' => '',
+      'value' => '1',
       'group' => '0',
       'exposed' => FALSE,
       'expose' => array(
         'operator' => FALSE,
         'label' => '',
       ),
-      'id' => 'type_groups_all',
-      'table' => 'og',
-      'field' => 'type_groups_all',
+      'id' => 'status',
+      'table' => 'node',
+      'field' => 'status',
       'override' => array(
         'button' => 'Override',
       ),
       'relationship' => 'none',
     ),
-    'status' => array(
-      'operator' => '=',
-      'value' => '1',
+    'type' => array(
+      'operator' => 'not in',
+      'value' => array(
+        'group' => 'group',
+      ),
       'group' => '0',
       'exposed' => FALSE,
       'expose' => array(
         'operator' => FALSE,
         'label' => '',
       ),
-      'id' => 'status',
+      'id' => 'type',
       'table' => 'node',
-      'field' => 'status',
+      'field' => 'type',
       'override' => array(
         'button' => 'Override',
       ),
       'relationship' => 'none',
     ),
-    'directory' => array(
+    'uid_current' => array(
       'operator' => '=',
       'value' => '1',
       'group' => '0',
@@ -3156,23 +4422,12 @@ function commons_core_views_default_views() {
         'operator' => FALSE,
         'label' => '',
       ),
-      'id' => 'directory',
-      'table' => 'og',
-      'field' => 'directory',
-      'relationship' => 'none',
-    ),
-    'private' => array(
-      'operator' => '=',
-      'value' => '0',
-      'group' => '0',
-      'exposed' => FALSE,
-      'expose' => array(
-        'operator' => FALSE,
-        'label' => '',
+      'id' => 'uid_current',
+      'table' => 'users',
+      'field' => 'uid_current',
+      'override' => array(
+        'button' => 'Override',
       ),
-      'id' => 'private',
-      'table' => 'og',
-      'field' => 'private',
       'relationship' => 'none',
     ),
   ));
@@ -3180,29 +4435,38 @@ function commons_core_views_default_views() {
     'type' => 'none',
   ));
   $handler->override_option('cache', array(
-    'type' => 'time',
-    'results_lifespan' => '1800',
-    'output_lifespan' => '1800',
+    'type' => 'none',
   ));
-  $handler->override_option('title', 'Newest groups');
-  $handler->override_option('empty', 'No groups have been created yet');
+  $handler->override_option('title', 'My recent items');
+  $handler->override_option('empty', 'You haven\'t created any items yet.');
   $handler->override_option('empty_format', '1');
   $handler->override_option('use_ajax', TRUE);
   $handler->override_option('items_per_page', 5);
   $handler->override_option('use_pager', 'mini');
-  $handler->override_option('pager_element', 3);
-  $handler->override_option('distinct', 0);
+  $handler->override_option('pager_element', 4);
+  $handler->override_option('distinct', 1);
   $handler->override_option('style_plugin', 'list');
+  $handler->override_option('row_options', array(
+    'inline' => array(
+      'title' => 'title',
+      'type' => 'type',
+      'nothing' => 'nothing',
+      'group_nid' => 'group_nid',
+      'changed' => 'changed',
+    ),
+    'separator' => '',
+    'hide_empty' => 0,
+  ));
   $handler = $view->new_display('block', 'Block', 'block_1');
-  $handler->override_option('block_description', 'Newest groups');
+  $handler->override_option('block_description', 'My recent items');
   $handler->override_option('block_caching', -1);
 
   $views[$view->name] = $view;
 
-  // Exported view: most_bookmarked
+  // Exported view: my_unread_items
   $view = new view;
-  $view->name = 'most_bookmarked';
-  $view->description = 'The most bookmarked nodes';
+  $view->name = 'my_unread_items';
+  $view->description = 'Recently updated item\'s I\'ve comment on';
   $view->tag = '';
   $view->base_table = 'node';
   $view->core = 0;
@@ -3210,21 +4474,17 @@ function commons_core_views_default_views() {
   $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
   $handler = $view->new_display('default', 'Defaults', 'default');
   $handler->override_option('relationships', array(
-    'flag_count_rel' => array(
-      'label' => 'counter',
-      'required' => 1,
-      'flag' => 'bookmarks',
-      'id' => 'flag_count_rel',
-      'table' => 'node',
-      'field' => 'flag_count_rel',
-      'override' => array(
-        'button' => 'Override',
-      ),
+    'group_nid' => array(
+      'label' => 'Group node (post)',
+      'required' => 0,
+      'id' => 'group_nid',
+      'table' => 'og_ancestry',
+      'field' => 'group_nid',
       'relationship' => 'none',
     ),
   ));
   $handler->override_option('fields', array(
-    'picture' => array(
+    'title' => array(
       'label' => '',
       'alter' => array(
         'alter_text' => 0,
@@ -3241,27 +4501,27 @@ function commons_core_views_default_views() {
         'max_length' => '',
         'word_boundary' => 1,
         'ellipsis' => 1,
-        'html' => 0,
         'strip_tags' => 0,
+        'html' => 0,
       ),
       'empty' => '',
       'hide_empty' => 0,
       'empty_zero' => 0,
-      'imagecache_preset' => 'user_picture_meta',
+      'link_to_node' => 1,
       'exclude' => 0,
-      'id' => 'picture',
-      'table' => 'users',
-      'field' => 'picture',
+      'id' => 'title',
+      'table' => 'node',
+      'field' => 'title',
       'override' => array(
         'button' => 'Override',
       ),
       'relationship' => 'none',
     ),
-    'title' => array(
+    'type' => array(
       'label' => '',
       'alter' => array(
-        'alter_text' => 0,
-        'text' => '',
+        'alter_text' => 1,
+        'text' => '<i>([type])</i>',
         'make_link' => 0,
         'path' => '',
         'link_class' => '',
@@ -3280,21 +4540,21 @@ function commons_core_views_default_views() {
       'empty' => '',
       'hide_empty' => 0,
       'empty_zero' => 0,
-      'link_to_node' => 1,
+      'link_to_node' => 0,
+      'machine_name' => 0,
       'exclude' => 0,
-      'id' => 'title',
+      'id' => 'type',
       'table' => 'node',
-      'field' => 'title',
+      'field' => 'type',
       'override' => array(
         'button' => 'Override',
       ),
       'relationship' => 'none',
     ),
-    'timestamp' => array(
+    'nothing' => array(
       'label' => '',
       'alter' => array(
-        'alter_text' => 0,
-        'text' => '',
+        'text' => 'in ',
         'make_link' => 0,
         'path' => '',
         'link_class' => '',
@@ -3313,22 +4573,53 @@ function commons_core_views_default_views() {
       'empty' => '',
       'hide_empty' => 0,
       'empty_zero' => 0,
-      'link_to_node' => 0,
-      'comments' => 1,
       'exclude' => 0,
-      'id' => 'timestamp',
-      'table' => 'history_user',
-      'field' => 'timestamp',
+      'id' => 'nothing',
+      'table' => 'views',
+      'field' => 'nothing',
+      'override' => array(
+        'button' => 'Override',
+      ),
+      'relationship' => 'none',
+    ),
+    'group_nid' => array(
+      'label' => '',
+      'alter' => array(
+        'alter_text' => FALSE,
+        'text' => '',
+        'make_link' => FALSE,
+        'path' => '',
+        'alt' => '',
+        'link_class' => '',
+        'prefix' => '',
+        'suffix' => '',
+        'target' => '',
+        'trim' => FALSE,
+        'max_length' => '',
+        'word_boundary' => TRUE,
+        'ellipsis' => TRUE,
+        'strip_tags' => FALSE,
+        'html' => FALSE,
+      ),
+      'empty' => '',
+      'hide_empty' => 0,
+      'empty_zero' => 0,
+      'type' => 'separator',
+      'separator' => ', ',
+      'exclude' => 0,
+      'id' => 'group_nid',
+      'table' => 'og_ancestry',
+      'field' => 'group_nid',
+      'relationship' => 'none',
       'override' => array(
         'button' => 'Override',
       ),
-      'relationship' => 'none',
     ),
-    'name' => array(
-      'label' => 'by',
+    'changed' => array(
+      'label' => '',
       'alter' => array(
-        'alter_text' => 0,
-        'text' => '',
+        'alter_text' => 1,
+        'text' => ' - [changed]',
         'make_link' => 0,
         'path' => '',
         'link_class' => '',
@@ -3341,19 +4632,18 @@ function commons_core_views_default_views() {
         'max_length' => '',
         'word_boundary' => 1,
         'ellipsis' => 1,
-        'html' => 0,
         'strip_tags' => 0,
+        'html' => 0,
       ),
       'empty' => '',
       'hide_empty' => 0,
       'empty_zero' => 0,
-      'link_to_user' => 1,
-      'overwrite_anonymous' => 0,
-      'anonymous_text' => '',
+      'date_format' => 'time ago',
+      'custom_date_format' => '',
       'exclude' => 0,
-      'id' => 'name',
-      'table' => 'users',
-      'field' => 'name',
+      'id' => 'changed',
+      'table' => 'node',
+      'field' => 'changed',
       'override' => array(
         'button' => 'Override',
       ),
@@ -3361,17 +4651,16 @@ function commons_core_views_default_views() {
     ),
   ));
   $handler->override_option('sorts', array(
-    'count' => array(
-      'exposed' => FALSE,
+    'changed' => array(
       'order' => 'DESC',
-      'identifier' => 'unsorted',
-      'id' => 'count',
-      'table' => 'flag_counts',
-      'field' => 'count',
-      'relationship' => 'flag_count_rel',
+      'granularity' => 'second',
+      'id' => 'changed',
+      'table' => 'node',
+      'field' => 'changed',
       'override' => array(
         'button' => 'Override',
       ),
+      'relationship' => 'none',
     ),
   ));
   $handler->override_option('filters', array(
@@ -3392,69 +4681,198 @@ function commons_core_views_default_views() {
       ),
       'relationship' => 'none',
     ),
+    'type' => array(
+      'operator' => 'not in',
+      'value' => array(
+        'group' => 'group',
+      ),
+      'group' => '0',
+      'exposed' => FALSE,
+      'expose' => array(
+        'operator' => FALSE,
+        'label' => '',
+      ),
+      'id' => 'type',
+      'table' => 'node',
+      'field' => 'type',
+      'override' => array(
+        'button' => 'Override',
+      ),
+      'relationship' => 'none',
+    ),
+    'timestamp' => array(
+      'operator' => '=',
+      'value' => '',
+      'group' => '0',
+      'exposed' => FALSE,
+      'expose' => array(
+        'operator' => FALSE,
+        'label' => '',
+      ),
+      'id' => 'timestamp',
+      'table' => 'history_user',
+      'field' => 'timestamp',
+      'relationship' => 'none',
+    ),
+    'uid' => array(
+      'operator' => '=',
+      'value' => '1',
+      'group' => '0',
+      'exposed' => FALSE,
+      'expose' => array(
+        'operator' => FALSE,
+        'label' => '',
+      ),
+      'id' => 'uid',
+      'table' => 'og_uid',
+      'field' => 'uid',
+      'relationship' => 'group_nid',
+    ),
   ));
   $handler->override_option('access', array(
-    'type' => 'perm',
-    'perm' => 'access content',
+    'type' => 'none',
   ));
   $handler->override_option('cache', array(
     'type' => 'none',
   ));
-  $handler->override_option('title', 'Most bookmarked');
-  $handler->override_option('empty', 'No items have been bookmarked yet');
+  $handler->override_option('title', 'My unread items');
   $handler->override_option('empty_format', '1');
+  $handler->override_option('use_ajax', TRUE);
   $handler->override_option('items_per_page', 5);
-  $handler->override_option('row_options', array(
-    'inline' => array(
-      'name' => 'name',
-      'timestamp' => 'timestamp',
-    ),
-    'separator' => '',
-    'hide_empty' => 0,
-  ));
-  $handler = $view->new_display('block', 'Block', 'block_1');
+  $handler->override_option('use_pager', 'mini');
+  $handler->override_option('pager_element', 12);
+  $handler->override_option('distinct', 1);
   $handler->override_option('style_plugin', 'list');
-  $handler->override_option('style_options', array(
-    'grouping' => '',
-    'type' => 'ul',
-  ));
   $handler->override_option('row_options', array(
     'inline' => array(
       'title' => 'title',
-      'timestamp' => 'timestamp',
+      'type' => 'type',
+      'nothing' => 'nothing',
+      'group_nid' => 'group_nid',
+      'changed' => 'changed',
     ),
     'separator' => '',
     'hide_empty' => 0,
   ));
-  $handler->override_option('block_description', 'Most bookmarked');
+  $handler = $view->new_display('block', 'Block', 'block_1');
+  $handler->override_option('block_description', 'My unread items');
   $handler->override_option('block_caching', -1);
 
   $views[$view->name] = $view;
 
-  // Exported view: my_recent_items
+  // Exported view: new_groups_field
   $view = new view;
-  $view->name = 'my_recent_items';
-  $view->description = 'Items I\'ve recently created';
+  $view->name = 'new_groups_field';
+  $view->description = 'A view that displays 3 posts in a given organic group. Intended to be used as a views_field_view field as innew_your_groups.';
   $view->tag = '';
   $view->base_table = 'node';
-  $view->core = 0;
+  $view->core = 6;
   $view->api_version = '2';
   $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
   $handler = $view->new_display('default', 'Defaults', 'default');
-  $handler->override_option('relationships', array(
+  $handler->override_option('fields', array(
+    'path' => array(
+      'label' => '',
+      'alter' => array(
+        'alter_text' => 0,
+        'text' => '',
+        'make_link' => 0,
+        'path' => '',
+        'absolute' => 0,
+        'link_class' => '',
+        'alt' => '',
+        'rel' => '',
+        'prefix' => '',
+        'suffix' => '',
+        'target' => '',
+        'help' => '',
+        'trim' => 0,
+        'max_length' => '',
+        'word_boundary' => 1,
+        'ellipsis' => 1,
+        'html' => 0,
+        'strip_tags' => 0,
+      ),
+      'empty' => '',
+      'hide_empty' => 0,
+      'empty_zero' => 0,
+      'hide_alter_empty' => 1,
+      'absolute' => 1,
+      'exclude' => 1,
+      'id' => 'path',
+      'table' => 'node',
+      'field' => 'path',
+      'relationship' => 'none',
+    ),
     'group_nid' => array(
-      'label' => 'Group node (post)',
-      'required' => 0,
+      'label' => '',
+      'alter' => array(
+        'alter_text' => FALSE,
+        'text' => '',
+        'make_link' => FALSE,
+        'path' => '',
+        'absolute' => '',
+        'alt' => '',
+        'rel' => '',
+        'link_class' => '',
+        'prefix' => '',
+        'suffix' => '',
+        'target' => '',
+        'trim' => FALSE,
+        'max_length' => '',
+        'word_boundary' => TRUE,
+        'ellipsis' => TRUE,
+        'strip_tags' => FALSE,
+        'html' => FALSE,
+      ),
+      'empty' => '',
+      'hide_empty' => 0,
+      'empty_zero' => 0,
+      'hide_alter_empty' => 1,
+      'type' => 'separator',
+      'separator' => ', ',
+      'exclude' => 1,
       'id' => 'group_nid',
       'table' => 'og_ancestry',
       'field' => 'group_nid',
+      'relationship' => 'none',
+    ),
+    'picture' => array(
+      'label' => '',
+      'alter' => array(
+        'alter_text' => 0,
+        'text' => '',
+        'make_link' => 0,
+        'path' => '',
+        'absolute' => 0,
+        'link_class' => '',
+        'alt' => '',
+        'rel' => '',
+        'prefix' => '',
+        'suffix' => '',
+        'target' => '',
+        'help' => '',
+        'trim' => 0,
+        'max_length' => '',
+        'word_boundary' => 1,
+        'ellipsis' => 1,
+        'html' => 0,
+        'strip_tags' => 0,
+      ),
+      'empty' => '',
+      'hide_empty' => 0,
+      'empty_zero' => 0,
+      'hide_alter_empty' => 1,
+      'imagecache_preset' => 'user_picture_meta',
+      'exclude' => 0,
+      'id' => 'picture',
+      'table' => 'users',
+      'field' => 'picture',
+      'relationship' => 'none',
       'override' => array(
         'button' => 'Override',
       ),
-      'relationship' => 'none',
     ),
-  ));
-  $handler->override_option('fields', array(
     'title' => array(
       'label' => '',
       'alter' => array(
@@ -3462,8 +4880,10 @@ function commons_core_views_default_views() {
         'text' => '',
         'make_link' => 0,
         'path' => '',
+        'absolute' => 0,
         'link_class' => '',
         'alt' => '',
+        'rel' => '',
         'prefix' => '',
         'suffix' => '',
         'target' => '',
@@ -3472,31 +4892,31 @@ function commons_core_views_default_views() {
         'max_length' => '',
         'word_boundary' => 1,
         'ellipsis' => 1,
-        'strip_tags' => 0,
         'html' => 0,
+        'strip_tags' => 0,
       ),
       'empty' => '',
       'hide_empty' => 0,
       'empty_zero' => 0,
+      'hide_alter_empty' => 1,
       'link_to_node' => 1,
       'exclude' => 0,
       'id' => 'title',
       'table' => 'node',
       'field' => 'title',
-      'override' => array(
-        'button' => 'Override',
-      ),
       'relationship' => 'none',
     ),
-    'type' => array(
+    'name' => array(
       'label' => '',
       'alter' => array(
         'alter_text' => 1,
-        'text' => '<i>([type])</i>',
+        'text' => 'by [name]',
         'make_link' => 0,
         'path' => '',
+        'absolute' => 0,
         'link_class' => '',
         'alt' => '',
+        'rel' => '',
         'prefix' => '',
         'suffix' => '',
         'target' => '',
@@ -3511,25 +4931,30 @@ function commons_core_views_default_views() {
       'empty' => '',
       'hide_empty' => 0,
       'empty_zero' => 0,
-      'link_to_node' => 0,
-      'machine_name' => 0,
+      'hide_alter_empty' => 1,
+      'link_to_user' => 1,
+      'overwrite_anonymous' => 0,
+      'anonymous_text' => '',
       'exclude' => 0,
-      'id' => 'type',
-      'table' => 'node',
-      'field' => 'type',
+      'id' => 'name',
+      'table' => 'users',
+      'field' => 'name',
       'override' => array(
         'button' => 'Override',
       ),
       'relationship' => 'none',
     ),
-    'nothing' => array(
+    'created' => array(
       'label' => '',
       'alter' => array(
-        'text' => 'in ',
+        'alter_text' => 0,
+        'text' => '',
         'make_link' => 0,
         'path' => '',
+        'absolute' => 0,
         'link_class' => '',
         'alt' => '',
+        'rel' => '',
         'prefix' => '',
         'suffix' => '',
         'target' => '',
@@ -3544,57 +4969,73 @@ function commons_core_views_default_views() {
       'empty' => '',
       'hide_empty' => 0,
       'empty_zero' => 0,
+      'hide_alter_empty' => 1,
+      'date_format' => 'custom',
+      'custom_date_format' => 'j M Y',
       'exclude' => 0,
-      'id' => 'nothing',
-      'table' => 'views',
-      'field' => 'nothing',
+      'id' => 'created',
+      'table' => 'node',
+      'field' => 'created',
+      'relationship' => 'none',
       'override' => array(
         'button' => 'Override',
       ),
-      'relationship' => 'none',
     ),
-    'group_nid' => array(
+    'comment_count' => array(
       'label' => '',
       'alter' => array(
-        'alter_text' => FALSE,
-        'text' => '',
-        'make_link' => FALSE,
-        'path' => '',
-        'alt' => '',
+        'alter_text' => 1,
+        'text' => 'Comments: [comment_count]',
+        'make_link' => 1,
+        'path' => '[path]#comments',
+        'absolute' => 1,
         'link_class' => '',
+        'alt' => '',
+        'rel' => '',
         'prefix' => '',
         'suffix' => '',
         'target' => '',
-        'trim' => FALSE,
+        'help' => '',
+        'trim' => 0,
         'max_length' => '',
-        'word_boundary' => TRUE,
-        'ellipsis' => TRUE,
-        'strip_tags' => FALSE,
-        'html' => FALSE,
+        'word_boundary' => 1,
+        'ellipsis' => 1,
+        'html' => 0,
+        'strip_tags' => 0,
       ),
       'empty' => '',
-      'hide_empty' => 0,
+      'hide_empty' => 1,
       'empty_zero' => 0,
-      'type' => 'separator',
-      'separator' => ', ',
+      'hide_alter_empty' => 1,
+      'set_precision' => FALSE,
+      'precision' => 0,
+      'decimal' => '.',
+      'separator' => ',',
+      'format_plural' => 0,
+      'format_plural_singular' => '1',
+      'format_plural_plural' => '@count',
+      'prefix' => '',
+      'suffix' => '',
       'exclude' => 0,
-      'id' => 'group_nid',
-      'table' => 'og_ancestry',
-      'field' => 'group_nid',
+      'id' => 'comment_count',
+      'table' => 'node_comment_statistics',
+      'field' => 'comment_count',
+      'relationship' => 'none',
       'override' => array(
         'button' => 'Override',
       ),
-      'relationship' => 'none',
     ),
-    'changed' => array(
+    'new_comments' => array(
       'label' => '',
       'alter' => array(
         'alter_text' => 1,
-        'text' => ' - [changed]',
+        'text' => '(<a href="[path]">[new_comments] new</a>)',
         'make_link' => 0,
-        'path' => '',
+        'path' => 'node/[nid]#new',
+        'absolute' => 0,
         'link_class' => '',
         'alt' => '',
+        'rel' => '',
         'prefix' => '',
         'suffix' => '',
         'target' => '',
@@ -3603,18 +5044,27 @@ function commons_core_views_default_views() {
         'max_length' => '',
         'word_boundary' => 1,
         'ellipsis' => 1,
-        'strip_tags' => 0,
         'html' => 0,
+        'strip_tags' => 0,
       ),
       'empty' => '',
       'hide_empty' => 0,
       'empty_zero' => 0,
-      'date_format' => 'time ago',
-      'custom_date_format' => '',
+      'hide_alter_empty' => 1,
+      'set_precision' => FALSE,
+      'precision' => 0,
+      'decimal' => '.',
+      'separator' => ',',
+      'format_plural' => 0,
+      'format_plural_singular' => '1',
+      'format_plural_plural' => '@count',
+      'prefix' => '',
+      'suffix' => '',
+      'link_to_comment' => 0,
       'exclude' => 0,
-      'id' => 'changed',
+      'id' => 'new_comments',
       'table' => 'node',
-      'field' => 'changed',
+      'field' => 'new_comments',
       'override' => array(
         'button' => 'Override',
       ),
@@ -3622,56 +5072,97 @@ function commons_core_views_default_views() {
     ),
   ));
   $handler->override_option('sorts', array(
-    'changed' => array(
+    'created' => array(
       'order' => 'DESC',
       'granularity' => 'second',
-      'id' => 'changed',
+      'id' => 'created',
       'table' => 'node',
-      'field' => 'changed',
+      'field' => 'created',
       'override' => array(
         'button' => 'Override',
       ),
       'relationship' => 'none',
     ),
   ));
-  $handler->override_option('filters', array(
-    'status' => array(
-      'operator' => '=',
-      'value' => '1',
-      'group' => '0',
-      'exposed' => FALSE,
-      'expose' => array(
-        'operator' => FALSE,
-        'label' => '',
-      ),
-      'id' => 'status',
-      'table' => 'node',
-      'field' => 'status',
-      'override' => array(
-        'button' => 'Override',
+  $handler->override_option('arguments', array(
+    'group_nid' => array(
+      'default_action' => 'not found',
+      'style_plugin' => 'default_summary',
+      'style_options' => array(),
+      'wildcard' => 'all',
+      'wildcard_substitution' => 'All',
+      'title' => '',
+      'breadcrumb' => '',
+      'default_argument_type' => 'fixed',
+      'default_argument' => '',
+      'validate_type' => 'none',
+      'validate_fail' => 'not found',
+      'break_phrase' => 0,
+      'not' => 0,
+      'id' => 'group_nid',
+      'table' => 'og_ancestry',
+      'field' => 'group_nid',
+      'validate_user_argument_type' => 'uid',
+      'validate_user_roles' => array(
+        2 => 0,
+        3 => 0,
+        4 => 0,
+        5 => 0,
       ),
       'relationship' => 'none',
-    ),
-    'type' => array(
-      'operator' => 'not in',
-      'value' => array(
-        'group' => 'group',
+      'default_options_div_prefix' => '',
+      'default_taxonomy_tid_term_page' => 0,
+      'default_taxonomy_tid_node' => 0,
+      'default_taxonomy_tid_limit' => 0,
+      'default_taxonomy_tid_vids' => array(
+        2 => 0,
+        4 => 0,
+        1 => 0,
+        3 => 0,
       ),
-      'group' => '0',
-      'exposed' => FALSE,
-      'expose' => array(
-        'operator' => FALSE,
-        'label' => '',
+      'default_argument_user' => 0,
+      'default_argument_fixed' => '',
+      'default_argument_activity_log_stream_owner_type' => 'user',
+      'default_argument_php' => '',
+      'validate_argument_node_type' => array(
+        'blog' => 0,
+        'poll' => 0,
+        'answer' => 0,
+        'question' => 0,
+        'discussion' => 0,
+        'document' => 0,
+        'event' => 0,
+        'wiki' => 0,
+        'group' => 0,
+        'notice' => 0,
+        'page' => 0,
       ),
-      'id' => 'type',
-      'table' => 'node',
-      'field' => 'type',
-      'override' => array(
-        'button' => 'Override',
+      'validate_argument_node_access' => 0,
+      'validate_argument_nid_type' => 'nid',
+      'validate_argument_vocabulary' => array(
+        2 => 0,
+        4 => 0,
+        1 => 0,
+        3 => 0,
       ),
-      'relationship' => 'none',
+      'validate_argument_type' => 'tid',
+      'validate_argument_transform' => 0,
+      'validate_user_restrict_roles' => 0,
+      'validate_argument_node_flag_name' => '*relationship*',
+      'validate_argument_node_flag_test' => 'flaggable',
+      'validate_argument_node_flag_id_type' => 'id',
+      'validate_argument_user_flag_name' => '*relationship*',
+      'validate_argument_user_flag_test' => 'flaggable',
+      'validate_argument_user_flag_id_type' => 'id',
+      'validate_argument_is_member' => '0',
+      'validate_argument_group_node_type' => array(
+        'group' => 0,
+      ),
+      'validate_argument_php' => '',
     ),
-    'uid_current' => array(
+  ));
+  $handler->override_option('filters', array(
+    'status' => array(
       'operator' => '=',
       'value' => '1',
       'group' => '0',
@@ -3680,12 +5171,9 @@ function commons_core_views_default_views() {
         'operator' => FALSE,
         'label' => '',
       ),
-      'id' => 'uid_current',
-      'table' => 'users',
-      'field' => 'uid_current',
-      'override' => array(
-        'button' => 'Override',
-      ),
+      'id' => 'status',
+      'table' => 'node',
+      'field' => 'status',
       'relationship' => 'none',
     ),
   ));
@@ -3695,95 +5183,52 @@ function commons_core_views_default_views() {
   $handler->override_option('cache', array(
     'type' => 'none',
   ));
-  $handler->override_option('title', 'My recent items');
-  $handler->override_option('empty', 'You haven\'t created any items yet.');
-  $handler->override_option('empty_format', '1');
-  $handler->override_option('use_ajax', TRUE);
-  $handler->override_option('items_per_page', 5);
-  $handler->override_option('use_pager', 'mini');
-  $handler->override_option('pager_element', 4);
-  $handler->override_option('distinct', 1);
+  $handler->override_option('title', 'What\'s new in your groups');
+  $handler->override_option('items_per_page', 3);
   $handler->override_option('style_plugin', 'list');
+  $handler->override_option('style_options', array(
+    'grouping' => '',
+    'type' => 'ul',
+  ));
   $handler->override_option('row_options', array(
     'inline' => array(
-      'title' => 'title',
-      'type' => 'type',
-      'nothing' => 'nothing',
-      'group_nid' => 'group_nid',
-      'changed' => 'changed',
+      'picture' => 'picture',
+      'name' => 'name',
+      'created' => 'created',
+      'comment_count' => 'comment_count',
+      'new_comments' => 'new_comments',
     ),
     'separator' => '',
     'hide_empty' => 0,
   ));
   $handler = $view->new_display('block', 'Block', 'block_1');
-  $handler->override_option('block_description', 'My recent items');
-  $handler->override_option('block_caching', -1);
+  $handler->override_option('block_description', '');
+  $handler->override_option('block_caching', '-1');
 
   $views[$view->name] = $view;
 
-  // Exported view: my_unread_items
+  // Exported view: new_your_groups
   $view = new view;
-  $view->name = 'my_unread_items';
-  $view->description = 'Recently updated item\'s I\'ve comment on';
+  $view->name = 'new_your_groups';
+  $view->description = '';
   $view->tag = '';
   $view->base_table = 'node';
-  $view->core = 0;
+  $view->core = 6;
   $view->api_version = '2';
   $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
   $handler = $view->new_display('default', 'Defaults', 'default');
-  $handler->override_option('relationships', array(
-    'group_nid' => array(
-      'label' => 'Group node (post)',
-      'required' => 0,
-      'id' => 'group_nid',
-      'table' => 'og_ancestry',
-      'field' => 'group_nid',
-      'relationship' => 'none',
-    ),
-  ));
   $handler->override_option('fields', array(
-    'title' => array(
-      'label' => '',
+    'nid' => array(
+      'label' => 'Nid',
       'alter' => array(
         'alter_text' => 0,
-        'text' => '',
-        'make_link' => 0,
-        'path' => '',
-        'link_class' => '',
-        'alt' => '',
-        'prefix' => '',
-        'suffix' => '',
-        'target' => '',
-        'help' => '',
-        'trim' => 0,
-        'max_length' => '',
-        'word_boundary' => 1,
-        'ellipsis' => 1,
-        'strip_tags' => 0,
-        'html' => 0,
-      ),
-      'empty' => '',
-      'hide_empty' => 0,
-      'empty_zero' => 0,
-      'link_to_node' => 1,
-      'exclude' => 0,
-      'id' => 'title',
-      'table' => 'node',
-      'field' => 'title',
-      'override' => array(
-        'button' => 'Override',
-      ),
-      'relationship' => 'none',
-    ),
-    'type' => array(
-      'label' => '',
-      'alter' => array(
-        'alter_text' => 1,
-        'text' => '<i>([type])</i>',
+        'text' => '',
         'make_link' => 0,
         'path' => '',
+        'absolute' => 0,
         'link_class' => '',
         'alt' => '',
+        'rel' => '',
         'prefix' => '',
         'suffix' => '',
         'target' => '',
@@ -3798,25 +5243,25 @@ function commons_core_views_default_views() {
       'empty' => '',
       'hide_empty' => 0,
       'empty_zero' => 0,
+      'hide_alter_empty' => 1,
       'link_to_node' => 0,
-      'machine_name' => 0,
-      'exclude' => 0,
-      'id' => 'type',
+      'exclude' => 1,
+      'id' => 'nid',
       'table' => 'node',
-      'field' => 'type',
-      'override' => array(
-        'button' => 'Override',
-      ),
+      'field' => 'nid',
       'relationship' => 'none',
     ),
-    'nothing' => array(
+    'title' => array(
       'label' => '',
       'alter' => array(
-        'text' => 'in ',
+        'alter_text' => 0,
+        'text' => '[title]',
         'make_link' => 0,
-        'path' => '',
-        'link_class' => '',
+        'path' => 'node/[nid]',
+        'absolute' => 1,
+        'link_class' => 'group-title',
         'alt' => '',
+        'rel' => '',
         'prefix' => '',
         'suffix' => '',
         'target' => '',
@@ -3831,90 +5276,61 @@ function commons_core_views_default_views() {
       'empty' => '',
       'hide_empty' => 0,
       'empty_zero' => 0,
+      'hide_alter_empty' => 1,
+      'link_to_node' => 1,
       'exclude' => 0,
-      'id' => 'nothing',
-      'table' => 'views',
-      'field' => 'nothing',
+      'id' => 'title',
+      'table' => 'node',
+      'field' => 'title',
+      'relationship' => 'none',
       'override' => array(
         'button' => 'Override',
       ),
-      'relationship' => 'none',
     ),
-    'group_nid' => array(
+    'view' => array(
       'label' => '',
       'alter' => array(
         'alter_text' => FALSE,
         'text' => '',
         'make_link' => FALSE,
         'path' => '',
-        'alt' => '',
+        'absolute' => '',
         'link_class' => '',
+        'alt' => '',
+        'rel' => '',
         'prefix' => '',
         'suffix' => '',
         'target' => '',
+        'help' => '',
         'trim' => FALSE,
         'max_length' => '',
         'word_boundary' => TRUE,
         'ellipsis' => TRUE,
-        'strip_tags' => FALSE,
         'html' => FALSE,
+        'strip_tags' => FALSE,
       ),
       'empty' => '',
       'hide_empty' => 0,
       'empty_zero' => 0,
-      'type' => 'separator',
-      'separator' => ', ',
-      'exclude' => 0,
-      'id' => 'group_nid',
-      'table' => 'og_ancestry',
-      'field' => 'group_nid',
-      'relationship' => 'none',
-      'override' => array(
-        'button' => 'Override',
-      ),
-    ),
-    'changed' => array(
-      'label' => '',
-      'alter' => array(
-        'alter_text' => 1,
-        'text' => ' - [changed]',
-        'make_link' => 0,
-        'path' => '',
-        'link_class' => '',
-        'alt' => '',
-        'prefix' => '',
-        'suffix' => '',
-        'target' => '',
-        'help' => '',
-        'trim' => 0,
-        'max_length' => '',
-        'word_boundary' => 1,
-        'ellipsis' => 1,
-        'strip_tags' => 0,
-        'html' => 0,
-      ),
-      'empty' => '',
-      'hide_empty' => 0,
-      'empty_zero' => 0,
-      'date_format' => 'time ago',
-      'custom_date_format' => '',
+      'hide_alter_empty' => 1,
+      'view' => 'new_groups_field',
+      'display' => 'block_1',
+      'arguments' => '[nid]',
+      'query_aggregation' => 0,
       'exclude' => 0,
-      'id' => 'changed',
-      'table' => 'node',
-      'field' => 'changed',
-      'override' => array(
-        'button' => 'Override',
-      ),
+      'id' => 'view',
+      'table' => 'views',
+      'field' => 'view',
       'relationship' => 'none',
     ),
   ));
   $handler->override_option('sorts', array(
-    'changed' => array(
+    'last_node_timestamp' => array(
       'order' => 'DESC',
       'granularity' => 'second',
-      'id' => 'changed',
-      'table' => 'node',
-      'field' => 'changed',
+      'id' => 'last_node_timestamp',
+      'table' => 'og_statistics',
+      'field' => 'last_node_timestamp',
       'override' => array(
         'button' => 'Override',
       ),
@@ -3934,87 +5350,98 @@ function commons_core_views_default_views() {
       'id' => 'status',
       'table' => 'node',
       'field' => 'status',
-      'override' => array(
-        'button' => 'Override',
-      ),
-      'relationship' => 'none',
-    ),
-    'type' => array(
-      'operator' => 'not in',
-      'value' => array(
-        'group' => 'group',
-      ),
-      'group' => '0',
-      'exposed' => FALSE,
-      'expose' => array(
-        'operator' => FALSE,
-        'label' => '',
-      ),
-      'id' => 'type',
-      'table' => 'node',
-      'field' => 'type',
-      'override' => array(
-        'button' => 'Override',
-      ),
       'relationship' => 'none',
     ),
-    'timestamp' => array(
+    'uid' => array(
       'operator' => '=',
-      'value' => '',
+      'value' => '1',
       'group' => '0',
       'exposed' => FALSE,
       'expose' => array(
         'operator' => FALSE,
         'label' => '',
       ),
-      'id' => 'timestamp',
-      'table' => 'history_user',
-      'field' => 'timestamp',
+      'id' => 'uid',
+      'table' => 'og_uid',
+      'field' => 'uid',
       'relationship' => 'none',
     ),
-    'uid' => array(
-      'operator' => '=',
-      'value' => '1',
+    'posts_count' => array(
+      'operator' => '>',
+      'value' => array(
+        'value' => '0',
+        'min' => '',
+        'max' => '',
+      ),
       'group' => '0',
       'exposed' => FALSE,
       'expose' => array(
         'operator' => FALSE,
         'label' => '',
       ),
-      'id' => 'uid',
-      'table' => 'og_uid',
-      'field' => 'uid',
-      'relationship' => 'group_nid',
+      'id' => 'posts_count',
+      'table' => 'og_statistics',
+      'field' => 'posts_count',
+      'override' => array(
+        'button' => 'Override',
+      ),
+      'relationship' => 'none',
     ),
   ));
   $handler->override_option('access', array(
     'type' => 'none',
   ));
   $handler->override_option('cache', array(
-    'type' => 'none',
+    'type' => 'views_content_cache',
+    'keys' => array(
+      'AND' => array(
+        'comment' => array(
+          'changed' => 0,
+        ),
+        'node' => array(
+          'blog' => 0,
+          'discussion' => 0,
+          'document' => 0,
+          'event' => 0,
+          'group' => 0,
+          'notice' => 0,
+          'page' => 0,
+          'poll' => 0,
+          'wiki' => 0,
+        ),
+        'node_only' => array(
+          'node_changed' => 'node_changed',
+        ),
+        'og' => array(
+          'current' => 0,
+          'user' => 0,
+        ),
+      ),
+    ),
+    'results_min_lifespan' => '-1',
+    'results_max_lifespan' => '21600',
+    'output_min_lifespan' => '-1',
+    'output_max_lifespan' => '21600',
   ));
-  $handler->override_option('title', 'My unread items');
+  $handler->override_option('title', 'What\'s new in your groups');
+  $handler->override_option('empty', 'You haven\'t joined any groups yet. You can <a href = "groups">view the Groups directory</a> to find and join interesting groups.');
   $handler->override_option('empty_format', '1');
-  $handler->override_option('use_ajax', TRUE);
-  $handler->override_option('items_per_page', 5);
-  $handler->override_option('use_pager', 'mini');
-  $handler->override_option('pager_element', 12);
-  $handler->override_option('distinct', 1);
-  $handler->override_option('style_plugin', 'list');
+  $handler->override_option('use_pager', '1');
+  $handler->override_option('style_options', array(
+    'grouping' => '',
+  ));
   $handler->override_option('row_options', array(
     'inline' => array(
-      'title' => 'title',
-      'type' => 'type',
-      'nothing' => 'nothing',
-      'group_nid' => 'group_nid',
-      'changed' => 'changed',
+      'created' => 'created',
+      'comment_count' => 'comment_count',
+      'new_comments' => 'new_comments',
     ),
     'separator' => '',
     'hide_empty' => 0,
   ));
   $handler = $view->new_display('block', 'Block', 'block_1');
-  $handler->override_option('block_description', 'My unread items');
-  $handler->override_option('block_caching', -1);
+  $handler->override_option('block_description', '');
+  $handler->override_option('block_caching', '-1');
 
   $views[$view->name] = $view;
 
@@ -4373,6 +5800,20 @@ function commons_core_views_default_views() {
         'button' => 'Override',
       ),
     ),
+    'nid' => array(
+      'operator' => '=',
+      'value' => '',
+      'group' => '0',
+      'exposed' => FALSE,
+      'expose' => array(
+        'operator' => FALSE,
+        'label' => '',
+      ),
+      'id' => 'nid',
+      'table' => 'node_access',
+      'field' => 'nid',
+      'relationship' => 'nid',
+    ),
   ));
   $handler->override_option('access', array(
     'type' => 'perm',
@@ -5912,39 +7353,6 @@ function commons_core_views_default_views() {
   ));
   $handler = $view->new_display('block', 'Block', 'block_1');
   $handler->override_option('fields', array(
-    'picture' => array(
-      'label' => '',
-      'alter' => array(
-        'alter_text' => 0,
-        'text' => '',
-        'make_link' => 0,
-        'path' => '',
-        'link_class' => '',
-        'alt' => '',
-        'prefix' => '',
-        'suffix' => '',
-        'target' => '',
-        'help' => '',
-        'trim' => 0,
-        'max_length' => '',
-        'word_boundary' => 1,
-        'ellipsis' => 1,
-        'html' => 0,
-        'strip_tags' => 0,
-      ),
-      'empty' => '',
-      'hide_empty' => 0,
-      'empty_zero' => 0,
-      'imagecache_preset' => 'user_picture_meta',
-      'exclude' => 0,
-      'id' => 'picture',
-      'table' => 'users',
-      'field' => 'picture',
-      'override' => array(
-        'button' => 'Use default',
-      ),
-      'relationship' => 'none',
-    ),
     'title' => array(
       'label' => '',
       'alter' => array(
@@ -6007,14 +7415,16 @@ function commons_core_views_default_views() {
       'relationship' => 'none',
     ),
     'created' => array(
-      'label' => 'Posted',
+      'label' => '',
       'alter' => array(
         'alter_text' => 0,
         'text' => '',
         'make_link' => 0,
         'path' => '',
+        'absolute' => 0,
         'link_class' => '',
         'alt' => '',
+        'rel' => '',
         'prefix' => '',
         'suffix' => '',
         'target' => '',
@@ -6029,8 +7439,9 @@ function commons_core_views_default_views() {
       'empty' => '',
       'hide_empty' => 0,
       'empty_zero' => 0,
-      'date_format' => 'small',
-      'custom_date_format' => '',
+      'hide_alter_empty' => 1,
+      'date_format' => 'custom',
+      'custom_date_format' => 'j M Y',
       'exclude' => 0,
       'id' => 'created',
       'table' => 'node',
@@ -6040,44 +7451,9 @@ function commons_core_views_default_views() {
       ),
       'relationship' => 'none',
     ),
-    'name' => array(
-      'label' => 'by',
-      'alter' => array(
-        'alter_text' => 0,
-        'text' => '',
-        'make_link' => 0,
-        'path' => '',
-        'link_class' => '',
-        'alt' => '',
-        'prefix' => '',
-        'suffix' => '',
-        'target' => '',
-        'help' => '',
-        'trim' => 0,
-        'max_length' => '',
-        'word_boundary' => 1,
-        'ellipsis' => 1,
-        'html' => 0,
-        'strip_tags' => 0,
-      ),
-      'empty' => '',
-      'hide_empty' => 0,
-      'empty_zero' => 0,
-      'link_to_user' => 1,
-      'overwrite_anonymous' => 0,
-      'anonymous_text' => '',
-      'exclude' => 0,
-      'id' => 'name',
-      'table' => 'users',
-      'field' => 'name',
-      'override' => array(
-        'button' => 'Use default',
-      ),
-      'relationship' => 'none',
-    ),
   ));
   $handler->override_option('items_per_page', 3);
-  $handler->override_option('use_pager', 'mini');
+  $handler->override_option('use_pager', '0');
   $handler->override_option('pager_element', 5);
   $handler->override_option('style_options', array());
   $handler->override_option('row_options', array(
diff --git a/modules/features/commons_core/css/commons_core.css b/modules/features/commons_core/css/commons_core.css
index ebe858c..b076707 100644
--- a/modules/features/commons_core/css/commons_core.css
+++ b/modules/features/commons_core/css/commons_core.css
@@ -34,3 +34,28 @@ html.js #search-theme-form select[name=refine],
   z-index: 10;
 }
 
+.views-widget-group-search-filter-type {
+    
+}
+
+.views-widget-group-search-filter-keys {
+
+}
+
+.views-widget-group-search-filter-uid {
+     padding-right: 20px;
+}
+
+.views-exposed-widgets-group-search {
+    float: left;
+    margin: 2px 0px 8px 8px;
+    max-width: 100%;
+    width: auto;
+}
+.views-exposed-widget-group-search {
+    float: left;
+    margin: 2px 0px 8px 8px;
+}
+
+
+
diff --git a/modules/features/commons_discussion/commons_discussion.context.inc b/modules/features/commons_discussion/commons_discussion.context.inc
index 7e6afd5..f54b133 100644
--- a/modules/features/commons_discussion/commons_discussion.context.inc
+++ b/modules/features/commons_discussion/commons_discussion.context.inc
@@ -25,13 +25,13 @@ function commons_discussion_context_default_contexts() {
           'module' => 'commons_core',
           'delta' => 'group_create_content',
           'region' => 'sidebar_last',
-          'weight' => 0,
+          'weight' => 1,
         ),
         'views-f24f764575fea8b17a65697fa4ac9a8d' => array(
           'module' => 'views',
           'delta' => 'f24f764575fea8b17a65697fa4ac9a8d',
           'region' => 'sidebar_last',
-          'weight' => 1,
+          'weight' => 2,
         ),
       ),
     ),
diff --git a/modules/features/commons_discussion/commons_discussion.views_default.inc b/modules/features/commons_discussion/commons_discussion.views_default.inc
index 232805c..035e96e 100644
--- a/modules/features/commons_discussion/commons_discussion.views_default.inc
+++ b/modules/features/commons_discussion/commons_discussion.views_default.inc
@@ -11,10 +11,9 @@ function commons_discussion_views_default_views() {
   $view->name = 'content_discussion_page';
   $view->description = 'A global view of all site discussions';
   $view->tag = '';
-  $view->view_php = '';
   $view->base_table = 'node';
-  $view->is_cacheable = FALSE;
-  $view->api_version = 2;
+  $view->core = 0;
+  $view->api_version = '2';
   $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
   $handler = $view->new_display('default', 'Defaults', 'default');
   $handler->override_option('relationships', array(
@@ -290,8 +289,8 @@ function commons_discussion_views_default_views() {
       'link_to_taxonomy' => 1,
       'limit' => 0,
       'vids' => array(
-        '2' => 0,
-        '3' => 0,
+        2 => 0,
+        3 => 0,
       ),
       'exclude' => 0,
       'id' => 'tid',
@@ -451,7 +450,7 @@ function commons_discussion_views_default_views() {
       ),
       'type' => 'textfield',
       'limit' => TRUE,
-      'vid' => '2',
+      'vid' => '1',
       'id' => 'tid',
       'table' => 'term_node',
       'field' => 'tid',
@@ -621,10 +620,9 @@ function commons_discussion_views_default_views() {
   $view->name = 'discussion_latest_comments';
   $view->description = 'The latest comments on all discussions';
   $view->tag = '';
-  $view->view_php = '';
   $view->base_table = 'comments';
-  $view->is_cacheable = FALSE;
-  $view->api_version = 2;
+  $view->core = 0;
+  $view->api_version = '2';
   $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
   $handler = $view->new_display('default', 'Defaults', 'default');
   $handler->override_option('relationships', array(
@@ -883,6 +881,23 @@ function commons_discussion_views_default_views() {
         'button' => 'Override',
       ),
     ),
+    'nid' => array(
+      'operator' => '=',
+      'value' => '',
+      'group' => '0',
+      'exposed' => FALSE,
+      'expose' => array(
+        'operator' => FALSE,
+        'label' => '',
+      ),
+      'id' => 'nid',
+      'table' => 'node_access',
+      'field' => 'nid',
+      'relationship' => 'nid',
+      'override' => array(
+        'button' => 'Override',
+      ),
+    ),
   ));
   $handler->override_option('access', array(
     'type' => 'perm',
@@ -922,10 +937,9 @@ function commons_discussion_views_default_views() {
   $view->name = 'group_block_disc_latest_comments';
   $view->description = 'The latest comments on group discussions';
   $view->tag = '';
-  $view->view_php = '';
   $view->base_table = 'comments';
-  $view->is_cacheable = FALSE;
-  $view->api_version = 2;
+  $view->core = 0;
+  $view->api_version = '2';
   $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
   $handler = $view->new_display('default', 'Defaults', 'default');
   $handler->override_option('relationships', array(
@@ -1121,10 +1135,10 @@ function commons_discussion_views_default_views() {
       'relationship' => 'nid',
       'validate_user_argument_type' => 'uid',
       'validate_user_roles' => array(
-        '2' => 0,
-        '3' => 0,
-        '4' => 0,
-        '5' => 0,
+        2 => 0,
+        3 => 0,
+        4 => 0,
+        5 => 0,
       ),
       'override' => array(
         'button' => 'Override',
@@ -1147,8 +1161,8 @@ function commons_discussion_views_default_views() {
       'validate_argument_node_access' => 0,
       'validate_argument_nid_type' => 'nid',
       'validate_argument_vocabulary' => array(
-        '2' => 0,
-        '3' => 0,
+        2 => 0,
+        3 => 0,
       ),
       'validate_argument_type' => 'tid',
       'validate_argument_transform' => 0,
@@ -1237,6 +1251,20 @@ function commons_discussion_views_default_views() {
         'button' => 'Override',
       ),
     ),
+    'nid' => array(
+      'operator' => '=',
+      'value' => '',
+      'group' => '0',
+      'exposed' => FALSE,
+      'expose' => array(
+        'operator' => FALSE,
+        'label' => '',
+      ),
+      'id' => 'nid',
+      'table' => 'node_access',
+      'field' => 'nid',
+      'relationship' => 'nid',
+    ),
   ));
   $handler->override_option('access', array(
     'type' => 'perm',
@@ -1276,10 +1304,9 @@ function commons_discussion_views_default_views() {
   $view->name = 'group_block_discussion_latest';
   $view->description = 'The latest group discussions block';
   $view->tag = '';
-  $view->view_php = '';
   $view->base_table = 'node';
-  $view->is_cacheable = FALSE;
-  $view->api_version = 2;
+  $view->core = 0;
+  $view->api_version = '2';
   $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
   $handler = $view->new_display('default', 'Defaults', 'default');
   $handler->override_option('relationships', array(
@@ -1537,10 +1564,10 @@ function commons_discussion_views_default_views() {
       'field' => 'group_nid',
       'validate_user_argument_type' => 'uid',
       'validate_user_roles' => array(
-        '2' => 0,
-        '3' => 0,
-        '4' => 0,
-        '5' => 0,
+        2 => 0,
+        3 => 0,
+        4 => 0,
+        5 => 0,
       ),
       'override' => array(
         'button' => 'Override',
@@ -1564,8 +1591,8 @@ function commons_discussion_views_default_views() {
       'validate_argument_node_access' => 0,
       'validate_argument_nid_type' => 'nid',
       'validate_argument_vocabulary' => array(
-        '2' => 0,
-        '3' => 0,
+        2 => 0,
+        3 => 0,
       ),
       'validate_argument_type' => 'tid',
       'validate_argument_transform' => 0,
@@ -1675,10 +1702,9 @@ function commons_discussion_views_default_views() {
   $view->name = 'group_tab_discussions';
   $view->description = 'Show a tab for group discussions';
   $view->tag = '';
-  $view->view_php = '';
   $view->base_table = 'node';
-  $view->is_cacheable = FALSE;
-  $view->api_version = 2;
+  $view->core = 0;
+  $view->api_version = '2';
   $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
   $handler = $view->new_display('default', 'Defaults', 'default');
   $handler->override_option('relationships', array(
@@ -1962,8 +1988,8 @@ function commons_discussion_views_default_views() {
       'link_to_taxonomy' => 1,
       'limit' => 0,
       'vids' => array(
-        '2' => 0,
-        '3' => 0,
+        2 => 0,
+        3 => 0,
       ),
       'exclude' => 0,
       'id' => 'tid',
@@ -2023,10 +2049,10 @@ function commons_discussion_views_default_views() {
       'field' => 'group_nid',
       'validate_user_argument_type' => 'uid',
       'validate_user_roles' => array(
-        '2' => 0,
-        '3' => 0,
-        '4' => 0,
-        '5' => 0,
+        2 => 0,
+        3 => 0,
+        4 => 0,
+        5 => 0,
       ),
       'override' => array(
         'button' => 'Override',
@@ -2050,8 +2076,8 @@ function commons_discussion_views_default_views() {
       'validate_argument_node_access' => 0,
       'validate_argument_nid_type' => 'nid',
       'validate_argument_vocabulary' => array(
-        '2' => 0,
-        '3' => 0,
+        2 => 0,
+        3 => 0,
       ),
       'validate_argument_type' => 'tid',
       'validate_argument_transform' => 0,
@@ -2179,7 +2205,7 @@ function commons_discussion_views_default_views() {
       ),
       'type' => 'textfield',
       'limit' => TRUE,
-      'vid' => '2',
+      'vid' => '1',
       'id' => 'tid',
       'table' => 'term_node',
       'field' => 'tid',
@@ -2223,7 +2249,7 @@ function commons_discussion_views_default_views() {
   $handler = $view->new_display('page', 'Page', 'page_1');
   $handler->override_option('path', 'node/%/content/discussions');
   $handler->override_option('menu', array(
-    'type' => 'tab',
+    'type' => 'none',
     'title' => 'Discussions',
     'description' => 'View the group discussions',
     'weight' => '6',
diff --git a/modules/features/commons_document/commons_document.views_default.inc b/modules/features/commons_document/commons_document.views_default.inc
index 2eaa1ed..c78094e 100644
--- a/modules/features/commons_document/commons_document.views_default.inc
+++ b/modules/features/commons_document/commons_document.views_default.inc
@@ -11,10 +11,9 @@ function commons_document_views_default_views() {
   $view->name = 'content_document_page';
   $view->description = 'A global view of all site documents';
   $view->tag = '';
-  $view->view_php = '';
   $view->base_table = 'node';
-  $view->is_cacheable = FALSE;
-  $view->api_version = 2;
+  $view->core = 0;
+  $view->api_version = '2';
   $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
   $handler = $view->new_display('default', 'Defaults', 'default');
   $handler->override_option('relationships', array(
@@ -290,8 +289,8 @@ function commons_document_views_default_views() {
       'link_to_taxonomy' => 1,
       'limit' => 0,
       'vids' => array(
-        '2' => 0,
-        '3' => 0,
+        2 => 0,
+        3 => 0,
       ),
       'exclude' => 0,
       'id' => 'tid',
@@ -451,7 +450,7 @@ function commons_document_views_default_views() {
       ),
       'type' => 'textfield',
       'limit' => TRUE,
-      'vid' => '2',
+      'vid' => '1',
       'id' => 'tid',
       'table' => 'term_node',
       'field' => 'tid',
@@ -621,10 +620,9 @@ function commons_document_views_default_views() {
   $view->name = 'document_latest_comments';
   $view->description = 'The latest comments on all documents';
   $view->tag = '';
-  $view->view_php = '';
   $view->base_table = 'comments';
-  $view->is_cacheable = FALSE;
-  $view->api_version = 2;
+  $view->core = 0;
+  $view->api_version = '2';
   $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
   $handler = $view->new_display('default', 'Defaults', 'default');
   $handler->override_option('relationships', array(
@@ -883,6 +881,20 @@ function commons_document_views_default_views() {
         'button' => 'Override',
       ),
     ),
+    'nid' => array(
+      'operator' => '=',
+      'value' => '',
+      'group' => '0',
+      'exposed' => FALSE,
+      'expose' => array(
+        'operator' => FALSE,
+        'label' => '',
+      ),
+      'id' => 'nid',
+      'table' => 'node_access',
+      'field' => 'nid',
+      'relationship' => 'nid',
+    ),
   ));
   $handler->override_option('access', array(
     'type' => 'perm',
@@ -922,10 +934,9 @@ function commons_document_views_default_views() {
   $view->name = 'group_block_doc_latest_comments';
   $view->description = 'The latest comments on group documents';
   $view->tag = '';
-  $view->view_php = '';
   $view->base_table = 'comments';
-  $view->is_cacheable = FALSE;
-  $view->api_version = 2;
+  $view->core = 0;
+  $view->api_version = '2';
   $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
   $handler = $view->new_display('default', 'Defaults', 'default');
   $handler->override_option('relationships', array(
@@ -1121,10 +1132,10 @@ function commons_document_views_default_views() {
       'relationship' => 'nid',
       'validate_user_argument_type' => 'uid',
       'validate_user_roles' => array(
-        '2' => 0,
-        '3' => 0,
-        '4' => 0,
-        '5' => 0,
+        2 => 0,
+        3 => 0,
+        4 => 0,
+        5 => 0,
       ),
       'override' => array(
         'button' => 'Override',
@@ -1147,8 +1158,8 @@ function commons_document_views_default_views() {
       'validate_argument_node_access' => 0,
       'validate_argument_nid_type' => 'nid',
       'validate_argument_vocabulary' => array(
-        '2' => 0,
-        '3' => 0,
+        2 => 0,
+        3 => 0,
       ),
       'validate_argument_type' => 'tid',
       'validate_argument_transform' => 0,
@@ -1234,6 +1245,20 @@ function commons_document_views_default_views() {
       'field' => 'type',
       'relationship' => 'nid',
     ),
+    'nid' => array(
+      'operator' => '=',
+      'value' => '',
+      'group' => '0',
+      'exposed' => FALSE,
+      'expose' => array(
+        'operator' => FALSE,
+        'label' => '',
+      ),
+      'id' => 'nid',
+      'table' => 'node_access',
+      'field' => 'nid',
+      'relationship' => 'nid',
+    ),
   ));
   $handler->override_option('access', array(
     'type' => 'perm',
@@ -1273,10 +1298,9 @@ function commons_document_views_default_views() {
   $view->name = 'group_block_document_latest';
   $view->description = 'The latest group documents block';
   $view->tag = '';
-  $view->view_php = '';
   $view->base_table = 'node';
-  $view->is_cacheable = FALSE;
-  $view->api_version = 2;
+  $view->core = 0;
+  $view->api_version = '2';
   $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
   $handler = $view->new_display('default', 'Defaults', 'default');
   $handler->override_option('relationships', array(
@@ -1534,10 +1558,10 @@ function commons_document_views_default_views() {
       'field' => 'group_nid',
       'validate_user_argument_type' => 'uid',
       'validate_user_roles' => array(
-        '2' => 0,
-        '3' => 0,
-        '4' => 0,
-        '5' => 0,
+        2 => 0,
+        3 => 0,
+        4 => 0,
+        5 => 0,
       ),
       'override' => array(
         'button' => 'Override',
@@ -1561,8 +1585,8 @@ function commons_document_views_default_views() {
       'validate_argument_node_access' => 0,
       'validate_argument_nid_type' => 'nid',
       'validate_argument_vocabulary' => array(
-        '2' => 0,
-        '3' => 0,
+        2 => 0,
+        3 => 0,
       ),
       'validate_argument_type' => 'tid',
       'validate_argument_transform' => 0,
@@ -1672,10 +1696,9 @@ function commons_document_views_default_views() {
   $view->name = 'group_tab_documents';
   $view->description = 'Show a tab for group documents';
   $view->tag = '';
-  $view->view_php = '';
   $view->base_table = 'node';
-  $view->is_cacheable = FALSE;
-  $view->api_version = 2;
+  $view->core = 0;
+  $view->api_version = '2';
   $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
   $handler = $view->new_display('default', 'Defaults', 'default');
   $handler->override_option('relationships', array(
@@ -1959,8 +1982,8 @@ function commons_document_views_default_views() {
       'link_to_taxonomy' => 1,
       'limit' => 0,
       'vids' => array(
-        '2' => 0,
-        '3' => 0,
+        2 => 0,
+        3 => 0,
       ),
       'exclude' => 0,
       'id' => 'tid',
@@ -2020,10 +2043,10 @@ function commons_document_views_default_views() {
       'field' => 'group_nid',
       'validate_user_argument_type' => 'uid',
       'validate_user_roles' => array(
-        '2' => 0,
-        '3' => 0,
-        '4' => 0,
-        '5' => 0,
+        2 => 0,
+        3 => 0,
+        4 => 0,
+        5 => 0,
       ),
       'override' => array(
         'button' => 'Override',
@@ -2047,8 +2070,8 @@ function commons_document_views_default_views() {
       'validate_argument_node_access' => 0,
       'validate_argument_nid_type' => 'nid',
       'validate_argument_vocabulary' => array(
-        '2' => 0,
-        '3' => 0,
+        2 => 0,
+        3 => 0,
       ),
       'validate_argument_type' => 'tid',
       'validate_argument_transform' => 0,
@@ -2176,7 +2199,7 @@ function commons_document_views_default_views() {
       ),
       'type' => 'textfield',
       'limit' => TRUE,
-      'vid' => '2',
+      'vid' => '1',
       'id' => 'tid',
       'table' => 'term_node',
       'field' => 'tid',
@@ -2220,7 +2243,7 @@ function commons_document_views_default_views() {
   $handler = $view->new_display('page', 'Page', 'page_1');
   $handler->override_option('path', 'node/%/content/documents');
   $handler->override_option('menu', array(
-    'type' => 'tab',
+    'type' => 'none',
     'title' => 'Documents',
     'description' => 'View the group documents',
     'weight' => '10',
diff --git a/modules/features/commons_event/commons_event.info b/modules/features/commons_event/commons_event.info
index 928d166..90af78c 100644
--- a/modules/features/commons_event/commons_event.info
+++ b/modules/features/commons_event/commons_event.info
@@ -1,6 +1,10 @@
+name = "Commons Event"
+description = "Create events on calendars inside groups in Commons"
 core = "6.x"
+package = "Commons"
 dependencies[] = "calendar"
 dependencies[] = "commons_core"
+dependencies[] = "commons_reputation"
 dependencies[] = "content_permissions"
 dependencies[] = "context"
 dependencies[] = "date"
@@ -21,7 +25,6 @@ dependencies[] = "strongarm"
 dependencies[] = "taxonomy"
 dependencies[] = "text"
 dependencies[] = "views"
-description = "Create events on calendars inside groups in Commons"
 features[content][] = "event-field_content_images"
 features[content][] = "event-field_date"
 features[content][] = "event-field_featured_content"
@@ -78,5 +81,3 @@ features[views][] = "group_event_calendar"
 features[views][] = "group_tab_events"
 features[views][] = "upcoming_events"
 features[views_api][] = "api:2"
-name = "Commons Event"
-package = "Commons"
diff --git a/modules/features/commons_event/commons_event.strongarm.inc b/modules/features/commons_event/commons_event.strongarm.inc
index 25a3588..5aaa8f2 100644
--- a/modules/features/commons_event/commons_event.strongarm.inc
+++ b/modules/features/commons_event/commons_event.strongarm.inc
@@ -104,12 +104,13 @@ function commons_event_strongarm() {
   $strongarm->name = 'og_content_type_usage_event';
   $strongarm->value = 'group_post_standard';
   $export['og_content_type_usage_event'] = $strongarm;
-  
+
   $strongarm = new stdClass;
   $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
   $strongarm->api_version = 1;
   $strongarm->name = 'remove_markup_default_event';
   $strongarm->value = 1;
   $export['remove_markup_default_event'] = $strongarm;
+
   return $export;
 }
diff --git a/modules/features/commons_event/commons_event.views_default.inc b/modules/features/commons_event/commons_event.views_default.inc
index 3c677e3..24919e8 100644
--- a/modules/features/commons_event/commons_event.views_default.inc
+++ b/modules/features/commons_event/commons_event.views_default.inc
@@ -11,10 +11,9 @@ function commons_event_views_default_views() {
   $view->name = 'content_event_calendar';
   $view->description = 'A multi-dimensional calendar view with back/next navigation.';
   $view->tag = 'Calendar';
-  $view->view_php = '';
   $view->base_table = 'node';
-  $view->is_cacheable = FALSE;
-  $view->api_version = 2;
+  $view->core = 0;
+  $view->api_version = '2';
   $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
   $handler = $view->new_display('default', 'Defaults', 'default');
   $handler->override_option('relationships', array(
@@ -132,8 +131,8 @@ function commons_event_views_default_views() {
       'validate_argument_node_access' => 0,
       'validate_argument_nid_type' => 'nid',
       'validate_argument_vocabulary' => array(
-        '2' => 0,
-        '1' => 0,
+        2 => 0,
+        1 => 0,
       ),
       'validate_argument_type' => 'tid',
       'validate_argument_php' => '',
@@ -143,8 +142,8 @@ function commons_event_views_default_views() {
       'default_options_div_prefix' => '',
       'validate_user_argument_type' => 'uid',
       'validate_user_roles' => array(
-        '2' => 0,
-        '3' => 0,
+        2 => 0,
+        3 => 0,
       ),
       'validate_argument_transform' => 0,
       'validate_user_restrict_roles' => 0,
@@ -290,7 +289,7 @@ function commons_event_views_default_views() {
     'name' => 'navigation',
   ));
   $handler->override_option('calendar_colors', array(
-    '0' => array(),
+    0 => array(),
   ));
   $handler->override_option('calendar_colors_vocabulary', array());
   $handler->override_option('calendar_colors_taxonomy', array());
@@ -577,10 +576,9 @@ function commons_event_views_default_views() {
   $view->name = 'content_event_page';
   $view->description = 'A global calendar for all site events';
   $view->tag = '';
-  $view->view_php = '';
   $view->base_table = 'node';
-  $view->is_cacheable = FALSE;
-  $view->api_version = 2;
+  $view->core = 0;
+  $view->api_version = '2';
   $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
   $handler = $view->new_display('default', 'Defaults', 'default');
   $handler->override_option('relationships', array(
@@ -952,8 +950,8 @@ function commons_event_views_default_views() {
       'link_to_taxonomy' => 1,
       'limit' => 0,
       'vids' => array(
-        '2' => 0,
-        '3' => 0,
+        2 => 0,
+        3 => 0,
       ),
       'exclude' => 0,
       'id' => 'tid',
@@ -1309,10 +1307,9 @@ function commons_event_views_default_views() {
   $view->name = 'event_latest';
   $view->description = 'Global recently created events';
   $view->tag = '';
-  $view->view_php = '';
   $view->base_table = 'node';
-  $view->is_cacheable = FALSE;
-  $view->api_version = 2;
+  $view->core = 0;
+  $view->api_version = '2';
   $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
   $handler = $view->new_display('default', 'Defaults', 'default');
   $handler->override_option('relationships', array(
@@ -1567,10 +1564,9 @@ function commons_event_views_default_views() {
   $view->name = 'event_latest_comments';
   $view->description = 'The latest comments on all events';
   $view->tag = '';
-  $view->view_php = '';
   $view->base_table = 'comments';
-  $view->is_cacheable = FALSE;
-  $view->api_version = 2;
+  $view->core = 0;
+  $view->api_version = '2';
   $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
   $handler = $view->new_display('default', 'Defaults', 'default');
   $handler->override_option('relationships', array(
@@ -1829,6 +1825,20 @@ function commons_event_views_default_views() {
         'button' => 'Override',
       ),
     ),
+    'nid' => array(
+      'operator' => '=',
+      'value' => '',
+      'group' => '0',
+      'exposed' => FALSE,
+      'expose' => array(
+        'operator' => FALSE,
+        'label' => '',
+      ),
+      'id' => 'nid',
+      'table' => 'node_access',
+      'field' => 'nid',
+      'relationship' => 'nid',
+    ),
   ));
   $handler->override_option('access', array(
     'type' => 'perm',
@@ -1868,10 +1878,9 @@ function commons_event_views_default_views() {
   $view->name = 'event_my_upcoming_events';
   $view->description = 'My upcoming events';
   $view->tag = '';
-  $view->view_php = '';
   $view->base_table = 'node';
-  $view->is_cacheable = FALSE;
-  $view->api_version = 2;
+  $view->core = 0;
+  $view->api_version = '2';
   $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
   $handler = $view->new_display('default', 'Defaults', 'default');
   $handler->override_option('fields', array(
@@ -2256,10 +2265,9 @@ function commons_event_views_default_views() {
   $view->name = 'event_past_events';
   $view->description = 'Past events';
   $view->tag = '';
-  $view->view_php = '';
   $view->base_table = 'node';
-  $view->is_cacheable = FALSE;
-  $view->api_version = 2;
+  $view->core = 0;
+  $view->api_version = '2';
   $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
   $handler = $view->new_display('default', 'Defaults', 'default');
   $handler->override_option('relationships', array(
@@ -2552,10 +2560,9 @@ function commons_event_views_default_views() {
   $view->name = 'group_block_events_latest';
   $view->description = 'Recently created events for groups';
   $view->tag = '';
-  $view->view_php = '';
   $view->base_table = 'node';
-  $view->is_cacheable = FALSE;
-  $view->api_version = 2;
+  $view->core = 0;
+  $view->api_version = '2';
   $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
   $handler = $view->new_display('default', 'Defaults', 'default');
   $handler->override_option('relationships', array(
@@ -2727,10 +2734,10 @@ function commons_event_views_default_views() {
       'field' => 'group_nid',
       'validate_user_argument_type' => 'uid',
       'validate_user_roles' => array(
-        '2' => 0,
-        '3' => 0,
-        '4' => 0,
-        '5' => 0,
+        2 => 0,
+        3 => 0,
+        4 => 0,
+        5 => 0,
       ),
       'override' => array(
         'button' => 'Override',
@@ -2754,8 +2761,8 @@ function commons_event_views_default_views() {
       'validate_argument_node_access' => 0,
       'validate_argument_nid_type' => 'nid',
       'validate_argument_vocabulary' => array(
-        '2' => 0,
-        '3' => 0,
+        2 => 0,
+        3 => 0,
       ),
       'validate_argument_type' => 'tid',
       'validate_argument_transform' => 0,
@@ -2848,10 +2855,9 @@ function commons_event_views_default_views() {
   $view->name = 'group_block_events_past';
   $view->description = 'Past events for groups';
   $view->tag = '';
-  $view->view_php = '';
   $view->base_table = 'node';
-  $view->is_cacheable = FALSE;
-  $view->api_version = 2;
+  $view->core = 0;
+  $view->api_version = '2';
   $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
   $handler = $view->new_display('default', 'Defaults', 'default');
   $handler->override_option('relationships', array(
@@ -3023,10 +3029,10 @@ function commons_event_views_default_views() {
       'field' => 'group_nid',
       'validate_user_argument_type' => 'uid',
       'validate_user_roles' => array(
-        '2' => 0,
-        '3' => 0,
-        '4' => 0,
-        '5' => 0,
+        2 => 0,
+        3 => 0,
+        4 => 0,
+        5 => 0,
       ),
       'override' => array(
         'button' => 'Override',
@@ -3050,8 +3056,8 @@ function commons_event_views_default_views() {
       'validate_argument_node_access' => 0,
       'validate_argument_nid_type' => 'nid',
       'validate_argument_vocabulary' => array(
-        '2' => 0,
-        '3' => 0,
+        2 => 0,
+        3 => 0,
       ),
       'validate_argument_type' => 'tid',
       'validate_argument_transform' => 0,
@@ -3182,10 +3188,9 @@ function commons_event_views_default_views() {
   $view->name = 'group_block_events_upcoming';
   $view->description = 'Upcoming events for groups';
   $view->tag = '';
-  $view->view_php = '';
   $view->base_table = 'node';
-  $view->is_cacheable = FALSE;
-  $view->api_version = 2;
+  $view->core = 0;
+  $view->api_version = '2';
   $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
   $handler = $view->new_display('default', 'Defaults', 'default');
   $handler->override_option('relationships', array(
@@ -3357,10 +3362,10 @@ function commons_event_views_default_views() {
       'field' => 'group_nid',
       'validate_user_argument_type' => 'uid',
       'validate_user_roles' => array(
-        '2' => 0,
-        '3' => 0,
-        '4' => 0,
-        '5' => 0,
+        2 => 0,
+        3 => 0,
+        4 => 0,
+        5 => 0,
       ),
       'override' => array(
         'button' => 'Override',
@@ -3384,8 +3389,8 @@ function commons_event_views_default_views() {
       'validate_argument_node_access' => 0,
       'validate_argument_nid_type' => 'nid',
       'validate_argument_vocabulary' => array(
-        '2' => 0,
-        '3' => 0,
+        2 => 0,
+        3 => 0,
       ),
       'validate_argument_type' => 'tid',
       'validate_argument_transform' => 0,
@@ -3496,7 +3501,7 @@ function commons_event_views_default_views() {
   $handler->override_option('footer_empty', 0);
   $handler->override_option('empty_format', '1');
   $handler->override_option('use_ajax', TRUE);
-  $handler->override_option('items_per_page', 3);
+  $handler->override_option('items_per_page', 5);
   $handler->override_option('use_pager', 'mini');
   $handler->override_option('pager_element', 41);
   $handler->override_option('distinct', 1);
@@ -3515,10 +3520,9 @@ function commons_event_views_default_views() {
   $view->name = 'group_block_evt_latest_comments';
   $view->description = 'The latest comments on group events';
   $view->tag = '';
-  $view->view_php = '';
   $view->base_table = 'comments';
-  $view->is_cacheable = FALSE;
-  $view->api_version = 2;
+  $view->core = 0;
+  $view->api_version = '2';
   $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
   $handler = $view->new_display('default', 'Defaults', 'default');
   $handler->override_option('relationships', array(
@@ -3714,10 +3718,10 @@ function commons_event_views_default_views() {
       'relationship' => 'nid',
       'validate_user_argument_type' => 'uid',
       'validate_user_roles' => array(
-        '2' => 0,
-        '3' => 0,
-        '4' => 0,
-        '5' => 0,
+        2 => 0,
+        3 => 0,
+        4 => 0,
+        5 => 0,
       ),
       'override' => array(
         'button' => 'Override',
@@ -3740,8 +3744,8 @@ function commons_event_views_default_views() {
       'validate_argument_node_access' => 0,
       'validate_argument_nid_type' => 'nid',
       'validate_argument_vocabulary' => array(
-        '2' => 0,
-        '3' => 0,
+        2 => 0,
+        3 => 0,
       ),
       'validate_argument_type' => 'tid',
       'validate_argument_transform' => 0,
@@ -3830,6 +3834,20 @@ function commons_event_views_default_views() {
         'button' => 'Override',
       ),
     ),
+    'nid' => array(
+      'operator' => '=',
+      'value' => '',
+      'group' => '0',
+      'exposed' => FALSE,
+      'expose' => array(
+        'operator' => FALSE,
+        'label' => '',
+      ),
+      'id' => 'nid',
+      'table' => 'node_access',
+      'field' => 'nid',
+      'relationship' => 'nid',
+    ),
   ));
   $handler->override_option('access', array(
     'type' => 'perm',
@@ -3869,10 +3887,9 @@ function commons_event_views_default_views() {
   $view->name = 'group_event_calendar';
   $view->description = 'Show a tab for a group event calendar';
   $view->tag = '';
-  $view->view_php = '';
   $view->base_table = 'node';
-  $view->is_cacheable = FALSE;
-  $view->api_version = 2;
+  $view->core = 0;
+  $view->api_version = '2';
   $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
   $handler = $view->new_display('default', 'Defaults', 'default');
   $handler->override_option('fields', array(
@@ -3963,8 +3980,8 @@ function commons_event_views_default_views() {
       'field' => 'group_nid',
       'validate_user_argument_type' => 'uid',
       'validate_user_roles' => array(
-        '2' => 0,
-        '3' => 0,
+        2 => 0,
+        3 => 0,
       ),
       'relationship' => 'none',
       'default_options_div_prefix' => '',
@@ -3985,8 +4002,8 @@ function commons_event_views_default_views() {
       'validate_argument_node_access' => 0,
       'validate_argument_nid_type' => 'nid',
       'validate_argument_vocabulary' => array(
-        '2' => 0,
-        '1' => 0,
+        2 => 0,
+        1 => 0,
       ),
       'validate_argument_type' => 'tid',
       'validate_argument_transform' => 0,
@@ -4045,8 +4062,8 @@ function commons_event_views_default_views() {
       'validate_argument_node_access' => 0,
       'validate_argument_nid_type' => 'nid',
       'validate_argument_vocabulary' => array(
-        '2' => 0,
-        '1' => 0,
+        2 => 0,
+        1 => 0,
       ),
       'validate_argument_type' => 'tid',
       'validate_argument_php' => '',
@@ -4056,8 +4073,8 @@ function commons_event_views_default_views() {
       'default_options_div_prefix' => '',
       'validate_user_argument_type' => 'uid',
       'validate_user_roles' => array(
-        '2' => 0,
-        '3' => 0,
+        2 => 0,
+        3 => 0,
       ),
       'validate_argument_transform' => 0,
       'validate_user_restrict_roles' => 0,
@@ -4182,7 +4199,7 @@ function commons_event_views_default_views() {
     'name' => 'navigation',
   ));
   $handler->override_option('calendar_colors', array(
-    '0' => array(),
+    0 => array(),
   ));
   $handler->override_option('calendar_colors_vocabulary', array());
   $handler->override_option('calendar_colors_taxonomy', array());
@@ -4210,10 +4227,10 @@ function commons_event_views_default_views() {
       'field' => 'group_nid',
       'validate_user_argument_type' => 'uid',
       'validate_user_roles' => array(
-        '2' => 0,
-        '3' => 0,
-        '4' => 0,
-        '5' => 0,
+        2 => 0,
+        3 => 0,
+        4 => 0,
+        5 => 0,
       ),
       'relationship' => 'none',
       'default_options_div_prefix' => '',
@@ -4234,8 +4251,8 @@ function commons_event_views_default_views() {
       'validate_argument_node_access' => 0,
       'validate_argument_nid_type' => 'nid',
       'validate_argument_vocabulary' => array(
-        '2' => 0,
-        '3' => 0,
+        2 => 0,
+        3 => 0,
       ),
       'validate_argument_type' => 'tid',
       'validate_argument_transform' => 0,
@@ -4294,8 +4311,8 @@ function commons_event_views_default_views() {
       'validate_argument_node_access' => 0,
       'validate_argument_nid_type' => 'nid',
       'validate_argument_vocabulary' => array(
-        '2' => 0,
-        '1' => 0,
+        2 => 0,
+        1 => 0,
       ),
       'validate_argument_type' => 'tid',
       'validate_argument_php' => '',
@@ -4305,8 +4322,8 @@ function commons_event_views_default_views() {
       'default_options_div_prefix' => '',
       'validate_user_argument_type' => 'uid',
       'validate_user_roles' => array(
-        '2' => 0,
-        '3' => 0,
+        2 => 0,
+        3 => 0,
       ),
       'validate_argument_transform' => 0,
       'validate_user_restrict_roles' => 0,
@@ -4516,10 +4533,9 @@ function commons_event_views_default_views() {
   $view->name = 'group_tab_events';
   $view->description = 'Show a tab for group events';
   $view->tag = '';
-  $view->view_php = '';
   $view->base_table = 'node';
-  $view->is_cacheable = FALSE;
-  $view->api_version = 2;
+  $view->core = 0;
+  $view->api_version = '2';
   $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
   $handler = $view->new_display('default', 'Defaults', 'default');
   $handler->override_option('relationships', array(
@@ -4858,8 +4874,8 @@ function commons_event_views_default_views() {
       'link_to_taxonomy' => 1,
       'limit' => 0,
       'vids' => array(
-        '2' => 0,
-        '3' => 0,
+        2 => 0,
+        3 => 0,
       ),
       'exclude' => 0,
       'id' => 'tid',
@@ -4904,10 +4920,10 @@ function commons_event_views_default_views() {
       'field' => 'group_nid',
       'validate_user_argument_type' => 'uid',
       'validate_user_roles' => array(
-        '2' => 0,
-        '3' => 0,
-        '4' => 0,
-        '5' => 0,
+        2 => 0,
+        3 => 0,
+        4 => 0,
+        5 => 0,
       ),
       'override' => array(
         'button' => 'Override',
@@ -4931,8 +4947,8 @@ function commons_event_views_default_views() {
       'validate_argument_node_access' => 0,
       'validate_argument_nid_type' => 'nid',
       'validate_argument_vocabulary' => array(
-        '2' => 0,
-        '3' => 0,
+        2 => 0,
+        3 => 0,
       ),
       'validate_argument_type' => 'tid',
       'validate_argument_transform' => 0,
@@ -5136,7 +5152,7 @@ function commons_event_views_default_views() {
   $handler = $view->new_display('page', 'Page', 'page_1');
   $handler->override_option('path', 'node/%/content/events');
   $handler->override_option('menu', array(
-    'type' => 'tab',
+    'type' => 'none',
     'title' => 'Events',
     'description' => 'View the group events',
     'weight' => '14',
@@ -5157,10 +5173,9 @@ function commons_event_views_default_views() {
   $view->name = 'upcoming_events';
   $view->description = 'Upcoming events';
   $view->tag = '';
-  $view->view_php = '';
   $view->base_table = 'node';
-  $view->is_cacheable = FALSE;
-  $view->api_version = 2;
+  $view->core = 0;
+  $view->api_version = '2';
   $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
   $handler = $view->new_display('default', 'Defaults', 'default');
   $handler->override_option('fields', array(
diff --git a/modules/features/commons_home/commons_home.box.inc b/modules/features/commons_home/commons_home.box.inc
index bbfe799..f83fa4b 100644
--- a/modules/features/commons_home/commons_home.box.inc
+++ b/modules/features/commons_home/commons_home.box.inc
@@ -5,6 +5,7 @@
  */
 function commons_home_default_box() {
   $export = array();
+
   $box = new stdClass;
   $box->disabled = FALSE; /* Edit this to true to make a default box disabled initially */
   $box->api_version = 1;
@@ -13,26 +14,26 @@ function commons_home_default_box() {
   $box->title = 'Community Powered Innovation';
   $box->description = 'Homepage Commons information';
   $box->options = array(
-    'body' => '<p>Welcome to your Commons installation, your ready-to-use solution for communities of all types - from intranets to customer community sites and more. Next, you may want to:</p>
-
-<div class="intro-textblock">
-<h3>Customize your site</h3>
-Add your own look &amp; feel, configure how it works, or extend it by installing more Drupal modules.
-</div>
-
-<div class="intro-textblock">
-<h3>Link in the Network</h3>
-Enable your free Acquia Network trial to add content recommendations, advanced site search &amp; other features to your site.</div>
-
-<div class="intro-textblock">
-<h3>Get help</h3>
-Find a consultant to add new features, get support for what\'s there, or learn how to grow your community.
-</div>
-
+    'body' => '<p>Welcome to your Commons installation, your ready-to-use solution for communities of all types - from intranets to customer community sites and more. Next, you may want to:</p>
+
+<div class="intro-textblock">
+<h3>Customize your site</h3>
+Add your own look &amp; feel, configure how it works, or extend it by installing more Drupal modules.
+</div>
+
+<div class="intro-textblock">
+<h3>Link in the Network</h3>
+Enable your free Acquia Network trial to add content recommendations, advanced site search &amp; other features to your site.</div>
+
+<div class="intro-textblock">
+<h3>Get help</h3>
+Find a consultant to add new features, get support for what\'s there, or learn how to grow your community.
+</div>
+
 <p><a class="intro-morebutton" href="http://commons.acquia.com/get-started" target="_blank">Learn more</a></p>',
     'format' => '2',
   );
-
   $export['homepage_info_box'] = $box;
+
   return $export;
 }
diff --git a/modules/features/commons_home/commons_home.context.inc b/modules/features/commons_home/commons_home.context.inc
index d45d6a0..3a6f70c 100644
--- a/modules/features/commons_home/commons_home.context.inc
+++ b/modules/features/commons_home/commons_home.context.inc
@@ -5,13 +5,95 @@
  */
 function commons_home_context_default_contexts() {
   $export = array();
+
   $context = new stdClass;
   $context->disabled = FALSE; /* Edit this to true to make a default context disabled initially */
   $context->api_version = 3;
   $context->name = 'home';
-  $context->description = 'The community homepage';
+  $context->description = 'The community homepage for authenticated users';
+  $context->tag = 'Home';
+  $context->conditions = array(
+    'path' => array(
+      'values' => array(
+        '<front>' => '<front>',
+        'home' => 'home',
+      ),
+    ),
+    'user' => array(
+      'values' => array(
+        'authenticated user' => 'authenticated user',
+      ),
+    ),
+  );
+  $context->reactions = array(
+    'block' => array(
+      'blocks' => array(
+        'commons_core-join_learn' => array(
+          'module' => 'commons_core',
+          'delta' => 'join_learn',
+          'region' => 'sidebar_last',
+          'weight' => 0,
+        ),
+        'views-recent_notices-block_1' => array(
+          'module' => 'views',
+          'delta' => 'recent_notices-block_1',
+          'region' => 'sidebar_last',
+          'weight' => 1,
+        ),
+        'commons_core-your_content' => array(
+          'module' => 'commons_core',
+          'delta' => 'your_content',
+          'region' => 'sidebar_last',
+          'weight' => 2,
+        ),
+        'views-activity_log_stream-block_1' => array(
+          'module' => 'views',
+          'delta' => 'activity_log_stream-block_1',
+          'region' => 'sidebar_last',
+          'weight' => 3,
+        ),
+        'views-a3e7b5edbe74088872090245cc4288ec' => array(
+          'module' => 'views',
+          'delta' => 'a3e7b5edbe74088872090245cc4288ec',
+          'region' => 'sidebar_last',
+          'weight' => 4,
+        ),
+        'views-new_your_groups-block_1' => array(
+          'module' => 'views',
+          'delta' => 'new_your_groups-block_1',
+          'region' => 'content',
+          'weight' => 0,
+        ),
+      ),
+    ),
+  );
+  $context->condition_mode = 1;
+
+  // Translatables
+  // Included for use with string extractors like potx.
+  t('Home');
+  t('The community homepage for authenticated users');
+  $export['home'] = $context;
+
+  $context = new stdClass;
+  $context->disabled = FALSE; /* Edit this to true to make a default context disabled initially */
+  $context->api_version = 3;
+  $context->name = 'home_anon';
+  $context->description = 'The community homepage for anonymous users';
   $context->tag = 'Home';
-  $context->conditions = array();
+  $context->conditions = array(
+    'path' => array(
+      'values' => array(
+        '<front>' => '<front>',
+        'home' => 'home',
+      ),
+    ),
+    'user' => array(
+      'values' => array(
+        'anonymous user' => 'anonymous user',
+      ),
+    ),
+  );
   $context->reactions = array(
     'block' => array(
       'blocks' => array(
@@ -60,13 +142,13 @@ function commons_home_context_default_contexts() {
       ),
     ),
   );
-  $context->condition_mode = 0;
+  $context->condition_mode = 1;
 
   // Translatables
   // Included for use with string extractors like potx.
   t('Home');
-  t('The community homepage');
+  t('The community homepage for anonymous users');
+  $export['home_anon'] = $context;
 
-  $export['home'] = $context;
   return $export;
 }
diff --git a/modules/features/commons_home/commons_home.info b/modules/features/commons_home/commons_home.info
index 85482f3..3db1882 100644
--- a/modules/features/commons_home/commons_home.info
+++ b/modules/features/commons_home/commons_home.info
@@ -1,4 +1,8 @@
+name = "Commons Home"
+description = "The components that make up the Commons home page"
 core = "6.x"
+package = "Commons"
+dependencies[] = "activity_log"
 dependencies[] = "boxes"
 dependencies[] = "comment"
 dependencies[] = "commons_core"
@@ -10,9 +14,9 @@ dependencies[] = "strongarm"
 dependencies[] = "tagadelic_views"
 dependencies[] = "taxonomy"
 dependencies[] = "views"
-description = "The components that make up the Commons home page"
 features[box][] = "homepage_info_box"
 features[context][] = "home"
+features[context][] = "home_anon"
 features[ctools][] = "boxes:box:1"
 features[ctools][] = "context:context:3"
 features[ctools][] = "strongarm:strongarm:1"
@@ -20,5 +24,3 @@ features[variable][] = "site_frontpage"
 features[views][] = "homepage_group_showcase"
 features[views][] = "homepage_recent_featured"
 features[views_api][] = "api:2"
-name = "Commons Home"
-package = "Commons"
diff --git a/modules/features/commons_home/commons_home.pages.inc b/modules/features/commons_home/commons_home.pages.inc
index b9ad8c6..8d9a7ed 100644
--- a/modules/features/commons_home/commons_home.pages.inc
+++ b/modules/features/commons_home/commons_home.pages.inc
@@ -9,8 +9,5 @@
  * Page callback for the homepage
  */
 function commons_home_homepage() {
-  // Active the context
-  context_set('context', 'home', context_load('home'));  
-  // Return nothing, as context handles the content
   return '';
 }
diff --git a/modules/features/commons_home/commons_home.strongarm.inc b/modules/features/commons_home/commons_home.strongarm.inc
index 06a98c8..c87c021 100644
--- a/modules/features/commons_home/commons_home.strongarm.inc
+++ b/modules/features/commons_home/commons_home.strongarm.inc
@@ -5,12 +5,13 @@
  */
 function commons_home_strongarm() {
   $export = array();
+
   $strongarm = new stdClass;
   $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
   $strongarm->api_version = 1;
   $strongarm->name = 'site_frontpage';
   $strongarm->value = 'home';
-
   $export['site_frontpage'] = $strongarm;
+
   return $export;
 }
diff --git a/modules/features/commons_home/commons_home.views_default.inc b/modules/features/commons_home/commons_home.views_default.inc
index adc5776..190f8d5 100644
--- a/modules/features/commons_home/commons_home.views_default.inc
+++ b/modules/features/commons_home/commons_home.views_default.inc
@@ -11,10 +11,9 @@ function commons_home_views_default_views() {
   $view->name = 'homepage_group_showcase';
   $view->description = 'Show the largest groups and some recent activity from each';
   $view->tag = 'commons';
-  $view->view_php = '';
   $view->base_table = 'node';
-  $view->is_cacheable = FALSE;
-  $view->api_version = 2;
+  $view->core = 0;
+  $view->api_version = '2';
   $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
   $handler = $view->new_display('default', 'Defaults', 'default');
   $handler->override_option('fields', array(
@@ -478,9 +477,9 @@ function commons_home_views_default_views() {
       'field' => 'group_nid',
       'validate_user_argument_type' => 'uid',
       'validate_user_roles' => array(
-        '2' => 0,
-        '3' => 0,
-        '4' => 0,
+        2 => 0,
+        3 => 0,
+        4 => 0,
       ),
       'override' => array(
         'button' => 'Use default',
@@ -504,8 +503,8 @@ function commons_home_views_default_views() {
       'validate_argument_node_access' => 0,
       'validate_argument_nid_type' => 'nid',
       'validate_argument_vocabulary' => array(
-        '2' => 0,
-        '1' => 0,
+        2 => 0,
+        1 => 0,
       ),
       'validate_argument_type' => 'tid',
       'validate_argument_transform' => 0,
@@ -596,10 +595,9 @@ function commons_home_views_default_views() {
   $view->name = 'homepage_recent_featured';
   $view->description = 'Show the latest featured content items';
   $view->tag = 'commons';
-  $view->view_php = '';
   $view->base_table = 'node';
-  $view->is_cacheable = FALSE;
-  $view->api_version = 2;
+  $view->core = 0;
+  $view->api_version = '2';
   $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
   $handler = $view->new_display('default', 'Defaults', 'default');
   $handler->override_option('relationships', array(
@@ -803,8 +801,8 @@ function commons_home_views_default_views() {
       'link_to_taxonomy' => 1,
       'limit' => 0,
       'vids' => array(
-        '2' => 0,
-        '1' => 0,
+        2 => 0,
+        1 => 0,
       ),
       'exclude' => 0,
       'id' => 'tid',
@@ -952,6 +950,7 @@ function commons_home_views_default_views() {
       'id' => 'tid',
       'table' => 'term_node',
       'field' => 'tid',
+      'vid' => '1',
     ),
     'uid' => array(
       'id' => 'uid',
@@ -966,7 +965,7 @@ function commons_home_views_default_views() {
   $handler->override_option('cache', array(
     'type' => 'none',
   ));
-  $handler->override_option('title', 'Latest featured content');
+  $handler->override_option('title', 'Featured content');
   $handler->override_option('empty', 'No featured items are available');
   $handler->override_option('empty_format', '1');
   $handler->override_option('use_ajax', TRUE);
@@ -981,39 +980,6 @@ function commons_home_views_default_views() {
   ));
   $handler = $view->new_display('block', 'Block', 'block_1');
   $handler->override_option('fields', array(
-    'picture' => array(
-      'label' => '',
-      'alter' => array(
-        'alter_text' => 0,
-        'text' => '',
-        'make_link' => 0,
-        'path' => '',
-        'link_class' => '',
-        'alt' => '',
-        'prefix' => '',
-        'suffix' => '',
-        'target' => '',
-        'help' => '',
-        'trim' => 0,
-        'max_length' => '',
-        'word_boundary' => 1,
-        'ellipsis' => 1,
-        'html' => 0,
-        'strip_tags' => 0,
-      ),
-      'empty' => '',
-      'hide_empty' => 0,
-      'empty_zero' => 0,
-      'imagecache_preset' => 'user_picture_meta',
-      'exclude' => 0,
-      'id' => 'picture',
-      'table' => 'users',
-      'field' => 'picture',
-      'override' => array(
-        'button' => 'Use default',
-      ),
-      'relationship' => 'none',
-    ),
     'title' => array(
       'label' => '',
       'alter' => array(
@@ -1075,75 +1041,6 @@ function commons_home_views_default_views() {
       'field' => 'timestamp',
       'relationship' => 'none',
     ),
-    'created' => array(
-      'label' => 'Posted',
-      'alter' => array(
-        'alter_text' => 0,
-        'text' => '[created] [name]',
-        'make_link' => 0,
-        'path' => '',
-        'link_class' => '',
-        'alt' => '',
-        'prefix' => '',
-        'suffix' => '',
-        'target' => '',
-        'help' => '',
-        'trim' => 0,
-        'max_length' => '',
-        'word_boundary' => 1,
-        'ellipsis' => 1,
-        'html' => 0,
-        'strip_tags' => 0,
-      ),
-      'empty' => '',
-      'hide_empty' => 0,
-      'empty_zero' => 0,
-      'date_format' => 'small',
-      'custom_date_format' => '',
-      'exclude' => 0,
-      'id' => 'created',
-      'table' => 'node',
-      'field' => 'created',
-      'override' => array(
-        'button' => 'Use default',
-      ),
-      'relationship' => 'none',
-    ),
-    'name' => array(
-      'label' => '',
-      'alter' => array(
-        'alter_text' => 1,
-        'text' => 'by [name]',
-        'make_link' => 0,
-        'path' => '',
-        'link_class' => '',
-        'alt' => '',
-        'prefix' => '',
-        'suffix' => '',
-        'target' => '',
-        'help' => '',
-        'trim' => 0,
-        'max_length' => '',
-        'word_boundary' => 1,
-        'ellipsis' => 1,
-        'html' => 0,
-        'strip_tags' => 0,
-      ),
-      'empty' => '',
-      'hide_empty' => 0,
-      'empty_zero' => 0,
-      'link_to_user' => 1,
-      'overwrite_anonymous' => 0,
-      'anonymous_text' => '',
-      'exclude' => 0,
-      'id' => 'name',
-      'table' => 'users',
-      'field' => 'name',
-      'override' => array(
-        'button' => 'Use default',
-      ),
-      'relationship' => 'none',
-    ),
   ));
   $handler->override_option('sorts', array(
     'created' => array(
@@ -1195,7 +1092,7 @@ function commons_home_views_default_views() {
     ),
   ));
   $handler->override_option('items_per_page', 3);
-  $handler->override_option('use_pager', 'mini');
+  $handler->override_option('use_pager', '0');
   $handler->override_option('pager_element', 8);
   $handler->override_option('style_options', array(
     'grouping' => '',
@@ -1211,6 +1108,22 @@ function commons_home_views_default_views() {
   ));
   $handler->override_option('block_description', 'Latest featured content');
   $handler->override_option('block_caching', -1);
+  $handler = $view->new_display('page', 'Page', 'page_1');
+  $handler->override_option('path', 'featured-content');
+  $handler->override_option('menu', array(
+    'type' => 'none',
+    'title' => '',
+    'description' => '',
+    'weight' => 0,
+    'name' => 'navigation',
+  ));
+  $handler->override_option('tab_options', array(
+    'type' => 'none',
+    'title' => '',
+    'description' => '',
+    'weight' => 0,
+    'name' => 'navigation',
+  ));
 
   $views[$view->name] = $view;
 
diff --git a/modules/features/commons_poll/commons_poll.views_default.inc b/modules/features/commons_poll/commons_poll.views_default.inc
index 4a5e1a1..6cbb3c7 100644
--- a/modules/features/commons_poll/commons_poll.views_default.inc
+++ b/modules/features/commons_poll/commons_poll.views_default.inc
@@ -11,10 +11,9 @@ function commons_poll_views_default_views() {
   $view->name = 'content_poll_page';
   $view->description = 'A global view of all site polls';
   $view->tag = '';
-  $view->view_php = '';
   $view->base_table = 'node';
-  $view->is_cacheable = FALSE;
-  $view->api_version = 2;
+  $view->core = 0;
+  $view->api_version = '2';
   $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
   $handler = $view->new_display('default', 'Defaults', 'default');
   $handler->override_option('relationships', array(
@@ -290,8 +289,8 @@ function commons_poll_views_default_views() {
       'link_to_taxonomy' => 1,
       'limit' => 0,
       'vids' => array(
-        '2' => 0,
-        '3' => 0,
+        2 => 0,
+        3 => 0,
       ),
       'exclude' => 0,
       'id' => 'tid',
@@ -451,7 +450,7 @@ function commons_poll_views_default_views() {
       ),
       'type' => 'textfield',
       'limit' => TRUE,
-      'vid' => '2',
+      'vid' => '1',
       'id' => 'tid',
       'table' => 'term_node',
       'field' => 'tid',
@@ -621,10 +620,9 @@ function commons_poll_views_default_views() {
   $view->name = 'group_block_poll_latest';
   $view->description = 'The latest group poll block';
   $view->tag = '';
-  $view->view_php = '';
   $view->base_table = 'node';
-  $view->is_cacheable = FALSE;
-  $view->api_version = 2;
+  $view->core = 0;
+  $view->api_version = '2';
   $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
   $handler = $view->new_display('default', 'Defaults', 'default');
   $handler->override_option('relationships', array(
@@ -882,10 +880,10 @@ function commons_poll_views_default_views() {
       'field' => 'group_nid',
       'validate_user_argument_type' => 'uid',
       'validate_user_roles' => array(
-        '2' => 0,
-        '3' => 0,
-        '4' => 0,
-        '5' => 0,
+        2 => 0,
+        3 => 0,
+        4 => 0,
+        5 => 0,
       ),
       'override' => array(
         'button' => 'Override',
@@ -909,8 +907,8 @@ function commons_poll_views_default_views() {
       'validate_argument_node_access' => 0,
       'validate_argument_nid_type' => 'nid',
       'validate_argument_vocabulary' => array(
-        '2' => 0,
-        '3' => 0,
+        2 => 0,
+        3 => 0,
       ),
       'validate_argument_type' => 'tid',
       'validate_argument_transform' => 0,
@@ -1035,10 +1033,9 @@ function commons_poll_views_default_views() {
   $view->name = 'group_block_poll_latest_comments';
   $view->description = 'The latest comments on group polls';
   $view->tag = '';
-  $view->view_php = '';
   $view->base_table = 'comments';
-  $view->is_cacheable = FALSE;
-  $view->api_version = 2;
+  $view->core = 0;
+  $view->api_version = '2';
   $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
   $handler = $view->new_display('default', 'Defaults', 'default');
   $handler->override_option('relationships', array(
@@ -1234,10 +1231,10 @@ function commons_poll_views_default_views() {
       'relationship' => 'nid',
       'validate_user_argument_type' => 'uid',
       'validate_user_roles' => array(
-        '2' => 0,
-        '3' => 0,
-        '4' => 0,
-        '5' => 0,
+        2 => 0,
+        3 => 0,
+        4 => 0,
+        5 => 0,
       ),
       'override' => array(
         'button' => 'Override',
@@ -1260,8 +1257,8 @@ function commons_poll_views_default_views() {
       'validate_argument_node_access' => 0,
       'validate_argument_nid_type' => 'nid',
       'validate_argument_vocabulary' => array(
-        '2' => 0,
-        '3' => 0,
+        2 => 0,
+        3 => 0,
       ),
       'validate_argument_type' => 'tid',
       'validate_argument_transform' => 0,
@@ -1350,6 +1347,20 @@ function commons_poll_views_default_views() {
         'button' => 'Override',
       ),
     ),
+    'nid' => array(
+      'operator' => '=',
+      'value' => '',
+      'group' => '0',
+      'exposed' => FALSE,
+      'expose' => array(
+        'operator' => FALSE,
+        'label' => '',
+      ),
+      'id' => 'nid',
+      'table' => 'node_access',
+      'field' => 'nid',
+      'relationship' => 'nid',
+    ),
   ));
   $handler->override_option('access', array(
     'type' => 'perm',
@@ -1389,10 +1400,9 @@ function commons_poll_views_default_views() {
   $view->name = 'group_block_polls_latest';
   $view->description = 'The latest group polls block';
   $view->tag = '';
-  $view->view_php = '';
   $view->base_table = 'node';
-  $view->is_cacheable = FALSE;
-  $view->api_version = 2;
+  $view->core = 0;
+  $view->api_version = '2';
   $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
   $handler = $view->new_display('default', 'Defaults', 'default');
   $handler->override_option('relationships', array(
@@ -1650,10 +1660,10 @@ function commons_poll_views_default_views() {
       'field' => 'group_nid',
       'validate_user_argument_type' => 'uid',
       'validate_user_roles' => array(
-        '2' => 0,
-        '3' => 0,
-        '4' => 0,
-        '5' => 0,
+        2 => 0,
+        3 => 0,
+        4 => 0,
+        5 => 0,
       ),
       'override' => array(
         'button' => 'Override',
@@ -1677,8 +1687,8 @@ function commons_poll_views_default_views() {
       'validate_argument_node_access' => 0,
       'validate_argument_nid_type' => 'nid',
       'validate_argument_vocabulary' => array(
-        '2' => 0,
-        '3' => 0,
+        2 => 0,
+        3 => 0,
       ),
       'validate_argument_type' => 'tid',
       'validate_argument_transform' => 0,
@@ -1789,10 +1799,9 @@ function commons_poll_views_default_views() {
   $view->name = 'group_tab_polls';
   $view->description = 'Show a tab for group polls';
   $view->tag = '';
-  $view->view_php = '';
   $view->base_table = 'node';
-  $view->is_cacheable = FALSE;
-  $view->api_version = 2;
+  $view->core = 0;
+  $view->api_version = '2';
   $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
   $handler = $view->new_display('default', 'Defaults', 'default');
   $handler->override_option('relationships', array(
@@ -2076,8 +2085,8 @@ function commons_poll_views_default_views() {
       'link_to_taxonomy' => 1,
       'limit' => 0,
       'vids' => array(
-        '2' => 0,
-        '3' => 0,
+        2 => 0,
+        3 => 0,
       ),
       'exclude' => 0,
       'id' => 'tid',
@@ -2137,10 +2146,10 @@ function commons_poll_views_default_views() {
       'field' => 'group_nid',
       'validate_user_argument_type' => 'uid',
       'validate_user_roles' => array(
-        '2' => 0,
-        '3' => 0,
-        '4' => 0,
-        '5' => 0,
+        2 => 0,
+        3 => 0,
+        4 => 0,
+        5 => 0,
       ),
       'override' => array(
         'button' => 'Override',
@@ -2164,8 +2173,8 @@ function commons_poll_views_default_views() {
       'validate_argument_node_access' => 0,
       'validate_argument_nid_type' => 'nid',
       'validate_argument_vocabulary' => array(
-        '2' => 0,
-        '3' => 0,
+        2 => 0,
+        3 => 0,
       ),
       'validate_argument_type' => 'tid',
       'validate_argument_transform' => 0,
@@ -2293,7 +2302,7 @@ function commons_poll_views_default_views() {
       ),
       'type' => 'textfield',
       'limit' => TRUE,
-      'vid' => '2',
+      'vid' => '1',
       'id' => 'tid',
       'table' => 'term_node',
       'field' => 'tid',
@@ -2337,7 +2346,7 @@ function commons_poll_views_default_views() {
   $handler = $view->new_display('page', 'Page', 'page_1');
   $handler->override_option('path', 'node/%/content/polls');
   $handler->override_option('menu', array(
-    'type' => 'tab',
+    'type' => 'none',
     'title' => 'Polls',
     'description' => 'View the group polls',
     'weight' => '12',
@@ -2358,10 +2367,9 @@ function commons_poll_views_default_views() {
   $view->name = 'poll_latest_comments';
   $view->description = 'The latest comments on all polls';
   $view->tag = '';
-  $view->view_php = '';
   $view->base_table = 'comments';
-  $view->is_cacheable = FALSE;
-  $view->api_version = 2;
+  $view->core = 0;
+  $view->api_version = '2';
   $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
   $handler = $view->new_display('default', 'Defaults', 'default');
   $handler->override_option('relationships', array(
@@ -2620,6 +2628,20 @@ function commons_poll_views_default_views() {
         'button' => 'Override',
       ),
     ),
+    'nid' => array(
+      'operator' => '=',
+      'value' => '',
+      'group' => '0',
+      'exposed' => FALSE,
+      'expose' => array(
+        'operator' => FALSE,
+        'label' => '',
+      ),
+      'id' => 'nid',
+      'table' => 'node_access',
+      'field' => 'nid',
+      'relationship' => 'nid',
+    ),
   ));
   $handler->override_option('access', array(
     'type' => 'perm',
diff --git a/modules/features/commons_profile/commons_profile.context.inc b/modules/features/commons_profile/commons_profile.context.inc
index a1c4204..e5ace08 100644
--- a/modules/features/commons_profile/commons_profile.context.inc
+++ b/modules/features/commons_profile/commons_profile.context.inc
@@ -5,6 +5,7 @@
  */
 function commons_profile_context_default_contexts() {
   $export = array();
+
   $context = new stdClass;
   $context->disabled = FALSE; /* Edit this to true to make a default context disabled initially */
   $context->api_version = 3;
@@ -48,8 +49,8 @@ function commons_profile_context_default_contexts() {
   // Included for use with string extractors like potx.
   t('Profile');
   t('User profile when viewing your about page');
-
   $export['profile-about-me'] = $context;
+
   $context = new stdClass;
   $context->disabled = FALSE; /* Edit this to true to make a default context disabled initially */
   $context->api_version = 3;
@@ -93,8 +94,8 @@ function commons_profile_context_default_contexts() {
   // Included for use with string extractors like potx.
   t('Profile');
   t('User profile about page when viewing another user');
-
   $export['profile-about-other'] = $context;
+
   $context = new stdClass;
   $context->disabled = FALSE; /* Edit this to true to make a default context disabled initially */
   $context->api_version = 3;
@@ -141,8 +142,8 @@ function commons_profile_context_default_contexts() {
   // Included for use with string extractors like potx.
   t('Profile');
   t('User profile when viewing yourself');
-
   $export['profile-me'] = $context;
+
   $context = new stdClass;
   $context->disabled = FALSE; /* Edit this to true to make a default context disabled initially */
   $context->api_version = 3;
@@ -195,8 +196,8 @@ function commons_profile_context_default_contexts() {
   // Included for use with string extractors like potx.
   t('Profile');
   t('User profile when viewing another user');
-
   $export['profile-other'] = $context;
+
   $context = new stdClass;
   $context->disabled = FALSE; /* Edit this to true to make a default context disabled initially */
   $context->api_version = 3;
@@ -239,8 +240,8 @@ function commons_profile_context_default_contexts() {
   // Included for use with string extractors like potx.
   t('Profile');
   t('The user profile track page');
-
   $export['profile-track'] = $context;
+
   $context = new stdClass;
   $context->disabled = FALSE; /* Edit this to true to make a default context disabled initially */
   $context->api_version = 3;
@@ -284,7 +285,7 @@ function commons_profile_context_default_contexts() {
   // Included for use with string extractors like potx.
   t('User browser');
   t('Various block to show on the user browser page');
-
   $export['user-browser'] = $context;
+
   return $export;
 }
diff --git a/modules/features/commons_profile/commons_profile.features.inc b/modules/features/commons_profile/commons_profile.features.inc
index b05acd2..a9c77fa 100644
--- a/modules/features/commons_profile/commons_profile.features.inc
+++ b/modules/features/commons_profile/commons_profile.features.inc
@@ -21,15 +21,3 @@ function commons_profile_views_api() {
     'api' => '2',
   );
 }
-
-/**
- * Implementation of hook_strongarm_alter().
- */
-function commons_profile_strongarm_alter(&$items) {
-  // Ensure that the user_terms vocabularies variable refers to
-  // the correct vid.
-  if (isset($items['user_terms_vocabs'])) {
-    $commons_tags_vid = variable_get('commons_tags_vid', 1);
-    $items['user_terms_vocabs']->value = array($commons_tags_vid => $commons_tags_vid);
-  }
-}
\ No newline at end of file
diff --git a/modules/features/commons_profile/commons_profile.info b/modules/features/commons_profile/commons_profile.info
index 4a1ec49..4c3ff0c 100644
--- a/modules/features/commons_profile/commons_profile.info
+++ b/modules/features/commons_profile/commons_profile.info
@@ -1,11 +1,13 @@
+name = "Commons Profile"
+description = "Provide social profiles for site users"
 core = "6.x"
+package = "Commons"
 dependencies[] = "commons_core"
 dependencies[] = "content"
 dependencies[] = "context"
 dependencies[] = "og_views"
 dependencies[] = "profile"
 dependencies[] = "user_relationship_views"
-description = "Provide social profiles for site users"
 features[context][] = "profile-about-me"
 features[context][] = "profile-about-other"
 features[context][] = "profile-me"
@@ -24,5 +26,3 @@ features[views][] = "profile_user_groups"
 features[views][] = "user_directory"
 features[views][] = "users_online"
 features[views_api][] = "api:2"
-name = "Commons Profile"
-package = "Commons"
diff --git a/modules/features/commons_profile/commons_profile.module b/modules/features/commons_profile/commons_profile.module
index 73a3a62..24f7573 100644
--- a/modules/features/commons_profile/commons_profile.module
+++ b/modules/features/commons_profile/commons_profile.module
@@ -21,10 +21,7 @@ function commons_profile_menu() {
 /**
  * Implementation of hook_menu_alter()
  */
-function commons_profile_menu_alter(&$items) {
-  // Alter the profile tab title
-  $items['user/%user/view']['title'] = t('Activity stream');
-  
+function commons_profile_menu_alter(&$items) { 
   // Hide certain profile tabs 
   foreach ($items as $key => $item) {
     switch ($key) {
@@ -87,9 +84,13 @@ function commons_profile_init() {
 function commons_profile_user($op, &$edit, &$account, $category = NULL) {    
   switch ($op) {
     case 'view':
-      // Remove the core profile fields, as we'll be providing our
-      // own content via Context
-      $account->content = array();
+      // Hide user profile and related information that
+      // is displayed via commons_profile_block().
+      $account->content[t('Personal information')]['#access'] = FALSE;
+      $account->content['user_relationships_ui']['#access'] = FALSE;
+      $account->content['user_picture']['#access'] = FALSE;
+      $account->content['userpoints']['#access'] = FALSE;
+      $account->content['user_badges']['#access'] = FALSE;
       break;
   }
 }
@@ -125,8 +126,9 @@ function commons_profile_views_pre_view(&$view) {
       $title = $view->display_handler->get_option('title');
     
       // Fetch the user's friends count
-      $friends = user_relationships_load(array('user' => $account->uid, 'approved' => TRUE), array('count' => TRUE));
-
+      //user_relationships_load isn't used because with 'user' option it would also return requestees matching $account->uid
+      $friends = db_result(db_query('SELECT count(rid) FROM {user_relationships} ur WHERE ur.requester_id = %d AND ur.approved = 1 and ur.rtid = 1', array($account->uid)));
+            
       // Add a friend count to the block
       $title .= " ({$friends})";
 
diff --git a/modules/features/commons_profile/commons_profile.strongarm.inc b/modules/features/commons_profile/commons_profile.strongarm.inc
index cff8510..aeb3821 100644
--- a/modules/features/commons_profile/commons_profile.strongarm.inc
+++ b/modules/features/commons_profile/commons_profile.strongarm.inc
@@ -5,6 +5,7 @@
  */
 function commons_profile_strongarm() {
   $export = array();
+
   $strongarm = new stdClass;
   $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
   $strongarm->api_version = 1;
@@ -12,7 +13,7 @@ function commons_profile_strongarm() {
   $strongarm->value = array(
     1 => '1',
   );
-
   $export['user_terms_vocabs'] = $strongarm;
+
   return $export;
 }
diff --git a/modules/features/commons_profile/commons_profile.views_default.inc b/modules/features/commons_profile/commons_profile.views_default.inc
index 179482c..ca330b6 100644
--- a/modules/features/commons_profile/commons_profile.views_default.inc
+++ b/modules/features/commons_profile/commons_profile.views_default.inc
@@ -1227,47 +1227,6 @@ function commons_profile_views_default_views() {
     ),
   ));
   $handler->override_option('fields', array(
-    'field_group_image_fid' => array(
-      'label' => '',
-      'alter' => array(
-        'alter_text' => 0,
-        'text' => '',
-        'make_link' => 0,
-        'path' => '',
-        'link_class' => '',
-        'alt' => '',
-        'prefix' => '',
-        'suffix' => '',
-        'target' => '',
-        'help' => '',
-        'trim' => 0,
-        'max_length' => '',
-        'word_boundary' => 1,
-        'ellipsis' => 1,
-        'html' => 0,
-        'strip_tags' => 0,
-      ),
-      'empty' => '',
-      'hide_empty' => 0,
-      'empty_zero' => 0,
-      'link_to_node' => 0,
-      'label_type' => 'none',
-      'format' => 'group_images_thumb_linked',
-      'multiple' => array(
-        'group' => TRUE,
-        'multiple_number' => '',
-        'multiple_from' => '',
-        'multiple_reversed' => FALSE,
-      ),
-      'exclude' => 0,
-      'id' => 'field_group_image_fid',
-      'table' => 'node_data_field_group_image',
-      'field' => 'field_group_image_fid',
-      'override' => array(
-        'button' => 'Override',
-      ),
-      'relationship' => 'none',
-    ),
     'title' => array(
       'label' => '',
       'alter' => array(
@@ -1308,8 +1267,10 @@ function commons_profile_views_default_views() {
         'text' => '[post_count_new] post(s)',
         'make_link' => 0,
         'path' => '',
+        'absolute' => 0,
         'link_class' => '',
         'alt' => '',
+        'rel' => '',
         'prefix' => '',
         'suffix' => '',
         'target' => '',
@@ -1324,10 +1285,14 @@ function commons_profile_views_default_views() {
       'empty' => '',
       'hide_empty' => 1,
       'empty_zero' => 0,
+      'hide_alter_empty' => 1,
       'set_precision' => FALSE,
       'precision' => 0,
       'decimal' => '.',
       'separator' => ',',
+      'format_plural' => 0,
+      'format_plural_singular' => '1',
+      'format_plural_plural' => '@count',
       'prefix' => '',
       'suffix' => '',
       'exclude' => 0,
diff --git a/modules/features/commons_seo/commons_seo.info b/modules/features/commons_seo/commons_seo.info
index 622e0d2..016d193 100644
--- a/modules/features/commons_seo/commons_seo.info
+++ b/modules/features/commons_seo/commons_seo.info
@@ -1,9 +1,11 @@
+name = "Commons SEO"
+description = "Provide functionality to improve search indexing, URL structure, etc"
 core = "6.x"
+package = "Commons"
 dependencies[] = "features"
 dependencies[] = "path"
 dependencies[] = "pathauto"
 dependencies[] = "strongarm"
-description = "Provide functionality to improve search indexing, URL structure, etc"
 features[ctools][] = "strongarm:strongarm:1"
 features[user_permission][] = "administer pathauto"
 features[variable][] = "pathauto_node_blog_pattern"
@@ -18,5 +20,3 @@ features[variable][] = "pathauto_node_wiki_pattern"
 features[variable][] = "pathauto_taxonomy_2_pattern"
 features[variable][] = "pathauto_tracker_pattern"
 features[variable][] = "pathauto_user_pattern"
-name = "Commons SEO"
-package = "Commons"
diff --git a/modules/features/commons_seo/commons_seo.strongarm.inc b/modules/features/commons_seo/commons_seo.strongarm.inc
index 72e040c..67ce476 100644
--- a/modules/features/commons_seo/commons_seo.strongarm.inc
+++ b/modules/features/commons_seo/commons_seo.strongarm.inc
@@ -5,89 +5,90 @@
  */
 function commons_seo_strongarm() {
   $export = array();
+
   $strongarm = new stdClass;
   $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
   $strongarm->api_version = 1;
   $strongarm->name = 'pathauto_node_blog_pattern';
   $strongarm->value = 'blog/[title-raw]';
-
   $export['pathauto_node_blog_pattern'] = $strongarm;
+
   $strongarm = new stdClass;
   $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
   $strongarm->api_version = 1;
   $strongarm->name = 'pathauto_node_discussion_pattern';
   $strongarm->value = 'discussion/[title-raw]';
-
   $export['pathauto_node_discussion_pattern'] = $strongarm;
+
   $strongarm = new stdClass;
   $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
   $strongarm->api_version = 1;
   $strongarm->name = 'pathauto_node_document_pattern';
   $strongarm->value = 'document/[title-raw]';
-
   $export['pathauto_node_document_pattern'] = $strongarm;
+
   $strongarm = new stdClass;
   $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
   $strongarm->api_version = 1;
   $strongarm->name = 'pathauto_node_event_pattern';
   $strongarm->value = 'event/[title-raw]';
-
   $export['pathauto_node_event_pattern'] = $strongarm;
+
   $strongarm = new stdClass;
   $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
   $strongarm->api_version = 1;
   $strongarm->name = 'pathauto_node_group_pattern';
   $strongarm->value = 'group/[title-raw]';
-
   $export['pathauto_node_group_pattern'] = $strongarm;
+
   $strongarm = new stdClass;
   $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
   $strongarm->api_version = 1;
   $strongarm->name = 'pathauto_node_notice_pattern';
   $strongarm->value = 'notice/[title-raw]';
-
   $export['pathauto_node_notice_pattern'] = $strongarm;
+
   $strongarm = new stdClass;
   $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
   $strongarm->api_version = 1;
   $strongarm->name = 'pathauto_node_page_pattern';
   $strongarm->value = 'page/[title-raw]';
-
   $export['pathauto_node_page_pattern'] = $strongarm;
+
   $strongarm = new stdClass;
   $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
   $strongarm->api_version = 1;
   $strongarm->name = 'pathauto_node_poll_pattern';
   $strongarm->value = 'poll/[title-raw]';
-
   $export['pathauto_node_poll_pattern'] = $strongarm;
+
   $strongarm = new stdClass;
   $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
   $strongarm->api_version = 1;
   $strongarm->name = 'pathauto_node_wiki_pattern';
   $strongarm->value = 'wiki/[title-raw]';
-
   $export['pathauto_node_wiki_pattern'] = $strongarm;
+
   $strongarm = new stdClass;
   $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
   $strongarm->api_version = 1;
   $strongarm->name = 'pathauto_taxonomy_2_pattern';
   $strongarm->value = 'tag/[catpath-raw]';
-
   $export['pathauto_taxonomy_2_pattern'] = $strongarm;
+
   $strongarm = new stdClass;
   $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
   $strongarm->api_version = 1;
   $strongarm->name = 'pathauto_tracker_pattern';
   $strongarm->value = 'users/[user-raw]/track';
-
   $export['pathauto_tracker_pattern'] = $strongarm;
+
   $strongarm = new stdClass;
   $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
   $strongarm->api_version = 1;
   $strongarm->name = 'pathauto_user_pattern';
   $strongarm->value = 'users/[user-raw]';
-
   $export['pathauto_user_pattern'] = $strongarm;
+
   return $export;
 }
diff --git a/modules/features/commons_status_streams/commons_status_streams.context.inc b/modules/features/commons_status_streams/commons_status_streams.context.inc
index a9ac000..c500a22 100644
--- a/modules/features/commons_status_streams/commons_status_streams.context.inc
+++ b/modules/features/commons_status_streams/commons_status_streams.context.inc
@@ -5,6 +5,7 @@
  */
 function commons_status_streams_context_default_contexts() {
   $export = array();
+
   $context = new stdClass;
   $context->disabled = FALSE; /* Edit this to true to make a default context disabled initially */
   $context->api_version = 3;
@@ -48,8 +49,8 @@ function commons_status_streams_context_default_contexts() {
   // Included for use with string extractors like potx.
   t('Activity');
   t('An activity dashboard');
-
   $export['activity'] = $context;
+
   $context = new stdClass;
   $context->disabled = FALSE; /* Edit this to true to make a default context disabled initially */
   $context->api_version = 3;
@@ -57,35 +58,21 @@ function commons_status_streams_context_default_contexts() {
   $context->description = 'Adds the status update box to the group home page';
   $context->tag = 'Group';
   $context->conditions = array(
-    'node' => array(
+    'path' => array(
       'values' => array(
-        'group' => 'group',
-      ),
-      'options' => array(
-        'node_form' => '0',
-      ),
-    ),
-  );
-  $context->reactions = array(
-    'block' => array(
-      'blocks' => array(
-        'facebook_status-facebook_status' => array(
-          'module' => 'facebook_status',
-          'delta' => 'facebook_status',
-          'region' => 'content',
-          'weight' => 1,
-        ),
+        'node/*/group-activity' => 'node/*/group-activity',
       ),
     ),
   );
+  $context->reactions = array();
   $context->condition_mode = 0;
 
   // Translatables
   // Included for use with string extractors like potx.
   t('Adds the status update box to the group home page');
   t('Group');
-
   $export['group-home-status-box'] = $context;
+
   $context = new stdClass;
   $context->disabled = FALSE; /* Edit this to true to make a default context disabled initially */
   $context->api_version = 3;
@@ -120,8 +107,8 @@ function commons_status_streams_context_default_contexts() {
   // Included for use with string extractors like potx.
   t('Adds the status update box to the user profile page');
   t('Profile');
-
   $export['profile-me-status-box'] = $context;
+
   $context = new stdClass;
   $context->disabled = FALSE; /* Edit this to true to make a default context disabled initially */
   $context->api_version = 3;
@@ -156,7 +143,7 @@ function commons_status_streams_context_default_contexts() {
   // Included for use with string extractors like potx.
   t('Adds the status update box to the user profile page');
   t('Profile');
-
   $export['profile-other-status-box'] = $context;
+
   return $export;
 }
diff --git a/modules/features/commons_status_streams/commons_status_streams.features.user_permission.inc b/modules/features/commons_status_streams/commons_status_streams.features.user_permission.inc
index a1f69d6..370baeb 100644
--- a/modules/features/commons_status_streams/commons_status_streams.features.user_permission.inc
+++ b/modules/features/commons_status_streams/commons_status_streams.features.user_permission.inc
@@ -149,7 +149,7 @@ function commons_status_streams_user_default_permissions() {
       '0' => 'authenticated user',
     ),
   );
-  
+
   // Exported permission: receive digests
   $permissions['receive digests'] = array(
     'name' => 'receive digests',
diff --git a/modules/features/commons_status_streams/commons_status_streams.info b/modules/features/commons_status_streams/commons_status_streams.info
index 396112f..f56d648 100644
--- a/modules/features/commons_status_streams/commons_status_streams.info
+++ b/modules/features/commons_status_streams/commons_status_streams.info
@@ -1,4 +1,7 @@
+name = "Commons Activity Streams"
+description = "Adds status updates and activity streams to users and groups."
 core = "6.x"
+package = "Commons"
 dependencies[] = "activity_log"
 dependencies[] = "comment"
 dependencies[] = "commons_core"
@@ -27,7 +30,6 @@ dependencies[] = "taxonomy"
 dependencies[] = "token"
 dependencies[] = "user_relationships_rules"
 dependencies[] = "views"
-description = "Adds status updates and activity streams to users and groups."
 features[context][] = "activity"
 features[context][] = "group-home-status-box"
 features[context][] = "profile-me-status-box"
@@ -83,5 +85,3 @@ features[variable][] = "fbss_comments_user_pictures"
 features[variable][] = "fbss_comments_userpoints"
 features[views][] = "stream_recent_content"
 features[views_api][] = "api:2"
-name = "Commons Activity Streams"
-package = "Commons"
diff --git a/modules/features/commons_status_streams/commons_status_streams.install b/modules/features/commons_status_streams/commons_status_streams.install
index 8e487be..9a1f288 100644
--- a/modules/features/commons_status_streams/commons_status_streams.install
+++ b/modules/features/commons_status_streams/commons_status_streams.install
@@ -1,11 +1,6 @@
 <?php
 
 /**
- * @file
- *   (Un)installs the Commons Status Streams feature.
- */
-
-/**
  * Implementation of hook_install().
  *   Status streams provide a digest that deprecates the digest functionality
  *   by Notifications as well as the need to provide notifications on comments
@@ -20,3 +15,13 @@ function commons_status_streams_install() {
 function commons_status_streams_uninstall() {
   variable_del('commons_status_streams_auth_frontpage');
 }
+
+/*
+* Set the group status stream context following updates to the group
+* landing pages (http://drupal.org/node/1419150).
+*/
+
+function commons_status_streams_update_6001() {
+  commons_status_streams_setup_group_context();
+  return array();
+}
\ No newline at end of file
diff --git a/modules/features/commons_status_streams/commons_status_streams.module b/modules/features/commons_status_streams/commons_status_streams.module
index 8a4fa4e..ec19231 100644
--- a/modules/features/commons_status_streams/commons_status_streams.module
+++ b/modules/features/commons_status_streams/commons_status_streams.module
@@ -17,9 +17,31 @@ function commons_status_streams_menu() {
     'weight' => 1,
     'menu_name' => 'primary-links',
   );
+  $items['node/%node/group-activity'] = array(
+    'title' => 'Group Activity',
+    'page callback' => 'commons_status_streams_stream_page',
+    'page arguments' => array(1),
+    'access callback' => 'commons_status_streams_group_activity_access',
+    'access arguments' => array(1),
+    'description' => 'An activity dashboard page.',
+    'file' => 'commons_status_streams.pages.inc',
+    'type' => MENU_LOCAL_TASK,
+    'weight' => -1,
+  );
   return $items;
 }
 
+function commons_status_streams_group_activity_access($node) {
+  return (og_is_group_type($node->type) && node_access('view', $node));
+}
+/**
+ * Implementation of hook_menu_alter().
+ */
+function commons_status_streams_menu_alter(&$items) {
+  // Alter the profile tab title
+  $items['user/%user/view']['title'] = t('Activity stream');
+}
+
 /**
  * Implementation of hook_form_FORM_ID_alter().
  */
@@ -28,7 +50,7 @@ function commons_status_streams_form_system_site_information_settings_alter(&$fo
     '#type' => 'checkbox',
     '#title' => t('Use the activity stream as the front page for authenticated users'),
     '#description' => t('If enabled, users who get to the front page by clicking your site name or logo or who are directed to the front page by Drupal will be redirected to their activity stream at <code>/stream</code> if they are logged in. Users can still visit the "normal" front page that anonymous users see by visiting its path directly or by clicking on the "Home" link in the menu.'),
-    '#default_value' => variable_get('commons_status_streams_auth_frontpage', 1),
+    '#default_value' => variable_get('commons_status_streams_auth_frontpage', 0),
   );
   $form['buttons']['#weight'] = 10;
 }
@@ -45,7 +67,7 @@ function commons_status_streams_facebook_status_link_alter(&$links, $status) {
  * Implementation of hook_init().
  */
 function commons_status_streams_init() {
-  if (variable_get('commons_status_streams_auth_frontpage', 1) && !user_is_anonymous()) {
+  if (variable_get('commons_status_streams_auth_frontpage', 0) && !user_is_anonymous()) {
     // example.com requested, but not example.com/home
     if (!str_replace(base_path(), '', $_SERVER['REQUEST_URI'])) {
       drupal_goto('stream');
@@ -62,9 +84,20 @@ function commons_status_streams_enable() {
     // Enable the integration between status streams and userpoints
     drupal_install_modules(array('fbss_userpoints'));
   }
+  commons_status_streams_setup_group_context();
 }
 
 /**
+* Implementation of hook_user().
+*/
+function commons_status_streams_user($op, &$edit, &$account, $category = NULL) {
+  if ($op == 'view') {
+    foreach (array_keys($account->content) as $key) {
+      $account->content[$key]['#access'] = FALSE;
+    }
+  }
+}
+/**
  * Implementation of hook_rules_defaults_alter()
  */
 function commons_status_streams_rules_defaults_alter(&$rules) {
@@ -113,6 +146,21 @@ function commons_status_streams_views_default_views_alter(&$views) {
   }
 }
 
+/**
+*  The Facebook style statuses module has a context system that is separate
+*  from that of the Context module and is not exportable. We need to configure
+*  that context to use the Context module's group-home-status-box context to
+*  provide the group activity stream at node/%node/group-activity.
+*/
+function commons_status_streams_setup_group_context() {
+  $fbss_og_context = array();
+  $fbss_og_context['context'] = 'group-home-status-box';
+  $fbss_og_context['view'] = 'activity_log_stream';
+  $fbss_og_context['visibility'] = 3;
+  $fbss_og_context['type'] = 'og';
+  $fbss_og_context['weight'] = -50;
+  drupal_write_record('facebook_status_contexts', $fbss_og_context, 'type');
+}
 function commons_status_streams_disable_deprecated_notifications() {
   if (module_exists('notifications')) {
     // Remove all non-immediate nofications options.
diff --git a/modules/features/commons_status_streams/commons_status_streams.pages.inc b/modules/features/commons_status_streams/commons_status_streams.pages.inc
index 3d55981..0a54a1c 100644
--- a/modules/features/commons_status_streams/commons_status_streams.pages.inc
+++ b/modules/features/commons_status_streams/commons_status_streams.pages.inc
@@ -3,11 +3,17 @@
 /**
  * The page callback for the main stream page
  */
-function commons_status_streams_stream_page() {
+function commons_status_streams_stream_page($group_node = NULL) {
   // Set the title
   // We do this here because we want the tab title and page title
-  // to do different
-  drupal_set_title(t('Activity stream'));
+  // to be different.
+  if (!empty($group_node->title)) {
+    drupal_set_title($group_node->title);
+  }
+  else {
+    drupal_set_title(t('Activity stream'));  
+  }
+  
   
   // If the user is anonymous, prompt them to login or register
   if (user_is_anonymous()) {
diff --git a/modules/features/commons_status_streams/commons_status_streams.strongarm.inc b/modules/features/commons_status_streams/commons_status_streams.strongarm.inc
index cd02927..b692e2f 100644
--- a/modules/features/commons_status_streams/commons_status_streams.strongarm.inc
+++ b/modules/features/commons_status_streams/commons_status_streams.strongarm.inc
@@ -5,104 +5,105 @@
  */
 function commons_status_streams_strongarm() {
   $export = array();
+
   $strongarm = new stdClass;
   $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
   $strongarm->api_version = 1;
   $strongarm->name = 'facebook_status_block_view';
   $strongarm->value = 1;
-
   $export['facebook_status_block_view'] = $strongarm;
+
   $strongarm = new stdClass;
   $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
   $strongarm->api_version = 1;
   $strongarm->name = 'facebook_status_default_text';
   $strongarm->value = 'What\'s on your mind?';
-
   $export['facebook_status_default_text'] = $strongarm;
+
   $strongarm = new stdClass;
   $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
   $strongarm->api_version = 1;
   $strongarm->name = 'facebook_status_default_text_other';
   $strongarm->value = 'Write something...';
-
   $export['facebook_status_default_text_other'] = $strongarm;
+
   $strongarm = new stdClass;
   $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
   $strongarm->api_version = 1;
   $strongarm->name = 'facebook_status_filter';
   $strongarm->value = '5';
-
   $export['facebook_status_filter'] = $strongarm;
+
   $strongarm = new stdClass;
   $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
   $strongarm->api_version = 1;
   $strongarm->name = 'facebook_status_hide_length';
   $strongarm->value = '500';
-
   $export['facebook_status_hide_length'] = $strongarm;
+
   $strongarm = new stdClass;
   $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
   $strongarm->api_version = 1;
   $strongarm->name = 'facebook_status_imagecache_preset';
   $strongarm->value = 'user_picture_meta';
-
   $export['facebook_status_imagecache_preset'] = $strongarm;
+
   $strongarm = new stdClass;
   $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
   $strongarm->api_version = 1;
   $strongarm->name = 'facebook_status_length';
   $strongarm->value = '0';
-
   $export['facebook_status_length'] = $strongarm;
+
   $strongarm = new stdClass;
   $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
   $strongarm->api_version = 1;
   $strongarm->name = 'facebook_status_nl2br';
   $strongarm->value = 1;
-
   $export['facebook_status_nl2br'] = $strongarm;
+
   $strongarm = new stdClass;
   $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
   $strongarm->api_version = 1;
   $strongarm->name = 'facebook_status_profile';
   $strongarm->value = 0;
-
   $export['facebook_status_profile'] = $strongarm;
+
   $strongarm = new stdClass;
   $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
   $strongarm->api_version = 1;
   $strongarm->name = 'facebook_status_reply_type';
   $strongarm->value = 'convo';
-
   $export['facebook_status_reply_type'] = $strongarm;
+
   $strongarm = new stdClass;
   $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
   $strongarm->api_version = 1;
   $strongarm->name = 'facebook_status_share_view';
   $strongarm->value = 'activity_log_stream';
-
   $export['facebook_status_share_view'] = $strongarm;
-  $strongarm = new stdClass;
-  $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
-  $strongarm->api_version = 1;
-  $strongarm->name = 'facebook_status_user_other_view';
-  $strongarm->value = 'activity_log_stream';
 
-  $export['facebook_status_user_other_view'] = $strongarm;
   $strongarm = new stdClass;
   $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
   $strongarm->api_version = 1;
   $strongarm->name = 'facebook_status_userpoints_other';
   $strongarm->value = '4';
-
   $export['facebook_status_userpoints_other'] = $strongarm;
+
   $strongarm = new stdClass;
   $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
   $strongarm->api_version = 1;
   $strongarm->name = 'facebook_status_userpoints_own';
   $strongarm->value = '3';
-
   $export['facebook_status_userpoints_own'] = $strongarm;
+
+  $strongarm = new stdClass;
+  $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
+  $strongarm->api_version = 1;
+  $strongarm->name = 'facebook_status_user_other_view';
+  $strongarm->value = 'activity_log_stream';
+  $export['facebook_status_user_other_view'] = $strongarm;
+
   $strongarm = new stdClass;
   $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
   $strongarm->api_version = 1;
@@ -111,15 +112,15 @@ function commons_status_streams_strongarm() {
     0 => 'video',
     1 => 'slideshare',
   );
-
   $export['fbsmp_disabled_plugins'] = $strongarm;
+
   $strongarm = new stdClass;
   $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
   $strongarm->api_version = 1;
   $strongarm->name = 'fbsmp_ignore_sdefault';
   $strongarm->value = 1;
-
   $export['fbsmp_ignore_sdefault'] = $strongarm;
+
   $strongarm = new stdClass;
   $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
   $strongarm->api_version = 1;
@@ -136,21 +137,21 @@ function commons_status_streams_strongarm() {
     'alt' => '',
     'class' => '',
   );
-
   $export['fbsmp_plugin_photo'] = $strongarm;
+
   $strongarm = new stdClass;
   $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
   $strongarm->api_version = 1;
-  $strongarm->name = 'fbss_comments_user_pictures';
-  $strongarm->value = 'user_picture_meta';
+  $strongarm->name = 'fbss_comments_userpoints';
+  $strongarm->value = '2';
+  $export['fbss_comments_userpoints'] = $strongarm;
 
-  $export['fbss_comments_user_pictures'] = $strongarm;
   $strongarm = new stdClass;
   $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
   $strongarm->api_version = 1;
-  $strongarm->name = 'fbss_comments_userpoints';
-  $strongarm->value = '2';
+  $strongarm->name = 'fbss_comments_user_pictures';
+  $strongarm->value = 'user_picture_meta';
+  $export['fbss_comments_user_pictures'] = $strongarm;
 
-  $export['fbss_comments_userpoints'] = $strongarm;
   return $export;
 }
diff --git a/modules/features/commons_status_streams/commons_status_streams.views_default.inc b/modules/features/commons_status_streams/commons_status_streams.views_default.inc
index 246bcf8..a698df9 100644
--- a/modules/features/commons_status_streams/commons_status_streams.views_default.inc
+++ b/modules/features/commons_status_streams/commons_status_streams.views_default.inc
@@ -11,10 +11,9 @@ function commons_status_streams_views_default_views() {
   $view->name = 'stream_recent_content';
   $view->description = 'Show all of the recent content';
   $view->tag = '';
-  $view->view_php = '';
   $view->base_table = 'node';
-  $view->is_cacheable = FALSE;
-  $view->api_version = 2;
+  $view->core = 0;
+  $view->api_version = '2';
   $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
   $handler = $view->new_display('default', 'Defaults', 'default');
   $handler->override_option('relationships', array(
@@ -31,36 +30,6 @@ function commons_status_streams_views_default_views() {
     ),
   ));
   $handler->override_option('fields', array(
-    'picture' => array(
-      'label' => '',
-      'alter' => array(
-        'alter_text' => 0,
-        'text' => '',
-        'make_link' => 0,
-        'path' => '',
-        'link_class' => '',
-        'alt' => '',
-        'prefix' => '',
-        'suffix' => '',
-        'target' => '',
-        'help' => '',
-        'trim' => 0,
-        'max_length' => '',
-        'word_boundary' => 1,
-        'ellipsis' => 1,
-        'strip_tags' => 0,
-        'html' => 0,
-      ),
-      'empty' => '',
-      'hide_empty' => 0,
-      'empty_zero' => 0,
-      'imagecache_preset' => 'user_picture_meta',
-      'exclude' => 0,
-      'id' => 'picture',
-      'table' => 'users',
-      'field' => 'picture',
-      'relationship' => 'none',
-    ),
     'type' => array(
       'label' => '',
       'alter' => array(
@@ -263,8 +232,10 @@ function commons_status_streams_views_default_views() {
         'text' => '',
         'make_link' => 0,
         'path' => '',
+        'absolute' => 0,
         'link_class' => '',
         'alt' => '',
+        'rel' => '',
         'prefix' => '',
         'suffix' => '',
         'target' => '',
@@ -279,17 +250,24 @@ function commons_status_streams_views_default_views() {
       'empty' => '0',
       'hide_empty' => 1,
       'empty_zero' => 1,
+      'hide_alter_empty' => 1,
       'set_precision' => FALSE,
       'precision' => 0,
       'decimal' => '.',
       'separator' => ',',
+      'format_plural' => 1,
+      'format_plural_singular' => '1 reply',
+      'format_plural_plural' => '@count replies',
       'prefix' => '',
-      'suffix' => ' replies',
+      'suffix' => '',
       'exclude' => 0,
       'id' => 'comment_count',
       'table' => 'node_comment_statistics',
       'field' => 'comment_count',
       'relationship' => 'none',
+      'override' => array(
+        'button' => 'Override',
+      ),
     ),
   ));
   $handler->override_option('sorts', array(
@@ -361,7 +339,7 @@ function commons_status_streams_views_default_views() {
   $handler->override_option('access', array(
     'type' => 'role',
     'role' => array(
-      '2' => 2,
+      2 => 2,
     ),
   ));
   $handler->override_option('cache', array(
diff --git a/modules/features/commons_status_streams/fbss_custom/fbss_custom.module b/modules/features/commons_status_streams/fbss_custom/fbss_custom.module
index 91022ce..a9df376 100644
--- a/modules/features/commons_status_streams/fbss_custom/fbss_custom.module
+++ b/modules/features/commons_status_streams/fbss_custom/fbss_custom.module
@@ -24,9 +24,12 @@ function fbss_custom_form_facebook_status_box_alter(&$form, $form_state) {
   $form['fbsmp']['photo_icon']['#value'] = 'Photo';
   $form['fbsmp']['photo_icon']['#attributes']['class'] = $form['fbsmp']['photo_icon']['#attributes']['class'] . ' button';
   
-  // remove the tool-tips
+  // Remove the tool tips provided by FBSMP since Commons uses button text
+  // rather than images, making the tool tips redundant.
   foreach (fbsmp_get_plugins() as $key => $info) {
     $name = $info['name'] ? $info['name'] : $key;
-    $form['fbsmp'][$key .'_icon']['#suffix'] = '</div>';
+    if (!empty($form['fbsmp'][$key .'_icon']['#suffix'])) {
+      $form['fbsmp'][$key .'_icon']['#suffix'] = '</div>';
+    }
   }
 }
diff --git a/modules/features/commons_wiki/commons_wiki.views_default.inc b/modules/features/commons_wiki/commons_wiki.views_default.inc
index 4c0b147..1081e48 100644
--- a/modules/features/commons_wiki/commons_wiki.views_default.inc
+++ b/modules/features/commons_wiki/commons_wiki.views_default.inc
@@ -11,10 +11,9 @@ function commons_wiki_views_default_views() {
   $view->name = 'content_wiki_page';
   $view->description = 'A global view of all site wikis';
   $view->tag = '';
-  $view->view_php = '';
   $view->base_table = 'node';
-  $view->is_cacheable = FALSE;
-  $view->api_version = 2;
+  $view->core = 0;
+  $view->api_version = '2';
   $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
   $handler = $view->new_display('default', 'Defaults', 'default');
   $handler->override_option('relationships', array(
@@ -290,8 +289,8 @@ function commons_wiki_views_default_views() {
       'link_to_taxonomy' => 1,
       'limit' => 0,
       'vids' => array(
-        '2' => 0,
-        '3' => 0,
+        2 => 0,
+        3 => 0,
       ),
       'exclude' => 0,
       'id' => 'tid',
@@ -451,7 +450,7 @@ function commons_wiki_views_default_views() {
       ),
       'type' => 'textfield',
       'limit' => TRUE,
-      'vid' => '2',
+      'vid' => '1',
       'id' => 'tid',
       'table' => 'term_node',
       'field' => 'tid',
@@ -621,10 +620,9 @@ function commons_wiki_views_default_views() {
   $view->name = 'group_block_wiki_latest';
   $view->description = 'The latest group wikis block';
   $view->tag = '';
-  $view->view_php = '';
   $view->base_table = 'node';
-  $view->is_cacheable = FALSE;
-  $view->api_version = 2;
+  $view->core = 0;
+  $view->api_version = '2';
   $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
   $handler = $view->new_display('default', 'Defaults', 'default');
   $handler->override_option('relationships', array(
@@ -882,10 +880,10 @@ function commons_wiki_views_default_views() {
       'field' => 'group_nid',
       'validate_user_argument_type' => 'uid',
       'validate_user_roles' => array(
-        '2' => 0,
-        '3' => 0,
-        '4' => 0,
-        '5' => 0,
+        2 => 0,
+        3 => 0,
+        4 => 0,
+        5 => 0,
       ),
       'override' => array(
         'button' => 'Override',
@@ -909,8 +907,8 @@ function commons_wiki_views_default_views() {
       'validate_argument_node_access' => 0,
       'validate_argument_nid_type' => 'nid',
       'validate_argument_vocabulary' => array(
-        '2' => 0,
-        '3' => 0,
+        2 => 0,
+        3 => 0,
       ),
       'validate_argument_type' => 'tid',
       'validate_argument_transform' => 0,
@@ -1021,10 +1019,9 @@ function commons_wiki_views_default_views() {
   $view->name = 'group_block_wiki_latest_comments';
   $view->description = 'The latest comments on group wikis';
   $view->tag = '';
-  $view->view_php = '';
   $view->base_table = 'comments';
-  $view->is_cacheable = FALSE;
-  $view->api_version = 2;
+  $view->core = 0;
+  $view->api_version = '2';
   $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
   $handler = $view->new_display('default', 'Defaults', 'default');
   $handler->override_option('relationships', array(
@@ -1220,10 +1217,10 @@ function commons_wiki_views_default_views() {
       'relationship' => 'nid',
       'validate_user_argument_type' => 'uid',
       'validate_user_roles' => array(
-        '2' => 0,
-        '3' => 0,
-        '4' => 0,
-        '5' => 0,
+        2 => 0,
+        3 => 0,
+        4 => 0,
+        5 => 0,
       ),
       'override' => array(
         'button' => 'Override',
@@ -1246,8 +1243,8 @@ function commons_wiki_views_default_views() {
       'validate_argument_node_access' => 0,
       'validate_argument_nid_type' => 'nid',
       'validate_argument_vocabulary' => array(
-        '2' => 0,
-        '3' => 0,
+        2 => 0,
+        3 => 0,
       ),
       'validate_argument_type' => 'tid',
       'validate_argument_transform' => 0,
@@ -1336,6 +1333,20 @@ function commons_wiki_views_default_views() {
         'button' => 'Override',
       ),
     ),
+    'nid' => array(
+      'operator' => '=',
+      'value' => '',
+      'group' => '0',
+      'exposed' => FALSE,
+      'expose' => array(
+        'operator' => FALSE,
+        'label' => '',
+      ),
+      'id' => 'nid',
+      'table' => 'node_access',
+      'field' => 'nid',
+      'relationship' => 'nid',
+    ),
   ));
   $handler->override_option('access', array(
     'type' => 'perm',
@@ -1375,10 +1386,9 @@ function commons_wiki_views_default_views() {
   $view->name = 'group_tab_wikis';
   $view->description = 'Show a tab for group wikis';
   $view->tag = '';
-  $view->view_php = '';
   $view->base_table = 'node';
-  $view->is_cacheable = FALSE;
-  $view->api_version = 2;
+  $view->core = 0;
+  $view->api_version = '2';
   $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
   $handler = $view->new_display('default', 'Defaults', 'default');
   $handler->override_option('relationships', array(
@@ -1662,8 +1672,8 @@ function commons_wiki_views_default_views() {
       'link_to_taxonomy' => 1,
       'limit' => 0,
       'vids' => array(
-        '2' => 0,
-        '3' => 0,
+        2 => 0,
+        3 => 0,
       ),
       'exclude' => 0,
       'id' => 'tid',
@@ -1723,10 +1733,10 @@ function commons_wiki_views_default_views() {
       'field' => 'group_nid',
       'validate_user_argument_type' => 'uid',
       'validate_user_roles' => array(
-        '2' => 0,
-        '3' => 0,
-        '4' => 0,
-        '5' => 0,
+        2 => 0,
+        3 => 0,
+        4 => 0,
+        5 => 0,
       ),
       'override' => array(
         'button' => 'Override',
@@ -1750,8 +1760,8 @@ function commons_wiki_views_default_views() {
       'validate_argument_node_access' => 0,
       'validate_argument_nid_type' => 'nid',
       'validate_argument_vocabulary' => array(
-        '2' => 0,
-        '3' => 0,
+        2 => 0,
+        3 => 0,
       ),
       'validate_argument_type' => 'tid',
       'validate_argument_transform' => 0,
@@ -1879,7 +1889,7 @@ function commons_wiki_views_default_views() {
       ),
       'type' => 'textfield',
       'limit' => TRUE,
-      'vid' => '2',
+      'vid' => '1',
       'id' => 'tid',
       'table' => 'term_node',
       'field' => 'tid',
@@ -1923,7 +1933,7 @@ function commons_wiki_views_default_views() {
   $handler = $view->new_display('page', 'Page', 'page_1');
   $handler->override_option('path', 'node/%/content/wikis');
   $handler->override_option('menu', array(
-    'type' => 'tab',
+    'type' => 'none',
     'title' => 'Wikis',
     'description' => 'View the group wikis',
     'weight' => '8',
@@ -1944,10 +1954,9 @@ function commons_wiki_views_default_views() {
   $view->name = 'wiki_latest_comments';
   $view->description = 'The latest comments on all wikis';
   $view->tag = '';
-  $view->view_php = '';
   $view->base_table = 'comments';
-  $view->is_cacheable = FALSE;
-  $view->api_version = 2;
+  $view->core = 0;
+  $view->api_version = '2';
   $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
   $handler = $view->new_display('default', 'Defaults', 'default');
   $handler->override_option('relationships', array(
@@ -2206,6 +2215,20 @@ function commons_wiki_views_default_views() {
         'button' => 'Override',
       ),
     ),
+    'nid' => array(
+      'operator' => '=',
+      'value' => '',
+      'group' => '0',
+      'exposed' => FALSE,
+      'expose' => array(
+        'operator' => FALSE,
+        'label' => '',
+      ),
+      'id' => 'nid',
+      'table' => 'node_access',
+      'field' => 'nid',
+      'relationship' => 'nid',
+    ),
   ));
   $handler->override_option('access', array(
     'type' => 'perm',
diff --git a/themes/commons_connect/page-node-question.tpl.php b/themes/commons_connect/page-node-question.tpl.php
new file mode 100644
index 0000000..8684852
--- /dev/null
+++ b/themes/commons_connect/page-node-question.tpl.php
@@ -0,0 +1,165 @@
+<?php
+// $Id: page-node-question.tpl.php $
+?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="<?php print $language->language; ?>" xml:lang="<?php print $language->language; ?>">
+
+<head>
+  <title><?php print $head_title; ?></title>
+  <?php print $head; ?>
+  <?php print $styles; ?>
+  <?php print $setting_styles; ?>
+  <!--[if IE 8]>
+  <?php print $ie8_styles; ?>
+  <![endif]-->
+  <!--[if IE 7]>
+  <?php print $ie7_styles; ?>
+  <![endif]-->
+  <!--[if IE 6]>
+  <?php print $ie6_styles; ?>
+  <![endif]-->
+  <?php print $local_styles; ?>
+  <?php print $scripts; ?>
+</head>
+
+<body id="<?php print $body_id; ?>" class="<?php print $body_classes; ?>">
+  <div id="page" class="page">
+    <div id="page-inner" class="page-inner">
+      <div id="skip">
+        <a href="#main-content-area"><?php print t('Skip to Main Content Area'); ?></a>
+      </div>
+
+      <!-- header-top row: width = grid_width -->
+      <?php print theme('grid_row', $header_top, 'header-top', 'full-width', $grid_width); ?>
+
+      <!-- header-group row: width = grid_width -->
+      <div id="header-group-wrapper" class="header-group-wrapper full-width">
+        <div id="header-group" class="header-group row <?php print $grid_width; ?>">
+          <div id="header-group-inner" class="header-group-inner inner clearfix">
+            <?php print theme('grid_block', theme('links', $secondary_links), 'secondary-menu'); ?>
+            
+			<?php if ($logo || $site_name || $site_slogan): ?>
+			<div id="header-site-info" class="header-site-info block">
+				<div id="header-site-info-inner" class="header-site-info-inner inner">
+					<?php if ($logo): ?>
+                    <div id="logo">
+                        <a href="<?php print check_url($front_page); ?>" title="<?php print t('Home'); ?>"><img src="<?php print $logo; ?>" alt="<?php print t('Home'); ?>" /></a>
+                    </div>
+                    <?php endif; ?>
+                    
+                    <?php if ($site_name || $site_slogan): ?>
+                    <div id="site-name-wrapper" class="clearfix">
+                        <?php if ($site_name): ?>
+                            <span id="site-name"><a href="<?php print check_url($front_page); ?>" title="<?php print t('Home'); ?>"><?php print $site_name; ?></a></span>
+                        <?php endif; ?>
+                        <?php if ($site_slogan): ?>
+                            <span id="slogan"><?php print $site_slogan; ?></span>
+                        <?php endif; ?>
+                    </div><!-- /site-name-wrapper -->
+                    <?php endif; ?>
+				</div><!-- /header-site-info-inner -->
+            </div><!-- /header-site-info -->
+            <?php endif; ?>
+            
+			<div id="header-region" class="header-region block">
+				<div id="header-region-inner" class="header-region-inner inner">
+					<?php print $header; ?>
+				</div><!-- /header-region-inner -->
+			</div><!-- /header-region -->
+          </div><!-- /header-group-inner -->
+          
+          <div id="nav-group" class="nav-group clearfix">
+         		<?php print theme('grid_block', $primary_links_tree, 'primary-menu'); ?>
+			</div><!--/nav-group-->
+        </div><!-- /header-group -->
+      </div><!-- /header-group-wrapper -->
+   
+      <!-- preface-top row: width = grid_width -->
+		<?php print theme('grid_row', $preface_top, 'preface-top', 'full-width', $grid_width); ?>
+		<div id="preface-top-wrapper" class="preface-top-wrapper full-width">
+        	<div id="preface-top" class="preface-top row <?php print $grid_width; ?> clearfix">
+            	<div class="breadcrumbs-wrapper">
+				<?php print theme('grid_block', $breadcrumb, 'breadcrumbs'); ?>  
+                </div>
+				<?php print theme('grid_block', $search_box, 'search-box'); ?>
+            </div>
+		</div>
+      
+      <!-- main row: width = grid_width -->
+      <div id="main-wrapper" class="main-wrapper full-width">
+        <div id="main" class="main row <?php print $grid_width; ?>">
+          <div id="main-inner" class="main-inner inner clearfix">
+            <?php print theme('grid_row', $sidebar_first, 'sidebar-first', 'nested', $sidebar_first_width); ?>
+
+            <!-- main group: width = grid_width - sidebar_first_width -->
+            <div id="main-group" class="main-group row nested <?php print $main_group_width; ?>">
+              <div id="main-group-inner" class="main-group-inner inner">
+                <?php print theme('grid_row', $preface_bottom, 'preface-bottom', 'nested'); ?>
+
+                <div id="main-content" class="main-content row nested">
+                  <div id="main-content-inner" class="main-content-inner inner">
+                    <!-- content group: width = grid_width - (sidebar_first_width + sidebar_last_width) -->
+                    <div id="content-group" class="content-group row nested <?php print $content_group_width; ?>">
+                      <div id="content-group-inner" class="content-group-inner inner">
+                    
+
+                        <?php if ($content_top || $help || $messages): ?>
+                        <div id="content-top" class="content-top row nested">
+                          <div id="content-top-inner" class="content-top-inner inner">
+                            <?php print theme('grid_block', $help, 'content-help'); ?>
+                            <?php print theme('grid_block', $messages, 'content-messages'); ?>
+                            <?php print $content_top; ?>
+                          </div><!-- /content-top-inner -->
+                        </div><!-- /content-top -->
+                        <?php endif; ?>
+
+                        <div id="content-region" class="content-region row nested">
+							<div id="content-region-inner" class="content-region-inner inner">
+                            <a name="main-content-area" id="main-content-area"></a>
+
+                                <div id="content-inner" class="content-inner block">
+                                    <div id="content-inner-inner" class="content-inner-inner inner">
+                                    <?php if ($title && !$is_front): ?>
+                                        <h1 class="title">Q: <?php print $title; ?></h1>
+                                    <?php endif; ?>
+                                    
+                                    <?php print theme('grid_block', $tabs, 'content-tabs'); ?>
+                                        <?php if ($content): ?>
+                                            <div id="content-content" class="content-content">
+                                            <?php print $content; ?>
+                                            <?php print $feed_icons; ?>
+                                            </div><!-- /content-content -->
+                                        <?php endif; ?>
+                                    </div><!-- /content-inner-inner -->
+                                </div><!-- /content-inner -->
+                            
+							</div><!-- /content-region-inner -->
+						</div><!-- /content-region -->
+
+                        <?php print theme('grid_row', $content_bottom, 'content-bottom', 'nested'); ?>
+                      </div><!-- /content-group-inner -->
+                    </div><!-- /content-group -->
+
+                    <?php print theme('grid_row', $sidebar_last, 'sidebar-last', 'nested', $sidebar_last_width); ?>
+                  </div><!-- /main-content-inner -->
+                </div><!-- /main-content -->
+
+                <?php print theme('grid_row', $postscript_top, 'postscript-top', 'nested'); ?>
+              </div><!-- /main-group-inner -->
+            </div><!-- /main-group -->
+          </div><!-- /main-inner -->
+        </div><!-- /main -->
+      </div><!-- /main-wrapper -->
+
+      <!-- postscript-bottom row: width = grid_width -->
+      <?php print theme('grid_row', $postscript_bottom, 'postscript-bottom', 'full-width', $grid_width); ?>
+
+      <!-- footer row: width = grid_width -->
+      <?php if ($footer || $footer_message): ?>
+			  <?php print theme('grid_row', $footer . $footer_message, 'footer', 'full-width', $grid_width); ?>
+	    <?php endif; ?>
+
+    </div><!-- /page-inner -->
+  </div><!-- /page -->
+  <?php print $closure; ?>
+</body>
+</html>
diff --git a/themes/commons_environs/page-node-question.tpl.php b/themes/commons_environs/page-node-question.tpl.php
new file mode 100644
index 0000000..4fde752
--- /dev/null
+++ b/themes/commons_environs/page-node-question.tpl.php
@@ -0,0 +1,168 @@
+<?php
+// $Id: page-node-question.tpl.php $
+$curr_contexts = context_active_contexts();
+?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="<?php print $language->language; ?>" xml:lang="<?php print $language->language; ?>">
+
+<head>
+  <title><?php print $head_title; ?></title>
+  <?php print $head; ?>
+  <?php print $styles; ?>
+  <?php print $setting_styles; ?>
+  <!--[if IE 8]>
+  <?php print $ie8_styles; ?>
+  <![endif]-->
+  <!--[if IE 7]>
+  <?php print $ie7_styles; ?>
+  <![endif]-->
+  <!--[if lte IE 6]>
+  <?php print $ie6_styles; ?>
+  <![endif]-->
+  <?php print $local_styles; ?>
+  <?php print $scripts; ?>
+</head>
+
+<body id="<?php print $body_id; ?>" class="<?php print $body_classes; ?>">
+  <div id="left-background"> </div><div id="right-background"> </div>
+  <div id="page" class="page">
+    <div id="page-inner" class="page-inner">
+      <div id="skip">
+        <a href="#main-content-area"><?php print t('Skip to Main Content Area'); ?></a>
+      </div>
+
+      <!-- header-top row: width = grid_width -->
+      <?php print theme('grid_row', $header_top, 'header-top', 'full-width', $grid_width); ?>
+
+      <!-- header-group row: width = grid_width -->
+      <div id="header-group-wrapper" class="header-group-wrapper full-width">
+        <div id="header-group" class="header-group row <?php print $grid_width; ?>">
+          <div id="header-group-inner" class="header-group-inner inner clearfix">
+            <?php print theme('grid_block', theme('links', $secondary_links), 'secondary-menu'); ?>
+            
+            <?php print theme('grid_block', $search_box, 'search-box'); ?>
+            
+            <div id="header-region" class="header-region block">
+              <div id="header-region-inner" class="header-region-inner inner">
+            <?php print $header; ?>
+              </div><!-- /header-region-inner -->
+            </div><!-- /header-region -->
+          
+            <?php if ($logo || $site_name || $site_slogan): ?>
+            <div id="header-site-info" class="header-site-info block">
+              <?php print '<img src="' . base_path() . path_to_theme() . '/images/border-orange-left.png" class="border-orange-left"/>' ?>
+              <?php print '<img src="' . base_path() . path_to_theme() . '/images/border-orange-right.png" class="border-orange-right"/>' ?>
+              <div id="header-site-info-inner" class="header-site-info-inner inner">
+                <?php if ($logo): ?>
+                <div id="logo">
+                  <a href="<?php print check_url($front_page); ?>" title="<?php print t('Home'); ?>"><img src="<?php print $logo; ?>" alt="<?php print t('Home'); ?>" /></a>
+                </div>
+                <?php endif; ?>
+                <?php if ($site_name || $site_slogan): ?>
+                <div id="site-name-wrapper" class="clearfix">
+                  <?php if ($site_name): ?>
+                  <span id="site-name"><a href="<?php print check_url($front_page); ?>" title="<?php print t('Home'); ?>"><?php print $site_name; ?></a></span>
+                  <?php endif; ?>
+                  <?php if ($site_slogan): ?>
+                  <span id="slogan"><?php print $site_slogan; ?></span>
+                  <?php endif; ?>
+                </div><!-- /site-name-wrapper -->
+                <?php endif; ?>
+              </div><!-- /header-site-info-inner -->
+            </div><!-- /header-site-info -->
+            <?php endif; ?>
+            
+          </div><!-- /header-group-inner -->
+        </div><!-- /header-group -->
+      </div><!-- /header-group-wrapper -->
+   
+      <div id="nav-group-wrapper" class="nav-group-wrapper full-width">
+        <div id="nav-group" class="nav-group row <?php print $grid_width; ?>">
+          <?php print theme('grid_block', $primary_links_tree, 'primary-menu'); ?>
+        </div>
+      </div><!--/nav-group-->
+      
+      <?php if ($help || $messages): ?>
+        <div class="row <?php print $grid_width; ?>">
+          <?php print theme('grid_block', $help, 'content-help');?>
+          <?php print theme('grid_block', $messages, 'content-messages');?>
+        </div>
+      <?php endif;?>
+      
+      <!-- preface-top row: width = grid_width -->
+      <?php print theme('grid_row', $preface_top, 'preface-top', 'full-width', $grid_width); ?>
+
+      <!-- main row: width = grid_width -->
+      <div id="main-wrapper" class="main-wrapper full-width">
+        <div id="main" class="main row <?php print $grid_width; ?>">
+          <div id="main-inner" class="main-inner inner clearfix">
+            <?php print theme('grid_row', $sidebar_first, 'sidebar-first', 'nested', $sidebar_first_width); ?>
+
+            <!-- main group: width = grid_width - sidebar_first_width -->
+            <div id="main-group" class="main-group row nested <?php print $main_group_width; ?>">
+              <div id="main-group-inner" class="main-group-inner inner">
+                <?php print theme('grid_row', $preface_bottom, 'preface-bottom', 'nested'); ?>
+
+                <div id="main-content" class="main-content row nested">
+                  <div id="main-content-inner" class="main-content-inner inner">
+                    
+                    <?php print theme('grid_block', $breadcrumb, 'breadcrumbs'); ?>  
+                    <?php print theme('grid_block', $tabs, 'content-tabs'); ?>
+                    <!-- content group: width = grid_width - (sidebar_first_width + sidebar_last_width) -->
+                    <div id="content-group" class="content-group row nested <?php print $content_group_width; ?>">
+                      <div id="content-group-inner" class="content-group-inner inner">
+                    
+
+                        <?php if ($content_top): ?>
+                        <div id="content-top" class="content-top row nested">
+                          <div id="content-top-inner" class="content-top-inner inner">
+                            <?php print $content_top; ?>
+                          </div><!-- /content-top-inner -->
+                        </div><!-- /content-top -->
+                        <?php endif; ?>
+
+                        <div id="content-region" class="content-region row nested">
+                          <div id="content-region-inner" class="content-region-inner inner">
+                            <a name="main-content-area" id="main-content-area"></a>
+                                
+                            <div id="content-inner" class="content-inner block">
+                              <div id="content-inner-inner" class="content-inner-inner inner">
+                                <?php if ($content): ?>
+                                <div id="content-content" class="content-content">
+                                  <?php if ($title && !$is_front): ?>
+                                  <h1 class="title">Q: <?php print $title; ?></h1>
+                                  <?php endif; ?>
+                                  <?php print $content; ?>
+                                  <?php print $feed_icons; ?>
+                                </div><!-- /content-content -->
+                                <?php endif; ?>
+                              </div><!-- /content-inner-inner -->
+                            </div><!-- /content-inner -->
+                          </div><!-- /content-region-inner -->
+                        </div><!-- /content-region -->
+
+                        <?php print theme('grid_row', $content_bottom, 'content-bottom', 'nested'); ?>
+                      </div><!-- /content-group-inner -->
+                    </div><!-- /content-group -->
+
+                    <?php print theme('grid_row', $sidebar_last, 'sidebar-last', 'nested', $sidebar_last_width); ?>
+                  </div><!-- /main-content-inner -->
+                </div><!-- /main-content -->
+
+                <?php print theme('grid_row', $postscript_top, 'postscript-top', 'nested'); ?>
+              </div><!-- /main-group-inner -->
+            </div><!-- /main-group -->
+          </div><!-- /main-inner -->
+        </div><!-- /main -->
+      </div><!-- /main-wrapper -->
+
+      <!-- postscript-bottom row: width = grid_width -->
+      <?php print theme('grid_row', $postscript_bottom, 'postscript-bottom', 'full-width', $grid_width); ?>
+
+      <!-- footer row: width = grid_width -->
+      <?php print theme('grid_row', $footer . $footer_message, 'footer', 'full-width', $grid_width); ?>
+
+    </div><!-- /page-inner -->
+  </div><!-- /page -->
+  <?php print $closure; ?>
+</body>
+</html>
diff --git a/themes/commons_origins/commons_origins.info b/themes/commons_origins/commons_origins.info
index 972ff20..abeb7c1 100644
--- a/themes/commons_origins/commons_origins.info
+++ b/themes/commons_origins/commons_origins.info
@@ -7,6 +7,7 @@ core = 6.x
 engine = phptemplate
 
 stylesheets[all][] = css/commons_origins-style.css
+scripts[] = js/commons_origins.js
 
 regions[sidebar_first] = sidebar first
 regions[sidebar_last] = sidebar last
diff --git a/themes/commons_origins/css/commons_origins-style.css b/themes/commons_origins/css/commons_origins-style.css
index 4c50628..5130378 100644
--- a/themes/commons_origins/css/commons_origins-style.css
+++ b/themes/commons_origins/css/commons_origins-style.css
@@ -35,7 +35,6 @@ a:active {
 }
 
 h1 {
-  font-family: Georgia, times, serif;
 	font-size: 3em;
 	font-weight: normal;
 	line-height: 1.1em;
@@ -43,14 +42,12 @@ h1 {
 }
 
 h2 {
-  font-family: Georgia, times, serif;
 	font-size: 1.6em;
 	font-weight: normal;
 	margin: 18px 0;
 }
 
 h3 {
-  font-family: Georgia, Baskerville, times, serif;
 	font-weight: bold;
 	font-size: 1.2em;
 	margin: 18px 0;
@@ -88,14 +85,26 @@ ul.krumo-node ul{
 .node .inner ul li,
 .panel-pane .inner ul li,
 .block .content ul li {
-  background: transparent url(../images/gray-arrow-right.png) no-repeat 3px center;
+  background: transparent url(../images/list-bullet-green.png) no-repeat left 7px;
   list-style-image: none;
   list-style: none;
   margin-bottom: 8px;
-  padding-left: 22px;
+  padding-left: 11px;
   text-indent: 0;
 }
 
+.node .inner .terms ul {
+  padding: 0;
+}
+
+.node .inner .terms ul li {
+  background: none;
+  padding: 0 5px 0 2px;
+}
+
+.node .inner .terms ul li.first {
+}
+
 .node .inner .links ul {
 	padding-left: 0px;
 }
@@ -118,6 +127,10 @@ body {
 	
 }
 
+.row, .nested, .block {
+overflow: inherit;
+}
+
 /*force the front page to be 960px wide*/
 .front .grid16-16 {
 	width: 960px;
@@ -132,7 +145,6 @@ body {
 	font-size: 35px;
 	line-height: 150%;
 	margin-top: 20px;
-  font-family: Georgia, times, serif;
 }
 
 #site-name-wrapper {
@@ -146,6 +158,11 @@ body {
 #site-name a:hover,
 #site-name a:active {
 	margin: 0;
+	color: #6E6E6E;
+}
+
+#commons-core-join-form {
+  width: 270px;
 }
 
 /* Typography for site slogan */
@@ -167,27 +184,53 @@ body {
 }
 
 .grid-type-960-fluid #left-background {
-	background: #cecece url(../images/background-left.png) no-repeat 0 0;
-	left: 0;
+  background: #cecece url(../images/background-left.png) no-repeat 0 0;
+  left: 0;
 }
-
+ 
 .grid-type-960-fluid #right-background {
-	background: transparent url(../images/background-right.png) no-repeat 0 0;
-	right: 0;
+  background: transparent url(../images/background-right.png) no-repeat 0 0;
+  right: 0;
 }
 
 .grid-type-960 .page {
-	background: transparent url(../images/fixed-background.jpg) no-repeat center top;
+  background: transparent url(../images/fixed-background.jpg) no-repeat center top;
 }
 
-.header-group,
 .main,
 .footer {
 	background-color: #fff;
 	position: relative;
-	z-index: 2;
 }
 
+.group-header {
+  font-size: 1.4em;  
+  font-style: italic;
+  padding: 10px 10px 10px 10px;
+  border-top: 4px solid #d1d1d1;
+  border-bottom: 4px solid #d1d1d1;
+  overflow: hidden;
+}
+
+.group-header img {
+  float: left;
+  margin: 1em;
+}
+
+.group-header-text {
+  margin-left: 90px;
+  font-family: Georgia, serif;
+  font-style: italic;
+
+}
+
+
+/**
+- container around text
+- floatimage left
+- margin-left: > image width;
+*/
+
 .header-group {
 	position: relative;
 	z-index: 10;
@@ -222,14 +265,8 @@ body {
 }
 
 .header-group {
-	border-radius: 0 0 10px 10px;
-	-webkit-border-radius: 0 0 10px 10px;
-	-moz-border-radius: 0 0 10px 10px;
 	overflow: hidden;
 	margin-bottom: 10px;
-	-webkit-box-shadow: 0px 2px 10px rgba(0, 0, 0, .3);
-	box-shadow: 0px 2px 10px rgba(0, 0, 0, .3);
-	-moz-box-shadow: 0px 2px 10px rgba(0, 0, 0, .3);
 }
 
 /* Header Top region which sits above the header */
@@ -247,6 +284,10 @@ body {
 
 /*user login form if it is in the Header region */
 
+.block .header-region-inner {
+  position: inherit;
+}
+
 .header-region-inner .block-user form,
 .header-region-inner form#user-login-form {
 	min-width: 420px;
@@ -320,16 +361,157 @@ body {
 /*user meta block*/
 
 #block-views-user_meta-block_1 {
-	margin-top: 12px;
+  position: absolute;
+  top: 0px;
+  right: 0px;
+  margin: 0;
+  float: none;
+  width: 600px;
+  z-index: 1;
+}
+
+#block-views-user_meta-block_1 .inner {
+  margin: 0;
+}
+
+.view-user-meta {
+  float: none;
+  width: auto;
+  font-family: "Helvetical Neue",Helvetica,Arial,Sans-serif;
+  margin-top: 0;
+}
+
+.no-js .view-user-meta {
+  position: relative;
+}
+
+.view-user-meta .view-content .views-row .views-field-picture {
+  display: none;
 }
 
 .view-user-meta .views-field-name span {
-    font-style: italic;
-   margin: 0;
+  font-style: normal;
+  margin: 0;
 	padding: 0 10px 0 0;
 	width: 100%;
 }
 
+.view-user-meta .views-field-name a {
+  color: #00669F;
+  background: url(../images/arrow-down-blue.png) right center no-repeat;
+  padding: 0 11px 0 2px;
+}
+
+.no-js .view-user-meta .views-field-name a {
+  background: none;
+  padding: 0 11px 0 2px;
+  border-right: 1px solid #00669F;
+}
+
+.view-user-meta .views-field-name .welcome-text {
+  display: inline-block;
+  font-weight: bold;
+  color: #656565;
+  margin: 0;
+  padding: 9px 18px;
+  border-left: 1px solid #D9D9D9;
+  border-right: 1px solid #D9D9D9;
+  border-bottom: 1px solid #D9D9D9;
+  -webkit-border-radius: 0px 0px 7px 7px; 
+  -moz-border-radius: 0px 0px 7px 7px; 
+  border-radius: 0px 0px 7px 7px; 
+  -moz-background-clip: padding; -webkit-background-clip: padding-box; background-clip: padding-box;
+  background-color: transparent;
+  background-color: rgba(255, 255, 255, 0.6);  
+  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#99FFFFFF,endColorstr=#99FFFFFF); 
+  zoom: 1;
+}
+
+.no-js .view-user-meta .views-field-name .welcome-text {
+  padding-right: 64px;
+}
+
+.user-dropdown-open .view-user-meta .views-field-name .welcome-text {
+  -webkit-border-radius: 0px; 
+  -moz-border-radius: 0px; 
+  border-radius: 0px;
+  border-bottom: 0px;
+  -moz-background-clip: padding; -webkit-background-clip: padding-box; background-clip: padding-box;
+  background-color: transparent;
+  background-color: rgba(255, 255, 255, 1);  
+  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#FFFFFFFF,endColorstr=#FFFFFFFF); 
+  zoom: 1;
+}
+
+.user-field-options {
+  float: right;
+  font-weight: bold;
+  color: #656565;
+  margin: 0;
+  padding: 0px 18px 9px 18px;
+  border-left: 1px solid #D9D9D9;
+  border-right: 1px solid #D9D9D9;
+  border-bottom: 1px solid #D9D9D9;
+  -webkit-border-radius: 0px 0px 7px 7px; 
+  -moz-border-radius: 0px 0px 7px 7px; 
+  border-radius: 0px 0px 7px 7px; 
+  -moz-background-clip: padding; -webkit-background-clip: padding-box; background-clip: padding-box;
+  background-color: transparent;
+  background-color: rgba(255, 255, 255, 0.6);  
+  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#99FFFFFF,endColorstr=#99FFFFFF); 
+  zoom: 1;
+}
+
+.js .user-field-options {
+  display: none;
+}
+
+.user-dropdown-open .user-field-options {
+  -moz-background-clip: padding; -webkit-background-clip: padding-box; background-clip: padding-box;
+  background-color: transparent;
+  background-color: rgba(255, 255, 255, 1);  
+  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#FFFFFFFF,endColorstr=#FFFFFFFF); 
+  zoom: 1;
+}
+
+.view-user-meta .views-field-nothing a, .view-user-meta .views-field-nothing-1 a {
+  color: #00669F;
+}
+
+.view-user-meta .views-field-nothing {
+  border: none;
+  float: none;
+  text-align: right;
+  margin: 0;
+  padding: 0;
+}
+
+.no-js .view-user-meta .views-field-nothing {
+  position: absolute;
+  top: 6px;
+  right: 16px;
+  font-weight: bold;
+}
+
+.view-user-meta .views-field-nothing-1 {
+  float: none;
+  text-align: right;
+  margin: 0;
+  padding: 0;
+}
+
+.no-js .view-user-meta .views-field-nothing-1 {
+  display: none;
+}
+
+.view-user-meta-options {
+  text-align: right;
+}
+
+.view-user-meta-options a {
+  display: block;
+}
+
 /* Nav Group which sits below the header and site inf */
 
 .nav-group-wrapper {
@@ -341,10 +523,18 @@ body {
 	float: none;
 	margin-bottom: 0px;
 	overflow: visible;
-	background-color: #666;
-	border-radius: 0 0 10px 10px;
-	-webkit-border-radius: 0 0 10px 10px;
-	-moz-border-radius: 0 0 10px 10px;
+  background-color: #F8F8F8;
+  background-image: -webkit-gradient(linear, left top, left bottom, from(#F8F8F8), to(#EAEAEA)); 
+  background-image: -webkit-linear-gradient(top, #F8F8F8, #EAEAEA); 
+  background-image: -moz-linear-gradient(top, #F8F8F8, #EAEAEA); 
+  background-image: -ms-linear-gradient(top, #F8F8F8, #EAEAEA); 
+  background-image: -o-linear-gradient(top, #F8F8F8, #EAEAEA); 
+  background-image: linear-gradient(top, #F8F8F8, #EAEAEA);
+  border: 1px solid #D9D9D9;
+  -webkit-border-radius: 8px; 
+  -moz-border-radius: 8px; 
+  border-radius: 8px; 
+  -moz-background-clip: padding; -webkit-background-clip: padding-box; background-clip: padding-box;
 	padding: 0 10px;
 	position: relative;
 	z-index: 10;
@@ -359,10 +549,9 @@ body {
 .primary-menu-inner ul.sf-menu a,
 .primary-menu-inner ul.sf-menu a:visited {
 	background-color: transparent;
-	border-right: 1px solid #888;
-	color: #fff;
+	border-right: 1px solid #DDDDDD;
+	color: #656565;
 	font-size: 15px;
-  font-family: Georgia, times, serif;
 	font-weight: normal;
 	line-height: 1.4em;
 	padding: 6px 12px;
@@ -373,7 +562,13 @@ body {
 .primary-menu-inner ul.sf-menu a:focus,
 .primary-menu-inner ul.sf-menu li.active-trail > a,
 .primary-menu-inner ul.sf-menu li.sfHover > a {
-	background-color: #ddd;
+  background-color: #E4E4E4;
+  background-image: -webkit-gradient(linear, left top, left bottom, from(#E4E4E4), to(#F8F8F8)); 
+  background-image: -webkit-linear-gradient(top, #E4E4E4, #F8F8F8); 
+  background-image: -moz-linear-gradient(top, #E4E4E4, #F8F8F8); 
+  background-image: -ms-linear-gradient(top, #E4E4E4, #F8F8F8); 
+  background-image: -o-linear-gradient(top, #E4E4E4, #F8F8F8); 
+  background-image: linear-gradient(top, #E4E4E4, #F8F8F8);
 	color: #464646;
 }
 
@@ -393,8 +588,20 @@ body {
 /* Style for container of dropdown, add background or border */
 
 .primary-menu-inner ul.sf-menu ul {
-	background-color: #dcdcdc;
+	background-color: #F8F8F8;
+  background-image: -webkit-gradient(linear, left top, left bottom, from(#F8F8F8), to(#EAEAEA)); 
+  background-image: -webkit-linear-gradient(top, #F8F8F8, #EAEAEA); 
+  background-image: -moz-linear-gradient(top, #F8F8F8, #EAEAEA); 
+  background-image: -ms-linear-gradient(top, #F8F8F8, #EAEAEA); 
+  background-image: -o-linear-gradient(top, #F8F8F8, #EAEAEA); 
+  background-image: linear-gradient(top, #F8F8F8, #EAEAEA);
+  -webkit-border-radius: 0 0 8px 8px; 
+  -moz-border-radius: 0 0 8px 8px; 
+  border-radius: 0 0 8px 8px; 
+  -moz-background-clip: padding; -webkit-background-clip: padding-box; background-clip: padding-box;
 	z-index: 20;
+	width: 12em;
+	margin-top: 3px;
 }
 
 /* Style for individual dropdown menu items, add border-bottom for separators */
@@ -409,8 +616,8 @@ body {
 .primary-menu-inner ul.sf-menu li li a:visited {
 	border-bottom: 1px solid #bbb;
 	border-right: none;
-	color: #464646;
-	padding: 4px 8px 4px 18px;
+	color: #58B;
+	padding: 4px 8px 4px 13px;
 }
 
 .primary-menu-inner ul.sf-menu li li.first a {
@@ -423,8 +630,11 @@ body {
 	background-color: #ccc;
 }
 
-.primary-menu-inner ul.sf-menu li li.last {
-	
+.primary-menu-inner ul.sf-menu li li.last a {
+	-webkit-border-radius: 0 0 8px 8px; 
+  -moz-border-radius: 0 0 8px 8px; 
+  border-radius: 0 0 8px 8px; 
+  -moz-background-clip: padding; -webkit-background-clip: padding-box; background-clip: padding-box;
 }
 
 .primary-menu-inner ul.sf-menu li li li {
@@ -480,24 +690,59 @@ body {
 
 /* Header - Search-------------------------------------------------------------- */
 
+.search-box {
+  float: none;
+  margin: 0;
+  min-width: 220px;
+  padding: 4px;
+  width: auto;
+  position: absolute;
+  right: 0px;
+  top: 50px;
+  -webkit-border-radius: 5px; 
+  -moz-border-radius: 5px; 
+  border-radius: 5px; 
+  -moz-background-clip: padding; -webkit-background-clip: padding-box; background-clip: padding-box;
+  background-color: transparent;
+  background-color: rgba(255, 255, 255, 0.6);  
+  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#99FFFFFF,endColorstr=#99FFFFFF); 
+  zoom: 1;
+}
+
+.no-js .search-box {
+  min-width: 500px;
+}
+
+body .search-box .search-box-inner {
+  border: 1px solid #ccc;
+  margin: 0;
+}
+
+#edit-search-theme-form-1-wrapper label {
+  display: none;
+}
+
+.no-js #edit-refine-wrapper {
+  padding-left: 10px;
+}
+
 .search-box-inner input[name=search_theme_form] {
-	background: #ccc url(../images/inner-shadow.png) no-repeat 0 0;
-	border-right: 0px;
-	border: 1px inset #a9a9a9;
+	background: #fff;
+	color: #999;
+	border: none;
 	display: block;
 	float: left;
 	font-size: 11px;
-	height: 16px;
+	height: 18px;
 	line-height: 14px;
 	margin: 0;
-	min-width: 130px;
+	min-width: 315px;
 	padding: 2px 4px;
 }
 
 .search-box-inner input[type=submit] {
-	background: #3a3a3a url(../images/search-submit.png) repeat-x 0 0;
-	border: 1px solid #3a3a3a;
-	color: #ddd;
+	color: #fff;
+	border: none;
 	display: block;
 	float: left;
 	font-family: Tahoma, Verdana, sans-serif;
@@ -508,21 +753,34 @@ body {
 	margin: 0;
 	padding: 2px 6px;
 	text-transform: uppercase;
+  background-color: #1E587C;
+  background-image: -webkit-gradient(linear, left top, left bottom, from(#1E587C), to(#123249)); 
+  background-image: -webkit-linear-gradient(top, #1E587C, #123249); 
+  background-image: -moz-linear-gradient(top, #1E587C, #123249); 
+  background-image: -ms-linear-gradient(top, #1E587C, #123249); 
+  background-image: -o-linear-gradient(top, #1E587C, #123249); 
+  background-image: linear-gradient(top, #1E587C, #123249);
+}
+
+.contextual-search-wrapper {
+  clear: both;
+  position: absolute;
+  right: 60px;
+  top: 0;
+  border-left: 1px dashed #ccc;
 }
 
 .contextual-search-wrapper .contextual-search-launcher,
 .contextual-search-processed .contextual-search-wrapper ul.contextual-search-list {
-  background-color: #666;
-  background-image: url('../images/dropdown.png');
-  background-position: right 10px;
-  -moz-border-radius: 0 0 5px 5px;
-  -webkit-border-radius: 0 0 5px 5px;
-  border-radius: 0 0 5px 5px;
+  color: #999;
+  background: #fff url(../images/arrow-down-grey.png) right 10px no-repeat;
+  z-index: 11;
 }
 
 .contextual-search-wrapper .contextual-search-launcher,
 .contextual-search-processed .contextual-search-wrapper ul.contextual-search-list li a {
-  color: #fff;
+  color: #999;
+  padding: 2px 17px 2px 7px;
 }
 
 .contextual-search-processed .contextual-search-wrapper ul.contextual-search-list li a {
@@ -533,9 +791,6 @@ body {
 }
 
 .contextual-search-processed .contextual-search-wrapper ul.contextual-search-list li a.first {
-  background-image: url('../images/dropdown.png');
-  background-position: right 10px;
-  background-repeat: no-repeat;
   margin-top: -4px;
   padding-top: 4px;
 }
@@ -550,7 +805,6 @@ body {
 
 .contextual-search-wrapper .contextual-search-launcher:hover,
 .contextual-search-processed .contextual-search-wrapper ul.contextual-search-list li a:hover {
-  background-color: #777;
   text-decoration: none;
 }
 
@@ -585,20 +839,28 @@ body {
 }
 
 .main {
-	border-radius: 10px 10px 0 0;
-	-webkit-border-radius: 10px 10px 0 0;
-	-moz-border-radius: 10px 10px 0 0;
-	overflow: hidden;
+  border: 1px solid #D9D9D9;
+	-webkit-border-radius: 8px; 
+  -moz-border-radius: 8px; 
+  border-radius: 8px; 
+  -moz-background-clip: padding; -webkit-background-clip: padding-box; background-clip: padding-box;
 	margin-bottom: 10px;
-	-moz-box-shadow: 0px 2px 10px rgba(0, 0, 0, .3);
-	box-shadow: 0px 2px 10px rgba(0, 0, 0, .3);
-	-webkit-box-shadow: 0px 2px 10px rgba(0, 0, 0, .3);
+  -webkit-box-shadow: 0px 2px 2px #BEBEBE; 
+  -moz-box-shadow: 0px 2px 2px #BEBEBE; 
+  box-shadow: 0px 2px 2px #BEBEBE; 
+}
+
+.not-front .main .main-inner, .front .main .main-inner {
+  padding: 0px;
 }
 
 .content-content {
 	min-height: 400px;
 }
 
+#main-content-inner {
+}
+
 
 
 /* Sidebar Regions-------------------------------------------------------------- */
@@ -610,8 +872,75 @@ body {
 	overflow: hidden;
 }
 
+div.superfish {
+  display: table-cell;
+  vertical-align: top;
+  -moz-box-shadow: inset 3px 0px 10px #cc5c55;
+  -webkit-box-shadow: inset 3px 0px 10px #c5c5c5;
+  box-shadow: inset 3px 0px 10px #c5c5c5;
+  float: none;
+  -webkit-border-radius: 0px 8px 8px 0px; 
+  -moz-border-radius: 0px 8px 8px 0px; 
+  border-radius: 0px 8px 8px 0px; 
+  -moz-background-clip: padding; -webkit-background-clip: padding-box; background-clip: padding-box;
+  background: #ffffff;
+  background: -moz-radial-gradient(center, ellipse cover,  #ffffff 0%, #f8f8f8 100%);
+  background: -webkit-gradient(radial, center center, 0px, center center, 100%, color-stop(0%,#ffffff), color-stop(100%,#f8f8f8));
+  background: -webkit-radial-gradient(center, ellipse cover,  #ffffff 0%,#f8f8f8 100%);
+  background: -o-radial-gradient(center, ellipse cover,  #ffffff 0%,#f8f8f8 100%);
+  background: -ms-radial-gradient(center, ellipse cover,  #ffffff 0%,#f8f8f8 100%);
+  background: radial-gradient(center, ellipse cover,  #ffffff 0%,#f8f8f8 100%);
+  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffffff', endColorstr='#f8f8f8',GradientType=1 );
+}
+
+#sidebar-first.nested {
+  
+}
+
+#sidebar-last.nested {
+  vertical-align: top;
+  -webkit-border-radius: 0px 8px 8px 0px; 
+  -moz-border-radius: 0px 8px 8px 0px; 
+  border-radius: 0px 8px 8px 0px;
+  -moz-background-clip: padding; -webkit-background-clip: padding-box; background-clip: padding-box;
+  -moz-box-shadow: inset 3px 0px 10px #cc5c55;
+  -webkit-box-shadow: inset 3px 0px 10px #c5c5c5;
+  box-shadow: inset 3px 0px 10px #c5c5c5;
+  background: #ffffff;
+  background: -moz-radial-gradient(center, ellipse cover,  #ffffff 0%, #f8f8f8 100%);
+  background: -webkit-gradient(radial, center center, 0px, center center, 100%, color-stop(0%,#ffffff), color-stop(100%,#f8f8f8));
+  background: -webkit-radial-gradient(center, ellipse cover,  #ffffff 0%,#f8f8f8 100%);
+  background: -o-radial-gradient(center, ellipse cover,  #ffffff 0%,#f8f8f8 100%);
+  background: -ms-radial-gradient(center, ellipse cover,  #ffffff 0%,#f8f8f8 100%);
+  background: radial-gradient(center, ellipse cover,  #ffffff 0%,#f8f8f8 100%);
+  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffffff', endColorstr='#f8f8f8',GradientType=1 );
+}
+
+.sidebar-last-cap {
+  display: block;
+  height: 13px;
+  border-bottom: 1px solid #ccc;
+  -webkit-border-radius: 0px 7px 0px 0px; 
+  -moz-border-radius: 0px 7px 0px 0px; 
+  border-radius: 0px 7px 0px 0px; 
+  -moz-background-clip: padding; -webkit-background-clip: padding-box; background-clip: padding-box;
+  background: rgb(133,133,133);
+  background: -moz-linear-gradient(top,  rgba(133,133,133,1) 0%, rgba(186,189,185,1) 88%, rgba(185,197,180,1) 89%, rgba(116,145,99,1) 94%);
+  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(133,133,133,1)), color-stop(88%,rgba(186,189,185,1)), color-stop(89%,rgba(185,197,180,1)), color-stop(94%,rgba(116,145,99,1)));
+  background: -webkit-linear-gradient(top,  rgba(133,133,133,1) 0%,rgba(186,189,185,1) 88%,rgba(185,197,180,1) 89%,rgba(116,145,99,1) 94%);
+  background: -o-linear-gradient(top,  rgba(133,133,133,1) 0%,rgba(186,189,185,1) 88%,rgba(185,197,180,1) 89%,rgba(116,145,99,1) 94%);
+  background: -ms-linear-gradient(top,  rgba(133,133,133,1) 0%,rgba(186,189,185,1) 88%,rgba(185,197,180,1) 89%,rgba(116,145,99,1) 94%);
+  background: linear-gradient(top,  rgba(133,133,133,1) 0%,rgba(186,189,185,1) 88%,rgba(185,197,180,1) 89%,rgba(116,145,99,1) 94%);
+  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#858585', endColorstr='#749163',GradientType=0 );
+}
+
 /* Content Regions-------------------------------------------------------------- */
 
+#content-group-inner {
+  margin-top: 14px;
+  vertical-align: top;
+}
+
 .content-top {
 	
 }
@@ -620,8 +949,13 @@ body {
 	
 }
 
+.content-inner-inner {
+padding: 12px 10px 0px 10px;  
+}
+
 .page-admin .content-inner-inner {
 	padding-bottom: 80px;
+	z-index: 0;
 }
 
 .content-bottom {
@@ -663,16 +997,31 @@ body {
 }
 
 .footer {
-	background: #404040 url(../images/footer-bg.png) repeat-x 0 0;
-	color: #fff;
+  color: #00669F;
 	padding: 10px 0;
 	margin-top: 30px;
 	min-height: 240px;
-	margin-bottom: -20px;
-}
-
-.footer {
-	
+	margin-bottom: 20px;
+	-webkit-box-shadow: 0px 2px 2px #BEBEBE; 
+  -moz-box-shadow: 0px 2px 2px #BEBEBE; 
+  box-shadow: 0px 2px 2px #BEBEBE;
+	border: 1px solid #D9D9D9;
+  background-color: #F6F6F6;
+  background-image: -webkit-gradient(linear, left top, left bottom, from(#F6F6F6), to(#FCFCFC)); 
+  background-image: -webkit-linear-gradient(top, #F6F6F6, #FCFCFC); 
+  background-image: -moz-linear-gradient(top, #F6F6F6, #FCFCFC); 
+  background-image: -ms-linear-gradient(top, #F6F6F6, #FCFCFC); 
+  background-image: -o-linear-gradient(top, #F6F6F6, #FCFCFC); 
+  background-image: linear-gradient(top, #F6F6F6, #FCFCFC);
+  -webkit-border-radius: 8px; 
+  -moz-border-radius: 8px; 
+  border-radius: 8px; 
+  -moz-background-clip: padding; -webkit-background-clip: padding-box; background-clip: padding-box;
+}
+
+.front .footer {
+  margin-top: 30px;
+  margin-bottom: 20px;
 }
 
 .footer-inner {
@@ -729,7 +1078,7 @@ body {
 
 #acquia-footer-message a,
 #fusion-footer-message a {
-	color: #fff;
+	color: #00669F;
 	font-size: 1.1em;
 	text-decoration: none;
 }
@@ -739,7 +1088,7 @@ body {
 /* Page and full node titles */
 
 h1.title {
-	color: #6091bf;
+	color: #04649F;
 	font-size: 35px;
 	font-weight: normal;
 	line-height: 1.2em;
@@ -812,17 +1161,26 @@ h2.title a:active {
   border-color: #eee;
 }
 
+
 .submitted {
   color: #777;
-  background: #f5f5f5;
-  border: 1px solid #ddd;
-  padding: 3px 7px 2px;
+  padding: 7px 7px 7px 11px;
+  margin-bottom: 10px;
   display: block;
   max-width: 700px;
-  -moz-border-radius: 7px;
-  -webkit-border-radius: 7px;
+  overflow: hidden;
+  -webkit-border-radius: 12px;
+  -moz-border-radius: 12px;
+  border-radius: 12px;
+  -moz-background-clip: padding;
+  -webkit-background-clip: padding-box;
+  background-clip: padding-box;
+  -webkit-box-shadow: 0px 0px 5px #ccc;
+  -moz-box-shadow: 0px 0px 5px #ccc;
+  box-shadow: 0px 0px 5px #ccc;
 }
 
+
 .submitted .userpoints-value {
   font-style: italic;
   font-size: 85%;
@@ -850,6 +1208,10 @@ h2.title a:active {
 	clear: both;
 }
 
+.node .groups {
+  font-size: 95%;
+}
+
 ul.links li {
 	margin: 0;
 	padding: 0 6px 0 6px;
@@ -865,6 +1227,11 @@ ul.links li {
 	border: none;
 }
 
+.node ul.links li {
+  background: none;
+  padding: 0 5px 0 2px;
+}
+
 .node ul.links li.last {
 	border-right: none;
 }
@@ -1023,54 +1390,69 @@ h2.block-title {
 /* Breadcrumbs-------------------------------------------------------------- */
 
 .breadcrumbs-wrapper {
-	border-bottom: 1px solid #dedede;
+	margin: auto;
 }
 
 .breadcrumbs {
-	background-color: #fff;
 	color: #333;
 	margin: 0 auto;
   float: none;
+  
 }
 
 .breadcrumb {
-	padding: 8px 0;
+  padding: 0;
 }
 
 .breadcrumbs.block .breadcrumbs-inner {
 	margin: 0;
+	padding: 2px 25px;
+	display: inline-block;
+	-webkit-border-radius: 3px; 
+  -moz-border-radius: 3px; 
+  border-radius: 3px; 
+  -moz-background-clip: padding; -webkit-background-clip: padding-box; background-clip: padding-box;
+  background-color: transparent;
+  background-color: rgba(255, 255, 255, 0.6);  
+  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#99FFFFFF,endColorstr=#99FFFFFF); 
+  zoom: 1;
 }
 
 .breadcrumbs a:link,
 .breadcrumbs a:visited {
 	font-size: 1.1em;
-	font-style: italic;
+	font-style: normal;
 	line-height: 1.4em;
 	margin: 0;
 	padding: 0 2px;
+	color: #00669F;
 }
 
+#content-tabs ul.primary, #content-tabs ul.secondary  {
+  border-bottom: none;
+}
 #content-tabs ul.secondary {
 	border-bottom: 1px solid #d1d1d1;
 	margin-top: 10px;
 	text-transform: lowercase;
 }
 
+#content-tabs ul.primary li, #content-tabs ul.secondary li {
+  padding: 5px 3px;;
+}
+
 #content-tabs ul.primary li a:link,
 #content-tabs ul.primary li a:visited {
-	-moz-border-radius-topleft: 4px;
-	-moz-border-radius-topright: 4px;
-	-webkit-border-top-left-radius: 4px;
-	-webkit-border-top-right-radius: 4px;
+	-moz-border-radius: 99px;
+	-webkit-border-radius: 99px;
 	background-color: #d1d1d1;
-	border-top-left-radius: 4px;
-	border-top-right-radius: 4px;
+	border-radius: 99px;
 	border: 1px solid #d1d1d1;
 	color: #323232;
 	cursor: pointer;
 	float: left;/* LTR */
-margin: 0 2px -2px 0;
-	padding: 4px 6px 4px 6px;
+  margin: 0;
+	padding: 6px 16px;
 	text-decoration: none;
 	white-space: nowrap;
 }
@@ -1101,7 +1483,6 @@ margin: 0 2px -2px 0;
 #content-tabs ul.primary li a.active:link,
 #content-tabs ul.primary li a.active:visited {
 	background-color: #fff;
-	border-bottom: 1px solid #fff;
 }
 
 #content-tabs ul.secondary li a.active:link,
@@ -1123,6 +1504,9 @@ margin: 0 2px -2px 0;
 	padding-bottom: 2px;
 }
 
+#content-tabs ul.tabs {
+  padding-left: 0px;
+}
 /* Pagers-------------------------------------------------------------- */
 
 ul.pager {
@@ -1297,11 +1681,11 @@ html.js fieldset.collapsed legend a:visited {
 /* Body of tables */
 
 tbody {
-	border-top: 1px dotted #ccc;
+	border-top: 1px solid #D0D0D0;
 }
 
 thead + tbody {
-	border-top: 1px dotted #999;
+	border-top: 1px solid #D0D0D0;
 }
 
 /* Header of tables */
@@ -1313,7 +1697,7 @@ th {
 }
 
 tbody th {
-	border-bottom: 1px dotted #ccc;
+	border-bottom: 1px solid #D0D0D0;
 }
 
 /* Alternating row background styles */
@@ -1321,7 +1705,7 @@ tbody th {
 tr.even,
 tr.even td {
   background-color: #fff;
-  border-bottom: 1px dotted #ccc;
+  border-bottom: 1px solid #D0D0D0;
   font-size: 1em;
   line-height: 1.2em;
   padding: .6em .2em;
@@ -1341,7 +1725,7 @@ tr.odd .form-item {
 tr.odd,
 tr.odd td {
   background-color: #fff;
-  border-bottom: 1px dotted #ccc;
+  border-bottom: 1px solid #D0D0D0;
   font-size: 1em;
   line-height: 1.2em;
   padding: .6em .2em;
@@ -1835,20 +2219,16 @@ input.list-add-to-cart:focus {
 
 /*login block */
 #block-commons_core-3 .content {
-  font-family: Georgia, Baskerville, times, serif;
   margin: 15px 0 0;
 }
 
 .sidebar-last .block h2.block-title,
 .sidebar-first .block h2.block-title {
-	background: #efefef;
-	color: #323232;
 	font-weight: normal;
 	line-height: 1.2em;
 	margin: 0px;
-	padding: 3px 8px;
-  -moz-border-radius: 7px 7px 0 0;
-  -webkit-border-radius: 7px 7px 0 0;
+	color: #79AB3B;
+	padding: 10px 0 0 0;
 }
 
 .sidebar-last .block h2.block-title a,
@@ -1858,14 +2238,11 @@ input.list-add-to-cart:focus {
 
 .sidebar-last .block .inner,
 .sidebar-first .block .inner {
-	border: 1px solid #dedede;
-  -moz-border-radius: 7px;
-  -webkit-border-radius: 7px;
 }
 
 .sidebar-first .block .content,
 .sidebar-last .block .content {
-	padding: 10px;
+	padding: 10px 10px 10px 0;
 }
 
 /* Search Results/-------------------------------------------------------------- */
@@ -2047,6 +2424,11 @@ panels-pane.commons-colors-grayblue .inner {
 
 /* Commons * Styling for Commons specific elements/-------------------------------------------------------------- */
 
+/* Stream */
+.activity-log-message {
+  border-bottom: 1px solid #D0D0D0;
+}
+
 /* User relationships module */
 textarea#edit-elaboration {
   max-width: 95%;
@@ -2303,6 +2685,79 @@ body#pid-dashboard h1.title, body#pid-dashboard #breadcrumbs {
   -webkit-border-radius: 0px;
 }
 
+.block#block-commons_core-group_create_content form {
+  padding-top: 10px;
+}
+.block#block-commons_core-group_create_content select {
+  font-size: 1.3em;
+  background: transparent;
+  width: 100%;
+  padding: 0;
+}
+
+.block#block-commons_core-group_create_content input {
+  font-size: 1.3em;
+  margin: 5px 24px 0 0;
+}
+
+
+#edit-submit-group-tab-content {
+  width: auto;
+  font-size: 14px;
+  color: #10354D;
+  background-color: #A5D3FE;
+  background-image: -webkit-gradient(linear, left top, left bottom, from(#A5D3FE), to(#7BC2F6));
+  background-image: -webkit-linear-gradient(top, #A5D3FE, #7BC2F6);
+  background-image: -moz-linear-gradient(top, #A5D3FE, #7BC2F6);
+  background-image: -ms-linear-gradient(top, #A5D3FE, #7BC2F6);
+  background-image: -o-linear-gradient(top, #A5D3FE, #7BC2F6);
+  background-image: linear-gradient(top, #A5D3FE, #7BC2F6);
+  -webkit-border-radius: 3px;
+  -moz-border-radius: 3px;
+  border-radius: 3px;
+}
+
+#block-views-group_tab_content-block_1 .view-content .item-list ul li {
+  padding: 14px 0px 20px 0px;
+}
+
+#block-views-group_tab_content-block_1 {
+  width: 600px;
+}
+
+.view-group-tab-content .views-field-title {
+  font-size: 1.8em;
+  margin-bottom: 12px;
+}
+
+.view-group-tab-content span.views-field-name, .view-group-tab-content .views-field-tid, .view-group-tab-content .views-field-created {
+  font-size: 1.2em;
+}
+
+.view-group-tab-content .views-field-teaser {
+  font-size: 1.4em;
+}
+.sidebar-last .block {
+  font-size: 1.2em;
+  font-weight: bold;
+}
+
+.sidebar-last .block-views .view-content .item-list ul li {
+  border-bottom: 0 none;
+  margin-bottom: 0;
+  padding-bottom: 4px;
+  padding-left: 10px;
+  position: relative;
+  clear: both;
+}
+
+.view-id-group_block_events_upcoming .item-list ul li, #block-views-group_tab_content-block_1 .item-list ul li, #block-views-groups_my_groups-block_1 .item-list ul li, #block-views-groups_most_active-block_1 .item-list ul li, #block-views-groups_newest_groups-block_1 ul li{
+  background-image: none;
+}
+
+#block-views-deb9ea35a724682175e6d2c990e7009c .views-field-field-location-value {
+  font-weight: normal;
+}
 #block-commons_core-group_create_content form .form-item {
 	float: left;
 	margin-top: 0px;
@@ -2316,18 +2771,7 @@ body#pid-dashboard h1.title, body#pid-dashboard #breadcrumbs {
 }
 
 #block-commons_core-group_create_content form .form-item select {
-	width: 100%;
- 	padding: 0;
-}
 
-#block-commons_core-group_create_content form .form-submit {
-/* More tweaks to fix inheritance from roots problems
- * -jb
- */
-/*	float: left; */
-	height: 24px;
-	margin: 5px 24px 0 0;
-/*	width: 27%; */
 }
 
 /*My Groups list */
@@ -2748,12 +3192,35 @@ table.views-view-grid td {
 	vertical-align: top;
 }
 
+.view-id-og_members_faces table.col-5 td {
+  width: 20%;
+}
+
+.view-group-block-members table.col-6 td {
+  width: 16.66%
+}
+
 /*views admin links */
 
 .views-admin-links {
 	right: 0px;
 }
 
+/* views header 
+.view-header {
+  float: left;
+}*/
+
+/* views filters 
+.view-filters {
+  float: left;
+}*/
+
+/* views content 
+.view-content {
+  clear: left;
+}*/
+
 /*views more links and view footers*/
 
 .view div.more-link,
@@ -2950,6 +3417,10 @@ padding: 10px;
 margin: 0px 10px 10px;
 }
 
+#block-views-homepage_group_showcase-block_1 {
+  width: 640px;
+  margin-left: -10px;
+}
 /* a fix by Jay (read "Untrained themer") to line up the text in the Latest Notices block on /home */
 .view-recent-notices .views-field-name { margin-left: 40px; }
 
@@ -2988,7 +3459,6 @@ margin: 0px 10px 10px;
 #block-boxes-homepage_info_box a.intro-morebutton, #block-boxes-homepage_info_box .intro-textblock h3 {
     border: medium none;
     color: #000000;
-    font-family: Georgia,Baskerville,serf;
     font-size: 1.7em;
     font-weight: normal;
     line-height: 1.2em;
@@ -3305,6 +3775,10 @@ margin: 0px 10px 10px;
 	margin-right: 10px;
 }
 
+.view-content .views-row .views-field-picture img {
+  border: 1px solid #999;
+}
+
 /*taxonomy pages list of nodes*/
 
 .page-taxonomy .node h2 {
@@ -3400,20 +3874,99 @@ a.feed-icon img {
 }
 
 .views-field-subscribe a, .views-field-leave-group a, .views-field-subscribe a, .views-field-leave-group a,
-.views-field-subscribe a:link, .views-field-leave-group a:link, .views-field-subscribe a:link, .views-field-leave-group a:link {
-    background: #6699CC;
-    border: 1px solid #228BC8;
-    color: #FFFFFF;
-    display: block;
-    font-family: Arial,Helvetica,sans-serif;
-    font-size: 12px;
-    font-weight: bold;
-    line-height: 22px;
-    margin: 2px;
-    padding: 1px 5px 2px;
-    text-transform: uppercase;
-    text-align: center;
-    width: 80px;
+.views-field-subscribe a:link, .views-field-leave-group a:link, .views-field-subscribe a:link, .views-field-leave-group a:link,
+.node .inner .links .comment_clear_style a {
+  color: #FFFFFF;
+  display: block;
+  font-size: 14px;
+  line-height: 22px;
+  margin: 2px;
+  padding: 1px 5px 2px;
+  text-align: center;
+  width: 80px;
+  background-color: #1E587C;
+  background-image: -webkit-gradient(linear, left top, left bottom, from(#1E587C), to(#123046)); 
+  background-image: -webkit-linear-gradient(top, #1E587C, #123046); 
+  background-image: -moz-linear-gradient(top, #1E587C, #123046); 
+  background-image: -ms-linear-gradient(top, #1E587C, #123046); 
+  background-image: -o-linear-gradient(top, #1E587C, #123046); 
+  background-image: linear-gradient(top, #1E587C, #123046);
+  -webkit-border-radius: 3px; 
+  -moz-border-radius: 3px; 
+  border-radius: 3px; 
+  -moz-background-clip: padding; -webkit-background-clip: padding-box; background-clip: padding-box;
+  -webkit-box-shadow: 0px 2px 4px #A9A9A9; 
+  -moz-box-shadow: 0px 2px 4px #A9A9A9; 
+  box-shadow: 0px 2px 4px #A9A9A9; 
+}
+
+.node .inner .links .comment_clear_style {
+  background: none;
+  border: none;
+  padding: 0;
+}
+
+input[type=submit] {
+  color: #FFFFFF;
+  background-color: #1E587C;
+  background-image: -webkit-gradient(linear, left top, left bottom, from(#1E587C), to(#123046)); 
+  background-image: -webkit-linear-gradient(top, #1E587C, #123046); 
+  background-image: -moz-linear-gradient(top, #1E587C, #123046); 
+  background-image: -ms-linear-gradient(top, #1E587C, #123046); 
+  background-image: -o-linear-gradient(top, #1E587C, #123046); 
+  background-image: linear-gradient(top, #1E587C, #123046);
+  border: none;
+  -webkit-border-radius: 3px; 
+  -moz-border-radius: 3px; 
+  border-radius: 3px; 
+  -moz-background-clip: padding; -webkit-background-clip: padding-box; background-clip: padding-box;
+  -webkit-box-shadow: 0px 2px 4px #A9A9A9; 
+  -moz-box-shadow: 0px 2px 4px #A9A9A9; 
+  box-shadow: 0px 2px 4px #A9A9A9;
+}
+
+.node .inner .links .comment_clear_style a {
+  font-size: 14px;
+}
+
+.node .inner .links > .subscription_clear_style ul.node_link_style-dropdown a {
+  width: auto;
+  font-size: 14px;
+  color: #10354D;
+  background-color: #A5D3FE;
+  background-image: -webkit-gradient(linear, left top, left bottom, from(#A5D3FE), to(#7BC2F6)); 
+  background-image: -webkit-linear-gradient(top, #A5D3FE, #7BC2F6); 
+  background-image: -moz-linear-gradient(top, #A5D3FE, #7BC2F6); 
+  background-image: -ms-linear-gradient(top, #A5D3FE, #7BC2F6); 
+  background-image: -o-linear-gradient(top, #A5D3FE, #7BC2F6); 
+  background-image: linear-gradient(top, #A5D3FE, #7BC2F6);
+  -webkit-border-radius: 3px; 
+  -moz-border-radius: 3px; 
+  border-radius: 3px; 
+}
+
+.node .inner .links > .subscription_clear_style ul.node_link_style-dropdown li:hover>a{
+  border: none;
+  font-size: 14px;
+}
+
+.node .inner .links > .subscription_clear_style ul {
+  background: none;
+  border: none;
+}
+
+.node .inner .links > .subscription_clear_style ul.node_link_style-dropdown {
+  float: right;
+}
+
+.node .inner .links > .subscription_clear_style ul.node_link_style-dropdown ul {
+  right: -1px;
+  left: auto;
+}
+
+.node .inner .links > .subscription_clear_style ul.node_link_style-dropdown span {
+  background-image: url(../images/dropdown-node-links-blue.png);
+  padding-right: 20px;
 }
 
 .view-subgroups-main-listing .views-field-subscribe,
diff --git a/themes/commons_origins/images/arrow-down-blue.png b/themes/commons_origins/images/arrow-down-blue.png
new file mode 100644
index 0000000..6b7d3ee
Binary files /dev/null and b/themes/commons_origins/images/arrow-down-blue.png differ
diff --git a/themes/commons_origins/images/arrow-down-grey.png b/themes/commons_origins/images/arrow-down-grey.png
new file mode 100644
index 0000000..df80e36
Binary files /dev/null and b/themes/commons_origins/images/arrow-down-grey.png differ
diff --git a/themes/commons_origins/images/background-left.png b/themes/commons_origins/images/background-left.png
index 7f8e495..f85a069 100644
Binary files a/themes/commons_origins/images/background-left.png and b/themes/commons_origins/images/background-left.png differ
diff --git a/themes/commons_origins/images/background-right.png b/themes/commons_origins/images/background-right.png
index 87755dc..130b727 100644
Binary files a/themes/commons_origins/images/background-right.png and b/themes/commons_origins/images/background-right.png differ
diff --git a/themes/commons_origins/images/body-bg.png b/themes/commons_origins/images/body-bg.png
index 34b173f..28cc2ec 100644
Binary files a/themes/commons_origins/images/body-bg.png and b/themes/commons_origins/images/body-bg.png differ
diff --git a/themes/commons_origins/images/dropdown-node-links-blue.png b/themes/commons_origins/images/dropdown-node-links-blue.png
new file mode 100644
index 0000000..5a56b8d
Binary files /dev/null and b/themes/commons_origins/images/dropdown-node-links-blue.png differ
diff --git a/themes/commons_origins/images/dropdown-node-links.png b/themes/commons_origins/images/dropdown-node-links.png
new file mode 100644
index 0000000..8bc4b19
Binary files /dev/null and b/themes/commons_origins/images/dropdown-node-links.png differ
diff --git a/themes/commons_origins/images/fixed-background.jpg b/themes/commons_origins/images/fixed-background.jpg
index 5777f63..9ef496b 100644
Binary files a/themes/commons_origins/images/fixed-background.jpg and b/themes/commons_origins/images/fixed-background.jpg differ
diff --git a/themes/commons_origins/images/list-bullet-green.png b/themes/commons_origins/images/list-bullet-green.png
new file mode 100644
index 0000000..8c6b415
Binary files /dev/null and b/themes/commons_origins/images/list-bullet-green.png differ
diff --git a/themes/commons_origins/js/commons_origins.js b/themes/commons_origins/js/commons_origins.js
new file mode 100644
index 0000000..7aeb97a
--- /dev/null
+++ b/themes/commons_origins/js/commons_origins.js
@@ -0,0 +1,46 @@
+Drupal.behaviors.check_js = function (context) {
+  
+  if ($('html').hasClass('no-js')) {
+    $('html').removeClass('no-js');
+  }
+
+};
+
+Drupal.behaviors.user_dropdown = function (context) {
+  
+  if (!$('body').hasClass('user-dropdown-processed')) {
+    
+    $('body').addClass('user-dropdown-processed');
+    $('.view-user-meta .views-field-name a').attr('href','javascript:;');
+    $('.views-field-nothing, .views-field-nothing-1').wrapAll('<div class="user-field-options" />');
+    $('.user-field-options').width($('.view-user-meta .views-field-name .welcome-text').width());
+    
+    $('.view-user-meta .views-field-name a').click(function(){
+      if ($('body').hasClass('user-dropdown-open')) {
+        $('.user-field-options').hide();
+        $('body').removeClass('user-dropdown-open');
+      } else {
+        $('.user-field-options').show();
+        $('body').addClass('user-dropdown-open');
+      }
+    });
+    
+  }
+
+};
+
+Drupal.behaviors.equal_height = function (context) {
+  
+  var height = 0;
+  
+  var elements = $('#sidebar-first, #sidebar-last, #content-group');
+  
+  elements.each(function(){
+    if ($(this).height() > height) {
+      height = $(this).height();
+    }
+  });
+  
+  elements.css('min-height',height + 'px');
+
+};
diff --git a/themes/commons_origins/node-og-group-post.tpl.php b/themes/commons_origins/node-og-group-post.tpl.php
index d61016d..73ade00 100644
--- a/themes/commons_origins/node-og-group-post.tpl.php
+++ b/themes/commons_origins/node-og-group-post.tpl.php
@@ -68,6 +68,11 @@
       <span class="submitted"><?php print $submitted ?></span>
     </div>
     <?php endif; ?>
+    
+    <?php if ($node->og_groups && $page) {
+        print '<div class="groups">'. t('Groups'). ': ';
+        print '<div class="links">'.  $og_links['view']. '</div></div>';
+    } ?>
 
     <div class="content clearfix">
     <?php if ($page == 0): ?>
@@ -75,16 +80,12 @@
     <?php endif; ?>
     <?php if ($terms): ?>
     <div class="terms">
-      <?php print $terms; ?>
+      Terms: <?php print $terms; ?>
     </div>
     <?php endif;?>
     
       <?php print $content ?>
     </div>
-<?php if ($node->og_groups && $page) {
-        print '<div class="groups">'. t('Groups'). ': ';
-        print '<div class="links">'.  $og_links['view']. '</div></div>';
- } ?>
 
     <?php if ($links && $page == 1): ?>
     <div class="links">
diff --git a/themes/commons_origins/page.tpl.php b/themes/commons_origins/page.tpl.php
new file mode 100644
index 0000000..01bee9f
--- /dev/null
+++ b/themes/commons_origins/page.tpl.php
@@ -0,0 +1,168 @@
+<?php
+// $Id: page.tpl.php $
+?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" lang="<?php print $language->language; ?>" xml:lang="<?php print $language->language; ?>" class="no-js">
+
+<head>
+  <title><?php print $head_title; ?></title>
+  <?php print $head; ?>
+  <?php print $styles; ?>
+  <?php print $setting_styles; ?>
+  <!--[if IE 8]>
+  <?php print $ie8_styles; ?>
+  <![endif]-->
+  <!--[if IE 7]>
+  <?php print $ie7_styles; ?>
+  <![endif]-->
+  <!--[if lte IE 6]>
+  <?php print $ie6_styles; ?>
+  <![endif]-->
+  <?php print $local_styles; ?>
+  <?php print $scripts; ?>
+</head>
+
+<body id="<?php print $body_id; ?>" class="<?php print $body_classes; ?>">
+  <div id="left-background"> </div><div id="right-background"> </div>
+  <div id="page" class="page">
+    <div id="page-inner" class="page-inner">
+      <div id="skip">
+        <a href="#main-content-area"><?php print t('Skip to Main Content Area'); ?></a>
+      </div>
+
+      <!-- header-top row: width = grid_width -->
+      <?php print $pre_header_top; ?>
+
+      <!-- header-group row: width = grid_width -->
+      <div id="header-group-wrapper" class="header-group-wrapper full-width">
+        <div id="header-group" class="header-group row <?php print $grid_width; ?>">
+          <div id="header-group-inner" class="header-group-inner inner clearfix">
+            <?php print $pre_secondary_links; ?>
+            
+
+            <?php if ($logo || $site_name || $site_slogan): ?>
+            <div id="header-site-info" class="header-site-info block">
+              <div id="header-site-info-inner" class="header-site-info-inner inner">
+                <?php if ($logo): ?>
+                <div id="logo">
+                  <a href="<?php print check_url($front_page); ?>" title="<?php print t('Home'); ?>"><img src="<?php print $logo; ?>" alt="<?php print t('Home'); ?>" /></a>
+                </div>
+                <?php endif; ?>
+                <?php if ($site_name || $site_slogan): ?>
+                <div id="site-name-wrapper" class="clearfix">
+                  <?php if ($site_name): ?>
+                  <span id="site-name"><a href="<?php print check_url($front_page); ?>" title="<?php print t('Home'); ?>"><?php print $site_name; ?></a></span>
+                  <?php endif; ?>
+                  <?php if ($site_slogan): ?>
+                  <span id="slogan"><?php print $site_slogan; ?></span>
+                  <?php endif; ?>
+                </div><!-- /site-name-wrapper -->
+                <?php endif; ?>
+              </div><!-- /header-site-info-inner -->
+            </div><!-- /header-site-info -->
+            <?php endif; ?>
+                       <div id="header-region" class="header-region block">
+              <div id="header-region-inner" class="header-region-inner inner">
+            <?php print $header; ?>
+            <?php print $pre_search_box; ?>
+              </div><!-- /header-region-inner -->
+            </div><!-- /header-region -->
+         <div id="nav-group" class="nav-group clearfix">
+         <?php print $pre_primary_links_tree; ?>
+          </div><!--/nav-group-->
+          </div><!-- /header-group-inner -->
+        </div><!-- /header-group -->
+      </div><!-- /header-group-wrapper -->
+      
+      <div class="breadcrumbs-wrapper full-width">
+        <div class="breadcrumbs-content row <?php print $grid_width; ?>">
+          <?php print $pre_breadcrumb; ?>
+        </div>
+      </div>
+     
+
+      <!-- preface-top row: width = grid_width -->
+      <?php print $pre_preface_top; ?>
+
+      <!-- main row: width = grid_width -->
+      <div id="main-wrapper" class="main-wrapper full-width">
+        <div id="main" class="main row <?php print $grid_width; ?>">
+          <div id="main-inner" class="main-inner inner clearfix">
+            <?php print $pre_sidebar_first; ?>
+
+            <!-- main group: width = grid_width - sidebar_first_width -->
+            <div id="main-group" class="main-group row nested <?php print $main_group_width; ?>">
+              <div id="main-group-inner" class="main-group-inner inner">
+                <?php print $pre_preface_bottom; ?>
+
+                <div id="main-content" class="main-content row nested">
+                  <div id="main-content-inner" class="main-content-inner inner">
+                    <!-- content group: width = grid_width - (sidebar_first_width + sidebar_last_width) -->
+                    <div id="content-group" class="content-group row nested <?php print $content_group_width; ?>">
+                      <div id="content-group-inner" class="content-group-inner inner">
+                    
+
+                        <?php if ($content_top || $help || $messages): ?>
+                        <div id="content-top" class="content-top row nested">
+                          <div id="content-top-inner" class="content-top-inner inner">
+                            <?php print $pre_help; ?>
+                            <?php print $pre_messages; ?>
+                            <?php print $content_top; ?>
+                          </div><!-- /content-top-inner -->
+                        </div><!-- /content-top -->
+                        <?php endif; ?>
+
+                        <div id="content-region" class="content-region row nested">
+                          <div id="content-region-inner" class="content-region-inner inner">
+                            <a name="main-content-area" id="main-content-area"></a>
+
+                            <div id="content-inner" class="content-inner block">
+                              <div id="content-inner-inner" class="content-inner-inner inner">
+                            <?php if ($title && !$is_front): ?>
+                                <h1 class="title"><?php print $title; ?></h1>
+                                <?php endif; ?>
+                                <?php if  (!empty($group_header_image)): ?>
+                                  <div id="group-header" class="group-header">
+                                    <?php print $group_header_image; ?>
+                                    <div class="group-header-text">
+                                    <?php print $group_header_text;?>
+                                    </div> <!-- /group-header-text -->
+                                  </div><!-- /group-header -->
+                                <?php endif; ?>                                
+                                <?php print $pre_tabs; ?>
+                                <?php if ($content): ?>
+                                <div id="content-content" class="content-content">
+                                  <?php print $content; ?>
+                                  <?php print $feed_icons; ?>
+                                </div><!-- /content-content -->
+                                <?php endif; ?>
+                              </div><!-- /content-inner-inner -->
+                            </div><!-- /content-inner -->
+                          </div><!-- /content-region-inner -->
+                        </div><!-- /content-region -->
+
+                        <?php print $pre_content_bottom; ?>
+                      </div><!-- /content-group-inner -->
+                    </div><!-- /content-group -->
+
+                    <?php print $pre_sidebar_last; ?>
+                  </div><!-- /main-content-inner -->
+                </div><!-- /main-content -->
+
+                <?php print $pre_postscript_top; ?>
+              </div><!-- /main-group-inner -->
+            </div><!-- /main-group -->
+          </div><!-- /main-inner -->
+        </div><!-- /main -->
+      </div><!-- /main-wrapper -->
+
+      <!-- postscript-bottom row: width = grid_width -->
+      <?php print $pre_postscript_bottom; ?>
+
+      <!-- footer row: width = grid_width -->
+      <?php print $pre_footer; ?>
+
+    </div><!-- /page-inner -->
+  </div><!-- /page -->
+  <?php print $closure; ?>
+</body>
+</html>
diff --git a/themes/commons_origins/template.php b/themes/commons_origins/template.php
new file mode 100644
index 0000000..44099f1
--- /dev/null
+++ b/themes/commons_origins/template.php
@@ -0,0 +1,67 @@
+<?php
+
+/**
+ * Row & block theme functions
+ * Adds divs to elements in page.tpl.php
+ */
+function commons_origins_grid_row($element, $name, $class='', $width='', $extra='') {
+  $output = '';
+  $extra = ($extra) ? ' ' . $extra : '';
+  if ($element) {
+    if ($class == 'full-width') {
+      $output .= '<div id="' . $name . '-wrapper" class="' . $name . '-wrapper full-width">' . "\n";
+      $output .= '<div id="' . $name . '" class="' . $name . ' row ' . $width . $extra . '">' . "\n";
+    }
+    else {
+      $output .= '<div id="' . $name . '" class="' . $name . ' row ' . $class . ' ' . $width . $extra . '">' . "\n";
+    }
+    $output .= '<div id="' . $name . '-inner" class="' . $name . '-inner inner clearfix">' . "\n";
+    if ($name == 'sidebar-last') {
+      $output .= '<span class="sidebar-last-cap"></span>'. "\n";
+    }
+    $output .= $element;
+    $output .= '</div><!-- /' . $name . '-inner -->' . "\n";
+    $output .= '</div><!-- /' . $name . ' -->' . "\n";
+    $output .= ($class == 'full-width') ? '</div><!-- /' . $name . '-wrapper -->' . "\n" : '';
+  }
+  return $output;
+}
+
+function commons_origins_preprocess_page(&$variables) {
+  $variables['pre_header_top'] = theme('grid_row', $variables['header_top'], 'header-top', 'full-width', $variables['grid_width']);
+  $variables['pre_secondary_links'] = theme('grid_block', theme('links', $variables['secondary_links']), 'secondary-menu');
+  $variables['pre_search_box'] = theme('grid_block', $variables['search_box'], 'search-box');
+  $variables['pre_primary_links_tree'] = theme('grid_block', $variables['primary_links_tree'], 'primary-menu');
+  $variables['pre_breadcrumb'] = theme('grid_block', $variables['breadcrumb'], 'breadcrumbs');
+  $variables['pre_preface_top'] = theme('grid_row', $variables['preface_top'], 'preface-top', 'full-width', $variables['grid_width']);
+  $variables['pre_sidebar_first'] = theme('grid_row', $variables['sidebar_first'], 'sidebar-first', 'nested', $variables['sidebar_first_width']);
+  $variables['pre_preface_bottom'] = theme('grid_row', $variables['preface_bottom'], 'preface-bottom', 'nested');
+  $variables['pre_help'] = theme('grid_block', $variables['help'], 'content-help');
+  $variables['pre_messages'] = theme('grid_block', $variables['messages'], 'content-messages');
+  $variables['pre_tabs'] = theme('grid_block', $variables['tabs'], 'content-tabs');
+  $variables['pre_content_bottom'] = theme('grid_row', $variables['content_bottom'], 'content-bottom', 'nested');
+  $variables['pre_sidebar_last'] = theme('grid_row', $variables['sidebar_last'], 'sidebar-last', 'nested', $variables['sidebar_last_width']);
+  $variables['pre_postscript_top'] = theme('grid_row', $variables['postscript_top'], 'postscript-top', 'nested');
+  $variables['pre_postscript_bottom'] = theme('grid_row', $variables['postscript_bottom'], 'postscript-bottom', 'full-width', $variables['grid_width']);
+  $variables['pre_footer'] = theme('grid_row', $variables['footer'] . $variables['footer_message'], 'footer', 'full-width', $variables['grid_width']);
+  
+  //show group description if group node present
+  if (isset($variables['node'])) {
+    $node = $variables['node'];
+    if (og_is_group_type($node->type)) {
+      $variables['group_header_image'] = content_format('field_group_image', $node->field_group_image[0], 'user_picture_meta_default');
+      
+      if (!empty($node->body)) {
+        $variables['group_header_text'] = check_markup($node->body, $node->format);  
+      }
+      else {
+        $variables['group_header_text'] = check_plain($node->og_description);
+      }
+    }
+  }  
+}
+
+function commons_origins_preprocess_node(&$variables) {
+  $query = 'destination=' . $_GET['q'];
+  $variables['answers_login'] =  t('<a href="@login">Login</a> or <a href="@register">register</a> to vote', array('@login' => url('user/login', array('query' => $query)), '@register' => url('user/register', array('query' => $query))));
+}
diff --git a/themes/commons_origins/views-view-field--user-meta--name.tpl.php b/themes/commons_origins/views-view-field--user-meta--name.tpl.php
new file mode 100644
index 0000000..6dcc2de
--- /dev/null
+++ b/themes/commons_origins/views-view-field--user-meta--name.tpl.php
@@ -0,0 +1,23 @@
+<?php
+// $Id: views-view-field.tpl.php,v 1.1 2008/05/16 22:22:32 merlinofchaos Exp $
+ /**
+  * This template is used to print a single field in a view. It is not
+  * actually used in default Views, as this is registered as a theme
+  * function which has better performance. For single overrides, the
+  * template is perfectly okay.
+  *
+  * Variables available:
+  * - $view: The view object
+  * - $field: The field handler object that can process the input
+  * - $row: The raw SQL result that can be used
+  * - $output: The processed output that will normally be used.
+  *
+  * When fetching output from the $row, this construct should be used:
+  * $data = $row->{$field->field_alias}
+  *
+  * The above will guarantee that you'll always get the correct data,
+  * regardless of any changes in the aliasing that might happen if
+  * the view is modified.
+  */
+?>
+<p class="welcome-text"><?php print t('Welcome back'); ?> <?php print $output; ?></p>
diff --git a/themes/commons_origins/views-view-field--user-meta--picture.tpl.php b/themes/commons_origins/views-view-field--user-meta--picture.tpl.php
new file mode 100644
index 0000000..5f295a8
--- /dev/null
+++ b/themes/commons_origins/views-view-field--user-meta--picture.tpl.php
@@ -0,0 +1,5 @@
+<?php
+ /**
+  * This template is blank for the purpose of removing the user picture
+  */
+?>
diff --git a/themes/commons_roots/css/commons_roots-style.css b/themes/commons_roots/css/commons_roots-style.css
index 8726499..28e5529 100644
--- a/themes/commons_roots/css/commons_roots-style.css
+++ b/themes/commons_roots/css/commons_roots-style.css
@@ -277,15 +277,8 @@ form input.form-submit { /* Forced by Fusion */
 
 /* @group Sidebar blocks */
 
-.sidebar-last .block-views .views-row > span {
-  /* Some Views print the fields in spans instead of divs, so we need to 
-   * set these spans to display as block in order for the left margin to apply
-   * correctly. But we don't want all spans, just the children of the li */
-  display: block;
-}
 
 .sidebar-last .block-views .view-content .item-list ul li {
-  background: none repeat scroll 0 0 transparent;
   border-bottom: 0 none;
   margin-bottom: 0;
   padding-bottom: 10px;
@@ -309,14 +302,6 @@ form input.form-submit { /* Forced by Fusion */
   height: auto; 
 }
 
-.sidebar-last .block-views .views-field-field-group-image-fid ~ *,
-.sidebar-last .block-views .views-field-picture ~ *,
-.sidebar-last .block-views .views-field-field-date-value ~ * {
-  /* This produces the left alignment of all text items after an image using
-   * the general sibling selector ~. When an image isn't present, the images
-   * shift to the left and no margin is applied. */
-  margin-left: 40px;
-}
 
 /* @group Sidebar block content adjustments */
 
@@ -359,7 +344,7 @@ form input.form-submit { /* Forced by Fusion */
 #content-tabs {
   background-color: transparent;
   float: none;
-  margin: 15px 0 22px; 
+  margin: 15px 0px 0px 0px; 
   padding: 0;
 }
 
@@ -428,6 +413,59 @@ h1 + #content-tabs {
   font-weight:bold;
 } 
 
+#block-commons_core-your_content {
+  margin-bottom: 25px;  
+}
+
+a.my-content, a.my-bookmarks {
+  display: block;
+  clear: both;
+  font-weight: bold;
+  padding-top: 4px;
+}
+
+div #block-views-new_your_groups-block_1 {
+  width: auto;
+}
+
+#block-views-new_your_groups-block_1 .views-field-title {
+  font-size: 1.8em;
+  margin-bottom: 20px;
+}
+
+#block-views-new_your_groups-block_1 .views-field-view .view-new-groups-field .views-field-title {
+  font-size: 1.3em;
+  margin-bottom: 2px;
+}
+
+#block-views-new_your_groups-block_1 .views-field-name {
+  padding-right: 15px;
+}
+
+#block-views-new_your_groups-block_1 .views-field-created {
+  padding-right: 15px;
+}
+
+#block-views-new_your_groups-block_1 .block-title {
+  font-size: 2.4em;
+  color: #1E587C;
+  padding-bottom: 15px;
+}
+
+#block-views-new_your_groups-block_1 h3 {
+  font-size: 1.6em;
+  font-weight: normal;
+}
+#block-views-new_your_groups-block_1 .view-new-groups-field .item-list .views-row {
+  background: none;
+  padding-left: 0px;
+  border-bottom: none;
+}
+
+#block-views-new_your_groups-block_1 .view-new-groups-field ul {
+  border-bottom: 1px solid #ddd;
+}
+
 .intro-textblock {
   width: 30%;
   float: left;
@@ -532,6 +570,9 @@ a:active .facebook-status-time {
   background-image: -o-linear-gradient(top, #1879B1, #126698); 
   background-image: linear-gradient(top, #1879B1, #126698);
   filter: progid:DXImageTransform.Microsoft.gradient(startColorStr='#1879B1', EndColorStr='#126698'); 
+  -webkit-box-shadow: none; 
+  -moz-box-shadow: none; 
+  box-shadow: none;
 }
 
 #facebook-status-edit .facebook-status-update .facebook-status-submit {
@@ -547,6 +588,13 @@ a:active .facebook-status-time {
 
 .fbsmp-icon-list #edit-photo-icon, .fbsmp-icon-list #edit-link-icon {
   display: block;
+  -webkit-border-radius: 0; 
+  -moz-border-radius: 0; 
+  border-radius: 0; 
+  -webkit-box-shadow: none; 
+  -moz-box-shadow: none; 
+  box-shadow: none;
+  color: #69C;
 }
 
 .js .controls-expanded .facebook-status-private-box {
@@ -699,7 +747,8 @@ div.beat-item blockquote {
 
 .submitted img.imagecache-user_picture_meta {
   float: left;
-  margin: 0.5em 1em 0 0;
+  margin: 0 1em 0 0;
+  border: 1px solid #999;
 }
 
 .submitted .user_badges {
@@ -719,7 +768,7 @@ div.beat-item blockquote {
 
 .view .view-content .views-row .views-field-picture {
   float: left;
-  margin: 0 10px 10px 0;
+  margin: 0 18px 10px 0;
 }
 
 .view-groups-main-listing .view-content .views-field-field-group-image-fid,
@@ -817,3 +866,128 @@ div.beat-item blockquote {
 }
 
 /* @end */
+
+/* commons answers */
+div.node-type-question h1.title {
+  margin-left: 0;
+}
+
+div.node-type-question p {
+  font-size: 1.3em;
+}
+
+div.node-type-question .view .view-content .views-row {
+  border-bottom: none;
+}
+
+.node-type-answer {
+  border: 1px solid #CCCCCC;
+  min-height: 115px;
+}
+
+html #content-content .node-type-answer .inner {
+  margin: 20px;
+}
+
+.node-type-answer .content {
+  padding-right: 130px;
+}
+
+.answer-by {
+  margin-top: -0.5em;
+  display: block;
+  font-size: 1em;
+}
+
+.answer-by a {
+  font-weight: bold;
+}
+
+.answer-by a.answer-time-date {
+  font-size: 0.9em;
+  font-weight: normal;
+}
+
+.vud-widget {
+  float: none;
+  position: absolute;
+  top: 0px;
+  right: 0px;
+  margin: 0;
+  font-size: 0.8em;
+}
+
+.num-of-answers {
+  font-weight: bold;
+}
+
+.node .content .meta img {
+  padding: 0;
+}
+
+#commons-answers-add-answer-form {
+  border: 1px solid #CCCCCC;
+  padding: 20px;
+  overflow: hidden;
+}
+
+#commons-answers-add-answer-form .form-item {
+  margin-top: 0;
+}
+
+#commons-answers-add-answer-form .form-item label {
+  font-size: 1.5em;
+  margin-bottom: 8px;
+}
+
+#commons-answers-add-answer-form .resizable-textarea {
+  width: 100%;
+}
+
+#commons-answers-add-answer-form #edit-submit {
+  display: block;
+  font-weight: bold;
+  padding: 8px;
+  float: right;
+  height: auto;
+}
+
+.node-type-answer .links {
+  margin-top: 15px;
+}
+
+html .node .inner .links .answer-add-comment {
+  background: none;
+  border: none;
+  padding: 0;
+  font-weight: bold;
+}
+
+html .node .inner .links .answer-add-comment a {
+  color: #58b;
+  font-size: 1.3em;
+}
+
+html .node .inner .links .answer-comment-count {
+  margin-left: 10px;
+  background: none;
+  border: none;
+  padding: 0;
+  border-left: 1px solid #999;
+  padding-left: 10px;
+  font-weight: bold;
+}
+
+html .node .inner .links .answer-comment-count a {
+  color: #58b;
+  font-size: 1.3em;
+}
+
+.view-all-questions fieldset legend {
+  font-size: 1.5em;
+  font-weight: bold;
+}
+
+#views-exposed-form-group-search {
+    margin: 0px 0px 15px 0px;
+}
diff --git a/themes/commons_roots/node-answer.tpl.php b/themes/commons_roots/node-answer.tpl.php
new file mode 100644
index 0000000..4c60912
--- /dev/null
+++ b/themes/commons_roots/node-answer.tpl.php
@@ -0,0 +1,52 @@
+<?php
+// $Id: node-answer.tpl.php $
+?>
+
+<div id="node-<?php print $node->nid; ?>" class="node <?php print $node_classes; ?>">
+  <div class="inner">
+    <?php print $picture ?>
+
+    <?php if ($node_top && !$teaser): ?>
+    <div id="node-top" class="node-top row nested">
+      <div id="node-top-inner" class="node-top-inner inner">
+        <?php print $node_top; ?>
+      </div><!-- /node-top-inner -->
+    </div><!-- /node-top -->
+    <?php endif; ?>
+
+    <?php if ($terms): ?>
+    <div class="terms">
+      <?php print $terms; ?>
+    </div>
+    <?php endif;?>
+    
+    <div class="content clearfix">
+      <?php print $content ?>
+      <?php if ($submitted_name): ?>
+        <span class="answer-by"><?php print $submitted_name; ?> on <a href="<?php print request_uri() . '#node-' . $node->nid; ?>" class="answer-time-date"><?php print $date; ?></a></span>
+      <?php endif; ?>
+    </div>
+    
+    <?php if ($node->links['comment_add']): ?>
+    <div class="links">
+      <div class="comment_clear_style answer-add-comment">
+        <a href="<?php print base_path() . $node->links['comment_add']['href'] . '#' . $node->links['comment_add']['fragment']; ?>" title="Share your thoughts and opinions related to this posting.">Comment</a>
+      </div>
+      <?php if ($node->comment_count > 0): ?>
+      <div class="comment_clear_style answer-comment-count">
+         <a href="<?php print base_path() . $node->links['comment_add']['href'] . '#' . $node->links['comment_add']['fragment']; ?>" title="<?php print t('Share your thoughts and opinions related to this posting.') ?>"><?php print t('Comment') ?></a>
+      </div>
+      <?php endif; ?>
+    </div>
+    <?php endif; ?>
+
+  </div><!-- /inner -->
+
+  <?php if ($node_bottom && !$teaser): ?>
+  <div id="node-bottom" class="node-bottom row nested">
+    <div id="node-bottom-inner" class="node-bottom-inner inner">
+      <?php print $node_bottom; ?>
+    </div><!-- /node-bottom-inner -->
+  </div><!-- /node-bottom -->
+  <?php endif; ?>
+</div><!-- /node-<?php print $node->nid; ?> -->
diff --git a/themes/commons_roots/node-question.tpl.php b/themes/commons_roots/node-question.tpl.php
new file mode 100644
index 0000000..0bb7677
--- /dev/null
+++ b/themes/commons_roots/node-question.tpl.php
@@ -0,0 +1,50 @@
+<?php
+// $Id: node-question.tpl.php $
+?>
+
+<div id="node-<?php print $node->nid; ?>" class="node <?php print $node_classes; ?>">
+  <div class="inner">
+    <?php print $picture ?>
+
+    <?php if ($page == 0): ?>
+    <h2 class="title"><a href="<?php print $node_url ?>" title="<?php print $title ?>"><?php print $title ?></a></h2>
+    <?php endif; ?>
+
+    <?php if ($node_top && !$teaser): ?>
+    <div id="node-top" class="node-top row nested">
+      <div id="node-top-inner" class="node-top-inner inner">
+        <?php print $node_top; ?>
+      </div><!-- /node-top-inner -->
+    </div><!-- /node-top -->
+    <?php endif; ?>
+
+    <?php if ($terms): ?>
+    <div class="terms">
+      <?php print $terms; ?>
+    </div>
+    <?php endif;?>
+    
+    <div class="content clearfix">
+      <?php print $node->content['body']['#value']; ?>
+      <?php if ($submitted_name): ?>
+        <span><?php print t('Submitted by !username on !datetime', array('!username'=>$submitted_name,'!datetime'=>$date)); ?></span>
+      <?php endif; ?>
+      <p class="num-of-answers"><?php print format_plural($node->content['field_answer_count']['field']['#children'], '1 answer', '@count answers'); ?>
+      <?php if(!$logged_in): ?>
+        <span style="padding-left:30px"><?php print $answers_login; ?><span/>
+      <?php endif; ?>
+      </p>
+      <?php print $node->content['question_answers_node_content_1']['#value']; ?>
+    </div>
+    
+  </div><!-- /inner -->
+
+  <?php if ($node_bottom && !$teaser): ?>
+  <div id="node-bottom" class="node-bottom row nested">
+    <div id="node-bottom-inner" class="node-bottom-inner inner">
+      <?php print $node_bottom; ?>
+    </div><!-- /node-bottom-inner -->
+  </div><!-- /node-bottom -->
+  <?php endif; ?>
+  
+</div><!-- /node-<?php print $node->nid; ?> -->
diff --git a/themes/commons_roots/panels/twocol_70_30.inc b/themes/commons_roots/panels/twocol_70_30.inc
index 76ea99b..f0ad011 100644
--- a/themes/commons_roots/panels/twocol_70_30.inc
+++ b/themes/commons_roots/panels/twocol_70_30.inc
@@ -6,7 +6,7 @@
  */
 function acquia_commons_twocol_70_30_panels_layouts() {
   $items['twocol_70_30'] = array(
-    'title' => t('Acquia Commons - Two column 70/30'),
+    'title' => t('Drupal Commons - Two column 70/30'),
     'icon' => 'twocol_70_30.png',
     'theme' => 'twocol_70_30',
     'theme arguments' => array('id', 'content'),
diff --git a/themes/commons_roots/template.php b/themes/commons_roots/template.php
index 69fac85..cd30090 100644
--- a/themes/commons_roots/template.php
+++ b/themes/commons_roots/template.php
@@ -1,5 +1,4 @@
 <?php
-// $Id: template.php 8021 2010-10-19 13:01:34Z sheena $
 
 /**
  * Breadcrumb themeing
@@ -33,6 +32,8 @@ function commons_roots_preprocess_node(&$vars) {
     $submitted .= t('Submitted by !name', array('!name' => theme('username', $author)));
     $submitted .= '</span>';
     
+    $vars['submitted_name'] = theme('username', $author);
+    
     // User points
     if ($author->uid && module_exists('userpoints')) {
       $points = userpoints_get_current_points($author->uid);
@@ -152,7 +153,7 @@ function commons_roots_shoutbox_post($shout, $links = array(), $alter_row_color=
   if ($links) {
     foreach ($links as $link) {
       $linkattributes = $link['linkattributes'];
-      $link_html = '<img src="'. $link['img'] .'"  width="'. $link['img_width'] .'" height="'. $link['img_height'] .'" alt="'. $link['title'] .'" class="shoutbox-imglink"/>';
+      $link_html = '<img src="'. $link['img'] .'" alt="'. $link['title'] .'" class="shoutbox-imglink"/>';
       $link_url = 'shout/'. $shout->shout_id .'/'. $link['action'];
       $img_links = l($link_html, $link_url, array('html' => TRUE, 'query' => array('destination' => drupal_get_path_alias($_GET['q'])))) . $img_links;
     }
@@ -263,7 +264,10 @@ function commons_roots_item_list($items = array(), $title = NULL, $type = 'ul',
           $attributes['class'] = empty($attributes['class']) ? 'last' : ($attributes['class'] .' last');
         }
         
-        $attributes['class'] .= ' ' . ($c % 2 ? 'even' : 'odd');
+        $nth = ($c % 2 ? 'even' : 'odd');
+    
+        $attributes['class'] = empty($attributes['class']) ? $nth : ($attributes['class'] . ' ' . $nth);
+        
         $output .= '<li'. drupal_attributes($attributes) .'>'. $data ."</li>\n";
       } 
       else {
@@ -277,7 +281,10 @@ function commons_roots_item_list($items = array(), $title = NULL, $type = 'ul',
           $attributes['class'] = empty($attributes['class']) ? 'last' : ($attributes['class'] .' last');
         }
         
-        $attributes['class'] .= ' ' . ($i % 2 ? 'even' : 'odd');
+        $nth = ($i % 2 ? 'even' : 'odd');
+        
+        $attributes['class'] = empty($attributes['class']) ? $nth : ($attributes['class'] . ' ' . $nth);
+        
         $output .= '<li'. drupal_attributes($attributes) .'>'. $data ."</li>\n";
       }
     }
diff --git a/themes/commons_roots/views-exposed-form--group_tab_content.tpl.php b/themes/commons_roots/views-exposed-form--group_tab_content.tpl.php
new file mode 100644
index 0000000..3a518e7
--- /dev/null
+++ b/themes/commons_roots/views-exposed-form--group_tab_content.tpl.php
@@ -0,0 +1,56 @@
+<?php
+// $Id: views-exposed-form.tpl.php,v 1.4.4.1 2009/11/18 20:37:58 merlinofchaos Exp $
+/**
+ * @file views-exposed-form.tpl.php
+ *
+ * This template handles the layout of the views exposed filter form.
+ *
+ * Variables available:
+ * - $widgets: An array of exposed form widgets. Each widget contains:
+ * - $widget->label: The visible label to print. May be optional.
+ * - $widget->operator: The operator for the widget. May be optional.
+ * - $widget->widget: The widget itself.
+ * - $button: The submit button for the form.
+ *
+ * @ingroup views_templates
+ */
+?>
+<?php 
+// Add collapsible fieldset js if it is not already included
+drupal_add_js('misc/drupal.js');
+drupal_add_js('misc/collapse.js');
+?>
+
+<?php if (!empty($q)): ?>
+  <?php
+    // This ensures that, if clean URLs are off, the 'q' is added first so that
+    // it shows up first in the URL.
+    print $q;
+  ?>
+<?php endif; ?>
+<fieldset id="views-exposed-form-group-search" class="views-exposed-form">
+  <div class="views-exposed-wrapper clear-block">
+  <div class="views-exposed-widgets-group-search clear-block">
+    <?php foreach($widgets as $id => $widget): ?>
+      <div class="views-exposed-widget-group-search views-widget-group-search-<?php print $id; ?>">
+        <?php if (!empty($widget->label)): ?>
+          <label for="<?php print $widget->id; ?>">
+            <?php print $widget->label;?>
+          </label>
+        <?php endif; ?>
+        <?php if (!empty($widget->operator)): ?>
+          <div class="views-operator">
+            <?php print $widget->operator; ?>
+          </div>
+        <?php endif; ?>
+        <div class="views-widget">
+          <?php print $widget->widget; ?>
+        </div>
+      </div>
+    <?php endforeach; ?>
+    </div>
+    <div class="views-exposed-widget views-exposed-submit">
+      <?php print $button ?>
+    </div>
+  </div>
+</fieldset>
\ No newline at end of file
diff --git a/themes/commons_roots/views-exposed-form.tpl.php b/themes/commons_roots/views-exposed-form.tpl.php
index 0034098..6dcf2d9 100644
--- a/themes/commons_roots/views-exposed-form.tpl.php
+++ b/themes/commons_roots/views-exposed-form.tpl.php
@@ -16,10 +16,9 @@
  */
 ?>
 <?php 
-//add collapsible fieldset js if it is not already included
-global $BASE_URL;
-drupal_add_js($BASE_URL.'misc/drupal.js');
-drupal_add_js($BASE_URL.'misc/collapse.js');
+// Add collapsible fieldset js if it is not already included
+drupal_add_js('misc/drupal.js');
+drupal_add_js('misc/collapse.js');
 ?>
 
 <?php if (!empty($q)): ?>
diff --git a/themes/commons_roots/views-view-field--field-date-value.tpl.php b/themes/commons_roots/views-view-field--field-date-value.tpl.php
index 0c3fc89..f836e45 100644
--- a/themes/commons_roots/views-view-field--field-date-value.tpl.php
+++ b/themes/commons_roots/views-view-field--field-date-value.tpl.php
@@ -20,13 +20,14 @@
   * the view is modified.
   */
   
+date_default_timezone_set('UTC');
 $time = strtotime($row->{$field->field_alias});
 ?>
 <?php if ($variables['view']->plugin_name != 'calendar_style'): ?>
   <div class="dateblock">
-    <span class="month"><?php echo date('M', $time); ?></span>
-    <span class="day"><?php echo date('j', $time) ?></span>
-    <span class="year"><?php echo date('Y', $time) ?></span>
+    <span class="month"><?php echo format_date($time, 'custom', 'M'); ?></span>
+    <span class="day"><?php echo format_date($time, 'custom', 'j') ?></span>
+    <span class="year"><?php echo format_date($time, 'custom', 'Y') ?></span>
   </div>
 <?php else: ?>
   <?php print $output; ?>
